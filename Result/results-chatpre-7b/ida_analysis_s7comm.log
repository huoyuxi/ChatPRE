2025-03-08 21:19:33,536 - my_text.py:228  - Waiting for initial analysis to complete...
2025-03-08 21:19:33,536 - my_text.py:230  - Initial analysis completed.
2025-03-08 21:19:33,536 - my_text.py:236  - Received argument1: s7comm
2025-03-08 21:19:33,536 - my_text.py:237  - Received argument2: 2
2025-03-08 21:19:33,536 - my_text.py:242  - Starting analysis...
2025-03-08 21:19:33,536 - my_text.py:83  - Total global variables: 2625
2025-03-08 21:19:33,536 - my_text.py:86  - Global Variables:
2025-03-08 21:19:33,536 - my_text.py:107  -   Address: 0x1D4, Name: aGnu, Type: Unknown
2025-03-08 21:19:33,537 - my_text.py:107  -   Address: 0x1F0, Name: elf_gnu_hash_nbuckets, Type: Unknown
2025-03-08 21:19:33,537 - my_text.py:107  -   Address: 0x1F4, Name: elf_gnu_hash_symbias, Type: Unknown
2025-03-08 21:19:33,537 - my_text.py:107  -   Address: 0x1F8, Name: elf_gnu_hash_bitmask_nwords, Type: Unknown
2025-03-08 21:19:33,537 - my_text.py:107  -   Address: 0x1FC, Name: elf_gnu_hash_shift, Type: Unknown
2025-03-08 21:19:33,537 - my_text.py:107  -   Address: 0x200, Name: elf_gnu_hash_indexes, Type: Unknown
2025-03-08 21:19:33,537 - my_text.py:107  -   Address: 0x600, Name: elf_gnu_hash_bucket, Type: Unknown
2025-03-08 21:19:33,537 - my_text.py:107  -   Address: 0xE24, Name: elf_gnu_hash_chain, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6D09, Name: aGmonStart, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6D18, Name: aFini, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6D1E, Name: aItmDeregistert, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6D3A, Name: aItmRegistertmc, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6D54, Name: aCxaFinalize, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6D63, Name: aJvRegisterclas, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6D77, Name: aZn10tmsgsocket, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6D91, Name: aZn12socketslay, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6DA7, Name: aZn12socketslay_0, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6DBD, Name: aRecv, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6DC2, Name: aStackChkFail, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6DD3, Name: aZn9tsnapbasec2, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6DE5, Name: aZn9tsnapbasec1, Type: Unknown
2025-03-08 21:19:33,538 - my_text.py:107  -   Address: 0x6DF7, Name: aZn9tsnapbase8s, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6E10, Name: aZn9tsnapbase9s, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6E2A, Name: aZ15msgClosesoc, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6E3F, Name: aClose, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6E45, Name: aZ15msgGetsocka, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6E5A, Name: aGetpeername, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6E66, Name: aZn10tmsgsocket_0, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6E8F, Name: aInetAddr, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6E99, Name: aZn10tmsgsocket_1, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6EC2, Name: aInetNtoa, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6ECC, Name: aStrcpy, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6ED3, Name: aZn10tmsgsocket_2, Type: Unknown
2025-03-08 21:19:33,539 - my_text.py:107  -   Address: 0x6EEE, Name: aGetsockname, Type: Unknown
2025-03-08 21:19:33,540 - my_text.py:107  -   Address: 0x6EFA, Name: aZn10tmsgsocket_3, Type: Unknown
2025-03-08 21:19:33,540 - my_text.py:107  -   Address: 0x6F16, Name: aZn10tmsgsocket_4, Type: Unknown
2025-03-08 21:19:33,540 - my_text.py:107  -   Address: 0x6F3C, Name: aErrnoLocation, Type: Unknown
2025-03-08 21:19:33,540 - my_text.py:107  -   Address: 0x6F4D, Name: aZn10tmsgsocket_5, Type: Unknown
2025-03-08 21:19:33,540 - my_text.py:107  -   Address: 0x6F69, Name: aZn10tmsgsocket_6, Type: Unknown
2025-03-08 21:19:33,540 - my_text.py:107  -   Address: 0x6F88, Name: aIoctl, Type: Unknown
2025-03-08 21:19:33,540 - my_text.py:107  -   Address: 0x6F8E, Name: aZn10tmsgsocket_7, Type: Unknown
2025-03-08 21:19:33,540 - my_text.py:107  -   Address: 0x6FAA, Name: aZn10tmsgsocket_8, Type: Unknown
2025-03-08 21:19:33,540 - my_text.py:107  -   Address: 0x6FCE, Name: aSetsockopt, Type: Unknown
2025-03-08 21:19:33,540 - my_text.py:107  -   Address: 0x6FD9, Name: aZn10tmsgsocket_9, Type: Unknown
2025-03-08 21:19:33,540 - my_text.py:107  -   Address: 0x6FF5, Name: aZn10tmsgsocket_10, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x7010, Name: aFdeltChk, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x701C, Name: aSelect, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x7023, Name: aZn10tmsgsocket_11, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x703D, Name: aZn10tmsgsocket_12, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x705D, Name: aZ10sysgettickv, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x706D, Name: aZ9deltatimerj, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x707C, Name: aZ8syssleepj, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x7089, Name: aZn10tmsgsocket_13, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x70A1, Name: aZn10tmsgsocket_14, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x70C2, Name: aShutdown, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x70CB, Name: aZn10tmsgsocket_15, Type: Unknown
2025-03-08 21:19:33,541 - my_text.py:107  -   Address: 0x70EB, Name: aSocket, Type: Unknown
2025-03-08 21:19:33,542 - my_text.py:107  -   Address: 0x70F2, Name: aZn10tmsgsocket_16, Type: Unknown
2025-03-08 21:19:33,542 - my_text.py:107  -   Address: 0x7110, Name: aFcntl, Type: Unknown
2025-03-08 21:19:33,542 - my_text.py:107  -   Address: 0x7116, Name: aGetsockopt, Type: Unknown
2025-03-08 21:19:33,542 - my_text.py:107  -   Address: 0x7121, Name: aZn10tmsgsocket_17, Type: Unknown
2025-03-08 21:19:33,542 - my_text.py:107  -   Address: 0x7142, Name: aZn10tmsgsocket_18, Type: Unknown
2025-03-08 21:19:33,542 - my_text.py:107  -   Address: 0x7160, Name: aCxaBeginCatch, Type: Unknown
2025-03-08 21:19:33,542 - my_text.py:107  -   Address: 0x7172, Name: aCxaEndCatch, Type: Unknown
2025-03-08 21:19:33,542 - my_text.py:107  -   Address: 0x7182, Name: aGxxPersonality, Type: Unknown
2025-03-08 21:19:33,543 - my_text.py:107  -   Address: 0x7197, Name: aZn10tmsgsocket_19, Type: Unknown
2025-03-08 21:19:33,543 - my_text.py:107  -   Address: 0x71B1, Name: aBind, Type: Unknown
2025-03-08 21:19:33,543 - my_text.py:107  -   Address: 0x71B6, Name: aZn10tmsgsocket_20, Type: Unknown
2025-03-08 21:19:33,543 - my_text.py:107  -   Address: 0x71D2, Name: aListen, Type: Unknown
2025-03-08 21:19:33,543 - my_text.py:107  -   Address: 0x71D9, Name: aZn10tmsgsocket_21, Type: Unknown
2025-03-08 21:19:33,543 - my_text.py:107  -   Address: 0x71F5, Name: aAccept, Type: Unknown
2025-03-08 21:19:33,543 - my_text.py:107  -   Address: 0x71FC, Name: aZn10tmsgsocket_22, Type: Unknown
2025-03-08 21:19:33,543 - my_text.py:107  -   Address: 0x721C, Name: aSend, Type: Unknown
2025-03-08 21:19:33,543 - my_text.py:107  -   Address: 0x7221, Name: aZn10tmsgsocket_23, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x7240, Name: aZn10tmsgsocket_24, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x725E, Name: aZn10tmsgsocket_25, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x727E, Name: aZn10tmsgsocket_26, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x729E, Name: aZn16trawsocket, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x72B8, Name: aZn16trawsocket_0, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x72D2, Name: aZn16trawsocket_1, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x72EC, Name: aZn16trawsocket_2, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x7306, Name: aZn16trawsocket_3, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x732E, Name: aZn16trawsocket_4, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x7352, Name: aZn16trawsocket_5, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x7372, Name: aZn16trawsocket_6, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x7390, Name: aZn7tpingerc2ev, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x73A0, Name: aZn7tpingerc1ev, Type: Unknown
2025-03-08 21:19:33,544 - my_text.py:107  -   Address: 0x73B0, Name: aZn10tmsgsocket_27, Type: Unknown
2025-03-08 21:19:33,545 - my_text.py:107  -   Address: 0x73C4, Name: aZtv10tmsgsocke, Type: Unknown
2025-03-08 21:19:33,545 - my_text.py:107  -   Address: 0x73D5, Name: aZnwm, Type: Unknown
2025-03-08 21:19:33,545 - my_text.py:107  -   Address: 0x73DB, Name: aZdlpv, Type: Unknown
2025-03-08 21:19:33,545 - my_text.py:107  -   Address: 0x73E2, Name: aUnwindResume, Type: Unknown
2025-03-08 21:19:33,545 - my_text.py:107  -   Address: 0x73F1, Name: aZn10tmsgsocket_28, Type: Unknown
2025-03-08 21:19:33,545 - my_text.py:107  -   Address: 0x7405, Name: aZn7tpingerd2ev, Type: Unknown
2025-03-08 21:19:33,545 - my_text.py:107  -   Address: 0x7415, Name: aZn7tpingerd1ev, Type: Unknown
2025-03-08 21:19:33,545 - my_text.py:107  -   Address: 0x7425, Name: aZn10tmsgsocket_29, Type: Unknown
2025-03-08 21:19:33,545 - my_text.py:107  -   Address: 0x7439, Name: aZn10tmsgsocket_30, Type: Unknown
2025-03-08 21:19:33,545 - my_text.py:107  -   Address: 0x744D, Name: aZn10tmsgsocket_31, Type: Unknown
2025-03-08 21:19:33,545 - my_text.py:107  -   Address: 0x7461, Name: aZn7tpinger7raw, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x7478, Name: aZn7tpinger4pin, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x748C, Name: aZn7tpinger4pin_0, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x74A1, Name: aZn10tmsgsocket_32, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x74B9, Name: aZn10tmsgsocket_33, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x74DC, Name: aZ15rawsocketsc, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x74F1, Name: aZn12socketslay_1, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x7507, Name: aZn12socketslay_2, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x751D, Name: aCxaAtexit, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x752A, Name: aZts10tmsgsocke, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x753B, Name: aZti10tmsgsocke, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x754C, Name: aZtvn10Cxxabiv1, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x7576, Name: aZti9tsnapbase, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x7585, Name: aZtvn10Cxxabiv1_0, Type: Unknown
2025-03-08 21:19:33,546 - my_text.py:107  -   Address: 0x75AB, Name: aZts9tsnapbase, Type: Unknown
2025-03-08 21:19:33,547 - my_text.py:107  -   Address: 0x75BA, Name: aClockGettime, Type: Unknown
2025-03-08 21:19:33,547 - my_text.py:107  -   Address: 0x75C8, Name: aNanosleep, Type: Unknown
2025-03-08 21:19:33,547 - my_text.py:107  -   Address: 0x75D2, Name: aZn16tcustommsg, Type: Unknown
2025-03-08 21:19:33,547 - my_text.py:107  -   Address: 0x75F4, Name: aZn13tecotcpwor, Type: Unknown
2025-03-08 21:19:33,547 - my_text.py:107  -   Address: 0x760B, Name: aZtv13tecotcpwo, Type: Unknown
2025-03-08 21:19:33,547 - my_text.py:107  -   Address: 0x761F, Name: aZn13tecotcpwor_0, Type: Unknown
2025-03-08 21:19:33,547 - my_text.py:107  -   Address: 0x7636, Name: aZn16tmsgworker, Type: Unknown
2025-03-08 21:19:33,547 - my_text.py:107  -   Address: 0x7650, Name: aZtv16tmsgworke, Type: Unknown
2025-03-08 21:19:33,547 - my_text.py:107  -   Address: 0x7667, Name: aZn11tsnapthrea, Type: Unknown
2025-03-08 21:19:33,548 - my_text.py:107  -   Address: 0x767C, Name: aZn16tmsgworker_0, Type: Unknown
2025-03-08 21:19:33,548 - my_text.py:107  -   Address: 0x7696, Name: aZn18tmsglisten, Type: Unknown
2025-03-08 21:19:33,548 - my_text.py:107  -   Address: 0x76B2, Name: aZtv18tmsgliste, Type: Unknown
2025-03-08 21:19:33,548 - my_text.py:107  -   Address: 0x76CB, Name: aZn18tmsglisten_0, Type: Unknown
2025-03-08 21:19:33,548 - my_text.py:107  -   Address: 0x76E7, Name: aZn18tmsglisten_1, Type: Unknown
2025-03-08 21:19:33,548 - my_text.py:107  -   Address: 0x7709, Name: aZn13tecotcpwor_1, Type: Unknown
2025-03-08 21:19:33,548 - my_text.py:107  -   Address: 0x7726, Name: aZn16tcustommsg_0, Type: Unknown
2025-03-08 21:19:33,548 - my_text.py:107  -   Address: 0x7752, Name: aZn18tmsglisten_2, Type: Unknown
2025-03-08 21:19:33,548 - my_text.py:107  -   Address: 0x776E, Name: aZn16tmsgworker_1, Type: Unknown
2025-03-08 21:19:33,549 - my_text.py:107  -   Address: 0x7788, Name: aZn13tecotcpwor_2, Type: Unknown
2025-03-08 21:19:33,549 - my_text.py:107  -   Address: 0x779F, Name: aZn14tmsgeventq, Type: Unknown
2025-03-08 21:19:33,549 - my_text.py:107  -   Address: 0x77B7, Name: aZdapv, Type: Unknown
2025-03-08 21:19:33,549 - my_text.py:107  -   Address: 0x77BE, Name: aZn14tmsgeventq_0, Type: Unknown
2025-03-08 21:19:33,549 - my_text.py:107  -   Address: 0x77D6, Name: aZn14tmsgeventq_1, Type: Unknown
2025-03-08 21:19:33,549 - my_text.py:107  -   Address: 0x77F2, Name: aZn14tmsgeventq_2, Type: Unknown
2025-03-08 21:19:33,549 - my_text.py:107  -   Address: 0x780B, Name: aZnam, Type: Unknown
2025-03-08 21:19:33,549 - my_text.py:107  -   Address: 0x7811, Name: aZn14tmsgeventq_3, Type: Unknown
2025-03-08 21:19:33,549 - my_text.py:107  -   Address: 0x782A, Name: aZn14tmsgeventq_4, Type: Unknown
2025-03-08 21:19:33,549 - my_text.py:107  -   Address: 0x7846, Name: aZn14tmsgeventq_5, Type: Unknown
2025-03-08 21:19:33,549 - my_text.py:107  -   Address: 0x7865, Name: aMemcpy, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x786C, Name: aZn14tmsgeventq_6, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x7887, Name: aZn14tmsgeventq_7, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x78A5, Name: aZn16tcustommsg_1, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x78CB, Name: aPthreadMutexLo, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x78DE, Name: aPthreadMutexUn, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x78F3, Name: aZn16tmsgworker_2, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x792C, Name: aZn11tsnapthrea_0, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x7941, Name: aZn16tmsgworker_3, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x797A, Name: aZn18tmsglisten_3, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x79B5, Name: aZn18tmsglisten_4, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x79F0, Name: aZn16tcustommsg_2, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x7A0A, Name: aZtv16tcustomms, Type: Unknown
2025-03-08 21:19:33,550 - my_text.py:107  -   Address: 0x7A21, Name: aPthreadMutexIn, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7A34, Name: aZn16tcustommsg_3, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7A4E, Name: aZn16tcustommsg_4, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7A6F, Name: aZn16tcustommsg_5, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7A93, Name: aZn16tcustommsg_6, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7AB5, Name: aZn16tcustommsg_7, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7AD6, Name: aZn11tsnapthrea_1, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7AEF, Name: aZn16tcustommsg_8, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7B16, Name: aStrncpy, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7B1E, Name: aZn16tcustommsg_9, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7B3E, Name: aZn11tsnapthrea_2, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7B56, Name: aZn16tcustommsg_10, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7B7C, Name: aZn11tsnapthrea_3, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7B99, Name: aZn16tcustommsg_11, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7BB8, Name: aZn16tmsgworker_4, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7BD8, Name: aZn16tcustommsg_12, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7BF6, Name: aZn16tcustommsg_13, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7C19, Name: aZn16tcustommsg_14, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7C36, Name: aZn11tsnapthrea_4, Type: Unknown
2025-03-08 21:19:33,551 - my_text.py:107  -   Address: 0x7C51, Name: aZn16tcustommsg_15, Type: Unknown
2025-03-08 21:19:33,552 - my_text.py:107  -   Address: 0x7C6B, Name: aPthreadMutexDe, Type: Unknown
2025-03-08 21:19:33,552 - my_text.py:107  -   Address: 0x7C81, Name: aZn16tcustommsg_16, Type: Unknown
2025-03-08 21:19:33,552 - my_text.py:107  -   Address: 0x7C9B, Name: aZn16tcustommsg_17, Type: Unknown
2025-03-08 21:19:33,552 - my_text.py:107  -   Address: 0x7CB5, Name: aZn16tcustommsg_18, Type: Unknown
2025-03-08 21:19:33,552 - my_text.py:107  -   Address: 0x7CF4, Name: aZn16tcustommsg_19, Type: Unknown
2025-03-08 21:19:33,552 - my_text.py:107  -   Address: 0x7D17, Name: aZn16tcustommsg_20, Type: Unknown
2025-03-08 21:19:33,552 - my_text.py:107  -   Address: 0x7D3B, Name: aZn16tcustommsg_21, Type: Unknown
2025-03-08 21:19:33,552 - my_text.py:107  -   Address: 0x7D60, Name: aZts16tmsgworke, Type: Unknown
2025-03-08 21:19:33,552 - my_text.py:107  -   Address: 0x7D77, Name: aZti16tmsgworke, Type: Unknown
2025-03-08 21:19:33,553 - my_text.py:107  -   Address: 0x7D8E, Name: aZtvn10Cxxabiv1_1, Type: Unknown
2025-03-08 21:19:33,553 - my_text.py:107  -   Address: 0x7DB7, Name: aZti11tsnapthre, Type: Unknown
2025-03-08 21:19:33,553 - my_text.py:107  -   Address: 0x7DC9, Name: aZts18tmsgliste, Type: Unknown
2025-03-08 21:19:33,553 - my_text.py:107  -   Address: 0x7DE2, Name: aZti18tmsgliste, Type: Unknown
2025-03-08 21:19:33,553 - my_text.py:107  -   Address: 0x7DFB, Name: aZts16tcustomms, Type: Unknown
2025-03-08 21:19:33,553 - my_text.py:107  -   Address: 0x7E12, Name: aZti16tcustomms, Type: Unknown
2025-03-08 21:19:33,553 - my_text.py:107  -   Address: 0x7E29, Name: aZti13tecotcpwo, Type: Unknown
2025-03-08 21:19:33,553 - my_text.py:107  -   Address: 0x7E3D, Name: aZts13tecotcpwo, Type: Unknown
2025-03-08 21:19:33,553 - my_text.py:107  -   Address: 0x7E51, Name: aZn11tsnapthrea_5, Type: Unknown
2025-03-08 21:19:33,554 - my_text.py:107  -   Address: 0x7E6C, Name: aZ10threadprocp, Type: Unknown
2025-03-08 21:19:33,554 - my_text.py:107  -   Address: 0x7E7D, Name: aPthreadSetcanc, Type: Unknown
2025-03-08 21:19:33,554 - my_text.py:107  -   Address: 0x7E93, Name: aPthreadSetcanc_0, Type: Unknown
2025-03-08 21:19:33,554 - my_text.py:107  -   Address: 0x7EAA, Name: aPthreadExit, Type: Unknown
2025-03-08 21:19:33,554 - my_text.py:107  -   Address: 0x7EB7, Name: aZtv11tsnapthre, Type: Unknown
2025-03-08 21:19:33,554 - my_text.py:107  -   Address: 0x7EC9, Name: aZn11tsnapthrea_6, Type: Unknown
2025-03-08 21:19:33,554 - my_text.py:107  -   Address: 0x7EDE, Name: aZn11tsnapthrea_7, Type: Unknown
2025-03-08 21:19:33,554 - my_text.py:107  -   Address: 0x7EFF, Name: aPthreadAttrIni, Type: Unknown
2025-03-08 21:19:33,554 - my_text.py:107  -   Address: 0x7F11, Name: aPthreadAttrSet, Type: Unknown
2025-03-08 21:19:33,554 - my_text.py:107  -   Address: 0x7F2D, Name: aPthreadCreate, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x7F3C, Name: aPthreadCancel, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x7F4B, Name: aZn11tsnapthrea_8, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x7F63, Name: aPthreadJoin, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x7F70, Name: aZn11tsnapthrea_9, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x7F85, Name: aZn11tsnapthrea_10, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x7F9A, Name: aZts11tsnapthre, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x7FAC, Name: aZn13tclientthr, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x7FC3, Name: aZtv13tclientth, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x7FD7, Name: aZn13tclientthr_0, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x7FEE, Name: aZn13tclientthr_1, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x8005, Name: aZn12tsnap7clie, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x801B, Name: aZn17tsnap7micr, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x8036, Name: aZtv12tsnap7cli, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x8049, Name: aZn12tsnap7clie_0, Type: Unknown
2025-03-08 21:19:33,555 - my_text.py:107  -   Address: 0x805F, Name: aZn12tsnap7clie_1, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x8080, Name: aPthreadCondBro, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x8097, Name: aPthreadCondSig, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x80AB, Name: aZn12tsnap7clie_2, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x80C1, Name: aZn17tsnap7micr_0, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x80E6, Name: aPthreadCondDes, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x80FB, Name: aZn17tsnap7micr_1, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x8116, Name: aZn12tsnap7clie_3, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x812C, Name: aZn12tsnap7clie_4, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x8142, Name: aZn12tsnap7clie_5, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x8162, Name: aZn12tsnap7clie_6, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x817C, Name: aZn17tsnap7micr_2, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x819D, Name: aZn12tsnap7clie_7, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x81BF, Name: aZn13tclientthr_2, Type: Unknown
2025-03-08 21:19:33,556 - my_text.py:107  -   Address: 0x81DC, Name: aPthreadCondWai, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x81EE, Name: aZn17tsnap7micr_3, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x8219, Name: aZn12tsnap7clie_8, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x8246, Name: aZn12tsnap7clie_9, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x8265, Name: aZn17tsnap7micr_4, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x8289, Name: aZn12tsnap7clie_10, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x82A8, Name: aZn17tsnap7micr_5, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x82CC, Name: aZn12tsnap7clie_11, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x82F4, Name: aZn12tsnap7clie_12, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x8317, Name: aZn10tsnap7peer, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x8332, Name: aPthreadCondIni, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x8344, Name: aZn12tsnap7clie_13, Type: Unknown
2025-03-08 21:19:33,557 - my_text.py:107  -   Address: 0x8362, Name: aZn10tsnap7peer_0, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x837D, Name: aZn12tsnap7clie_14, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x839D, Name: aZn12tsnap7clie_15, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x83BD, Name: aZn12tsnap7clie_16, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x83E1, Name: aZn12tsnap7clie_17, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x8404, Name: aZn12tsnap7clie_18, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x842B, Name: aZn12tsnap7clie_19, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x844D, Name: aZn12tsnap7clie_20, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x847E, Name: aZn12tsnap7clie_21, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x84A7, Name: aZn12tsnap7clie_22, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x84D9, Name: aZn12tsnap7clie_23, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x8500, Name: aZn17tsnap7micr_6, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x8527, Name: aZn12tsnap7clie_24, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x8548, Name: aZn12tsnap7clie_25, Type: Unknown
2025-03-08 21:19:33,558 - my_text.py:107  -   Address: 0x8569, Name: aZn12tsnap7clie_26, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x858A, Name: aZn12tsnap7clie_27, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x85AB, Name: aZn12tsnap7clie_28, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x85CC, Name: aZn12tsnap7clie_29, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x85EE, Name: aZn12tsnap7clie_30, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x8614, Name: aZn12tsnap7clie_31, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x8634, Name: aZn12tsnap7clie_32, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x8654, Name: aZn12tsnap7clie_33, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x8674, Name: aZn12tsnap7clie_34, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x8694, Name: aZn12tsnap7clie_35, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x86B4, Name: aZn12tsnap7clie_36, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x86D5, Name: aZn12tsnap7clie_37, Type: Unknown
2025-03-08 21:19:33,559 - my_text.py:107  -   Address: 0x86FB, Name: aGettimeofday, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x8708, Name: aPthreadCondTim, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x871F, Name: aZts13tclientth, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x8733, Name: aZti13tclientth, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x8747, Name: aZts12tsnap7cli, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x875A, Name: aZti12tsnap7cli, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x876D, Name: aZti17tsnap7mic, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x8785, Name: aZn13tisotcpsoc, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x87AB, Name: aZn13tisotcpsoc_0, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x87DC, Name: aZn13tisotcpsoc_1, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x8802, Name: aZn13tisotcpsoc_2, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x8819, Name: aZtv13tisotcpso, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x882D, Name: aZn13tisotcpsoc_3, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x8844, Name: aZn13tisotcpsoc_4, Type: Unknown
2025-03-08 21:19:33,560 - my_text.py:107  -   Address: 0x885B, Name: aZn13tisotcpsoc_5, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x8872, Name: aZn13tisotcpsoc_6, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x8889, Name: aZn13tisotcpsoc_7, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x88AB, Name: aZn13tisotcpsoc_8, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x88CD, Name: aZn13tisotcpsoc_9, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x88EB, Name: aZn13tisotcpsoc_10, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x890B, Name: aZn13tisotcpsoc_11, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x8936, Name: aZn13tisotcpsoc_12, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x8957, Name: aZn13tisotcpsoc_13, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x897D, Name: aZn13tisotcpsoc_14, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x899F, Name: aZn13tisotcpsoc_15, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x89C3, Name: aZn13tisotcpsoc_16, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x89F1, Name: aZn13tisotcpsoc_17, Type: Unknown
2025-03-08 21:19:33,561 - my_text.py:107  -   Address: 0x8A1D, Name: aZn13tisotcpsoc_18, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8A4B, Name: aZn13tisotcpsoc_19, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8A72, Name: aZn13tisotcpsoc_20, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8A9D, Name: aZn13tisotcpsoc_21, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8ACF, Name: aZn13tisotcpsoc_22, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8AF7, Name: aZts13tisotcpso, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8B0B, Name: aZti13tisotcpso, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8B1F, Name: aZn19tconnliste, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8B3C, Name: aZtv19tconnlist, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8B56, Name: aZn19tconnliste_0, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8B73, Name: aZn14tpartnerth, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8B8B, Name: aZtv14tpartnert, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8BA0, Name: aZn14tpartnerth_0, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8BB8, Name: aZn19tconnliste_1, Type: Unknown
2025-03-08 21:19:33,562 - my_text.py:107  -   Address: 0x8BD5, Name: aZn14tpartnerth_1, Type: Unknown
2025-03-08 21:19:33,563 - my_text.py:107  -   Address: 0x8BED, Name: aZn15tserversma, Type: Unknown
2025-03-08 21:19:33,563 - my_text.py:107  -   Address: 0x8C06, Name: aZn15tserversma_0, Type: Unknown
2025-03-08 21:19:33,563 - my_text.py:107  -   Address: 0x8C1F, Name: aZn15tserversma_1, Type: Unknown
2025-03-08 21:19:33,563 - my_text.py:107  -   Address: 0x8C3B, Name: aZn15tserversma_2, Type: Unknown
2025-03-08 21:19:33,563 - my_text.py:107  -   Address: 0x8C59, Name: aZn15tserversma_3, Type: Unknown
2025-03-08 21:19:33,563 - my_text.py:107  -   Address: 0x8C8D, Name: aZn17tconnectio, Type: Unknown
2025-03-08 21:19:33,563 - my_text.py:107  -   Address: 0x8CA8, Name: aZn17tconnectio_0, Type: Unknown
2025-03-08 21:19:33,563 - my_text.py:107  -   Address: 0x8CC3, Name: aZn17tconnectio_1, Type: Unknown
2025-03-08 21:19:33,563 - my_text.py:107  -   Address: 0x8CE1, Name: aZn17tconnectio_2, Type: Unknown
2025-03-08 21:19:33,563 - my_text.py:107  -   Address: 0x8D01, Name: aZn17tconnectio_3, Type: Unknown
2025-03-08 21:19:33,563 - my_text.py:107  -   Address: 0x8D20, Name: aZn17tconnectio_4, Type: Unknown
2025-03-08 21:19:33,564 - my_text.py:107  -   Address: 0x8D43, Name: aZn17tconnectio_5, Type: Unknown
2025-03-08 21:19:33,564 - my_text.py:107  -   Address: 0x8D61, Name: aZn17tconnectio_6, Type: Unknown
2025-03-08 21:19:33,564 - my_text.py:107  -   Address: 0x8D7C, Name: aZn17tconnectio_7, Type: Unknown
2025-03-08 21:19:33,564 - my_text.py:107  -   Address: 0x8D97, Name: aZn15tserversma_4, Type: Unknown
2025-03-08 21:19:33,564 - my_text.py:107  -   Address: 0x8DD1, Name: aZn15tserversma_5, Type: Unknown
2025-03-08 21:19:33,564 - my_text.py:107  -   Address: 0x8E07, Name: aZ24serversmana, Type: Unknown
2025-03-08 21:19:33,564 - my_text.py:107  -   Address: 0x8E3A, Name: aZn15tserversma_6, Type: Unknown
2025-03-08 21:19:33,564 - my_text.py:107  -   Address: 0x8E53, Name: aZn15tserversma_7, Type: Unknown
2025-03-08 21:19:33,564 - my_text.py:107  -   Address: 0x8E6C, Name: aZn17tconnectio_8, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x8E92, Name: aZn17tconnectio_9, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x8EB5, Name: aZn17tconnectio_10, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x8EEE, Name: aZn17tconnectio_11, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x8F25, Name: aZn15tserversma_8, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x8F6E, Name: aZ28serversmana, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x8FB3, Name: aZn17tconnectio_12, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x8FD5, Name: aZn19tconnliste_2, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x8FF8, Name: aZn13tsnap7part, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x900F, Name: aZn10tsnap7peer_1, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x9023, Name: aZtv13tsnap7par, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x9037, Name: aZn10tsnap7peer_2, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x904B, Name: aZn13tsnap7part_0, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x9062, Name: aZn13tsnap7part_1, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x9084, Name: aZn13tsnap7part_2, Type: Unknown
2025-03-08 21:19:33,565 - my_text.py:107  -   Address: 0x909F, Name: aZn10tsnap7peer_3, Type: Unknown
2025-03-08 21:19:33,566 - my_text.py:107  -   Address: 0x90BE, Name: aZn13tsnap7part_3, Type: Unknown
2025-03-08 21:19:33,566 - my_text.py:107  -   Address: 0x90E2, Name: aStrcpyChk, Type: Unknown
2025-03-08 21:19:33,566 - my_text.py:107  -   Address: 0x90EF, Name: aZn13tsnap7part_4, Type: Unknown
2025-03-08 21:19:33,566 - my_text.py:107  -   Address: 0x9110, Name: aZn10tsnap7peer_4, Type: Unknown
2025-03-08 21:19:33,566 - my_text.py:107  -   Address: 0x9132, Name: aZn13tsnap7part_5, Type: Unknown
2025-03-08 21:19:33,566 - my_text.py:107  -   Address: 0x9152, Name: aZn13tsnap7part_6, Type: Unknown
2025-03-08 21:19:33,566 - my_text.py:107  -   Address: 0x9172, Name: aZn13tsnap7part_7, Type: Unknown
2025-03-08 21:19:33,566 - my_text.py:107  -   Address: 0x9191, Name: aZn13tsnap7part_8, Type: Unknown
2025-03-08 21:19:33,566 - my_text.py:107  -   Address: 0x91B5, Name: aZn14tpartnerth_2, Type: Unknown
2025-03-08 21:19:33,566 - my_text.py:107  -   Address: 0x91D3, Name: aZn13tsnap7part_9, Type: Unknown
2025-03-08 21:19:33,566 - my_text.py:107  -   Address: 0x9202, Name: aZn13tsnap7part_10, Type: Unknown
2025-03-08 21:19:33,567 - my_text.py:107  -   Address: 0x9224, Name: aZn13tsnap7part_11, Type: Unknown
2025-03-08 21:19:33,567 - my_text.py:107  -   Address: 0x923E, Name: aZn13tsnap7part_12, Type: Unknown
2025-03-08 21:19:33,567 - my_text.py:107  -   Address: 0x9255, Name: aZn13tsnap7part_13, Type: Unknown
2025-03-08 21:19:33,567 - my_text.py:107  -   Address: 0x926C, Name: aZn13tsnap7part_14, Type: Unknown
2025-03-08 21:19:33,567 - my_text.py:107  -   Address: 0x9283, Name: aZn13tsnap7part_15, Type: Unknown
2025-03-08 21:19:33,567 - my_text.py:107  -   Address: 0x92A2, Name: aZn10tsnap7peer_5, Type: Unknown
2025-03-08 21:19:33,567 - my_text.py:107  -   Address: 0x92C1, Name: aZn13tsnap7part_16, Type: Unknown
2025-03-08 21:19:33,567 - my_text.py:107  -   Address: 0x92DF, Name: aZn13tsnap7part_17, Type: Unknown
2025-03-08 21:19:33,567 - my_text.py:107  -   Address: 0x92FE, Name: aZn13tsnap7part_18, Type: Unknown
2025-03-08 21:19:33,568 - my_text.py:107  -   Address: 0x9326, Name: aZn13tsnap7part_19, Type: Unknown
2025-03-08 21:19:33,568 - my_text.py:107  -   Address: 0x9343, Name: aZn13tsnap7part_20, Type: Unknown
2025-03-08 21:19:33,568 - my_text.py:107  -   Address: 0x935F, Name: aZn13tsnap7part_21, Type: Unknown
2025-03-08 21:19:33,568 - my_text.py:107  -   Address: 0x937F, Name: aZn13tsnap7part_22, Type: Unknown
2025-03-08 21:19:33,568 - my_text.py:107  -   Address: 0x93AD, Name: aZn13tsnap7part_23, Type: Unknown
2025-03-08 21:19:33,568 - my_text.py:107  -   Address: 0x93D9, Name: aZn13tsnap7part_24, Type: Unknown
2025-03-08 21:19:33,568 - my_text.py:107  -   Address: 0x93F7, Name: aZn13tsnap7part_25, Type: Unknown
2025-03-08 21:19:33,569 - my_text.py:107  -   Address: 0x9426, Name: aZn13tsnap7part_26, Type: Unknown
2025-03-08 21:19:33,569 - my_text.py:107  -   Address: 0x9447, Name: aZn13tsnap7part_27, Type: Unknown
2025-03-08 21:19:33,569 - my_text.py:107  -   Address: 0x947C, Name: aZn13tsnap7part_28, Type: Unknown
2025-03-08 21:19:33,569 - my_text.py:107  -   Address: 0x94B0, Name: aZts19tconnlist, Type: Unknown
2025-03-08 21:19:33,569 - my_text.py:107  -   Address: 0x94CA, Name: aZti19tconnlist, Type: Unknown
2025-03-08 21:19:33,569 - my_text.py:107  -   Address: 0x94E4, Name: aZts14tpartnert, Type: Unknown
2025-03-08 21:19:33,569 - my_text.py:107  -   Address: 0x94F9, Name: aZti14tpartnert, Type: Unknown
2025-03-08 21:19:33,569 - my_text.py:107  -   Address: 0x950E, Name: aZts13tsnap7par, Type: Unknown
2025-03-08 21:19:33,569 - my_text.py:107  -   Address: 0x9522, Name: aZti13tsnap7par, Type: Unknown
2025-03-08 21:19:33,569 - my_text.py:107  -   Address: 0x9536, Name: aZti10tsnap7pee, Type: Unknown
2025-03-08 21:19:33,570 - my_text.py:107  -   Address: 0x9547, Name: aZtv10tsnap7pee, Type: Unknown
2025-03-08 21:19:33,570 - my_text.py:107  -   Address: 0x9558, Name: aZn10tsnap7peer_6, Type: Unknown
2025-03-08 21:19:33,570 - my_text.py:107  -   Address: 0x956C, Name: aZn10tsnap7peer_7, Type: Unknown
2025-03-08 21:19:33,570 - my_text.py:107  -   Address: 0x9580, Name: aZn10tsnap7peer_8, Type: Unknown
2025-03-08 21:19:33,570 - my_text.py:107  -   Address: 0x9594, Name: aZn10tsnap7peer_9, Type: Unknown
2025-03-08 21:19:33,570 - my_text.py:107  -   Address: 0x95BA, Name: aZts10tsnap7pee, Type: Unknown
2025-03-08 21:19:33,570 - my_text.py:107  -   Address: 0x95CB, Name: aZn13tisotcpwor, Type: Unknown
2025-03-08 21:19:33,571 - my_text.py:107  -   Address: 0x95F4, Name: aZn13tisotcpwor_0, Type: Unknown
2025-03-08 21:19:33,571 - my_text.py:107  -   Address: 0x9616, Name: aZn9ts7worker15, Type: Unknown
2025-03-08 21:19:33,571 - my_text.py:107  -   Address: 0x9637, Name: aZn13tisotcpwor_1, Type: Unknown
2025-03-08 21:19:33,571 - my_text.py:107  -   Address: 0x9659, Name: aZn9ts7worker11, Type: Unknown
2025-03-08 21:19:33,571 - my_text.py:107  -   Address: 0x9676, Name: aZn13tisotcpwor_2, Type: Unknown
2025-03-08 21:19:33,571 - my_text.py:107  -   Address: 0x968D, Name: aZtv13tisotcpwo, Type: Unknown
2025-03-08 21:19:33,571 - my_text.py:107  -   Address: 0x96A1, Name: aZn13tisotcpwor_3, Type: Unknown
2025-03-08 21:19:33,571 - my_text.py:107  -   Address: 0x96B8, Name: aZn13tisotcpwor_4, Type: Unknown
2025-03-08 21:19:33,571 - my_text.py:107  -   Address: 0x96D5, Name: aZn9ts7workerd2, Type: Unknown
2025-03-08 21:19:33,571 - my_text.py:107  -   Address: 0x96E7, Name: aZn9ts7workerd1, Type: Unknown
2025-03-08 21:19:33,572 - my_text.py:107  -   Address: 0x96F9, Name: aZn13tisotcpwor_5, Type: Unknown
2025-03-08 21:19:33,572 - my_text.py:107  -   Address: 0x9710, Name: aZn9ts7workerd0, Type: Unknown
2025-03-08 21:19:33,572 - my_text.py:107  -   Address: 0x9722, Name: aZn9ts7workerc2, Type: Unknown
2025-03-08 21:19:33,572 - my_text.py:107  -   Address: 0x9734, Name: aZtv9ts7worker, Type: Unknown
2025-03-08 21:19:33,572 - my_text.py:107  -   Address: 0x9743, Name: aZn9ts7workerc1, Type: Unknown
2025-03-08 21:19:33,572 - my_text.py:107  -   Address: 0x9755, Name: aZn12tsnap7serv, Type: Unknown
2025-03-08 21:19:33,572 - my_text.py:107  -   Address: 0x977D, Name: aZn9ts7worker11_0, Type: Unknown
2025-03-08 21:19:33,572 - my_text.py:107  -   Address: 0x979A, Name: aZn9ts7worker3b, Type: Unknown
2025-03-08 21:19:33,572 - my_text.py:107  -   Address: 0x97AE, Name: aZn9ts7worker8f, Type: Unknown
2025-03-08 21:19:33,573 - my_text.py:107  -   Address: 0x97CF, Name: aLocaltime, Type: Unknown
2025-03-08 21:19:33,573 - my_text.py:107  -   Address: 0x97D9, Name: aZn9ts7worker7d, Type: Unknown
2025-03-08 21:19:33,573 - my_text.py:107  -   Address: 0x97F6, Name: aZn9ts7worker13, Type: Unknown
2025-03-08 21:19:33,573 - my_text.py:107  -   Address: 0x9816, Name: aZn9ts7worker12, Type: Unknown
2025-03-08 21:19:33,573 - my_text.py:107  -   Address: 0x9834, Name: aZn9ts7worker11_1, Type: Unknown
2025-03-08 21:19:33,573 - my_text.py:107  -   Address: 0x9867, Name: aZn9ts7worker13_0, Type: Unknown
2025-03-08 21:19:33,573 - my_text.py:107  -   Address: 0x989C, Name: aZn9ts7worker14, Type: Unknown
2025-03-08 21:19:33,573 - my_text.py:107  -   Address: 0x98D2, Name: aZn9ts7worker11_2, Type: Unknown
2025-03-08 21:19:33,573 - my_text.py:107  -   Address: 0x98F3, Name: aZn9ts7worker23, Type: Unknown
2025-03-08 21:19:33,574 - my_text.py:107  -   Address: 0x9920, Name: aZn9ts7worker13_1, Type: Unknown
2025-03-08 21:19:33,574 - my_text.py:107  -   Address: 0x9943, Name: aZn9ts7worker19, Type: Unknown
2025-03-08 21:19:33,574 - my_text.py:107  -   Address: 0x996C, Name: aZn9ts7worker24, Type: Unknown
2025-03-08 21:19:33,574 - my_text.py:107  -   Address: 0x9996, Name: aZn9ts7worker22, Type: Unknown
2025-03-08 21:19:33,574 - my_text.py:107  -   Address: 0x99BE, Name: aZn9ts7worker21, Type: Unknown
2025-03-08 21:19:33,574 - my_text.py:107  -   Address: 0x99E5, Name: aZn9ts7worker23_0, Type: Unknown
2025-03-08 21:19:33,574 - my_text.py:107  -   Address: 0x9A0E, Name: aZn9ts7worker22_0, Type: Unknown
2025-03-08 21:19:33,574 - my_text.py:107  -   Address: 0x9A36, Name: aZn9ts7worker22_1, Type: Unknown
2025-03-08 21:19:33,574 - my_text.py:107  -   Address: 0x9A5E, Name: aZn9ts7worker11_3, Type: Unknown
2025-03-08 21:19:33,575 - my_text.py:107  -   Address: 0x9A7F, Name: aZn9ts7worker22_2, Type: Unknown
2025-03-08 21:19:33,575 - my_text.py:107  -   Address: 0x9ABC, Name: aZn9ts7worker11_4, Type: Unknown
2025-03-08 21:19:33,575 - my_text.py:107  -   Address: 0x9ADF, Name: aZn9ts7worker25, Type: Unknown
2025-03-08 21:19:33,575 - my_text.py:107  -   Address: 0x9B22, Name: aZn9ts7worker26, Type: Unknown
2025-03-08 21:19:33,575 - my_text.py:107  -   Address: 0x9B63, Name: aZn9ts7worker26_0, Type: Unknown
2025-03-08 21:19:33,575 - my_text.py:107  -   Address: 0x9BB0, Name: aZn9ts7worker15_0, Type: Unknown
2025-03-08 21:19:33,575 - my_text.py:107  -   Address: 0x9BD1, Name: aSzlnotavail, Type: Unknown
2025-03-08 21:19:33,575 - my_text.py:107  -   Address: 0x9BDD, Name: aZn9ts7worker14_0, Type: Unknown
2025-03-08 21:19:33,575 - my_text.py:107  -   Address: 0x9BFD, Name: aZn9ts7worker7s, Type: Unknown
2025-03-08 21:19:33,576 - my_text.py:107  -   Address: 0x9C17, Name: aZn9ts7worker9s, Type: Unknown
2025-03-08 21:19:33,576 - my_text.py:107  -   Address: 0x9C31, Name: aSzlId0424IdxXx, Type: Unknown
2025-03-08 21:19:33,576 - my_text.py:107  -   Address: 0x9C46, Name: aZn9ts7worker16, Type: Unknown
2025-03-08 21:19:33,576 - my_text.py:107  -   Address: 0x9C68, Name: aSzlId0131Idx00, Type: Unknown
2025-03-08 21:19:33,576 - my_text.py:107  -   Address: 0x9C7D, Name: aZn9ts7worker15_1, Type: Unknown
2025-03-08 21:19:33,576 - my_text.py:107  -   Address: 0x9C9E, Name: aSzlId003aIdxXx, Type: Unknown
2025-03-08 21:19:33,576 - my_text.py:107  -   Address: 0x9CB3, Name: aSzlId0f17IdxXx, Type: Unknown
2025-03-08 21:19:33,576 - my_text.py:107  -   Address: 0x9CC8, Name: aSzlId0000IdxXx, Type: Unknown
2025-03-08 21:19:33,576 - my_text.py:107  -   Address: 0x9CDD, Name: aSzlId0021IdxXx, Type: Unknown
2025-03-08 21:19:33,576 - my_text.py:107  -   Address: 0x9CF2, Name: aSzlId0794IdxXx, Type: Unknown
2025-03-08 21:19:33,576 - my_text.py:107  -   Address: 0x9D07, Name: aSzlId0f74IdxXx, Type: Unknown
2025-03-08 21:19:33,577 - my_text.py:107  -   Address: 0x9D1C, Name: aSzlId0018IdxXx, Type: Unknown
2025-03-08 21:19:33,577 - my_text.py:107  -   Address: 0x9D31, Name: aSzlId0294IdxXx, Type: Unknown
2025-03-08 21:19:33,577 - my_text.py:107  -   Address: 0x9D46, Name: aSzlId0d97Idx00, Type: Unknown
2025-03-08 21:19:33,577 - my_text.py:107  -   Address: 0x9D5B, Name: aSzlId0f1cIdxXx, Type: Unknown
2025-03-08 21:19:33,577 - my_text.py:107  -   Address: 0x9D70, Name: aSzlId00a0IdxXx, Type: Unknown
2025-03-08 21:19:33,577 - my_text.py:107  -   Address: 0x9D85, Name: aSzlId0037IdxXx, Type: Unknown
2025-03-08 21:19:33,577 - my_text.py:107  -   Address: 0x9D9A, Name: aSzlId0f94IdxXx, Type: Unknown
2025-03-08 21:19:33,577 - my_text.py:107  -   Address: 0x9DAF, Name: aSzlId0023IdxXx, Type: Unknown
2025-03-08 21:19:33,577 - my_text.py:107  -   Address: 0x9DC4, Name: aSzlId0f95IdxXx, Type: Unknown
2025-03-08 21:19:33,577 - my_text.py:107  -   Address: 0x9DD9, Name: aSzlId0d91Idx00, Type: Unknown
2025-03-08 21:19:33,577 - my_text.py:107  -   Address: 0x9DEE, Name: aSzlId0095IdxXx, Type: Unknown
2025-03-08 21:19:33,578 - my_text.py:107  -   Address: 0x9E03, Name: aSzlId0f37IdxXx, Type: Unknown
2025-03-08 21:19:33,578 - my_text.py:107  -   Address: 0x9E18, Name: aSzlId0f38IdxXx, Type: Unknown
2025-03-08 21:19:33,578 - my_text.py:107  -   Address: 0x9E2D, Name: aSzlId0074IdxXx, Type: Unknown
2025-03-08 21:19:33,578 - my_text.py:107  -   Address: 0x9E42, Name: aSzlId0013IdxXx, Type: Unknown
2025-03-08 21:19:33,578 - my_text.py:107  -   Address: 0x9E57, Name: aSzlId0118Idx00, Type: Unknown
2025-03-08 21:19:33,578 - my_text.py:107  -   Address: 0x9E6C, Name: aSzlId001cIdxXx, Type: Unknown
2025-03-08 21:19:33,578 - my_text.py:107  -   Address: 0x9E81, Name: aSzlId0125Idx00, Type: Unknown
2025-03-08 21:19:33,578 - my_text.py:107  -   Address: 0x9E96, Name: aSzlId0017IdxXx, Type: Unknown
2025-03-08 21:19:33,579 - my_text.py:107  -   Address: 0x9EAB, Name: aSzlId0019IdxXx, Type: Unknown
2025-03-08 21:19:33,579 - my_text.py:107  -   Address: 0x9EC0, Name: aSzlId0f36IdxXx, Type: Unknown
2025-03-08 21:19:33,579 - my_text.py:107  -   Address: 0x9ED5, Name: aSzlId0014IdxXx, Type: Unknown
2025-03-08 21:19:33,579 - my_text.py:107  -   Address: 0x9EEA, Name: aSzlId0015IdxXx, Type: Unknown
2025-03-08 21:19:33,579 - my_text.py:107  -   Address: 0x9EFF, Name: aSzlId0002IdxXx, Type: Unknown
2025-03-08 21:19:33,579 - my_text.py:107  -   Address: 0x9F14, Name: aSzlId0f14IdxXx, Type: Unknown
2025-03-08 21:19:33,579 - my_text.py:107  -   Address: 0x9F29, Name: aSzlId0f1bIdxXx, Type: Unknown
2025-03-08 21:19:33,579 - my_text.py:107  -   Address: 0x9F3E, Name: aSzlId0038IdxXx, Type: Unknown
2025-03-08 21:19:33,580 - my_text.py:107  -   Address: 0x9F53, Name: aSzlId0f18IdxXx, Type: Unknown
2025-03-08 21:19:33,580 - my_text.py:107  -   Address: 0x9F68, Name: aSzlId0292Idx00, Type: Unknown
2025-03-08 21:19:33,580 - my_text.py:107  -   Address: 0x9F7D, Name: aSzlId0f00IdxXx, Type: Unknown
2025-03-08 21:19:33,580 - my_text.py:107  -   Address: 0x9F92, Name: aSzlId0a21IdxXx, Type: Unknown
2025-03-08 21:19:33,580 - my_text.py:107  -   Address: 0x9FA7, Name: aSzlId0f92IdxXx, Type: Unknown
2025-03-08 21:19:33,580 - my_text.py:107  -   Address: 0x9FBC, Name: aSzlId0036IdxXx, Type: Unknown
2025-03-08 21:19:33,580 - my_text.py:107  -   Address: 0x9FD1, Name: aSzlId0024IdxXx, Type: Unknown
2025-03-08 21:19:33,581 - my_text.py:107  -   Address: 0x9FE6, Name: aSzlId0025IdxXx, Type: Unknown
2025-03-08 21:19:33,581 - my_text.py:107  -   Address: 0x9FFB, Name: aSzlId0f21IdxXx, Type: Unknown
2025-03-08 21:19:33,581 - my_text.py:107  -   Address: 0xA010, Name: aSzlId0f3aIdxXx, Type: Unknown
2025-03-08 21:19:33,581 - my_text.py:107  -   Address: 0xA025, Name: aSzlId001aIdxXx, Type: Unknown
2025-03-08 21:19:33,581 - my_text.py:107  -   Address: 0xA03A, Name: aSzlId001bIdxXx, Type: Unknown
2025-03-08 21:19:33,581 - my_text.py:107  -   Address: 0xA04F, Name: aSzlId0131Idx00_0, Type: Unknown
2025-03-08 21:19:33,581 - my_text.py:107  -   Address: 0xA064, Name: aSzlId0131Idx00_1, Type: Unknown
2025-03-08 21:19:33,581 - my_text.py:107  -   Address: 0xA079, Name: aSzlId0131Idx00_2, Type: Unknown
2025-03-08 21:19:33,581 - my_text.py:107  -   Address: 0xA08E, Name: aSzlId0131Idx00_3, Type: Unknown
2025-03-08 21:19:33,581 - my_text.py:107  -   Address: 0xA0A3, Name: aSzlId0131Idx00_4, Type: Unknown
2025-03-08 21:19:33,582 - my_text.py:107  -   Address: 0xA0B8, Name: aSzlId0131Idx00_5, Type: Unknown
2025-03-08 21:19:33,582 - my_text.py:107  -   Address: 0xA0CD, Name: aSzlId0131Idx00_6, Type: Unknown
2025-03-08 21:19:33,582 - my_text.py:107  -   Address: 0xA0E2, Name: aSzlId0131Idx00_7, Type: Unknown
2025-03-08 21:19:33,582 - my_text.py:107  -   Address: 0xA0F7, Name: aSzlId01a0Idx00, Type: Unknown
2025-03-08 21:19:33,582 - my_text.py:107  -   Address: 0xA10C, Name: aSzlId01a0Idx00_0, Type: Unknown
2025-03-08 21:19:33,582 - my_text.py:107  -   Address: 0xA121, Name: aSzlId01a0Idx00_1, Type: Unknown
2025-03-08 21:19:33,582 - my_text.py:107  -   Address: 0xA136, Name: aSzlId01a0Idx00_2, Type: Unknown
2025-03-08 21:19:33,582 - my_text.py:107  -   Address: 0xA14B, Name: aSzlId01a0Idx00_3, Type: Unknown
2025-03-08 21:19:33,583 - my_text.py:107  -   Address: 0xA160, Name: aSzlId01a0Idx00_4, Type: Unknown
2025-03-08 21:19:33,583 - my_text.py:107  -   Address: 0xA175, Name: aSzlId01a0Idx00_5, Type: Unknown
2025-03-08 21:19:33,583 - my_text.py:107  -   Address: 0xA18A, Name: aSzlId01a0Idx00_6, Type: Unknown
2025-03-08 21:19:33,583 - my_text.py:107  -   Address: 0xA19F, Name: aSzlId01a0Idx00_7, Type: Unknown
2025-03-08 21:19:33,583 - my_text.py:107  -   Address: 0xA1B4, Name: aSzlId01a0Idx00_8, Type: Unknown
2025-03-08 21:19:33,583 - my_text.py:107  -   Address: 0xA1C9, Name: aSzlId01a0Idx00_9, Type: Unknown
2025-03-08 21:19:33,583 - my_text.py:107  -   Address: 0xA1DE, Name: aSzlId01a0Idx00_10, Type: Unknown
2025-03-08 21:19:33,583 - my_text.py:107  -   Address: 0xA1F3, Name: aSzlId01a0Idx00_11, Type: Unknown
2025-03-08 21:19:33,583 - my_text.py:107  -   Address: 0xA208, Name: aSzlId01a0Idx00_12, Type: Unknown
2025-03-08 21:19:33,583 - my_text.py:107  -   Address: 0xA21D, Name: aSzlId01a0Idx00_13, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA232, Name: aSzlId01a0Idx00_14, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA247, Name: aSzlId01a0Idx00_15, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA25C, Name: aSzlId01a0Idx00_16, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA271, Name: aSzlId01a0Idx00_17, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA286, Name: aSzlId01a0Idx00_18, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA29B, Name: aSzlId01a0Idx00_19, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA2B0, Name: aSzlId01a0Idx00_20, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA2C5, Name: aSzlId0132Idx00, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA2DA, Name: aSzlId0132Idx00_0, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA2EF, Name: aSzlId0132Idx00_1, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA304, Name: aSzlId0132Idx00_2, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA319, Name: aSzlId0132Idx00_3, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA32E, Name: aSzlId0132Idx00_4, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA343, Name: aSzlId0132Idx00_5, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA358, Name: aSzlId0132Idx00_6, Type: Unknown
2025-03-08 21:19:33,584 - my_text.py:107  -   Address: 0xA36D, Name: aSzlId0132Idx00_7, Type: Unknown
2025-03-08 21:19:33,585 - my_text.py:107  -   Address: 0xA382, Name: aSzlId0132Idx00_8, Type: Unknown
2025-03-08 21:19:33,585 - my_text.py:107  -   Address: 0xA397, Name: aSzlId0132Idx00_9, Type: Unknown
2025-03-08 21:19:33,585 - my_text.py:107  -   Address: 0xA3AC, Name: aSzlId0132Idx00_10, Type: Unknown
2025-03-08 21:19:33,585 - my_text.py:107  -   Address: 0xA3C1, Name: aSzlId0117Idx00, Type: Unknown
2025-03-08 21:19:33,585 - my_text.py:107  -   Address: 0xA3D6, Name: aSzlId0117Idx00_0, Type: Unknown
2025-03-08 21:19:33,585 - my_text.py:107  -   Address: 0xA3EB, Name: aSzlId0117Idx00_1, Type: Unknown
2025-03-08 21:19:33,585 - my_text.py:107  -   Address: 0xA400, Name: aSzlId0117Idx00_2, Type: Unknown
2025-03-08 21:19:33,585 - my_text.py:107  -   Address: 0xA415, Name: aSzlId0117Idx00_3, Type: Unknown
2025-03-08 21:19:33,585 - my_text.py:107  -   Address: 0xA42A, Name: aSzlId0115Idx08, Type: Unknown
2025-03-08 21:19:33,585 - my_text.py:107  -   Address: 0xA43F, Name: aSzlId0694Idx00, Type: Unknown
2025-03-08 21:19:33,586 - my_text.py:107  -   Address: 0xA454, Name: aSzlId0194Idx00, Type: Unknown
2025-03-08 21:19:33,586 - my_text.py:107  -   Address: 0xA469, Name: aSzlId0a91IdxXx, Type: Unknown
2025-03-08 21:19:33,586 - my_text.py:107  -   Address: 0xA47E, Name: aSzlId0c91Idx07, Type: Unknown
2025-03-08 21:19:33,586 - my_text.py:107  -   Address: 0xA493, Name: aSzlId0692Idx00, Type: Unknown
2025-03-08 21:19:33,586 - my_text.py:107  -   Address: 0xA4A8, Name: aSzlId0591IdxXx, Type: Unknown
2025-03-08 21:19:33,586 - my_text.py:107  -   Address: 0xA4BD, Name: aSzlId0f25IdxXx, Type: Unknown
2025-03-08 21:19:33,586 - my_text.py:107  -   Address: 0xA4D2, Name: aSzlId0f23IdxXx, Type: Unknown
2025-03-08 21:19:33,586 - my_text.py:107  -   Address: 0xA4E7, Name: aSzlId0f1aIdxXx, Type: Unknown
2025-03-08 21:19:33,586 - my_text.py:107  -   Address: 0xA4FC, Name: aSzlId0f19IdxXx, Type: Unknown
2025-03-08 21:19:33,586 - my_text.py:107  -   Address: 0xA511, Name: aSzlId0112Idx00, Type: Unknown
2025-03-08 21:19:33,586 - my_text.py:107  -   Address: 0xA526, Name: aSzlId0113Idx00, Type: Unknown
2025-03-08 21:19:33,587 - my_text.py:107  -   Address: 0xA53B, Name: aSzlId0f12Idx00, Type: Unknown
2025-03-08 21:19:33,587 - my_text.py:107  -   Address: 0xA550, Name: aSzlId0174Idx00, Type: Unknown
2025-03-08 21:19:33,587 - my_text.py:107  -   Address: 0xA565, Name: aSzlId0174Idx00_0, Type: Unknown
2025-03-08 21:19:33,587 - my_text.py:107  -   Address: 0xA57A, Name: aSzlId0174Idx00_1, Type: Unknown
2025-03-08 21:19:33,587 - my_text.py:107  -   Address: 0xA58F, Name: aSzlId0174Idx00_2, Type: Unknown
2025-03-08 21:19:33,587 - my_text.py:107  -   Address: 0xA5A4, Name: aSzlId0174Idx00_3, Type: Unknown
2025-03-08 21:19:33,588 - my_text.py:107  -   Address: 0xA5B9, Name: aSzlId0174Idx00_4, Type: Unknown
2025-03-08 21:19:33,588 - my_text.py:107  -   Address: 0xA5CE, Name: aSzlId0137Idx07, Type: Unknown
2025-03-08 21:19:33,588 - my_text.py:107  -   Address: 0xA5E3, Name: aSzlId0225Idx00, Type: Unknown
2025-03-08 21:19:33,588 - my_text.py:107  -   Address: 0xA5F8, Name: aSzlId0094Idx00, Type: Unknown
2025-03-08 21:19:33,588 - my_text.py:107  -   Address: 0xA60D, Name: aSzlId0092Idx00, Type: Unknown
2025-03-08 21:19:33,588 - my_text.py:107  -   Address: 0xA622, Name: aSzlId0012IdxXx, Type: Unknown
2025-03-08 21:19:33,588 - my_text.py:107  -   Address: 0xA637, Name: aSzlId0011IdxXx, Type: Unknown
2025-03-08 21:19:33,588 - my_text.py:107  -   Address: 0xA64C, Name: aSzlId0124IdxXx, Type: Unknown
2025-03-08 21:19:33,589 - my_text.py:107  -   Address: 0xA661, Name: aSzlId011cIdx00, Type: Unknown
2025-03-08 21:19:33,589 - my_text.py:107  -   Address: 0xA676, Name: aSzlId011cIdx00_0, Type: Unknown
2025-03-08 21:19:33,589 - my_text.py:107  -   Address: 0xA68B, Name: aSzlId011cIdx00_1, Type: Unknown
2025-03-08 21:19:33,589 - my_text.py:107  -   Address: 0xA6A0, Name: aSzlId011cIdx00_2, Type: Unknown
2025-03-08 21:19:33,589 - my_text.py:107  -   Address: 0xA6B5, Name: aSzlId011cIdx00_3, Type: Unknown
2025-03-08 21:19:33,589 - my_text.py:107  -   Address: 0xA6CA, Name: aSzlId011cIdx00_4, Type: Unknown
2025-03-08 21:19:33,589 - my_text.py:107  -   Address: 0xA6DF, Name: aSzlId011cIdx00_5, Type: Unknown
2025-03-08 21:19:33,590 - my_text.py:107  -   Address: 0xA6F4, Name: aSzlId011cIdx00_6, Type: Unknown
2025-03-08 21:19:33,590 - my_text.py:107  -   Address: 0xA709, Name: aSzlId011cIdx00_7, Type: Unknown
2025-03-08 21:19:33,590 - my_text.py:107  -   Address: 0xA71E, Name: aSzlId011cIdx00_8, Type: Unknown
2025-03-08 21:19:33,590 - my_text.py:107  -   Address: 0xA733, Name: aSzlId0fa0IdxXx, Type: Unknown
2025-03-08 21:19:33,590 - my_text.py:107  -   Address: 0xA748, Name: aSzlId0f9aIdxXx, Type: Unknown
2025-03-08 21:19:33,590 - my_text.py:107  -   Address: 0xA75D, Name: aSzlId0222Idx00, Type: Unknown
2025-03-08 21:19:33,591 - my_text.py:107  -   Address: 0xA772, Name: aSzlId0232Idx00, Type: Unknown
2025-03-08 21:19:33,591 - my_text.py:107  -   Address: 0xA787, Name: aSzlId0232Idx00_0, Type: Unknown
2025-03-08 21:19:33,591 - my_text.py:107  -   Address: 0xA79C, Name: aSzlId0125Idx00_0, Type: Unknown
2025-03-08 21:19:33,591 - my_text.py:107  -   Address: 0xA7B1, Name: aSzlId0111Idx00, Type: Unknown
2025-03-08 21:19:33,591 - my_text.py:107  -   Address: 0xA7C6, Name: aSzlId0111Idx00_0, Type: Unknown
2025-03-08 21:19:33,592 - my_text.py:107  -   Address: 0xA7DB, Name: aSzlId0111Idx00_1, Type: Unknown
2025-03-08 21:19:33,592 - my_text.py:107  -   Address: 0xA7F0, Name: aSzlId0f11Idx00, Type: Unknown
2025-03-08 21:19:33,592 - my_text.py:107  -   Address: 0xA805, Name: aSzlId0f11Idx00_0, Type: Unknown
2025-03-08 21:19:33,592 - my_text.py:107  -   Address: 0xA81A, Name: aSzlId0f11Idx00_1, Type: Unknown
2025-03-08 21:19:33,592 - my_text.py:107  -   Address: 0xA82F, Name: aSzlId0112Idx02, Type: Unknown
2025-03-08 21:19:33,592 - my_text.py:107  -   Address: 0xA844, Name: aSzlId0112Idx01, Type: Unknown
2025-03-08 21:19:33,592 - my_text.py:107  -   Address: 0xA859, Name: aSzlId0118Idx00_0, Type: Unknown
2025-03-08 21:19:33,593 - my_text.py:107  -   Address: 0xA86E, Name: aSzlId0118Idx00_1, Type: Unknown
2025-03-08 21:19:33,593 - my_text.py:107  -   Address: 0xA883, Name: aSzlId0112Idx04, Type: Unknown
2025-03-08 21:19:33,593 - my_text.py:107  -   Address: 0xA898, Name: aSzlId0f12Idx04, Type: Unknown
2025-03-08 21:19:33,593 - my_text.py:107  -   Address: 0xA8AD, Name: aSzlId0f12Idx02, Type: Unknown
2025-03-08 21:19:33,593 - my_text.py:107  -   Address: 0xA8C2, Name: aSzlId0118Idx00_2, Type: Unknown
2025-03-08 21:19:33,593 - my_text.py:107  -   Address: 0xA8D7, Name: aSzlId0f12Idx01, Type: Unknown
2025-03-08 21:19:33,593 - my_text.py:107  -   Address: 0xA8EC, Name: aSzlId0222Idx00_0, Type: Unknown
2025-03-08 21:19:33,593 - my_text.py:107  -   Address: 0xA901, Name: aSzlId0222Idx00_1, Type: Unknown
2025-03-08 21:19:33,593 - my_text.py:107  -   Address: 0xA916, Name: aSzlId0222Idx00_2, Type: Unknown
2025-03-08 21:19:33,594 - my_text.py:107  -   Address: 0xA92B, Name: aSzlId0222Idx00_3, Type: Unknown
2025-03-08 21:19:33,594 - my_text.py:107  -   Address: 0xA940, Name: aSzlId0222Idx00_4, Type: Unknown
2025-03-08 21:19:33,594 - my_text.py:107  -   Address: 0xA955, Name: aZn9ts7worker20, Type: Unknown
2025-03-08 21:19:33,594 - my_text.py:107  -   Address: 0xA97B, Name: aZn9ts7worker15_2, Type: Unknown
2025-03-08 21:19:33,594 - my_text.py:107  -   Address: 0xA99C, Name: aZn9ts7worker15_3, Type: Unknown
2025-03-08 21:19:33,594 - my_text.py:107  -   Address: 0xA9BD, Name: aZn12tsnap7serv_0, Type: Unknown
2025-03-08 21:19:33,594 - my_text.py:107  -   Address: 0xA9D3, Name: aZtv12tsnap7ser, Type: Unknown
2025-03-08 21:19:33,594 - my_text.py:107  -   Address: 0xA9E6, Name: aMemset, Type: Unknown
2025-03-08 21:19:33,595 - my_text.py:107  -   Address: 0xA9ED, Name: aZn12tsnap7serv_1, Type: Unknown
2025-03-08 21:19:33,595 - my_text.py:107  -   Address: 0xAA03, Name: aZn12tsnap7serv_2, Type: Unknown
2025-03-08 21:19:33,595 - my_text.py:107  -   Address: 0xAA1E, Name: aZn9ts7worker14_1, Type: Unknown
2025-03-08 21:19:33,595 - my_text.py:107  -   Address: 0xAA42, Name: aZn9ts7worker21_0, Type: Unknown
2025-03-08 21:19:33,595 - my_text.py:107  -   Address: 0xAA69, Name: aZn9ts7worker17, Type: Unknown
2025-03-08 21:19:33,595 - my_text.py:107  -   Address: 0xAA8D, Name: aZn9ts7worker7g, Type: Unknown
2025-03-08 21:19:33,595 - my_text.py:107  -   Address: 0xAAA6, Name: aZn12tsnap7serv_3, Type: Unknown
2025-03-08 21:19:33,595 - my_text.py:107  -   Address: 0xAAC4, Name: aZn12tsnap7serv_4, Type: Unknown
2025-03-08 21:19:33,595 - my_text.py:107  -   Address: 0xAAE9, Name: aZn12tsnap7serv_5, Type: Unknown
2025-03-08 21:19:33,595 - my_text.py:107  -   Address: 0xAB0C, Name: aZn12tsnap7serv_6, Type: Unknown
2025-03-08 21:19:33,595 - my_text.py:107  -   Address: 0xAB30, Name: aZn12tsnap7serv_7, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xAB52, Name: aZn12tsnap7serv_8, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xAB75, Name: aZn12tsnap7serv_9, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xAB95, Name: aZn12tsnap7serv_10, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xABAB, Name: aZn12tsnap7serv_11, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xABC1, Name: aZn12tsnap7serv_12, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xABD7, Name: aZn12tsnap7serv_13, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xABF5, Name: aZn12tsnap7serv_14, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xAC14, Name: aZn12tsnap7serv_15, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xAC33, Name: aZn12tsnap7serv_16, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xAC59, Name: aZn12tsnap7serv_17, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xAC7E, Name: aZn12tsnap7serv_18, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xAC9C, Name: aZn12tsnap7serv_19, Type: Unknown
2025-03-08 21:19:33,596 - my_text.py:107  -   Address: 0xACBD, Name: aZn12tsnap7serv_20, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xACFC, Name: aZn12tsnap7serv_21, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xAD38, Name: aZn12tsnap7serv_22, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xAD5F, Name: aZn9ts7worker11_5, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xAD81, Name: aZn12tsnap7serv_23, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xADA8, Name: aZn9ts7worker8r, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xADEB, Name: aZn9ts7worker19_0, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xAE10, Name: aZn12tsnap7serv_24, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xAE38, Name: aZn9ts7worker9w, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xAE80, Name: aZn9ts7worker20_0, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xAEA6, Name: aZn9ts7worker17_0, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xAECA, Name: aZn9ts7worker17_1, Type: Unknown
2025-03-08 21:19:33,597 - my_text.py:107  -   Address: 0xAEEE, Name: aZts13tisotcpwo, Type: Unknown
2025-03-08 21:19:33,598 - my_text.py:107  -   Address: 0xAF02, Name: aZti13tisotcpwo, Type: Unknown
2025-03-08 21:19:33,598 - my_text.py:107  -   Address: 0xAF16, Name: aZts9ts7worker, Type: Unknown
2025-03-08 21:19:33,598 - my_text.py:107  -   Address: 0xAF25, Name: aZti9ts7worker, Type: Unknown
2025-03-08 21:19:33,598 - my_text.py:107  -   Address: 0xAF34, Name: aZts12tsnap7ser, Type: Unknown
2025-03-08 21:19:33,598 - my_text.py:107  -   Address: 0xAF47, Name: aZti12tsnap7ser, Type: Unknown
2025-03-08 21:19:33,598 - my_text.py:107  -   Address: 0xAF5A, Name: aSzlsysstate, Type: Unknown
2025-03-08 21:19:33,598 - my_text.py:107  -   Address: 0xAF66, Name: aZ11numtostring, Type: Unknown
2025-03-08 21:19:33,598 - my_text.py:107  -   Address: 0xAF79, Name: aZnss4Rep20SEmp, Type: Unknown
2025-03-08 21:19:33,598 - my_text.py:107  -   Address: 0xAF9B, Name: aZnss6assignepk, Type: Unknown
2025-03-08 21:19:33,599 - my_text.py:107  -   Address: 0xAFAD, Name: aZnss7reserveem, Type: Unknown
2025-03-08 21:19:33,599 - my_text.py:107  -   Address: 0xAFBD, Name: aZnss6appendepk, Type: Unknown
2025-03-08 21:19:33,599 - my_text.py:107  -   Address: 0xAFCF, Name: aZnss6appenderk, Type: Unknown
2025-03-08 21:19:33,599 - my_text.py:107  -   Address: 0xAFE1, Name: aZnss6assignerk, Type: Unknown
2025-03-08 21:19:33,599 - my_text.py:107  -   Address: 0xAFF3, Name: aZnss4Rep10MDes, Type: Unknown
2025-03-08 21:19:33,599 - my_text.py:107  -   Address: 0xB012, Name: aZnssd1ev, Type: Unknown
2025-03-08 21:19:33,599 - my_text.py:107  -   Address: 0xB01C, Name: aZnssc1erkss, Type: Unknown
2025-03-08 21:19:33,599 - my_text.py:107  -   Address: 0xB029, Name: aZnssc1epkcrksa, Type: Unknown
2025-03-08 21:19:33,599 - my_text.py:107  -   Address: 0xB03C, Name: aZ11inttostring, Type: Unknown
2025-03-08 21:19:33,599 - my_text.py:107  -   Address: 0xB04D, Name: aZ12timetostrin, Type: Unknown
2025-03-08 21:19:33,599 - my_text.py:107  -   Address: 0xB05F, Name: aStrftime, Type: Unknown
2025-03-08 21:19:33,600 - my_text.py:107  -   Address: 0xB068, Name: aZ17ipaddressto, Type: Unknown
2025-03-08 21:19:33,600 - my_text.py:107  -   Address: 0xB07F, Name: aStrlen, Type: Unknown
2025-03-08 21:19:33,600 - my_text.py:107  -   Address: 0xB086, Name: aZ10errclitexti, Type: Unknown
2025-03-08 21:19:33,600 - my_text.py:107  -   Address: 0xB096, Name: aZ10errsrvtexti, Type: Unknown
2025-03-08 21:19:33,600 - my_text.py:107  -   Address: 0xB0A6, Name: aZ10errpartexti, Type: Unknown
2025-03-08 21:19:33,600 - my_text.py:107  -   Address: 0xB0B6, Name: aZ10evtsrvtextr, Type: Unknown
2025-03-08 21:19:33,600 - my_text.py:107  -   Address: 0xB0D0, Name: aZtv17tsnap7mic, Type: Unknown
2025-03-08 21:19:33,600 - my_text.py:107  -   Address: 0xB0E8, Name: aZn17tsnap7micr_7, Type: Unknown
2025-03-08 21:19:33,600 - my_text.py:107  -   Address: 0xB103, Name: aZn17tsnap7micr_8, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB11E, Name: aZn17tsnap7micr_9, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB139, Name: aZn17tsnap7micr_10, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB166, Name: aZn17tsnap7micr_11, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB18A, Name: aZn17tsnap7micr_12, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB1AC, Name: aZn17tsnap7micr_13, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB1CF, Name: aZn17tsnap7micr_14, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB1F2, Name: aZn17tsnap7micr_15, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB215, Name: aZn17tsnap7micr_16, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB23D, Name: aZn17tsnap7micr_17, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB266, Name: aZn17tsnap7micr_18, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB28F, Name: aZn17tsnap7micr_19, Type: Unknown
2025-03-08 21:19:33,601 - my_text.py:107  -   Address: 0xB2B4, Name: aZn17tsnap7micr_20, Type: Unknown
2025-03-08 21:19:33,602 - my_text.py:107  -   Address: 0xB2D6, Name: aZn17tsnap7micr_21, Type: Unknown
2025-03-08 21:19:33,602 - my_text.py:107  -   Address: 0xB300, Name: aZn17tsnap7micr_22, Type: Unknown
2025-03-08 21:19:33,602 - my_text.py:107  -   Address: 0xB328, Name: aZn17tsnap7micr_23, Type: Unknown
2025-03-08 21:19:33,602 - my_text.py:107  -   Address: 0xB350, Name: aZn17tsnap7micr_24, Type: Unknown
2025-03-08 21:19:33,602 - my_text.py:107  -   Address: 0xB378, Name: aZn17tsnap7micr_25, Type: Unknown
2025-03-08 21:19:33,602 - my_text.py:107  -   Address: 0xB39B, Name: aZn17tsnap7micr_26, Type: Unknown
2025-03-08 21:19:33,602 - my_text.py:107  -   Address: 0xB3C5, Name: aZn17tsnap7micr_27, Type: Unknown
2025-03-08 21:19:33,603 - my_text.py:107  -   Address: 0xB3EE, Name: aZn17tsnap7micr_28, Type: Unknown
2025-03-08 21:19:33,603 - my_text.py:107  -   Address: 0xB415, Name: aZn17tsnap7micr_29, Type: Unknown
2025-03-08 21:19:33,603 - my_text.py:107  -   Address: 0xB43E, Name: aZn17tsnap7micr_30, Type: Unknown
2025-03-08 21:19:33,603 - my_text.py:107  -   Address: 0xB466, Name: aZn17tsnap7micr_31, Type: Unknown
2025-03-08 21:19:33,603 - my_text.py:107  -   Address: 0xB488, Name: aZn17tsnap7micr_32, Type: Unknown
2025-03-08 21:19:33,603 - my_text.py:107  -   Address: 0xB4B0, Name: aZn17tsnap7micr_33, Type: Unknown
2025-03-08 21:19:33,603 - my_text.py:107  -   Address: 0xB4D7, Name: aZn17tsnap7micr_34, Type: Unknown
2025-03-08 21:19:33,603 - my_text.py:107  -   Address: 0xB501, Name: aZn17tsnap7micr_35, Type: Unknown
2025-03-08 21:19:33,603 - my_text.py:107  -   Address: 0xB52C, Name: aZn17tsnap7micr_36, Type: Unknown
2025-03-08 21:19:33,603 - my_text.py:107  -   Address: 0xB552, Name: aZn17tsnap7micr_37, Type: Unknown
2025-03-08 21:19:33,603 - my_text.py:107  -   Address: 0xB574, Name: aZn17tsnap7micr_38, Type: Unknown
2025-03-08 21:19:33,604 - my_text.py:107  -   Address: 0xB599, Name: aZn17tsnap7micr_39, Type: Unknown
2025-03-08 21:19:33,604 - my_text.py:107  -   Address: 0xB5BA, Name: aZn17tsnap7micr_40, Type: Unknown
2025-03-08 21:19:33,604 - my_text.py:107  -   Address: 0xB5DC, Name: aZn17tsnap7micr_41, Type: Unknown
2025-03-08 21:19:33,604 - my_text.py:107  -   Address: 0xB602, Name: aZn17tsnap7micr_42, Type: Unknown
2025-03-08 21:19:33,604 - my_text.py:107  -   Address: 0xB62B, Name: aZn17tsnap7micr_43, Type: Unknown
2025-03-08 21:19:33,604 - my_text.py:107  -   Address: 0xB655, Name: aZn17tsnap7micr_44, Type: Unknown
2025-03-08 21:19:33,604 - my_text.py:107  -   Address: 0xB67A, Name: aZn17tsnap7micr_45, Type: Unknown
2025-03-08 21:19:33,604 - my_text.py:107  -   Address: 0xB699, Name: aZn17tsnap7micr_46, Type: Unknown
2025-03-08 21:19:33,605 - my_text.py:107  -   Address: 0xB6C5, Name: aZn17tsnap7micr_47, Type: Unknown
2025-03-08 21:19:33,605 - my_text.py:107  -   Address: 0xB6F7, Name: aZn17tsnap7micr_48, Type: Unknown
2025-03-08 21:19:33,605 - my_text.py:107  -   Address: 0xB71E, Name: aZn17tsnap7micr_49, Type: Unknown
2025-03-08 21:19:33,605 - my_text.py:107  -   Address: 0xB746, Name: aZn17tsnap7micr_50, Type: Unknown
2025-03-08 21:19:33,605 - my_text.py:107  -   Address: 0xB76F, Name: aZn17tsnap7micr_51, Type: Unknown
2025-03-08 21:19:33,606 - my_text.py:107  -   Address: 0xB7A5, Name: aZn17tsnap7micr_52, Type: Unknown
2025-03-08 21:19:33,606 - my_text.py:107  -   Address: 0xB7DC, Name: aZn17tsnap7micr_53, Type: Unknown
2025-03-08 21:19:33,606 - my_text.py:107  -   Address: 0xB800, Name: aZn17tsnap7micr_54, Type: Unknown
2025-03-08 21:19:33,606 - my_text.py:107  -   Address: 0xB825, Name: aZn17tsnap7micr_55, Type: Unknown
2025-03-08 21:19:33,606 - my_text.py:107  -   Address: 0xB848, Name: aZn17tsnap7micr_56, Type: Unknown
2025-03-08 21:19:33,606 - my_text.py:107  -   Address: 0xB86C, Name: aZn17tsnap7micr_57, Type: Unknown
2025-03-08 21:19:33,606 - my_text.py:107  -   Address: 0xB88F, Name: aZn17tsnap7micr_58, Type: Unknown
2025-03-08 21:19:33,607 - my_text.py:107  -   Address: 0xB8B3, Name: aZn17tsnap7micr_59, Type: Unknown
2025-03-08 21:19:33,607 - my_text.py:107  -   Address: 0xB8D6, Name: aZn17tsnap7micr_60, Type: Unknown
2025-03-08 21:19:33,607 - my_text.py:107  -   Address: 0xB8FA, Name: aZn17tsnap7micr_61, Type: Unknown
2025-03-08 21:19:33,607 - my_text.py:107  -   Address: 0xB91D, Name: aZn17tsnap7micr_62, Type: Unknown
2025-03-08 21:19:33,607 - my_text.py:107  -   Address: 0xB941, Name: aZn17tsnap7micr_63, Type: Unknown
2025-03-08 21:19:33,607 - my_text.py:107  -   Address: 0xB964, Name: aZn17tsnap7micr_64, Type: Unknown
2025-03-08 21:19:33,607 - my_text.py:107  -   Address: 0xB988, Name: aZn17tsnap7micr_65, Type: Unknown
2025-03-08 21:19:33,608 - my_text.py:107  -   Address: 0xB9BC, Name: aZn17tsnap7micr_66, Type: Unknown
2025-03-08 21:19:33,608 - my_text.py:107  -   Address: 0xB9F5, Name: aZn17tsnap7micr_67, Type: Unknown
2025-03-08 21:19:33,608 - my_text.py:107  -   Address: 0xBA2F, Name: aZn17tsnap7micr_68, Type: Unknown
2025-03-08 21:19:33,608 - my_text.py:107  -   Address: 0xBA64, Name: aZn17tsnap7micr_69, Type: Unknown
2025-03-08 21:19:33,608 - my_text.py:107  -   Address: 0xBA89, Name: aZn17tsnap7micr_70, Type: Unknown
2025-03-08 21:19:33,608 - my_text.py:107  -   Address: 0xBAB3, Name: aZn17tsnap7micr_71, Type: Unknown
2025-03-08 21:19:33,608 - my_text.py:107  -   Address: 0xBAD8, Name: aZn17tsnap7micr_72, Type: Unknown
2025-03-08 21:19:33,608 - my_text.py:107  -   Address: 0xBAF9, Name: aZn17tsnap7micr_73, Type: Unknown
2025-03-08 21:19:33,609 - my_text.py:107  -   Address: 0xBB1C, Name: aZn17tsnap7micr_74, Type: Unknown
2025-03-08 21:19:33,609 - my_text.py:107  -   Address: 0xBB3D, Name: aZn17tsnap7micr_75, Type: Unknown
2025-03-08 21:19:33,609 - my_text.py:107  -   Address: 0xBB69, Name: aZn17tsnap7micr_76, Type: Unknown
2025-03-08 21:19:33,609 - my_text.py:107  -   Address: 0xBB95, Name: aZn17tsnap7micr_77, Type: Unknown
2025-03-08 21:19:33,609 - my_text.py:107  -   Address: 0xBBC4, Name: aZn17tsnap7micr_78, Type: Unknown
2025-03-08 21:19:33,609 - my_text.py:107  -   Address: 0xBBF9, Name: aZn17tsnap7micr_79, Type: Unknown
2025-03-08 21:19:33,610 - my_text.py:107  -   Address: 0xBC2A, Name: aZn17tsnap7micr_80, Type: Unknown
2025-03-08 21:19:33,610 - my_text.py:107  -   Address: 0xBC57, Name: aZn17tsnap7micr_81, Type: Unknown
2025-03-08 21:19:33,610 - my_text.py:107  -   Address: 0xBC83, Name: aZn17tsnap7micr_82, Type: Unknown
2025-03-08 21:19:33,610 - my_text.py:107  -   Address: 0xBCB7, Name: aZn17tsnap7micr_83, Type: Unknown
2025-03-08 21:19:33,610 - my_text.py:107  -   Address: 0xBCDD, Name: aZn17tsnap7micr_84, Type: Unknown
2025-03-08 21:19:33,610 - my_text.py:107  -   Address: 0xBD04, Name: aZn17tsnap7micr_85, Type: Unknown
2025-03-08 21:19:33,610 - my_text.py:107  -   Address: 0xBD25, Name: aZn17tsnap7micr_86, Type: Unknown
2025-03-08 21:19:33,610 - my_text.py:107  -   Address: 0xBD4C, Name: aZn17tsnap7micr_87, Type: Unknown
2025-03-08 21:19:33,610 - my_text.py:107  -   Address: 0xBD6E, Name: aZn17tsnap7micr_88, Type: Unknown
2025-03-08 21:19:33,611 - my_text.py:107  -   Address: 0xBD96, Name: aZn17tsnap7micr_89, Type: Unknown
2025-03-08 21:19:33,611 - my_text.py:107  -   Address: 0xBDCD, Name: aZn17tsnap7micr_90, Type: Unknown
2025-03-08 21:19:33,611 - my_text.py:107  -   Address: 0xBDFB, Name: aZn17tsnap7micr_91, Type: Unknown
2025-03-08 21:19:33,611 - my_text.py:107  -   Address: 0xBE2A, Name: aZts17tsnap7mic, Type: Unknown
2025-03-08 21:19:33,611 - my_text.py:107  -   Address: 0xBE42, Name: aZ7libinitv, Type: Unknown
2025-03-08 21:19:33,611 - my_text.py:107  -   Address: 0xBE4E, Name: aZ7libdonev, Type: Unknown
2025-03-08 21:19:33,611 - my_text.py:107  -   Address: 0xBE5A, Name: aCliCreate, Type: Unknown
2025-03-08 21:19:33,611 - my_text.py:107  -   Address: 0xBE65, Name: aCliDestroy, Type: Unknown
2025-03-08 21:19:33,611 - my_text.py:107  -   Address: 0xBE71, Name: aCliSetconnecti, Type: Unknown
2025-03-08 21:19:33,611 - my_text.py:107  -   Address: 0xBE89, Name: aCliSetconnecti_0, Type: Unknown
2025-03-08 21:19:33,611 - my_text.py:107  -   Address: 0xBE9F, Name: aCliConnectto, Type: Unknown
2025-03-08 21:19:33,612 - my_text.py:107  -   Address: 0xBEAD, Name: aCliConnect, Type: Unknown
2025-03-08 21:19:33,612 - my_text.py:107  -   Address: 0xBEB9, Name: aCliDisconnect, Type: Unknown
2025-03-08 21:19:33,612 - my_text.py:107  -   Address: 0xBEC8, Name: aCliGetparam, Type: Unknown
2025-03-08 21:19:33,612 - my_text.py:107  -   Address: 0xBED5, Name: aCliSetparam, Type: Unknown
2025-03-08 21:19:33,612 - my_text.py:107  -   Address: 0xBEE2, Name: aCliSetascallba, Type: Unknown
2025-03-08 21:19:33,612 - my_text.py:107  -   Address: 0xBEF4, Name: aCliReadarea, Type: Unknown
2025-03-08 21:19:33,612 - my_text.py:107  -   Address: 0xBF01, Name: aCliWritearea, Type: Unknown
2025-03-08 21:19:33,613 - my_text.py:107  -   Address: 0xBF0F, Name: aCliReadmultiva, Type: Unknown
2025-03-08 21:19:33,613 - my_text.py:107  -   Address: 0xBF21, Name: aCliWritemultiv, Type: Unknown
2025-03-08 21:19:33,613 - my_text.py:107  -   Address: 0xBF34, Name: aCliDbread, Type: Unknown
2025-03-08 21:19:33,613 - my_text.py:107  -   Address: 0xBF3F, Name: aCliDbwrite, Type: Unknown
2025-03-08 21:19:33,613 - my_text.py:107  -   Address: 0xBF4B, Name: aCliMbread, Type: Unknown
2025-03-08 21:19:33,613 - my_text.py:107  -   Address: 0xBF56, Name: aCliMbwrite, Type: Unknown
2025-03-08 21:19:33,613 - my_text.py:107  -   Address: 0xBF62, Name: aCliEbread, Type: Unknown
2025-03-08 21:19:33,613 - my_text.py:107  -   Address: 0xBF6D, Name: aCliEbwrite, Type: Unknown
2025-03-08 21:19:33,613 - my_text.py:107  -   Address: 0xBF79, Name: aCliAbread, Type: Unknown
2025-03-08 21:19:33,614 - my_text.py:107  -   Address: 0xBF84, Name: aCliAbwrite, Type: Unknown
2025-03-08 21:19:33,614 - my_text.py:107  -   Address: 0xBF90, Name: aCliTmread, Type: Unknown
2025-03-08 21:19:33,614 - my_text.py:107  -   Address: 0xBF9B, Name: aCliTmwrite, Type: Unknown
2025-03-08 21:19:33,614 - my_text.py:107  -   Address: 0xBFA7, Name: aCliCtread, Type: Unknown
2025-03-08 21:19:33,614 - my_text.py:107  -   Address: 0xBFB2, Name: aCliCtwrite, Type: Unknown
2025-03-08 21:19:33,614 - my_text.py:107  -   Address: 0xBFBE, Name: aCliListblocks, Type: Unknown
2025-03-08 21:19:33,614 - my_text.py:107  -   Address: 0xBFCD, Name: aCliGetagblocki, Type: Unknown
2025-03-08 21:19:33,614 - my_text.py:107  -   Address: 0xBFE0, Name: aCliGetpgblocki, Type: Unknown
2025-03-08 21:19:33,614 - my_text.py:107  -   Address: 0xBFF3, Name: aCliListblockso, Type: Unknown
2025-03-08 21:19:33,614 - my_text.py:107  -   Address: 0xC008, Name: aCliUpload, Type: Unknown
2025-03-08 21:19:33,614 - my_text.py:107  -   Address: 0xC013, Name: aCliFullupload, Type: Unknown
2025-03-08 21:19:33,615 - my_text.py:107  -   Address: 0xC022, Name: aCliDownload, Type: Unknown
2025-03-08 21:19:33,615 - my_text.py:107  -   Address: 0xC02F, Name: aCliDelete, Type: Unknown
2025-03-08 21:19:33,615 - my_text.py:107  -   Address: 0xC03A, Name: aCliDbget, Type: Unknown
2025-03-08 21:19:33,615 - my_text.py:107  -   Address: 0xC044, Name: aCliDbfill, Type: Unknown
2025-03-08 21:19:33,615 - my_text.py:107  -   Address: 0xC04F, Name: aCliGetplcdatet, Type: Unknown
2025-03-08 21:19:33,615 - my_text.py:107  -   Address: 0xC062, Name: aCliSetplcdatet, Type: Unknown
2025-03-08 21:19:33,615 - my_text.py:107  -   Address: 0xC075, Name: aCliSetplcsyste, Type: Unknown
2025-03-08 21:19:33,615 - my_text.py:107  -   Address: 0xC08E, Name: aCliGetordercod, Type: Unknown
2025-03-08 21:19:33,616 - my_text.py:107  -   Address: 0xC09F, Name: aCliGetcpuinfo, Type: Unknown
2025-03-08 21:19:33,616 - my_text.py:107  -   Address: 0xC0AE, Name: aCliGetcpinfo, Type: Unknown
2025-03-08 21:19:33,616 - my_text.py:107  -   Address: 0xC0BC, Name: aCliReadszl, Type: Unknown
2025-03-08 21:19:33,616 - my_text.py:107  -   Address: 0xC0C8, Name: aCliReadszllist, Type: Unknown
2025-03-08 21:19:33,616 - my_text.py:107  -   Address: 0xC0D8, Name: aCliPlchotstart, Type: Unknown
2025-03-08 21:19:33,616 - my_text.py:107  -   Address: 0xC0E8, Name: aCliPlccoldstar, Type: Unknown
2025-03-08 21:19:33,616 - my_text.py:107  -   Address: 0xC0F9, Name: aCliPlcstop, Type: Unknown
2025-03-08 21:19:33,616 - my_text.py:107  -   Address: 0xC105, Name: aCliCopyramtoro, Type: Unknown
2025-03-08 21:19:33,616 - my_text.py:107  -   Address: 0xC116, Name: aCliCompress, Type: Unknown
2025-03-08 21:19:33,617 - my_text.py:107  -   Address: 0xC123, Name: aCliGetplcstatu, Type: Unknown
2025-03-08 21:19:33,617 - my_text.py:107  -   Address: 0xC134, Name: aCliGetprotecti, Type: Unknown
2025-03-08 21:19:33,617 - my_text.py:107  -   Address: 0xC146, Name: aCliSetsessionp, Type: Unknown
2025-03-08 21:19:33,617 - my_text.py:107  -   Address: 0xC15D, Name: aCliClearsessio, Type: Unknown
2025-03-08 21:19:33,617 - my_text.py:107  -   Address: 0xC176, Name: aCliIsoexchange, Type: Unknown
2025-03-08 21:19:33,617 - my_text.py:107  -   Address: 0xC18C, Name: aCliGetexectime, Type: Unknown
2025-03-08 21:19:33,618 - my_text.py:107  -   Address: 0xC19C, Name: aCliGetlasterro, Type: Unknown
2025-03-08 21:19:33,618 - my_text.py:107  -   Address: 0xC1AD, Name: aCliGetpdulengt, Type: Unknown
2025-03-08 21:19:33,618 - my_text.py:107  -   Address: 0xC1BE, Name: aCliErrortext, Type: Unknown
2025-03-08 21:19:33,618 - my_text.py:107  -   Address: 0xC1CC, Name: aCliGetconnecte, Type: Unknown
2025-03-08 21:19:33,619 - my_text.py:107  -   Address: 0xC1DD, Name: aCliAsreadarea, Type: Unknown
2025-03-08 21:19:33,619 - my_text.py:107  -   Address: 0xC1EC, Name: aCliAswritearea, Type: Unknown
2025-03-08 21:19:33,619 - my_text.py:107  -   Address: 0xC1FC, Name: aCliAsdbread, Type: Unknown
2025-03-08 21:19:33,619 - my_text.py:107  -   Address: 0xC209, Name: aCliAsdbwrite, Type: Unknown
2025-03-08 21:19:33,619 - my_text.py:107  -   Address: 0xC217, Name: aCliAsmbread, Type: Unknown
2025-03-08 21:19:33,619 - my_text.py:107  -   Address: 0xC224, Name: aCliAsmbwrite, Type: Unknown
2025-03-08 21:19:33,619 - my_text.py:107  -   Address: 0xC232, Name: aCliAsebread, Type: Unknown
2025-03-08 21:19:33,619 - my_text.py:107  -   Address: 0xC23F, Name: aCliAsebwrite, Type: Unknown
2025-03-08 21:19:33,619 - my_text.py:107  -   Address: 0xC24D, Name: aCliAsabread, Type: Unknown
2025-03-08 21:19:33,620 - my_text.py:107  -   Address: 0xC25A, Name: aCliAsabwrite, Type: Unknown
2025-03-08 21:19:33,620 - my_text.py:107  -   Address: 0xC268, Name: aCliAstmread, Type: Unknown
2025-03-08 21:19:33,620 - my_text.py:107  -   Address: 0xC275, Name: aCliAstmwrite, Type: Unknown
2025-03-08 21:19:33,620 - my_text.py:107  -   Address: 0xC283, Name: aCliAsctread, Type: Unknown
2025-03-08 21:19:33,620 - my_text.py:107  -   Address: 0xC290, Name: aCliAsctwrite, Type: Unknown
2025-03-08 21:19:33,620 - my_text.py:107  -   Address: 0xC29E, Name: aCliAslistblock, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC2B5, Name: aCliAsreadszl, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC2C3, Name: aCliAsreadszlli, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC2D5, Name: aCliAsupload, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC2E2, Name: aCliAsfulluploa, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC2F3, Name: aCliAsdownload, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC302, Name: aCliAscopyramto, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC315, Name: aCliAscompress, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC324, Name: aCliAsdbget, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC330, Name: aCliAsdbfill, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC33D, Name: aCliCheckascomp, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC353, Name: aCliWaitascompl, Type: Unknown
2025-03-08 21:19:33,621 - my_text.py:107  -   Address: 0xC368, Name: aSrvCreate, Type: Unknown
2025-03-08 21:19:33,622 - my_text.py:107  -   Address: 0xC373, Name: aSrvDestroy, Type: Unknown
2025-03-08 21:19:33,622 - my_text.py:107  -   Address: 0xC37F, Name: aSrvGetparam, Type: Unknown
2025-03-08 21:19:33,622 - my_text.py:107  -   Address: 0xC38C, Name: aSrvSetparam, Type: Unknown
2025-03-08 21:19:33,622 - my_text.py:107  -   Address: 0xC399, Name: aSrvStartto, Type: Unknown
2025-03-08 21:19:33,622 - my_text.py:107  -   Address: 0xC3A5, Name: aSrvStart, Type: Unknown
2025-03-08 21:19:33,622 - my_text.py:107  -   Address: 0xC3AF, Name: aSrvStop, Type: Unknown
2025-03-08 21:19:33,622 - my_text.py:107  -   Address: 0xC3B8, Name: aSrvRegisterare, Type: Unknown
2025-03-08 21:19:33,622 - my_text.py:107  -   Address: 0xC3C9, Name: aSrvUnregistera, Type: Unknown
2025-03-08 21:19:33,622 - my_text.py:107  -   Address: 0xC3DC, Name: aSrvLockarea, Type: Unknown
2025-03-08 21:19:33,623 - my_text.py:107  -   Address: 0xC3E9, Name: aSrvUnlockarea, Type: Unknown
2025-03-08 21:19:33,623 - my_text.py:107  -   Address: 0xC3F8, Name: aSrvGetstatus, Type: Unknown
2025-03-08 21:19:33,623 - my_text.py:107  -   Address: 0xC406, Name: aSrvSetcpustatu, Type: Unknown
2025-03-08 21:19:33,623 - my_text.py:107  -   Address: 0xC417, Name: aSrvErrortext, Type: Unknown
2025-03-08 21:19:33,623 - my_text.py:107  -   Address: 0xC425, Name: aSrvEventtext, Type: Unknown
2025-03-08 21:19:33,624 - my_text.py:107  -   Address: 0xC433, Name: aSrvPickevent, Type: Unknown
2025-03-08 21:19:33,624 - my_text.py:107  -   Address: 0xC441, Name: aSrvClearevents, Type: Unknown
2025-03-08 21:19:33,624 - my_text.py:107  -   Address: 0xC451, Name: aSrvGetmask, Type: Unknown
2025-03-08 21:19:33,624 - my_text.py:107  -   Address: 0xC45D, Name: aSrvSetmask, Type: Unknown
2025-03-08 21:19:33,624 - my_text.py:107  -   Address: 0xC469, Name: aSrvSeteventsca, Type: Unknown
2025-03-08 21:19:33,624 - my_text.py:107  -   Address: 0xC47F, Name: aSrvSetreadeven, Type: Unknown
2025-03-08 21:19:33,624 - my_text.py:107  -   Address: 0xC499, Name: aSrvSetrwareaca, Type: Unknown
2025-03-08 21:19:33,624 - my_text.py:107  -   Address: 0xC4AF, Name: aParCreate, Type: Unknown
2025-03-08 21:19:33,625 - my_text.py:107  -   Address: 0xC4BA, Name: aParDestroy, Type: Unknown
2025-03-08 21:19:33,625 - my_text.py:107  -   Address: 0xC4C6, Name: aParGetparam, Type: Unknown
2025-03-08 21:19:33,625 - my_text.py:107  -   Address: 0xC4D3, Name: aParSetparam, Type: Unknown
2025-03-08 21:19:33,625 - my_text.py:107  -   Address: 0xC4E0, Name: aParStartto, Type: Unknown
2025-03-08 21:19:33,625 - my_text.py:107  -   Address: 0xC4EC, Name: aParStart, Type: Unknown
2025-03-08 21:19:33,625 - my_text.py:107  -   Address: 0xC4F6, Name: aParStop, Type: Unknown
2025-03-08 21:19:33,625 - my_text.py:107  -   Address: 0xC4FF, Name: aParBsend, Type: Unknown
2025-03-08 21:19:33,625 - my_text.py:107  -   Address: 0xC509, Name: aParAsbsend, Type: Unknown
2025-03-08 21:19:33,625 - my_text.py:107  -   Address: 0xC515, Name: aParCheckasbsen, Type: Unknown
2025-03-08 21:19:33,625 - my_text.py:107  -   Address: 0xC530, Name: aParWaitasbsend, Type: Unknown
2025-03-08 21:19:33,626 - my_text.py:107  -   Address: 0xC54A, Name: aParSetsendcall, Type: Unknown
2025-03-08 21:19:33,626 - my_text.py:107  -   Address: 0xC55E, Name: aParBrecv, Type: Unknown
2025-03-08 21:19:33,626 - my_text.py:107  -   Address: 0xC568, Name: aParCheckasbrec, Type: Unknown
2025-03-08 21:19:33,626 - my_text.py:107  -   Address: 0xC583, Name: aParSetrecvcall, Type: Unknown
2025-03-08 21:19:33,626 - my_text.py:107  -   Address: 0xC597, Name: aParGettimes, Type: Unknown
2025-03-08 21:19:33,626 - my_text.py:107  -   Address: 0xC5A4, Name: aParGetstats, Type: Unknown
2025-03-08 21:19:33,626 - my_text.py:107  -   Address: 0xC5B1, Name: aParGetlasterro, Type: Unknown
2025-03-08 21:19:33,626 - my_text.py:107  -   Address: 0xC5C2, Name: aParGetstatus, Type: Unknown
2025-03-08 21:19:33,627 - my_text.py:107  -   Address: 0xC5D0, Name: aParErrortext, Type: Unknown
2025-03-08 21:19:33,627 - my_text.py:107  -   Address: 0xC5DE, Name: aLibpthreadSo0, Type: Unknown
2025-03-08 21:19:33,627 - my_text.py:107  -   Address: 0xC5EE, Name: aLibrtSo1, Type: Unknown
2025-03-08 21:19:33,627 - my_text.py:107  -   Address: 0xC5F9, Name: aLibstdcSo6, Type: Unknown
2025-03-08 21:19:33,627 - my_text.py:107  -   Address: 0xC608, Name: aLibgccSSo1, Type: Unknown
2025-03-08 21:19:33,627 - my_text.py:107  -   Address: 0xC616, Name: aLibcSo6, Type: Unknown
2025-03-08 21:19:33,627 - my_text.py:107  -   Address: 0xC620, Name: aEdata, Type: Unknown
2025-03-08 21:19:33,627 - my_text.py:107  -   Address: 0xC627, Name: aBssStart, Type: Unknown
2025-03-08 21:19:33,627 - my_text.py:107  -   Address: 0xC633, Name: aEnd, Type: Unknown
2025-03-08 21:19:33,627 - my_text.py:107  -   Address: 0xC638, Name: aGlibc225, Type: Unknown
2025-03-08 21:19:33,627 - my_text.py:107  -   Address: 0xC644, Name: aGcc30, Type: Unknown
2025-03-08 21:19:33,628 - my_text.py:107  -   Address: 0xC64C, Name: aGlibc215, Type: Unknown
2025-03-08 21:19:33,628 - my_text.py:107  -   Address: 0xC657, Name: aGlibc214, Type: Unknown
2025-03-08 21:19:33,628 - my_text.py:107  -   Address: 0xC662, Name: aGlibc24, Type: Unknown
2025-03-08 21:19:33,628 - my_text.py:107  -   Address: 0xC66C, Name: aGlibc234, Type: Unknown
2025-03-08 21:19:33,628 - my_text.py:107  -   Address: 0xC678, Name: aGlibc232, Type: Unknown
2025-03-08 21:19:33,628 - my_text.py:107  -   Address: 0xC684, Name: aCxxabi13, Type: Unknown
2025-03-08 21:19:33,628 - my_text.py:107  -   Address: 0xC68F, Name: aGlibcxx34, Type: Unknown
2025-03-08 21:19:33,628 - my_text.py:107  -   Address: 0x11710, Name: .init_proc, Type: Unknown
2025-03-08 21:19:33,628 - my_text.py:107  -   Address: 0x11740, Name: ._ZN9TS7Worker22PerformFunctionControlEh, Type: None
2025-03-08 21:19:33,629 - my_text.py:107  -   Address: 0x11750, Name: ._ZN11TSnapThread9TerminateEv, Type: None
2025-03-08 21:19:33,629 - my_text.py:107  -   Address: 0x11760, Name: ._ZN17TSnap7MicroClient14GetPgBlockInfoEPvP12TS7BlockInfoi, Type: None
2025-03-08 21:19:33,629 - my_text.py:107  -   Address: 0x11770, Name: ._ZN12TSnap7Server10DoReadAreaEiiiiiiPv, Type: None
2025-03-08 21:19:33,629 - my_text.py:107  -   Address: 0x11780, Name: ._ZNSs6appendEPKcm, Type: None
2025-03-08 21:19:33,629 - my_text.py:107  -   Address: 0x11790, Name: ._ZN17TSnap7MicroClient7MBWriteEiiPv, Type: None
2025-03-08 21:19:33,629 - my_text.py:107  -   Address: 0x117A0, Name: ._ZN17TSnap7MicroClient18SetSessionPasswordEPc, Type: None
2025-03-08 21:19:33,630 - my_text.py:107  -   Address: 0x117B0, Name: .pthread_setcancelstate, Type: None
2025-03-08 21:19:33,630 - my_text.py:107  -   Address: 0x117C0, Name: ._ZN17TSnap7MicroClient9GetCpInfoEP9TS7CpInfo, Type: Unknown
2025-03-08 21:19:33,630 - my_text.py:107  -   Address: 0x117D0, Name: ._ZN17TSnap7MicroClient10FullUploadEiiPvRi, Type: None
2025-03-08 21:19:33,630 - my_text.py:107  -   Address: 0x117E0, Name: ._ZN9TS7Worker20PerformFunctionWriteEv, Type: None
2025-03-08 21:19:33,630 - my_text.py:107  -   Address: 0x117F0, Name: ._ZN12TSnap7Server10DisposeAllEv, Type: None
2025-03-08 21:19:33,630 - my_text.py:107  -   Address: 0x11800, Name: ._ZN12TSnap7Client8AsDBReadEiiiPv, Type: None
2025-03-08 21:19:33,630 - my_text.py:107  -   Address: 0x11810, Name: ._ZN17TSnap7MicroClient10opDownloadEv, Type: None
2025-03-08 21:19:33,630 - my_text.py:107  -   Address: 0x11820, Name: ._ZN17TSnap7MicroClient13opPlcHotStartEv, Type: None
2025-03-08 21:19:33,630 - my_text.py:107  -   Address: 0x11830, Name: ._ZN9TS7Worker9SZL_ID424Ev, Type: None
2025-03-08 21:19:33,630 - my_text.py:107  -   Address: 0x11840, Name: ._ZN10TMsgSocketC2Ev, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x11850, Name: .pthread_cond_destroy, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x11860, Name: ._ZN17TSnap7MicroClient5DBGetEiPvRi, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x11870, Name: ._ZN17TSnap7MicroClient15opReadMultiVarsEv, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x11880, Name: ._ZN17TSnap7MicroClient6EBReadEiiPv, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x11890, Name: .memset, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x118A0, Name: ._ZN10TMsgSocket6SetSinER11sockaddr_inPct, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x118B0, Name: ._ZN9TS7Worker19PerformFunctionReadEv, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x118C0, Name: ._ZN13TSnap7Partner11GetNextByteEv, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x118D0, Name: .shutdown, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x118E0, Name: ._ZN17TSnap7MicroClient12opListBlocksEv, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x118F0, Name: ._ZN9TS7Worker22PerformGroupProgrammerEv, Type: None
2025-03-08 21:19:33,631 - my_text.py:107  -   Address: 0x11900, Name: ._ZN12TSnap7Client9AsReadSZLEiiP6TS7SZLRi, Type: Unknown
2025-03-08 21:19:33,632 - my_text.py:107  -   Address: 0x11910, Name: ._ZN9TS7Worker22PerformGroupCyclicDataEv, Type: None
2025-03-08 21:19:33,632 - my_text.py:107  -   Address: 0x11920, Name: ._ZN10TMsgSocket10ForceCloseEv, Type: None
2025-03-08 21:19:33,632 - my_text.py:107  -   Address: 0x11930, Name: ._ZN12TSnap7Client13SetAsCallbackEPFvPviiES0_, Type: None
2025-03-08 21:19:33,632 - my_text.py:107  -   Address: 0x11940, Name: .close, Type: None
2025-03-08 21:19:33,632 - my_text.py:107  -   Address: 0x11950, Name: ._ZN9TS7Worker13PerformPDUAckERi, Type: None
2025-03-08 21:19:33,632 - my_text.py:107  -   Address: 0x11960, Name: .ioctl, Type: None
2025-03-08 21:19:33,632 - my_text.py:107  -   Address: 0x11970, Name: ._ZN17TSnap7MicroClient10ListBlocksEP13TS7BlocksList, Type: Unknown
2025-03-08 21:19:33,632 - my_text.py:107  -   Address: 0x11980, Name: ._ZN17TConnectionServer13RemovePartnerEP13TSnap7Partner, Type: None
2025-03-08 21:19:33,632 - my_text.py:107  -   Address: 0x11990, Name: ._ZN17TSnap7MicroClient14GetPlcDateTimeER2tm, Type: None
2025-03-08 21:19:33,632 - my_text.py:107  -   Address: 0x119A0, Name: ._ZN17TSnap7MicroClient6DBReadEiiiPv, Type: None
2025-03-08 21:19:33,633 - my_text.py:107  -   Address: 0x119B0, Name: ._ZN17TSnap7MicroClient20ClearSessionPasswordEv, Type: None
2025-03-08 21:19:33,633 - my_text.py:107  -   Address: 0x119C0, Name: ._ZN9TS7Worker25BLK_NoResource_GetBlkInfoEP17TResDataBlockInfoR3TCB, Type: Unknown
2025-03-08 21:19:33,633 - my_text.py:107  -   Address: 0x119D0, Name: ._ZN17TSnap7MicroClient8opDBFillEv, Type: None
2025-03-08 21:19:33,633 - my_text.py:107  -   Address: 0x119E0, Name: ._ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv, Type: None
2025-03-08 21:19:33,633 - my_text.py:107  -   Address: 0x119F0, Name: ._ZN10TMsgSocket10SendPacketEPvi, Type: None
2025-03-08 21:19:33,633 - my_text.py:107  -   Address: 0x11A00, Name: ._ZN17TSnap7MicroClient10opReadAreaEv, Type: None
2025-03-08 21:19:33,633 - my_text.py:107  -   Address: 0x11A10, Name: ._Z15Msg_CloseSocketi, Type: None
2025-03-08 21:19:33,633 - my_text.py:107  -   Address: 0x11A20, Name: ._ZN16TRawSocketPingerD2Ev, Type: None
2025-03-08 21:19:33,634 - my_text.py:107  -   Address: 0x11A30, Name: ._ZN10TMsgSocketC2Ev_0, Type: None
2025-03-08 21:19:33,634 - my_text.py:107  -   Address: 0x11A40, Name: ._ZN13TSnap7Partner8SetParamEiPv, Type: None
2025-03-08 21:19:33,634 - my_text.py:107  -   Address: 0x11A50, Name: ._ZN13TSnap7Partner5BRecvERjPvRij, Type: None
2025-03-08 21:19:33,634 - my_text.py:107  -   Address: 0x11A60, Name: ._ZN16TCustomMsgServer5StartEv, Type: None
2025-03-08 21:19:33,634 - my_text.py:107  -   Address: 0x11A70, Name: ._ZN16TCustomMsgServer17SetEventsCallBackEPFvPvP9TSrvEventiES0_, Type: Unknown
2025-03-08 21:19:33,634 - my_text.py:107  -   Address: 0x11A80, Name: ._ZN13TSnap7Partner9BlockRecvEv, Type: None
2025-03-08 21:19:33,634 - my_text.py:107  -   Address: 0x11A90, Name: .__gmon_start__, Type: Unknown
2025-03-08 21:19:33,634 - my_text.py:107  -   Address: 0x11AA0, Name: ._ZN7TPinger4PingEPci, Type: None
2025-03-08 21:19:33,634 - my_text.py:107  -   Address: 0x11AB0, Name: ._ZN17TSnap7MicroClient7DWordAtEPv, Type: None
2025-03-08 21:19:33,635 - my_text.py:107  -   Address: 0x11AC0, Name: ._Znam, Type: None
2025-03-08 21:19:33,635 - my_text.py:107  -   Address: 0x11AD0, Name: ._ZN10TSnap7Peer11GetNextWordEv, Type: None
2025-03-08 21:19:33,635 - my_text.py:107  -   Address: 0x11AE0, Name: .pthread_cond_signal, Type: None
2025-03-08 21:19:33,635 - my_text.py:107  -   Address: 0x11AF0, Name: ._ZN9TS7Worker26BLK_DoBlockInfo_GetBlkInfoEP7TS7AreaP17TResDataBlockInfoR3TCB, Type: Unknown
2025-03-08 21:19:33,635 - my_text.py:107  -   Address: 0x11B00, Name: ._ZN16TCustomMsgServerD2Ev, Type: None
2025-03-08 21:19:33,635 - my_text.py:107  -   Address: 0x11B10, Name: ._ZdlPv, Type: None
2025-03-08 21:19:33,636 - my_text.py:107  -   Address: 0x11B20, Name: ._ZN13TSnap7Partner21WaitAsBSendCompletionEj, Type: None
2025-03-08 21:19:33,636 - my_text.py:107  -   Address: 0x11B30, Name: ._ZNSs7reserveEm, Type: None
2025-03-08 21:19:33,636 - my_text.py:107  -   Address: 0x11B40, Name: .select, Type: None
2025-03-08 21:19:33,636 - my_text.py:107  -   Address: 0x11B50, Name: ._ZN12TSnap7Client9AsDBWriteEiiiPv, Type: None
2025-03-08 21:19:33,636 - my_text.py:107  -   Address: 0x11B60, Name: .getpeername, Type: None
2025-03-08 21:19:33,637 - my_text.py:107  -   Address: 0x11B70, Name: ._ZN17TSnap7MicroClientD2Ev, Type: None
2025-03-08 21:19:33,639 - my_text.py:107  -   Address: 0x11B80, Name: ._ZN7TPingerC2Ev, Type: None
2025-03-08 21:19:33,639 - my_text.py:107  -   Address: 0x11B90, Name: ._ZN13TSnap7Partner7StartToEPKcS1_tt, Type: None
2025-03-08 21:19:33,640 - my_text.py:107  -   Address: 0x11BA0, Name: ._ZN17TSnap7MicroClient13ReadMultiVarsEP11TS7DataItemi, Type: Unknown
2025-03-08 21:19:33,640 - my_text.py:107  -   Address: 0x11BB0, Name: ._ZN17TSnap7MicroClient6DBFillEii, Type: None
2025-03-08 21:19:33,640 - my_text.py:107  -   Address: 0x11BC0, Name: ._ZN17TSnap7MicroClient12CopyRamToRomEi, Type: None
2025-03-08 21:19:33,640 - my_text.py:107  -   Address: 0x11BD0, Name: ._ZN10TMsgSocket11WaitingDataEv, Type: None
2025-03-08 21:19:33,640 - my_text.py:107  -   Address: 0x11BE0, Name: ._ZN12TSnap7Client13AsReadSZLListEP10TS7SZLListRi, Type: Unknown
2025-03-08 21:19:33,640 - my_text.py:107  -   Address: 0x11BF0, Name: ._ZN17TSnap7MicroClient6MBReadEiiPv, Type: None
2025-03-08 21:19:33,640 - my_text.py:107  -   Address: 0x11C00, Name: .gettimeofday, Type: None
2025-03-08 21:19:33,640 - my_text.py:107  -   Address: 0x11C10, Name: ._ZN17TSnap7MicroClient20SetPlcSystemDateTimeEv, Type: None
2025-03-08 21:19:33,640 - my_text.py:107  -   Address: 0x11C20, Name: ._ZN10TSnap7PeerD2Ev, Type: None
2025-03-08 21:19:33,640 - my_text.py:107  -   Address: 0x11C30, Name: ._ZN12TSnap7Server6FindDBEt, Type: None
2025-03-08 21:19:33,641 - my_text.py:107  -   Address: 0x11C40, Name: ._ZN9TS7Worker23PerformFunctionDownloadEv, Type: None
2025-03-08 21:19:33,641 - my_text.py:107  -   Address: 0x11C50, Name: ._ZN12TSnap7Server12RegisterAreaEitPvt, Type: None
2025-03-08 21:19:33,641 - my_text.py:107  -   Address: 0x11C60, Name: ._ZN16TRawSocketPinger4PingEji, Type: None
2025-03-08 21:19:33,641 - my_text.py:107  -   Address: 0x11C70, Name: ._ZN9TS7Worker7SZLDataEPvi, Type: None
2025-03-08 21:19:33,641 - my_text.py:107  -   Address: 0x11C80, Name: ._ZN13TSnap7Partner9ClearRecvEv, Type: None
2025-03-08 21:19:33,641 - my_text.py:107  -   Address: 0x11C90, Name: ._ZN13TIsoTcpSocket17isoExchangeBufferEPvRi, Type: None
2025-03-08 21:19:33,642 - my_text.py:107  -   Address: 0x11CA0, Name: ._ZN9TS7Worker11WA_NotFoundER3TEv, Type: None
2025-03-08 21:19:33,642 - my_text.py:107  -   Address: 0x11CB0, Name: ._ZN9TSnapBase9SwapDWordEj, Type: None
2025-03-08 21:19:33,642 - my_text.py:107  -   Address: 0x11CC0, Name: .recv, Type: None
2025-03-08 21:19:33,642 - my_text.py:107  -   Address: 0x11CD0, Name: ._ZN15TServersManagerD2Ev, Type: None
2025-03-08 21:19:33,642 - my_text.py:107  -   Address: 0x11CE0, Name: ._ZN9TS7Worker11CheckPDU_inEi, Type: None
2025-03-08 21:19:33,642 - my_text.py:107  -   Address: 0x11CF0, Name: ._ZN9TS7Worker16SZL_ID131_IDX003Ev, Type: None
2025-03-08 21:19:33,642 - my_text.py:107  -   Address: 0x11D00, Name: ._ZN17TSnap7MicroClientC2Ev, Type: None
2025-03-08 21:19:33,642 - my_text.py:107  -   Address: 0x11D10, Name: ._ZN12TSnap7Client8SetParamEiPv, Type: None
2025-03-08 21:19:33,642 - my_text.py:107  -   Address: 0x11D20, Name: ._ZN14TMsgEventQueue4FullEv, Type: None
2025-03-08 21:19:33,642 - my_text.py:107  -   Address: 0x11D30, Name: ._ZN12TSnap7Server9IndexOfDBEt, Type: None
2025-03-08 21:19:33,643 - my_text.py:107  -   Address: 0x11D40, Name: ._ZN17TConnectionServer4LockEv, Type: None
2025-03-08 21:19:33,643 - my_text.py:107  -   Address: 0x11D50, Name: ._ZN14TMsgEventQueue5EmptyEv, Type: None
2025-03-08 21:19:33,643 - my_text.py:107  -   Address: 0x11D60, Name: ._Z15RawSocketsCheckv, Type: None
2025-03-08 21:19:33,643 - my_text.py:107  -   Address: 0x11D70, Name: ._ZN17TSnap7MicroClient11opGetCpInfoEv, Type: None
2025-03-08 21:19:33,643 - my_text.py:107  -   Address: 0x11D80, Name: ._ZN17TSnap7MicroClient7PlcStopEv, Type: None
2025-03-08 21:19:33,644 - my_text.py:107  -   Address: 0x11D90, Name: ._ZN7TPingerD2Ev, Type: None
2025-03-08 21:19:33,644 - my_text.py:107  -   Address: 0x11DA0, Name: ._ZN9TS7Worker11BLK_ListAllER3TCB, Type: None
2025-03-08 21:19:33,644 - my_text.py:107  -   Address: 0x11DB0, Name: ._ZN13TIsoTcpSocket13isoDisconnectEb, Type: None
2025-03-08 21:19:33,644 - my_text.py:107  -   Address: 0x11DC0, Name: .pthread_cond_timedwait, Type: None
2025-03-08 21:19:33,644 - my_text.py:107  -   Address: 0x11DD0, Name: ._ZN10TMsgSocket5PurgeEv, Type: None
2025-03-08 21:19:33,644 - my_text.py:107  -   Address: 0x11DE0, Name: ._ZNSsC1ERKSs, Type: None
2025-03-08 21:19:33,644 - my_text.py:107  -   Address: 0x11DF0, Name: ._ZN9TS7Worker13WA_OutOfRangeER3TEv, Type: None
2025-03-08 21:19:33,644 - my_text.py:107  -   Address: 0x11E00, Name: ._ZN15TServersManager6UnlockEv, Type: None
2025-03-08 21:19:33,644 - my_text.py:107  -   Address: 0x11E10, Name: .__cxa_atexit, Type: None
2025-03-08 21:19:33,644 - my_text.py:107  -   Address: 0x11E20, Name: ._ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb, Type: None
2025-03-08 21:19:33,644 - my_text.py:107  -   Address: 0x11E30, Name: ._ZN17TSnap7MicroClient10CheckBlockEiiPvi, Type: None
2025-03-08 21:19:33,645 - my_text.py:107  -   Address: 0x11E40, Name: ._ZN10TMsgSocket18GetLastSocketErrorEv, Type: None
2025-03-08 21:19:33,645 - my_text.py:107  -   Address: 0x11E50, Name: ._ZN13TIsoTcpSocket10isoSendPDUEP11TIsoDataPDU, Type: None
2025-03-08 21:19:33,645 - my_text.py:107  -   Address: 0x11E60, Name: .setsockopt, Type: None
2025-03-08 21:19:33,645 - my_text.py:107  -   Address: 0x11E70, Name: ._ZN17TSnap7MicroClient14opGetOrderCodeEv, Type: None
2025-03-08 21:19:33,645 - my_text.py:107  -   Address: 0x11E80, Name: ._ZN9TS7Worker12DataSizeByteEi, Type: None
2025-03-08 21:19:33,645 - my_text.py:107  -   Address: 0x11E90, Name: ._ZN17TSnap7MicroClient10GetCpuInfoEP10TS7CpuInfo, Type: Unknown
2025-03-08 21:19:33,645 - my_text.py:107  -   Address: 0x11EA0, Name: ._ZN17TSnap7MicroClient13opSetPasswordEv, Type: None
2025-03-08 21:19:33,645 - my_text.py:107  -   Address: 0x11EB0, Name: ._ZN17TSnap7MicroClient14opCopyRamToRomEv, Type: None
2025-03-08 21:19:33,645 - my_text.py:107  -   Address: 0x11EC0, Name: .pthread_mutex_init, Type: None
2025-03-08 21:19:33,645 - my_text.py:107  -   Address: 0x11ED0, Name: ._ZN12TSnap7Client9AsEBWriteEiiPv, Type: None
2025-03-08 21:19:33,645 - my_text.py:107  -   Address: 0x11EE0, Name: ._ZN9TS7Worker14RA_SizeOverPDUEP15TResFunReadItemR3TEv, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11EF0, Name: ._ZN12TSnap7Client12DoCompletionEv, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11F00, Name: ._ZN14TMsgEventQueue6InsertEPv, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11F10, Name: ._ZN13TIsoTcpSocket11ClrIsoErrorEv, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11F20, Name: ._Z9DeltaTimeRj, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11F30, Name: ._ZN16TCustomMsgServer7StartToEPKct, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11F40, Name: ._ZN11TSnapThread12ThreadCreateEv, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11F50, Name: ._ZN12TSnap7Client14AsCopyRamToRomEi, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11F60, Name: ._ZN17TSnap7MicroClient9BCDtoByteEh, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11F70, Name: ._ZN14TMsgEventQueueC2Eii, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11F80, Name: ._ZN17TSnap7MicroClient7DBWriteEiiiPv, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11F90, Name: ._ZN10TMsgSocket12CreateSocketEv, Type: None
2025-03-08 21:19:33,646 - my_text.py:107  -   Address: 0x11FA0, Name: ._ZN10TMsgSocket9SockCheckEi, Type: None
2025-03-08 21:19:33,647 - my_text.py:107  -   Address: 0x11FB0, Name: ._ZN9TS7Worker11RA_NotFoundEP15TResFunReadItemR3TEv, Type: None
2025-03-08 21:19:33,647 - my_text.py:107  -   Address: 0x11FC0, Name: ._ZN17TSnap7MicroClient7opDBGetEv, Type: None
2025-03-08 21:19:33,647 - my_text.py:107  -   Address: 0x11FD0, Name: ._Z17IpAddressToStringi, Type: None
2025-03-08 21:19:33,647 - my_text.py:107  -   Address: 0x11FE0, Name: ._ZN16TCustomMsgServer11EventsFlushEv, Type: None
2025-03-08 21:19:33,647 - my_text.py:107  -   Address: 0x11FF0, Name: ._ZN12TSnap7Client17CheckAsCompletionERi, Type: None
2025-03-08 21:19:33,647 - my_text.py:107  -   Address: 0x12000, Name: ._ZN9TS7Worker15PerformSetClockEv, Type: None
2025-03-08 21:19:33,647 - my_text.py:107  -   Address: 0x12010, Name: ._ZN17TSnap7MicroClient14WriteMultiVarsEP11TS7DataItemi, Type: Unknown
2025-03-08 21:19:33,647 - my_text.py:107  -   Address: 0x12020, Name: ._ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv, Type: None
2025-03-08 21:19:33,647 - my_text.py:107  -   Address: 0x12030, Name: ._ZN12SocketsLayerC2Ev, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x12040, Name: ._ZN10TMsgSocket4PingEPc, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x12050, Name: ._ZNSsD1Ev, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x12060, Name: ._ZN17TSnap7MicroClient11PlcHotStartEv, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x12070, Name: ._ZN9TS7Worker17PerformPDURequestERi, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x12080, Name: ._ZN17TSnap7MicroClientD2Ev_0, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x12090, Name: ._ZN10TMsgSocket7ReceiveEPviRi, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x120A0, Name: ._ZN15TServersManager4LockEv, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x120B0, Name: ._ZN17TSnap7MicroClient12opGetCpuInfoEv, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x120C0, Name: ._ZN17TSnap7MicroClient16opWriteMultiVarsEv, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x120D0, Name: .strlen, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x120E0, Name: ._ZN16TCustomMsgServer6DeleteEi, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x120F0, Name: ._ZN13TSnap7Partner5BSendEjPvi, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x12100, Name: ._ZNSs4_Rep10_M_destroyERKSaIcE, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x12110, Name: ._ZN10TMsgSocketD2Ev, Type: None
2025-03-08 21:19:33,648 - my_text.py:107  -   Address: 0x12120, Name: ._ZN13TSnap7Partner6StatusEv, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x12130, Name: ._ZN10TMsgSocket6GetSinE11sockaddr_inPcRt, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x12140, Name: .pthread_create, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x12150, Name: ._ZN11TSnapThread4KillEv, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x12160, Name: ._ZN9TS7Worker17PerformPDUUsrDataERi, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x12170, Name: ._ZN17TSnap7MicroClient6CTReadEiiPv, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x12180, Name: .pthread_cond_init, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x12190, Name: ._ZN13TSnap7PartnerC2Eb, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x121A0, Name: ._ZN10TMsgSocket9SetSocketEi, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x121B0, Name: ._ZN16TRawSocketPingerC2Ev, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x121C0, Name: ._ZN12TSnap7Server8LockAreaEit, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x121D0, Name: .listen, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x121E0, Name: ._ZN13TSnap7Partner15SetSendCallbackEPFvPviES0_, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x121F0, Name: ._ZN16TCustomMsgServer7KillAllEv, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x12200, Name: .__cxa_finalize, Type: None
2025-03-08 21:19:33,649 - my_text.py:107  -   Address: 0x12210, Name: ._ZN17TSnap7MicroClient6DeleteEii, Type: None
2025-03-08 21:19:33,650 - my_text.py:107  -   Address: 0x12220, Name: ._ZN17TSnap7MicroClient8opUploadEv, Type: None
2025-03-08 21:19:33,650 - my_text.py:107  -   Address: 0x12230, Name: ._ZN13TSnap7Partner24PerformFunctionNegotiateEv, Type: None
2025-03-08 21:19:33,650 - my_text.py:107  -   Address: 0x12240, Name: ._ZN17TSnap7MicroClient18opListBlocksOfTypeEv, Type: None
2025-03-08 21:19:33,650 - my_text.py:107  -   Address: 0x12250, Name: ._ZN12TSnap7Server21SetReadEventsCallBackEPFvPvP9TSrvEventiES0_, Type: Unknown
2025-03-08 21:19:33,650 - my_text.py:107  -   Address: 0x12260, Name: ._ZN17TSnap7MicroClient15opClearPasswordEv, Type: None
2025-03-08 21:19:33,650 - my_text.py:107  -   Address: 0x12270, Name: ._ZN17TSnap7MicroClient10DisconnectEv, Type: None
2025-03-08 21:19:33,650 - my_text.py:107  -   Address: 0x12280, Name: ._ZN17TSnap7MicroClient13opGetDateTimeEv, Type: None
2025-03-08 21:19:33,651 - my_text.py:107  -   Address: 0x12290, Name: ._ZN9TS7Worker14BLK_GetBlkInfoER3TCB, Type: None
2025-03-08 21:19:33,651 - my_text.py:107  -   Address: 0x122A0, Name: ._ZN18TMsgListenerThreadC2EP10TMsgSocketP16TCustomMsgServer, Type: None
2025-03-08 21:19:33,651 - my_text.py:107  -   Address: 0x122B0, Name: ._ZN11TSnapThreadC2Ev, Type: None
2025-03-08 21:19:33,651 - my_text.py:107  -   Address: 0x122C0, Name: ._ZN11TSnapThreadD2Ev, Type: None
2025-03-08 21:19:33,651 - my_text.py:107  -   Address: 0x122D0, Name: ._ZN12TSnap7Server15FindFirstFreeDBEv, Type: None
2025-03-08 21:19:33,651 - my_text.py:107  -   Address: 0x122E0, Name: ._ZN13TSnap7Partner9BlockSendEv, Type: None
2025-03-08 21:19:33,651 - my_text.py:107  -   Address: 0x122F0, Name: ._ZN17TSnap7MicroClient15SubBlockToBlockEi, Type: None
2025-03-08 21:19:33,651 - my_text.py:107  -   Address: 0x12300, Name: ._ZN10TMsgSocket9GetRemoteEv, Type: None
2025-03-08 21:19:33,651 - my_text.py:107  -   Address: 0x12310, Name: ._ZN17TConnectionServer7StartToEPKc, Type: None
2025-03-08 21:19:33,651 - my_text.py:107  -   Address: 0x12320, Name: ._ZN17TSnap7MicroClient19SetConnectionParamsEPKctt, Type: None
2025-03-08 21:19:33,652 - my_text.py:107  -   Address: 0x12330, Name: ._ZN17TSnap7MicroClient8ReadAreaEiiiiiPv, Type: None
2025-03-08 21:19:33,654 - my_text.py:107  -   Address: 0x12340, Name: ._ZN13TIsoTcpSocketD2Ev, Type: None
2025-03-08 21:19:33,666 - my_text.py:107  -   Address: 0x12350, Name: ._ZN12TSnap7Client9AsMBWriteEiiPv, Type: None
2025-03-08 21:19:33,666 - my_text.py:107  -   Address: 0x12360, Name: ._ZN13TIsoTcpSocket13isoRecvBufferEPvRi, Type: None
2025-03-08 21:19:33,667 - my_text.py:107  -   Address: 0x12370, Name: .pthread_setcanceltype, Type: None
2025-03-08 21:19:33,667 - my_text.py:107  -   Address: 0x12380, Name: ._ZN13TIsoTcpSocket11SetIsoErrorEi, Type: None
2025-03-08 21:19:33,667 - my_text.py:107  -   Address: 0x12390, Name: .pthread_join, Type: None
2025-03-08 21:19:33,667 - my_text.py:107  -   Address: 0x123A0, Name: ._ZN9TS7Worker7GetAreaEht, Type: None
2025-03-08 21:19:33,667 - my_text.py:107  -   Address: 0x123B0, Name: ._ZN12TSnap7Client9AsABWriteEiiPv, Type: None
2025-03-08 21:19:33,667 - my_text.py:107  -   Address: 0x123C0, Name: ._ZN10TMsgSocketD2Ev_0, Type: None
2025-03-08 21:19:33,667 - my_text.py:107  -   Address: 0x123D0, Name: ._ZN13TSnap7Partner8PickDataEv, Type: None
2025-03-08 21:19:33,667 - my_text.py:107  -   Address: 0x123E0, Name: ._ZNSsC1EPKcRKSaIcE, Type: None
2025-03-08 21:19:33,667 - my_text.py:107  -   Address: 0x123F0, Name: ._ZN10TMsgSocket8GetLocalEv, Type: None
2025-03-08 21:19:33,667 - my_text.py:107  -   Address: 0x12400, Name: ._ZN16TMsgWorkerThreadC2EP10TMsgSocketP16TCustomMsgServer, Type: None
2025-03-08 21:19:33,668 - my_text.py:107  -   Address: 0x12410, Name: ._ZN17TConnectionServerC2Ev, Type: None
2025-03-08 21:19:33,668 - my_text.py:107  -   Address: 0x12420, Name: ._ZN12TSnap7Server14UnregisterAreaEit, Type: None
2025-03-08 21:19:33,668 - my_text.py:107  -   Address: 0x12430, Name: ._ZN17TSnap7MicroClient8SetParamEiPv, Type: None
2025-03-08 21:19:33,668 - my_text.py:107  -   Address: 0x12440, Name: .pthread_exit, Type: None
2025-03-08 21:19:33,668 - my_text.py:107  -   Address: 0x12450, Name: .getsockopt, Type: None
2025-03-08 21:19:33,668 - my_text.py:107  -   Address: 0x12460, Name: ._ZN12TSnap7Client10AsReadAreaEiiiiiPv, Type: None
2025-03-08 21:19:33,668 - my_text.py:107  -   Address: 0x12470, Name: ._ZN12TSnap7Client10AsDownloadEiPvi, Type: None
2025-03-08 21:19:33,669 - my_text.py:107  -   Address: 0x12480, Name: ._ZN16TCustomMsgServerD2Ev_0, Type: None
2025-03-08 21:19:33,669 - my_text.py:107  -   Address: 0x12490, Name: .getsockname, Type: None
2025-03-08 21:19:33,669 - my_text.py:107  -   Address: 0x124A0, Name: ._ZN7TPinger7RawPingEji, Type: None
2025-03-08 21:19:33,669 - my_text.py:107  -   Address: 0x124B0, Name: ._ZN10TMsgSocket16SetSocketOptionsEv, Type: None
2025-03-08 21:19:33,669 - my_text.py:107  -   Address: 0x124C0, Name: ._ZN17TSnap7MicroClient15opGetProtectionEv, Type: None
2025-03-08 21:19:33,670 - my_text.py:107  -   Address: 0x124D0, Name: ._ZN17TConnectionServer6UnlockEv, Type: None
2025-03-08 21:19:33,670 - my_text.py:107  -   Address: 0x124E0, Name: ._ZN17TSnap7MicroClient8CompressEi, Type: None
2025-03-08 21:19:33,670 - my_text.py:107  -   Address: 0x124F0, Name: ._ZN17TSnap7MicroClient10opCompressEv, Type: None
2025-03-08 21:19:33,670 - my_text.py:107  -   Address: 0x12500, Name: ._ZN17TSnap7MicroClient12DataSizeByteEi, Type: None
2025-03-08 21:19:33,670 - my_text.py:107  -   Address: 0x12510, Name: .connect, Type: None
2025-03-08 21:19:33,670 - my_text.py:107  -   Address: 0x12520, Name: ._ZN9TS7Worker22BLK_NoResource_ListBoTEP14TDataFunGetBotR3TCB, Type: Unknown
2025-03-08 21:19:33,670 - my_text.py:107  -   Address: 0x12530, Name: ._ZN12TSnap7Server11DoReadEventEijttttt, Type: None
2025-03-08 21:19:33,670 - my_text.py:107  -   Address: 0x12540, Name: ._ZN17TSnap7MicroClient12GetPlcStatusERi, Type: None
2025-03-08 21:19:33,670 - my_text.py:107  -   Address: 0x12550, Name: ._ZN12TSnap7Client13StartAsyncJobEv, Type: None
2025-03-08 21:19:33,671 - my_text.py:107  -   Address: 0x12560, Name: ._ZN10TMsgSocket11PacketReadyEi, Type: None
2025-03-08 21:19:33,671 - my_text.py:107  -   Address: 0x12570, Name: ._ZN13TSnap7Partner22CheckAsBSendCompletionERi, Type: None
2025-03-08 21:19:33,671 - my_text.py:107  -   Address: 0x12580, Name: ._ZN9TS7Worker19WA_DataSizeMismatchER3TEv, Type: None
2025-03-08 21:19:33,671 - my_text.py:107  -   Address: 0x12590, Name: ._ZN9TS7Worker14SZLSystemStateEv, Type: None
2025-03-08 21:19:33,671 - my_text.py:107  -   Address: 0x125A0, Name: ._ZN13TIsoTcpSocket8CheckPDUEPvh, Type: None
2025-03-08 21:19:33,671 - my_text.py:107  -   Address: 0x125B0, Name: ._ZN17TSnap7MicroClient12GetOrderCodeEP12TS7OrderCode, Type: Unknown
2025-03-08 21:19:33,671 - my_text.py:107  -   Address: 0x125C0, Name: ._ZN17TSnap7MicroClient13opReadSZLListEv, Type: None
2025-03-08 21:19:33,672 - my_text.py:107  -   Address: 0x125D0, Name: ._ZN12TSnap7Client12AsFullUploadEiiPvRi, Type: None
2025-03-08 21:19:33,672 - my_text.py:107  -   Address: 0x125E0, Name: .__strcpy_chk, Type: Unknown
2025-03-08 21:19:33,672 - my_text.py:107  -   Address: 0x125F0, Name: ._ZN11TSnapThread4JoinEv, Type: None
2025-03-08 21:19:33,672 - my_text.py:107  -   Address: 0x12600, Name: ._Z12TimeToStringl, Type: None
2025-03-08 21:19:33,672 - my_text.py:107  -   Address: 0x12610, Name: ._ZN17TSnap7MicroClient9opPlcStopEv, Type: None
2025-03-08 21:19:33,672 - my_text.py:107  -   Address: 0x12620, Name: ._ZN12TSnap7ClientC2Ev, Type: None
2025-03-08 21:19:33,672 - my_text.py:107  -   Address: 0x12630, Name: ._ZN13TIsoTcpSocket7PDUSizeEPv, Type: None
2025-03-08 21:19:33,672 - my_text.py:107  -   Address: 0x12640, Name: ._ZN9TSnapBase8SwapWordEt, Type: None
2025-03-08 21:19:33,672 - my_text.py:107  -   Address: 0x12650, Name: ._ZN12TSnap7Server10UnlockAreaEit, Type: None
2025-03-08 21:19:33,672 - my_text.py:107  -   Address: 0x12660, Name: ._ZN15TServersManager13RemovePartnerEP17TConnectionServerP13TSnap7Partner, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x12670, Name: ._ZN12TSnap7Client10OpenThreadEv, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x12680, Name: ._ZN15TServersManager9AddServerEP17TConnectionServer, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x12690, Name: ._ZN16TRawSocketPinger7CanReadEi, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x126A0, Name: ._ZN17TSnap7MicroClient7TMWriteEiiPv, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x126B0, Name: ._ZN17TSnap7MicroClient8FillTimeEtPc, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x126C0, Name: ._ZN12TSnap7Server10RegisterDBEtPvt, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x126D0, Name: ._ZN17TSnap7MicroClient8GetParamEiPv, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x126E0, Name: ._Z10ErrCliTexti, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x126F0, Name: .socket, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x12700, Name: ._ZN10TMsgSocket9SckAcceptEv, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x12710, Name: .inet_ntoa, Type: None
2025-03-08 21:19:33,673 - my_text.py:107  -   Address: 0x12720, Name: ._ZN17TConnectionServer9FirstFreeEv, Type: None
2025-03-08 21:19:33,674 - my_text.py:107  -   Address: 0x12730, Name: ._ZN9TS7Worker26BLK_GetBlockNum_GetBlkInfoERiP17TReqDataBlockInfo, Type: Unknown
2025-03-08 21:19:33,674 - my_text.py:107  -   Address: 0x12740, Name: ._ZN12TSnap7ServerC2Ev, Type: None
2025-03-08 21:19:33,674 - my_text.py:107  -   Address: 0x12750, Name: ._ZN16TCustomMsgServer9PickEventEPv, Type: None
2025-03-08 21:19:33,674 - my_text.py:107  -   Address: 0x12760, Name: ._ZN12TSnap7Client9AsCTWriteEiiPv, Type: None
2025-03-08 21:19:33,674 - my_text.py:107  -   Address: 0x12770, Name: ._ZN13TSnap7Partner22CheckAsBRecvCompletionERiRjPvS0_, Type: None
2025-03-08 21:19:33,674 - my_text.py:107  -   Address: 0x12780, Name: ._ZN12TSnap7Client8AsABReadEiiPv, Type: None
2025-03-08 21:19:33,674 - my_text.py:107  -   Address: 0x12790, Name: ._ZN17TConnectionServer4StopEv, Type: None
2025-03-08 21:19:33,674 - my_text.py:107  -   Address: 0x127A0, Name: ._Z10SysGetTickv, Type: None
2025-03-08 21:19:33,674 - my_text.py:107  -   Address: 0x127B0, Name: ._ZN17TSnap7MicroClient6UploadEiiPvRi, Type: None
2025-03-08 21:19:33,674 - my_text.py:107  -   Address: 0x127C0, Name: ._ZN9TS7Worker24PerformFunctionNegotiateEv, Type: None
2025-03-08 21:19:33,674 - my_text.py:107  -   Address: 0x127D0, Name: ._ZN17TSnap7MicroClient11opWriteAreaEv, Type: None
2025-03-08 21:19:33,675 - my_text.py:107  -   Address: 0x127E0, Name: .__errno_location, Type: None
2025-03-08 21:19:33,675 - my_text.py:107  -   Address: 0x127F0, Name: ._ZN12TSnap7Server12UnregisterDBEt, Type: None
2025-03-08 21:19:33,675 - my_text.py:107  -   Address: 0x12800, Name: ._ZN17TSnap7MicroClient17SetConnectionTypeEt, Type: None
2025-03-08 21:19:33,675 - my_text.py:107  -   Address: 0x12810, Name: ._Z24ServersManager_GetServerjRP17TConnectionServer, Type: None
2025-03-08 21:19:33,675 - my_text.py:107  -   Address: 0x12820, Name: ._ZN12TSnap7Client8AsEBReadEiiPv, Type: None
2025-03-08 21:19:33,675 - my_text.py:107  -   Address: 0x12830, Name: ._Z8SysSleepj, Type: None
2025-03-08 21:19:33,675 - my_text.py:107  -   Address: 0x12840, Name: ._ZN9TS7Worker21PerformFunctionUploadEv, Type: None
2025-03-08 21:19:33,675 - my_text.py:107  -   Address: 0x12850, Name: ._ZN13TSnap7Partner7AsBSendEjPvi, Type: None
2025-03-08 21:19:33,675 - my_text.py:107  -   Address: 0x12860, Name: ._ZN17TSnap7MicroClient13opAgBlockInfoEv, Type: None
2025-03-08 21:19:33,675 - my_text.py:107  -   Address: 0x12870, Name: ._ZN17TSnap7MicroClient9opReadSZLEv, Type: None
2025-03-08 21:19:33,676 - my_text.py:107  -   Address: 0x12880, Name: ._ZN9TS7Worker15PerformGroupSZLEv, Type: None
2025-03-08 21:19:33,676 - my_text.py:107  -   Address: 0x12890, Name: .__stack_chk_fail, Type: Unknown
2025-03-08 21:19:33,676 - my_text.py:107  -   Address: 0x128A0, Name: ._ZN12TSnap7Client11AsWriteAreaEiiiiiPv, Type: None
2025-03-08 21:19:33,676 - my_text.py:107  -   Address: 0x128B0, Name: ._ZN17TSnap7MicroClient14opGetPlcStatusEv, Type: None
2025-03-08 21:19:33,676 - my_text.py:107  -   Address: 0x128C0, Name: ._ZN13TIsoTcpWorker11ExecuteRecvEv, Type: None
2025-03-08 21:19:33,676 - my_text.py:107  -   Address: 0x128D0, Name: ._ZN17TConnectionServer8IncomingEi, Type: None
2025-03-08 21:19:33,676 - my_text.py:107  -   Address: 0x128E0, Name: ._ZN9TS7Worker3BCDEt, Type: None
2025-03-08 21:19:33,676 - my_text.py:107  -   Address: 0x128F0, Name: ._ZN12TSnap7Server11DoWriteAreaEiiiiiiPv, Type: None
2025-03-08 21:19:33,676 - my_text.py:107  -   Address: 0x12900, Name: ._Z28ServersManager_RemovePartnerP17TConnectionServerP13TSnap7Partner, Type: None
2025-03-08 21:19:33,678 - my_text.py:107  -   Address: 0x12910, Name: ._ZN13TSnap7Partner4StopEv, Type: None
2025-03-08 21:19:33,678 - my_text.py:107  -   Address: 0x12920, Name: ._ZN16TCustomMsgServer10UnlockListEv, Type: None
2025-03-08 21:19:33,678 - my_text.py:107  -   Address: 0x12930, Name: .send, Type: None
2025-03-08 21:19:33,678 - my_text.py:107  -   Address: 0x12940, Name: ._ZN10TMsgSocket9GotSocketEv, Type: None
2025-03-08 21:19:33,678 - my_text.py:107  -   Address: 0x12950, Name: ._ZN17TConnectionServer15RegisterPartnerEP13TSnap7Partner, Type: None
2025-03-08 21:19:33,678 - my_text.py:107  -   Address: 0x12960, Name: ._ZNSs6assignEPKcm, Type: None
2025-03-08 21:19:33,678 - my_text.py:107  -   Address: 0x12970, Name: ._ZN17TConnectionServerD2Ev, Type: None
2025-03-08 21:19:33,678 - my_text.py:107  -   Address: 0x12980, Name: .strcpy, Type: None
2025-03-08 21:19:33,678 - my_text.py:107  -   Address: 0x12990, Name: ._ZN9TS7Worker11DoReadEventEjttttt, Type: None
2025-03-08 21:19:33,678 - my_text.py:107  -   Address: 0x129A0, Name: ._Z10EvtSrvTextR9TSrvEvent, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x129B0, Name: ._ZN17TSnap7MicroClient7CTWriteEiiPv, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x129C0, Name: ._ZN17TSnap7MicroClient7ReadSZLEiiP6TS7SZLRi, Type: Unknown
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x129D0, Name: ._Z10ErrParTexti, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x129E0, Name: .pthread_cancel, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x129F0, Name: ._ZNSs6assignERKSs, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x12A00, Name: .nanosleep, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x12A10, Name: ._ZN17TSnap7MicroClient6ABReadEiiPv, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x12A20, Name: ._ZN17TSnap7MicroClient12PlcColdStartEv, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x12A30, Name: ._ZN10TSnap7Peer18NegotiatePDULengthEv, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x12A40, Name: ._ZN10TMsgSocket7SckBindEv, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x12A50, Name: ._ZN12TSnap7ClientD2Ev, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x12A60, Name: ._ZN10TMsgSocket10SckConnectEv, Type: None
2025-03-08 21:19:33,679 - my_text.py:107  -   Address: 0x12A70, Name: .pthread_cond_wait, Type: None
2025-03-08 21:19:33,680 - my_text.py:107  -   Address: 0x12A80, Name: ._ZN9TS7Worker20PerformGroupSecurityEv, Type: None
2025-03-08 21:19:33,680 - my_text.py:107  -   Address: 0x12A90, Name: ._ZN17TSnap7MicroClient14opPlcColdStartEv, Type: None
2025-03-08 21:19:33,680 - my_text.py:107  -   Address: 0x12AA0, Name: ._ZN12TSnap7Server11RegisterSysEiPvt, Type: None
2025-03-08 21:19:33,680 - my_text.py:107  -   Address: 0x12AB0, Name: ._ZN12TSnap7Client18AsListBlocksOfTypeEiPA8192_tRi, Type: None
2025-03-08 21:19:33,680 - my_text.py:107  -   Address: 0x12AC0, Name: ._ZN10TSnap7PeerD2Ev_0, Type: None
2025-03-08 21:19:33,680 - my_text.py:107  -   Address: 0x12AD0, Name: ._ZN10TMsgSocket13SckDisconnectEv, Type: None
2025-03-08 21:19:33,680 - my_text.py:107  -   Address: 0x12AE0, Name: ._ZdaPv, Type: None
2025-03-08 21:19:33,680 - my_text.py:107  -   Address: 0x12AF0, Name: ._ZN13TSnap7Partner11CloseWorkerEv, Type: None
2025-03-08 21:19:33,680 - my_text.py:107  -   Address: 0x12B00, Name: ._ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind, Type: Unknown
2025-03-08 21:19:33,681 - my_text.py:107  -   Address: 0x12B10, Name: ._ZN17TSnap7MicroClient7ABWriteEiiPv, Type: None
2025-03-08 21:19:33,681 - my_text.py:107  -   Address: 0x12B20, Name: ._ZN12TSnap7Client8AsCTReadEiiPv, Type: None
2025-03-08 21:19:33,681 - my_text.py:107  -   Address: 0x12B30, Name: ._ZN10TMsgSocket9SckListenEv, Type: None
2025-03-08 21:19:33,696 - my_text.py:107  -   Address: 0x12B40, Name: ._ZN15TServersManager9GetServerEjRP17TConnectionServer, Type: None
2025-03-08 21:19:33,696 - my_text.py:107  -   Address: 0x12B50, Name: ._ZN12TSnap7Client9AsTMWriteEiiPv, Type: None
2025-03-08 21:19:33,696 - my_text.py:107  -   Address: 0x12B60, Name: ._ZN10TSnap7PeerC2Ev, Type: None
2025-03-08 21:19:33,696 - my_text.py:107  -   Address: 0x12B70, Name: ._ZN17TSnap7MicroClient6TMReadEiiPv, Type: None
2025-03-08 21:19:33,696 - my_text.py:107  -   Address: 0x12B80, Name: ._ZN17TConnectionServer5StartEv, Type: None
2025-03-08 21:19:33,696 - my_text.py:107  -   Address: 0x12B90, Name: ._ZN9TSnapBaseC2Ev, Type: None
2025-03-08 21:19:33,696 - my_text.py:107  -   Address: 0x12BA0, Name: ._ZN9TS7Worker7DoEventEjttttt, Type: None
2025-03-08 21:19:33,696 - my_text.py:107  -   Address: 0x12BB0, Name: ._ZN10TSnap7Peer11PeerConnectEv, Type: None
2025-03-08 21:19:33,697 - my_text.py:107  -   Address: 0x12BC0, Name: ._ZN12TSnap7ServerD2Ev, Type: None
2025-03-08 21:19:33,697 - my_text.py:107  -   Address: 0x12BD0, Name: ._ZN12TSnap7Client8AsTMReadEiiPv, Type: None
2025-03-08 21:19:33,697 - my_text.py:107  -   Address: 0x12BE0, Name: .strncpy, Type: None
2025-03-08 21:19:33,697 - my_text.py:107  -   Address: 0x12BF0, Name: ._ZN11TSnapThread7WaitForEm, Type: None
2025-03-08 21:19:33,697 - my_text.py:107  -   Address: 0x12C00, Name: ._ZN17TSnap7MicroClient9WriteAreaEiiiiiPv, Type: None
2025-03-08 21:19:33,698 - my_text.py:107  -   Address: 0x12C10, Name: ._ZN9TS7Worker15PerformGetClockEv, Type: None
2025-03-08 21:19:33,698 - my_text.py:107  -   Address: 0x12C20, Name: ._ZN12TSnap7Client8GetParamEiPv, Type: None
2025-03-08 21:19:33,699 - my_text.py:107  -   Address: 0x12C30, Name: ._ZN10TMsgSocket7CanReadEi, Type: None
2025-03-08 21:19:33,699 - my_text.py:107  -   Address: 0x12C40, Name: ._ZN17TSnap7MicroClient8DownloadEiPvi, Type: None
2025-03-08 21:19:33,699 - my_text.py:107  -   Address: 0x12C50, Name: .pthread_attr_init, Type: None
2025-03-08 21:19:33,699 - my_text.py:107  -   Address: 0x12C60, Name: ._ZN13TIsoTcpSocket20IsoConfirmConnectionEh, Type: None
2025-03-08 21:19:33,699 - my_text.py:107  -   Address: 0x12C70, Name: ._ZN12TSnap7Client11CloseThreadEv, Type: None
2025-03-08 21:19:33,699 - my_text.py:107  -   Address: 0x12C80, Name: ._ZN13TSnap7Partner8GetParamEiPv, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12C90, Name: ._ZN11TSnapThreadD2Ev_0, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12CA0, Name: .__cxa_end_catch, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12CB0, Name: ._ZN9TS7Worker15SZLNotAvailableEv, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12CC0, Name: ._ZN12TSnap7Server8GetParamEiPv, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12CD0, Name: ._ZN13TIsoTcpSocket13isoSendBufferEPvi, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12CE0, Name: ._ZN12TSnap7Server8SetParamEiPv, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12CF0, Name: ._ZN16TCustomMsgServerC2Ev, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12D00, Name: ._ZN16TCustomMsgServer4StopEv, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12D10, Name: ._ZN9TS7Worker23WA_InvalidTransportSizeER3TEv, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12D20, Name: ._ZN13TSnap7Partner10DisconnectEv, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12D30, Name: ._ZN17TSnap7MicroClient13opSetDateTimeEv, Type: None
2025-03-08 21:19:33,702 - my_text.py:107  -   Address: 0x12D40, Name: ._ZN10TSnap7Peer8ClrErrorEv, Type: None
2025-03-08 21:19:33,703 - my_text.py:107  -   Address: 0x12D50, Name: ._ZN11TSnapThread5StartEv, Type: None
2025-03-08 21:19:33,703 - my_text.py:107  -   Address: 0x12D60, Name: .__cxa_begin_catch, Type: None
2025-03-08 21:19:33,703 - my_text.py:107  -   Address: 0x12D70, Name: ._ZN13TIsoTcpSocketD2Ev_0, Type: None
2025-03-08 21:19:33,703 - my_text.py:107  -   Address: 0x12D80, Name: .bind, Type: None
2025-03-08 21:19:33,703 - my_text.py:107  -   Address: 0x12D90, Name: ._ZN12TSnap7Client7AsDBGetEiPvRi, Type: None
2025-03-08 21:19:33,703 - my_text.py:107  -   Address: 0x12DA0, Name: ._ZN16TCustomMsgServer9FirstFreeEv, Type: None
2025-03-08 21:19:33,704 - my_text.py:107  -   Address: 0x12DB0, Name: ._ZN13TIsoTcpSocketC2Ev, Type: None
2025-03-08 21:19:33,705 - my_text.py:107  -   Address: 0x12DC0, Name: ._ZN17TSnap7MicroClient14SetPlcDateTimeEP2tm, Type: None
2025-03-08 21:19:33,705 - my_text.py:107  -   Address: 0x12DD0, Name: ._ZN17TSnap7MicroClient7ConnectEv, Type: None
2025-03-08 21:19:33,705 - my_text.py:107  -   Address: 0x12DE0, Name: ._ZN10TMsgSocket13DestroySocketEv, Type: None
2025-03-08 21:19:33,705 - my_text.py:107  -   Address: 0x12DF0, Name: .pthread_mutex_lock, Type: None
2025-03-08 21:19:33,705 - my_text.py:107  -   Address: 0x12E00, Name: ._ZN13TSnap7Partner17ConnectionConfirmEv, Type: None
2025-03-08 21:19:33,705 - my_text.py:107  -   Address: 0x12E10, Name: ._ZN12TSnap7Client8AsDBFillEii, Type: None
2025-03-08 21:19:33,705 - my_text.py:107  -   Address: 0x12E20, Name: ._ZN9TS7Worker13RA_OutOfRangeEP15TResFunReadItemR3TEv, Type: None
2025-03-08 21:19:33,706 - my_text.py:107  -   Address: 0x12E30, Name: ._ZN17TSnap7MicroClient16PerformOperationEv, Type: None
2025-03-08 21:19:33,706 - my_text.py:107  -   Address: 0x12E40, Name: ._ZN14TMsgEventQueue5FlushEv, Type: None
2025-03-08 21:19:33,706 - my_text.py:107  -   Address: 0x12E50, Name: ._ZN17TSnap7MicroClient14GetAgBlockInfoEiiP12TS7BlockInfo, Type: Unknown
2025-03-08 21:19:33,706 - my_text.py:107  -   Address: 0x12E60, Name: ._ZN15TServersManagerC2Ev, Type: None
2025-03-08 21:19:33,706 - my_text.py:107  -   Address: 0x12E70, Name: ._Z11NumToStringiij, Type: None
2025-03-08 21:19:33,706 - my_text.py:107  -   Address: 0x12E80, Name: ._Z10ErrSrvTexti, Type: None
2025-03-08 21:19:33,706 - my_text.py:107  -   Address: 0x12E90, Name: .localtime, Type: None
2025-03-08 21:19:33,706 - my_text.py:107  -   Address: 0x12EA0, Name: .pthread_mutex_destroy, Type: None
2025-03-08 21:19:33,706 - my_text.py:107  -   Address: 0x12EB0, Name: ._ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU, Type: None
2025-03-08 21:19:33,706 - my_text.py:107  -   Address: 0x12EC0, Name: ._ZN17TConnectionServer11FindPartnerEj, Type: None
2025-03-08 21:19:33,707 - my_text.py:107  -   Address: 0x12ED0, Name: ._ZN16TRawSocketPinger14PacketChecksumEv, Type: None
2025-03-08 21:19:33,708 - my_text.py:107  -   Address: 0x12EE0, Name: ._ZN17TSnap7MicroClient11ReadSZLListEP10TS7SZLListRi, Type: Unknown
2025-03-08 21:19:33,708 - my_text.py:107  -   Address: 0x12EF0, Name: ._Znwm, Type: None
2025-03-08 21:19:33,708 - my_text.py:107  -   Address: 0x12F00, Name: ._ZN15TServersManager12CreateServerEjRP17TConnectionServer, Type: None
2025-03-08 21:19:33,708 - my_text.py:107  -   Address: 0x12F10, Name: ._ZN13TSnap7PartnerD2Ev, Type: None
2025-03-08 21:19:33,708 - my_text.py:107  -   Address: 0x12F20, Name: ._Unwind_Resume, Type: None
2025-03-08 21:19:33,709 - my_text.py:107  -   Address: 0x12F30, Name: .pthread_cond_broadcast, Type: None
2025-03-08 21:19:33,709 - my_text.py:107  -   Address: 0x12F40, Name: ._ZN12TSnap7Server17SetRWAreaCallBackEPFiPviiP6TS7TagS0_ES0_, Type: Unknown
2025-03-08 21:19:33,709 - my_text.py:107  -   Address: 0x12F50, Name: .strftime, Type: None
2025-03-08 21:19:33,709 - my_text.py:107  -   Address: 0x12F60, Name: ._ZN9TS7WorkerC2Ev, Type: None
2025-03-08 21:19:33,710 - my_text.py:107  -   Address: 0x12F70, Name: ._ZN13TSnap7Partner15SetRecvCallbackEPFvPvijS0_iES0_, Type: None
2025-03-08 21:19:33,710 - my_text.py:107  -   Address: 0x12F80, Name: ._ZN10TMsgSocket8CanWriteEi, Type: None
2025-03-08 21:19:33,710 - my_text.py:107  -   Address: 0x12F90, Name: ._ZN14TMsgEventQueue7ExtractEPv, Type: None
2025-03-08 21:19:33,710 - my_text.py:107  -   Address: 0x12FA0, Name: ._ZN9TS7Worker8FillTimeEP7TS7Time, Type: None
2025-03-08 21:19:33,710 - my_text.py:107  -   Address: 0x12FB0, Name: .accept, Type: None
2025-03-08 21:19:33,710 - my_text.py:107  -   Address: 0x12FC0, Name: ._Z11IntToStringi, Type: None
2025-03-08 21:19:33,710 - my_text.py:107  -   Address: 0x12FD0, Name: .clock_gettime, Type: None
2025-03-08 21:19:33,710 - my_text.py:107  -   Address: 0x12FE0, Name: ._ZN10TMsgSocket10RecvPacketEPvi, Type: None
2025-03-08 21:19:33,711 - my_text.py:107  -   Address: 0x12FF0, Name: ._ZN17TSnap7MicroClient13GetProtectionEP13TS7Protection, Type: Unknown
2025-03-08 21:19:33,711 - my_text.py:107  -   Address: 0x13000, Name: ._ZN12TSnap7Client8AsMBReadEiiPv, Type: None
2025-03-08 21:19:33,711 - my_text.py:107  -   Address: 0x13010, Name: ._ZN17TSnap7MicroClient7EBWriteEiiPv, Type: None
2025-03-08 21:19:33,711 - my_text.py:107  -   Address: 0x13020, Name: ._ZN12TSnap7Server7StartToEPKc, Type: None
2025-03-08 21:19:33,711 - my_text.py:107  -   Address: 0x13030, Name: .pthread_mutex_unlock, Type: None
2025-03-08 21:19:33,712 - my_text.py:107  -   Address: 0x13040, Name: ._ZN16TRawSocketPinger10InitPacketEv, Type: None
2025-03-08 21:19:33,712 - my_text.py:107  -   Address: 0x13050, Name: ._ZN13TSnap7Partner13ConnectToPeerEv, Type: None
2025-03-08 21:19:33,712 - my_text.py:107  -   Address: 0x13060, Name: .memcpy, Type: None
2025-03-08 21:19:33,713 - my_text.py:107  -   Address: 0x13070, Name: .fcntl, Type: None
2025-03-08 21:19:33,713 - my_text.py:107  -   Address: 0x13080, Name: ._ZN14TMsgEventQueueD2Ev, Type: None
2025-03-08 21:19:33,713 - my_text.py:107  -   Address: 0x13090, Name: ._ZN17TSnap7MicroClient9ConnectToEPKcii, Type: None
2025-03-08 21:19:33,713 - my_text.py:107  -   Address: 0x130A0, Name: ._ZNSs6appendERKSs, Type: None
2025-03-08 21:19:33,714 - my_text.py:107  -   Address: 0x130B0, Name: ._ZN17TSnap7MicroClient16ListBlocksOfTypeEiPA8192_tRi, Type: None
2025-03-08 21:19:33,714 - my_text.py:107  -   Address: 0x130C0, Name: ._ZN16TCustomMsgServer8LockListEv, Type: None
2025-03-08 21:19:33,714 - my_text.py:107  -   Address: 0x130D0, Name: ._ZN10TSnap7Peer14PeerDisconnectEv, Type: None
2025-03-08 21:19:33,714 - my_text.py:107  -   Address: 0x130E0, Name: ._ZN10TMsgSocket11WaitForDataEii, Type: None
2025-03-08 21:19:33,714 - my_text.py:107  -   Address: 0x130F0, Name: ._ZN12TSnap7Client8AsUploadEiiPvRi, Type: None
2025-03-08 21:19:33,714 - my_text.py:107  -   Address: 0x13100, Name: ._ZN12TSnap7Client16WaitAsCompletionEm, Type: None
2025-03-08 21:19:33,714 - my_text.py:107  -   Address: 0x13110, Name: ._ZN10TSnap7Peer8SetErrorEi, Type: None
2025-03-08 21:19:33,714 - my_text.py:107  -   Address: 0x13120, Name: ._ZN9TS7Worker11BLK_ListBoTEhbR3TCB, Type: None
2025-03-08 21:19:33,714 - my_text.py:107  -   Address: 0x13130, Name: ._ZN12TSnap7Server13UnregisterSysEi, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x13140, Name: ._ZN17TSnap7MicroClient8CpuErrorEi, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x13150, Name: ._ZN17TSnap7MicroClient9WordToBCDEt, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x13160, Name: .__fdelt_chk, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x13170, Name: .time, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x13180, Name: ._ZN9TS7Worker21PerformGroupBlockInfoEv, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x13190, Name: ._ZN13TSnap7Partner5StartEv, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x131A0, Name: .inet_addr, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x131B0, Name: ._ZN7TPinger4PingEji, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x131C0, Name: ._ZN16TCustomMsgServer13StartListenerEv, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x131D0, Name: ._ZN17TSnap7MicroClient8opDeleteEv, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x131E0, Name: ._Z15Msg_GetSockAddri, Type: None
2025-03-08 21:19:33,715 - my_text.py:107  -   Address: 0x131F0, Name: ._ZN13TIsoTcpSocket10isoConnectEv, Type: None
2025-03-08 21:19:33,716 - my_text.py:107  -   Address: 0x13200, Name: .pthread_attr_setdetachstate, Type: None
2025-03-08 21:19:33,716 - my_text.py:107  -   Address: 0x13210, Name: _ZN9__gnu_cxxL27__exchange_and_add_dispatchEPii.constprop.11, Type: None
2025-03-08 21:19:33,717 - my_text.py:107  -   Address: 0x1322A, Name: _ZN9__gnu_cxxL27__exchange_and_add_dispatchEPii.constprop.3, Type: Unknown
2025-03-08 21:19:33,717 - my_text.py:107  -   Address: 0x13250, Name: _Z7libdonev, Type: None
2025-03-08 21:19:33,718 - my_text.py:107  -   Address: 0x13260, Name: _GLOBAL__sub_I_snap_msgsock.cpp, Type: Unknown
2025-03-08 21:19:33,719 - my_text.py:107  -   Address: 0x13290, Name: _Z7libinitv, Type: None
2025-03-08 21:19:33,720 - my_text.py:107  -   Address: 0x132A0, Name: deregister_tm_clones, Type: Unknown
2025-03-08 21:19:33,720 - my_text.py:107  -   Address: 0x132D0, Name: register_tm_clones, Type: Unknown
2025-03-08 21:19:33,720 - my_text.py:107  -   Address: 0x13310, Name: __do_global_dtors_aux, Type: Unknown
2025-03-08 21:19:33,720 - my_text.py:107  -   Address: 0x13350, Name: frame_dummy, Type: Unknown
2025-03-08 21:19:33,720 - my_text.py:107  -   Address: 0x13380, Name: _ZN10TMsgSocket7ExecuteEv, Type: None
2025-03-08 21:19:33,720 - my_text.py:107  -   Address: 0x13390, Name: _ZN12SocketsLayerD2Ev, Type: None
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x133A0, Name: _ZN10TMsgSocket5PurgeEv.part.1, Type: Unknown
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x13400, Name: _ZN9TSnapBaseC2Ev, Type: None
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x13410, Name: _ZN9TSnapBase8SwapWordEt, Type: None
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x13420, Name: _ZN9TSnapBase9SwapDWordEj, Type: None
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x13430, Name: _Z15Msg_CloseSocketi, Type: None
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x13440, Name: _Z15Msg_GetSockAddri, Type: None
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x13490, Name: _ZN10TMsgSocket6SetSinER11sockaddr_inPct, Type: None
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x13510, Name: _ZN10TMsgSocket6GetSinE11sockaddr_inPcRt, Type: None
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x13560, Name: _ZN10TMsgSocket8GetLocalEv, Type: None
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x135A0, Name: _ZN10TMsgSocket9GetRemoteEv, Type: None
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x135E0, Name: _ZN10TMsgSocket18GetLastSocketErrorEv, Type: None
2025-03-08 21:19:33,721 - my_text.py:107  -   Address: 0x135F0, Name: _ZN10TMsgSocket9GotSocketEv, Type: None
2025-03-08 21:19:33,723 - my_text.py:107  -   Address: 0x13600, Name: _ZN10TMsgSocket11WaitingDataEv, Type: None
2025-03-08 21:19:33,723 - my_text.py:107  -   Address: 0x13640, Name: _ZN10TMsgSocket9SockCheckEi, Type: None
2025-03-08 21:19:33,723 - my_text.py:107  -   Address: 0x13660, Name: _ZN10TMsgSocket16SetSocketOptionsEv, Type: None
2025-03-08 21:19:33,723 - my_text.py:107  -   Address: 0x136E0, Name: _ZN10TMsgSocket9SetSocketEi, Type: None
2025-03-08 21:19:33,724 - my_text.py:107  -   Address: 0x13720, Name: _ZN10TMsgSocket8CanWriteEi, Type: None
2025-03-08 21:19:33,724 - my_text.py:107  -   Address: 0x13800, Name: _ZN10TMsgSocket7CanReadEi, Type: None
2025-03-08 21:19:33,724 - my_text.py:107  -   Address: 0x138E0, Name: _ZN10TMsgSocket11WaitForDataEii, Type: None
2025-03-08 21:19:33,724 - my_text.py:107  -   Address: 0x13990, Name: _ZN10TMsgSocket5PurgeEv, Type: None
2025-03-08 21:19:33,724 - my_text.py:107  -   Address: 0x139C0, Name: _ZN10TMsgSocket13DestroySocketEv, Type: None
2025-03-08 21:19:33,724 - my_text.py:107  -   Address: 0x13A10, Name: _ZN10TMsgSocket12CreateSocketEv, Type: None
2025-03-08 21:19:33,724 - my_text.py:107  -   Address: 0x13A60, Name: _ZN10TMsgSocket10SckConnectEv, Type: None
2025-03-08 21:19:33,724 - my_text.py:107  -   Address: 0x13DD0, Name: _ZN10TMsgSocket13SckDisconnectEv, Type: None
2025-03-08 21:19:33,724 - my_text.py:107  -   Address: 0x13DE0, Name: _ZN10TMsgSocket10ForceCloseEv, Type: None
2025-03-08 21:19:33,724 - my_text.py:107  -   Address: 0x13E20, Name: _ZN10TMsgSocket7SckBindEv, Type: None
2025-03-08 21:19:33,724 - my_text.py:107  -   Address: 0x13EE0, Name: _ZN10TMsgSocket9SckListenEv, Type: None
2025-03-08 21:19:33,725 - my_text.py:107  -   Address: 0x13F10, Name: _ZN10TMsgSocket9SckAcceptEv, Type: None
2025-03-08 21:19:33,725 - my_text.py:107  -   Address: 0x13F60, Name: _ZN10TMsgSocket10SendPacketEPvi, Type: None
2025-03-08 21:19:33,725 - my_text.py:107  -   Address: 0x13FF0, Name: _ZN10TMsgSocket11PacketReadyEi, Type: None
2025-03-08 21:19:33,725 - my_text.py:107  -   Address: 0x14000, Name: _ZN10TMsgSocket7ReceiveEPviRi, Type: None
2025-03-08 21:19:33,725 - my_text.py:107  -   Address: 0x140C0, Name: _ZN10TMsgSocket10RecvPacketEPvi, Type: None
2025-03-08 21:19:33,725 - my_text.py:107  -   Address: 0x14170, Name: _ZN10TMsgSocket10PeekPacketEPvi, Type: None
2025-03-08 21:19:33,726 - my_text.py:107  -   Address: 0x14220, Name: _ZN16TRawSocketPingerC2Ev, Type: None
2025-03-08 21:19:33,726 - my_text.py:107  -   Address: 0x14250, Name: _ZN16TRawSocketPingerD2Ev, Type: None
2025-03-08 21:19:33,727 - my_text.py:107  -   Address: 0x14270, Name: _ZN16TRawSocketPinger14PacketChecksumEv, Type: None
2025-03-08 21:19:33,727 - my_text.py:107  -   Address: 0x14390, Name: _ZN16TRawSocketPinger10InitPacketEv, Type: None
2025-03-08 21:19:33,727 - my_text.py:107  -   Address: 0x144B0, Name: _ZN16TRawSocketPinger7CanReadEi, Type: None
2025-03-08 21:19:33,728 - my_text.py:107  -   Address: 0x14560, Name: _ZN16TRawSocketPinger4PingEji, Type: None
2025-03-08 21:19:33,728 - my_text.py:107  -   Address: 0x14690, Name: _ZN7TPingerC2Ev, Type: None
2025-03-08 21:19:33,728 - my_text.py:107  -   Address: 0x146A0, Name: _ZN10TMsgSocketC2Ev, Type: None
2025-03-08 21:19:33,728 - my_text.py:107  -   Address: 0x14760, Name: _ZN7TPingerD2Ev, Type: None
2025-03-08 21:19:33,729 - my_text.py:107  -   Address: 0x14770, Name: _ZN10TMsgSocketD2Ev, Type: None
2025-03-08 21:19:33,729 - my_text.py:107  -   Address: 0x147B0, Name: _ZN10TMsgSocketD0Ev, Type: None
2025-03-08 21:19:33,729 - my_text.py:107  -   Address: 0x147D0, Name: _ZN7TPinger7RawPingEji, Type: None
2025-03-08 21:19:33,729 - my_text.py:107  -   Address: 0x14850, Name: _ZN7TPinger4PingEji, Type: None
2025-03-08 21:19:33,729 - my_text.py:107  -   Address: 0x14870, Name: _ZN7TPinger4PingEPci, Type: None
2025-03-08 21:19:33,729 - my_text.py:107  -   Address: 0x148B0, Name: _ZN10TMsgSocket4PingEPc, Type: None
2025-03-08 21:19:33,729 - my_text.py:107  -   Address: 0x148C0, Name: _ZN10TMsgSocket4PingE11sockaddr_in, Type: None
2025-03-08 21:19:33,729 - my_text.py:107  -   Address: 0x148F0, Name: _Z15RawSocketsCheckv, Type: None
2025-03-08 21:19:33,729 - my_text.py:107  -   Address: 0x14920, Name: _ZN12SocketsLayerC2Ev, Type: None
2025-03-08 21:19:33,729 - my_text.py:107  -   Address: 0x14940, Name: _Z10SysGetTickv, Type: None
2025-03-08 21:19:33,730 - my_text.py:107  -   Address: 0x14990, Name: _Z8SysSleepj, Type: None
2025-03-08 21:19:33,730 - my_text.py:107  -   Address: 0x149D0, Name: _Z9DeltaTimeRj, Type: None
2025-03-08 21:19:33,730 - my_text.py:107  -   Address: 0x149F0, Name: _ZN16TCustomMsgServer9CanAcceptEi, Type: None
2025-03-08 21:19:33,730 - my_text.py:107  -   Address: 0x14A10, Name: _ZN18TMsgListenerThread7ExecuteEv, Type: None
2025-03-08 21:19:33,730 - my_text.py:107  -   Address: 0x14A90, Name: _ZN16TCustomMsgServer18CreateWorkerSocketEi, Type: None
2025-03-08 21:19:33,730 - my_text.py:107  -   Address: 0x14B00, Name: _ZN14TMsgEventQueueD2Ev, Type: None
2025-03-08 21:19:33,730 - my_text.py:107  -   Address: 0x14B20, Name: _ZN14TMsgEventQueue5FlushEv, Type: None
2025-03-08 21:19:33,730 - my_text.py:107  -   Address: 0x14B30, Name: _ZN14TMsgEventQueueC2Eii, Type: None
2025-03-08 21:19:33,731 - my_text.py:107  -   Address: 0x14B60, Name: _ZN14TMsgEventQueue5EmptyEv, Type: None
2025-03-08 21:19:33,731 - my_text.py:107  -   Address: 0x14B70, Name: _ZN14TMsgEventQueue7ExtractEPv, Type: None
2025-03-08 21:19:33,731 - my_text.py:107  -   Address: 0x14BF0, Name: _ZN14TMsgEventQueue4FullEv, Type: None
2025-03-08 21:19:33,731 - my_text.py:107  -   Address: 0x14C20, Name: _ZN14TMsgEventQueue6InsertEPv, Type: None
2025-03-08 21:19:33,731 - my_text.py:107  -   Address: 0x14C80, Name: _ZN16TCustomMsgServer7DoEventEijttttt, Type: None
2025-03-08 21:19:33,731 - my_text.py:107  -   Address: 0x14DB0, Name: _ZN16TMsgWorkerThreadC2EP10TMsgSocketP16TCustomMsgServer, Type: None
2025-03-08 21:19:33,731 - my_text.py:107  -   Address: 0x14E00, Name: _ZN18TMsgListenerThreadC2EP10TMsgSocketP16TCustomMsgServer, Type: None
2025-03-08 21:19:33,731 - my_text.py:107  -   Address: 0x14E50, Name: _ZN16TCustomMsgServerC2Ev, Type: None
2025-03-08 21:19:33,732 - my_text.py:107  -   Address: 0x15070, Name: _ZN16TCustomMsgServer8LockListEv, Type: None
2025-03-08 21:19:33,732 - my_text.py:107  -   Address: 0x15080, Name: _ZN16TCustomMsgServer10UnlockListEv, Type: None
2025-03-08 21:19:33,732 - my_text.py:107  -   Address: 0x15090, Name: _ZN16TCustomMsgServer9FirstFreeEv, Type: None
2025-03-08 21:19:33,732 - my_text.py:107  -   Address: 0x150C0, Name: _ZN16TCustomMsgServer8IncomingEi, Type: None
2025-03-08 21:19:33,732 - my_text.py:107  -   Address: 0x15240, Name: _ZN16TCustomMsgServer13StartListenerEv, Type: None
2025-03-08 21:19:33,732 - my_text.py:107  -   Address: 0x15330, Name: _ZN16TCustomMsgServer7KillAllEv, Type: None
2025-03-08 21:19:33,732 - my_text.py:107  -   Address: 0x153E0, Name: _ZN16TCustomMsgServer12TerminateAllEv, Type: None
2025-03-08 21:19:33,732 - my_text.py:107  -   Address: 0x15480, Name: _ZN16TCustomMsgServer6DeleteEi, Type: None
2025-03-08 21:19:33,732 - my_text.py:107  -   Address: 0x154C0, Name: _ZN16TMsgWorkerThread7ExecuteEv, Type: None
2025-03-08 21:19:33,732 - my_text.py:107  -   Address: 0x155E0, Name: _ZN16TCustomMsgServer5StartEv, Type: None
2025-03-08 21:19:33,733 - my_text.py:107  -   Address: 0x156A0, Name: _ZN16TCustomMsgServer7StartToEPKct, Type: None
2025-03-08 21:19:33,733 - my_text.py:107  -   Address: 0x156E0, Name: _ZN16TCustomMsgServer4StopEv, Type: None
2025-03-08 21:19:33,733 - my_text.py:107  -   Address: 0x157A0, Name: _ZN16TCustomMsgServerD2Ev, Type: None
2025-03-08 21:19:33,733 - my_text.py:107  -   Address: 0x15830, Name: _ZN16TCustomMsgServerD0Ev, Type: None
2025-03-08 21:19:33,733 - my_text.py:107  -   Address: 0x15850, Name: _ZN16TCustomMsgServer17SetEventsCallBackEPFvPvP9TSrvEventiES0_, Type: Unknown
2025-03-08 21:19:33,733 - my_text.py:107  -   Address: 0x15860, Name: _ZN16TCustomMsgServer9PickEventEPv, Type: None
2025-03-08 21:19:33,733 - my_text.py:107  -   Address: 0x15890, Name: _ZN16TCustomMsgServer10EventEmptyEv, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x158A0, Name: _ZN16TCustomMsgServer11EventsFlushEv, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x158C0, Name: _ZN13TEcoTcpWorkerD2Ev, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x158E0, Name: _ZN16TMsgWorkerThreadD2Ev, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x15900, Name: _ZN18TMsgListenerThreadD2Ev, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x15920, Name: _ZN13TEcoTcpWorker7ExecuteEv, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x159C0, Name: _ZN18TMsgListenerThreadD0Ev, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x159E0, Name: _ZN16TMsgWorkerThreadD0Ev, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x15A00, Name: _ZN13TEcoTcpWorkerD0Ev, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x15A20, Name: _Z10ThreadProcPv, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x15A90, Name: _ZN11TSnapThreadC2Ev, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x15AB0, Name: _ZN11TSnapThread12ThreadCreateEv, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x15B10, Name: _ZN11TSnapThread5StartEv, Type: None
2025-03-08 21:19:33,734 - my_text.py:107  -   Address: 0x15B30, Name: _ZN11TSnapThread9TerminateEv, Type: None
2025-03-08 21:19:33,735 - my_text.py:107  -   Address: 0x15B40, Name: _ZN11TSnapThread4KillEv, Type: None
2025-03-08 21:19:33,735 - my_text.py:107  -   Address: 0x15B70, Name: _ZN11TSnapThread4JoinEv, Type: None
2025-03-08 21:19:33,735 - my_text.py:107  -   Address: 0x15BA0, Name: _ZN11TSnapThreadD2Ev, Type: None
2025-03-08 21:19:33,735 - my_text.py:107  -   Address: 0x15BD0, Name: _ZN11TSnapThreadD0Ev, Type: None
2025-03-08 21:19:33,735 - my_text.py:107  -   Address: 0x15BF0, Name: _ZN11TSnapThread7WaitForEm, Type: None
2025-03-08 21:19:33,735 - my_text.py:107  -   Address: 0x15C70, Name: _ZN11TSnapThread7ExecuteEv, Type: None
2025-03-08 21:19:33,735 - my_text.py:107  -   Address: 0x15C80, Name: _ZN12TSnap7ClientC2Ev, Type: None
2025-03-08 21:19:33,735 - my_text.py:107  -   Address: 0x15CD0, Name: _ZN12TSnap7Client11CloseThreadEv, Type: None
2025-03-08 21:19:33,735 - my_text.py:107  -   Address: 0x15DC0, Name: _ZN12TSnap7ClientD2Ev, Type: None
2025-03-08 21:19:33,736 - my_text.py:107  -   Address: 0x15E80, Name: _ZN12TSnap7ClientD0Ev, Type: None
2025-03-08 21:19:33,736 - my_text.py:107  -   Address: 0x15EA0, Name: _ZN12TSnap7Client10OpenThreadEv, Type: None
2025-03-08 21:19:33,736 - my_text.py:107  -   Address: 0x15F10, Name: _ZN12TSnap7Client5ResetEb, Type: None
2025-03-08 21:19:33,736 - my_text.py:107  -   Address: 0x15FA0, Name: _ZN12TSnap7Client12DoCompletionEv, Type: None
2025-03-08 21:19:33,736 - my_text.py:107  -   Address: 0x15FF0, Name: _ZN13TClientThread7ExecuteEv, Type: None
2025-03-08 21:19:33,736 - my_text.py:107  -   Address: 0x160B0, Name: _ZN12TSnap7Client13SetAsCallbackEPFvPviiES0_, Type: None
2025-03-08 21:19:33,736 - my_text.py:107  -   Address: 0x160D0, Name: _ZN12TSnap7Client8GetParamEiPv, Type: None
2025-03-08 21:19:33,736 - my_text.py:107  -   Address: 0x160E0, Name: _ZN12TSnap7Client8SetParamEiPv, Type: None
2025-03-08 21:19:33,736 - my_text.py:107  -   Address: 0x160F0, Name: _ZN12TSnap7Client17CheckAsCompletionERi, Type: None
2025-03-08 21:19:33,736 - my_text.py:107  -   Address: 0x16140, Name: _ZN12TSnap7Client13StartAsyncJobEv, Type: None
2025-03-08 21:19:33,736 - my_text.py:107  -   Address: 0x16250, Name: _ZN12TSnap7Client8AsDBFillEii, Type: None
2025-03-08 21:19:33,737 - my_text.py:107  -   Address: 0x162B0, Name: _ZN12TSnap7Client7AsDBGetEiPvRi, Type: None
2025-03-08 21:19:33,737 - my_text.py:107  -   Address: 0x16340, Name: _ZN12TSnap7Client10AsCompressEi, Type: None
2025-03-08 21:19:33,737 - my_text.py:107  -   Address: 0x163B0, Name: _ZN12TSnap7Client14AsCopyRamToRomEi, Type: None
2025-03-08 21:19:33,737 - my_text.py:107  -   Address: 0x16420, Name: _ZN12TSnap7Client10AsDownloadEiPvi, Type: None
2025-03-08 21:19:33,737 - my_text.py:107  -   Address: 0x164D0, Name: _ZN12TSnap7Client12AsFullUploadEiiPvRi, Type: None
2025-03-08 21:19:33,737 - my_text.py:107  -   Address: 0x16550, Name: _ZN12TSnap7Client8AsUploadEiiPvRi, Type: None
2025-03-08 21:19:33,737 - my_text.py:107  -   Address: 0x165D0, Name: _ZN12TSnap7Client13AsReadSZLListEP10TS7SZLListRi, Type: Unknown
2025-03-08 21:19:33,737 - my_text.py:107  -   Address: 0x16640, Name: _ZN12TSnap7Client9AsReadSZLEiiP6TS7SZLRi, Type: Unknown
2025-03-08 21:19:33,738 - my_text.py:107  -   Address: 0x166C0, Name: _ZN12TSnap7Client18AsListBlocksOfTypeEiPA8192_tRi, Type: None
2025-03-08 21:19:33,738 - my_text.py:107  -   Address: 0x16730, Name: _ZN12TSnap7Client11AsWriteAreaEiiiiiPv, Type: None
2025-03-08 21:19:33,738 - my_text.py:107  -   Address: 0x16830, Name: _ZN12TSnap7Client9AsCTWriteEiiPv, Type: None
2025-03-08 21:19:33,739 - my_text.py:107  -   Address: 0x16860, Name: _ZN12TSnap7Client9AsTMWriteEiiPv, Type: None
2025-03-08 21:19:33,739 - my_text.py:107  -   Address: 0x16890, Name: _ZN12TSnap7Client9AsABWriteEiiPv, Type: None
2025-03-08 21:19:33,739 - my_text.py:107  -   Address: 0x168C0, Name: _ZN12TSnap7Client9AsEBWriteEiiPv, Type: None
2025-03-08 21:19:33,739 - my_text.py:107  -   Address: 0x168F0, Name: _ZN12TSnap7Client9AsMBWriteEiiPv, Type: None
2025-03-08 21:19:33,739 - my_text.py:107  -   Address: 0x16920, Name: _ZN12TSnap7Client9AsDBWriteEiiiPv, Type: None
2025-03-08 21:19:33,740 - my_text.py:107  -   Address: 0x16950, Name: _ZN12TSnap7Client10AsReadAreaEiiiiiPv, Type: None
2025-03-08 21:19:33,740 - my_text.py:107  -   Address: 0x169D0, Name: _ZN12TSnap7Client8AsCTReadEiiPv, Type: None
2025-03-08 21:19:33,740 - my_text.py:107  -   Address: 0x16A00, Name: _ZN12TSnap7Client8AsTMReadEiiPv, Type: None
2025-03-08 21:19:33,740 - my_text.py:107  -   Address: 0x16A30, Name: _ZN12TSnap7Client8AsABReadEiiPv, Type: None
2025-03-08 21:19:33,740 - my_text.py:107  -   Address: 0x16A60, Name: _ZN12TSnap7Client8AsEBReadEiiPv, Type: None
2025-03-08 21:19:33,740 - my_text.py:107  -   Address: 0x16A90, Name: _ZN12TSnap7Client8AsMBReadEiiPv, Type: None
2025-03-08 21:19:33,740 - my_text.py:107  -   Address: 0x16AC0, Name: _ZN12TSnap7Client8AsDBReadEiiiPv, Type: None
2025-03-08 21:19:33,740 - my_text.py:107  -   Address: 0x16AF0, Name: _ZN12TSnap7Client16WaitAsCompletionEm, Type: None
2025-03-08 21:19:33,741 - my_text.py:107  -   Address: 0x16C70, Name: _ZN13TClientThreadD2Ev, Type: None
2025-03-08 21:19:33,741 - my_text.py:107  -   Address: 0x16C90, Name: _ZN13TClientThreadD0Ev, Type: None
2025-03-08 21:19:33,741 - my_text.py:107  -   Address: 0x16CB0, Name: _ZN13TIsoTcpSocket11IsoParsePDUE14TIsoControlPDU, Type: Unknown
2025-03-08 21:19:33,741 - my_text.py:107  -   Address: 0x16CC0, Name: _ZN13TIsoTcpSocket15FragmentSkippedEi, Type: None
2025-03-08 21:19:33,741 - my_text.py:107  -   Address: 0x16CD0, Name: _ZN13TIsoTcpSocketD2Ev, Type: None
2025-03-08 21:19:33,741 - my_text.py:107  -   Address: 0x16CF0, Name: _ZN13TIsoTcpSocketD0Ev, Type: None
2025-03-08 21:19:33,741 - my_text.py:107  -   Address: 0x16D10, Name: _ZN13TIsoTcpSocketC2Ev, Type: None
2025-03-08 21:19:33,741 - my_text.py:107  -   Address: 0x16D70, Name: _ZN13TIsoTcpSocket11SetIsoErrorEi, Type: None
2025-03-08 21:19:33,741 - my_text.py:107  -   Address: 0x16D80, Name: _ZN13TIsoTcpSocket11ClrIsoErrorEv, Type: None
2025-03-08 21:19:33,741 - my_text.py:107  -   Address: 0x16DA0, Name: _ZN13TIsoTcpSocket15BuildControlPDUEv, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x16F00, Name: _ZN13TIsoTcpSocket7PDUSizeEPv, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x16F10, Name: _ZN13TIsoTcpSocket8CheckPDUEPvh, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x16FA0, Name: _ZN13TIsoTcpSocket20IsoConfirmConnectionEh, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x17010, Name: _ZN13TIsoTcpSocket10isoConnectEv, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x17170, Name: _ZN13TIsoTcpSocket13isoSendBufferEPvi, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x17260, Name: _ZN13TIsoTcpSocket11IsoPDUReadyEv, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x17280, Name: _ZN13TIsoTcpSocket13isoDisconnectEb, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x17340, Name: _ZN13TIsoTcpSocket10isoSendPDUEP11TIsoDataPDU, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x173D0, Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x17540, Name: _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x17670, Name: _ZN13TIsoTcpSocket13isoRecvBufferEPvRi, Type: None
2025-03-08 21:19:33,742 - my_text.py:107  -   Address: 0x17710, Name: _ZN13TIsoTcpSocket17isoExchangeBufferEPvRi, Type: None
2025-03-08 21:19:33,743 - my_text.py:107  -   Address: 0x17780, Name: _ZN13TIsoTcpSocket14isoExchangePDUEP11TIsoDataPDU, Type: None
2025-03-08 21:19:33,743 - my_text.py:107  -   Address: 0x177E0, Name: _ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind, Type: None
2025-03-08 21:19:33,743 - my_text.py:107  -   Address: 0x178B0, Name: _ZN15TServersManagerC2Ev, Type: None
2025-03-08 21:19:33,744 - my_text.py:107  -   Address: 0x17980, Name: _ZN15TServersManager4LockEv, Type: None
2025-03-08 21:19:33,744 - my_text.py:107  -   Address: 0x17990, Name: _ZN15TServersManager6UnlockEv, Type: None
2025-03-08 21:19:33,744 - my_text.py:107  -   Address: 0x179A0, Name: _ZN15TServersManager9AddServerEP17TConnectionServer, Type: None
2025-03-08 21:19:33,744 - my_text.py:107  -   Address: 0x179F0, Name: _ZN17TConnectionServerC2Ev, Type: None
2025-03-08 21:19:33,744 - my_text.py:107  -   Address: 0x17AC0, Name: _ZN17TConnectionServer4LockEv, Type: None
2025-03-08 21:19:33,744 - my_text.py:107  -   Address: 0x17AD0, Name: _ZN17TConnectionServer6UnlockEv, Type: None
2025-03-08 21:19:33,744 - my_text.py:107  -   Address: 0x17AE0, Name: _ZN17TConnectionServer5StartEv, Type: None
2025-03-08 21:19:33,744 - my_text.py:107  -   Address: 0x17C10, Name: _ZN17TConnectionServer7StartToEPKc, Type: None
2025-03-08 21:19:33,744 - my_text.py:107  -   Address: 0x17C30, Name: _ZN17TConnectionServer4StopEv, Type: None
2025-03-08 21:19:33,745 - my_text.py:107  -   Address: 0x17C90, Name: _ZN17TConnectionServerD2Ev, Type: None
2025-03-08 21:19:33,745 - my_text.py:107  -   Address: 0x17CC0, Name: _ZN15TServersManager12CreateServerEjRP17TConnectionServer, Type: None
2025-03-08 21:19:33,745 - my_text.py:107  -   Address: 0x17DA0, Name: _ZN15TServersManager9GetServerEjRP17TConnectionServer, Type: None
2025-03-08 21:19:33,745 - my_text.py:107  -   Address: 0x17E00, Name: _Z24ServersManager_GetServerjRP17TConnectionServer, Type: None
2025-03-08 21:19:33,745 - my_text.py:107  -   Address: 0x17E80, Name: _ZN15TServersManagerD2Ev, Type: None
2025-03-08 21:19:33,745 - my_text.py:107  -   Address: 0x17F20, Name: _ZN17TConnectionServer11FindPartnerEj, Type: None
2025-03-08 21:19:33,745 - my_text.py:107  -   Address: 0x17F60, Name: _ZN17TConnectionServer9FirstFreeEv, Type: None
2025-03-08 21:19:33,745 - my_text.py:107  -   Address: 0x17F90, Name: _ZN17TConnectionServer15RegisterPartnerEP13TSnap7Partner, Type: None
2025-03-08 21:19:33,745 - my_text.py:107  -   Address: 0x18010, Name: _ZN17TConnectionServer13RemovePartnerEP13TSnap7Partner, Type: None
2025-03-08 21:19:33,745 - my_text.py:107  -   Address: 0x18060, Name: _ZN15TServersManager13RemovePartnerEP17TConnectionServerP13TSnap7Partner, Type: None
2025-03-08 21:19:33,745 - my_text.py:107  -   Address: 0x180F0, Name: _Z28ServersManager_RemovePartnerP17TConnectionServerP13TSnap7Partner, Type: None
2025-03-08 21:19:33,746 - my_text.py:107  -   Address: 0x18140, Name: _ZN17TConnectionServer8IncomingEi, Type: None
2025-03-08 21:19:33,746 - my_text.py:107  -   Address: 0x181D0, Name: _ZN19TConnListenerThread7ExecuteEv, Type: None
2025-03-08 21:19:33,746 - my_text.py:107  -   Address: 0x18250, Name: _ZN13TSnap7PartnerC2Eb, Type: None
2025-03-08 21:19:33,746 - my_text.py:107  -   Address: 0x18420, Name: _ZN13TSnap7Partner11GetNextByteEv, Type: None
2025-03-08 21:19:33,746 - my_text.py:107  -   Address: 0x18450, Name: _ZN13TSnap7Partner5StartEv, Type: None
2025-03-08 21:19:33,746 - my_text.py:107  -   Address: 0x18580, Name: _ZN13TSnap7Partner7StartToEPKcS1_tt, Type: None
2025-03-08 21:19:33,746 - my_text.py:107  -   Address: 0x185E0, Name: _ZN13TSnap7Partner10DisconnectEv, Type: None
2025-03-08 21:19:33,746 - my_text.py:107  -   Address: 0x18600, Name: _ZN13TSnap7Partner8GetParamEiPv, Type: None
2025-03-08 21:19:33,746 - my_text.py:107  -   Address: 0x18605, Name: def_18620, Type: Unknown
2025-03-08 21:19:33,746 - my_text.py:107  -   Address: 0x18700, Name: _ZN13TSnap7Partner8SetParamEiPv, Type: None
2025-03-08 21:19:33,747 - my_text.py:107  -   Address: 0x18705, Name: def_18720, Type: Unknown
2025-03-08 21:19:33,747 - my_text.py:107  -   Address: 0x18810, Name: _ZN13TSnap7Partner9ClearRecvEv, Type: None
2025-03-08 21:19:33,747 - my_text.py:107  -   Address: 0x18850, Name: _ZN13TSnap7Partner13ConnectToPeerEv, Type: None
2025-03-08 21:19:33,747 - my_text.py:107  -   Address: 0x18880, Name: _ZN14TPartnerThread7ExecuteEv, Type: None
2025-03-08 21:19:33,747 - my_text.py:107  -   Address: 0x18980, Name: _ZN13TSnap7Partner24PerformFunctionNegotiateEv, Type: None
2025-03-08 21:19:33,747 - my_text.py:107  -   Address: 0x18AF0, Name: _ZN13TSnap7Partner11CloseWorkerEv, Type: None
2025-03-08 21:19:33,747 - my_text.py:107  -   Address: 0x18B90, Name: _ZN13TSnap7Partner4StopEv, Type: None
2025-03-08 21:19:33,747 - my_text.py:107  -   Address: 0x18C10, Name: _ZN13TSnap7PartnerD2Ev, Type: None
2025-03-08 21:19:33,747 - my_text.py:107  -   Address: 0x18CB0, Name: _ZN13TSnap7PartnerD0Ev, Type: None
2025-03-08 21:19:33,747 - my_text.py:107  -   Address: 0x18CD0, Name: _ZN13TSnap7Partner9BlockSendEv, Type: None
2025-03-08 21:19:33,747 - my_text.py:107  -   Address: 0x19020, Name: _ZN13TSnap7Partner8PickDataEv, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x191E0, Name: _ZN13TSnap7Partner9BlockRecvEv, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x193B0, Name: _ZN13TSnap7Partner17ConnectionConfirmEv, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x193E0, Name: _ZN13TSnap7Partner7ExecuteEv, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x196E0, Name: _ZN13TSnap7Partner6StatusEv, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x19750, Name: _ZN13TSnap7Partner7AsBSendEjPvi, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x19830, Name: _ZN13TSnap7Partner22CheckAsBSendCompletionERi, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x19870, Name: _ZN13TSnap7Partner21WaitAsBSendCompletionEj, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x199E0, Name: _ZN13TSnap7Partner5BSendEjPvi, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x19A00, Name: _ZN13TSnap7Partner15SetSendCallbackEPFvPviES0_, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x19A20, Name: _ZN13TSnap7Partner5BRecvERjPvRij, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x19BD0, Name: _ZN13TSnap7Partner22CheckAsBRecvCompletionERiRjPvS0_, Type: None
2025-03-08 21:19:33,748 - my_text.py:107  -   Address: 0x19C70, Name: _ZN13TSnap7Partner15SetRecvCallbackEPFvPvijS0_iES0_, Type: None
2025-03-08 21:19:33,749 - my_text.py:107  -   Address: 0x19C90, Name: _ZN19TConnListenerThreadD2Ev, Type: None
2025-03-08 21:19:33,750 - my_text.py:107  -   Address: 0x19CB0, Name: _ZN14TPartnerThreadD2Ev, Type: None
2025-03-08 21:19:33,750 - my_text.py:107  -   Address: 0x19CD0, Name: _ZN19TConnListenerThreadD0Ev, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19CF0, Name: _ZN14TPartnerThreadD0Ev, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19D10, Name: _ZN10TSnap7PeerD2Ev, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19D30, Name: _ZN10TSnap7PeerD0Ev, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19D50, Name: _ZN10TSnap7PeerC2Ev, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19DA0, Name: _ZN10TSnap7Peer8ClrErrorEv, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19DC0, Name: _ZN10TSnap7Peer8SetErrorEi, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19E00, Name: _ZN10TSnap7Peer11GetNextWordEv, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19E20, Name: _ZN10TSnap7Peer18NegotiatePDULengthEv, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19F50, Name: _ZN10TSnap7Peer14PeerDisconnectEv, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19F70, Name: _ZN10TSnap7Peer11PeerConnectEv, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19FC0, Name: _ZN13TIsoTcpWorker17IsoPerformCommandERi, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19FD0, Name: _ZN13TIsoTcpWorker11ExecuteSendEv, Type: None
2025-03-08 21:19:33,751 - my_text.py:107  -   Address: 0x19FE0, Name: _ZN9TS7Worker15FragmentSkippedEi, Type: None
2025-03-08 21:19:33,752 - my_text.py:107  -   Address: 0x19FF0, Name: _ZN13TIsoTcpWorker11ExecuteRecvEv, Type: None
2025-03-08 21:19:33,752 - my_text.py:107  -   Address: 0x1A100, Name: _ZN9TS7Worker11ExecuteRecvEv, Type: None
2025-03-08 21:19:33,752 - my_text.py:107  -   Address: 0x1A120, Name: _ZN13TIsoTcpWorker7ExecuteEv, Type: None
2025-03-08 21:19:33,752 - my_text.py:107  -   Address: 0x1A150, Name: _ZN9TS7WorkerC2Ev, Type: None
2025-03-08 21:19:33,752 - my_text.py:107  -   Address: 0x1A1A0, Name: _ZN12TSnap7Server18CreateWorkerSocketEi, Type: None
2025-03-08 21:19:33,752 - my_text.py:107  -   Address: 0x1A210, Name: _ZN9TS7Worker11CheckPDU_inEi, Type: None
2025-03-08 21:19:33,752 - my_text.py:107  -   Address: 0x1A2A0, Name: _ZN9TS7Worker3BCDEt, Type: None
2025-03-08 21:19:33,752 - my_text.py:107  -   Address: 0x1A2C0, Name: _ZN9TS7Worker8FillTimeEP7TS7Time, Type: None
2025-03-08 21:19:33,753 - my_text.py:107  -   Address: 0x1A380, Name: _ZN9TS7Worker7DoEventEjttttt, Type: None
2025-03-08 21:19:33,753 - my_text.py:107  -   Address: 0x1A3D0, Name: _ZN9TS7Worker13PerformPDUAckERi, Type: None
2025-03-08 21:19:33,753 - my_text.py:107  -   Address: 0x1A3E0, Name: _ZN9TS7Worker12DataSizeByteEi, Type: None
2025-03-08 21:19:33,753 - my_text.py:107  -   Address: 0x1A400, Name: _ZN9TS7Worker11RA_NotFoundEP15TResFunReadItemR3TEv, Type: Unknown
2025-03-08 21:19:33,753 - my_text.py:107  -   Address: 0x1A450, Name: _ZN9TS7Worker13RA_OutOfRangeEP15TResFunReadItemR3TEv, Type: Unknown
2025-03-08 21:19:33,756 - my_text.py:107  -   Address: 0x1A4A0, Name: _ZN9TS7Worker14RA_SizeOverPDUEP15TResFunReadItemR3TEv, Type: Unknown
2025-03-08 21:19:33,756 - my_text.py:107  -   Address: 0x1A500, Name: _ZN9TS7Worker11WA_NotFoundER3TEv, Type: Unknown
2025-03-08 21:19:33,756 - my_text.py:107  -   Address: 0x1A510, Name: _ZN9TS7Worker23WA_InvalidTransportSizeER3TEv, Type: Unknown
2025-03-08 21:19:33,757 - my_text.py:107  -   Address: 0x1A520, Name: _ZN9TS7Worker13WA_OutOfRangeER3TEv, Type: Unknown
2025-03-08 21:19:33,757 - my_text.py:107  -   Address: 0x1A530, Name: _ZN9TS7Worker19WA_DataSizeMismatchER3TEv, Type: Unknown
2025-03-08 21:19:33,757 - my_text.py:107  -   Address: 0x1A540, Name: _ZN9TS7Worker24PerformFunctionNegotiateEv, Type: None
2025-03-08 21:19:33,757 - my_text.py:107  -   Address: 0x1A6C0, Name: _ZN9TS7Worker22PerformFunctionControlEh, Type: None
2025-03-08 21:19:33,757 - my_text.py:107  -   Address: 0x1A840, Name: _ZN9TS7Worker21PerformFunctionUploadEv, Type: None
2025-03-08 21:19:33,757 - my_text.py:107  -   Address: 0x1A900, Name: _ZN9TS7Worker23PerformFunctionDownloadEv, Type: None
2025-03-08 21:19:33,757 - my_text.py:107  -   Address: 0x1A9C0, Name: _ZN9TS7Worker22PerformGroupProgrammerEv, Type: None
2025-03-08 21:19:33,757 - my_text.py:107  -   Address: 0x1A9F0, Name: _ZN9TS7Worker22PerformGroupCyclicDataEv, Type: None
2025-03-08 21:19:33,757 - my_text.py:107  -   Address: 0x1AA20, Name: _ZN9TS7Worker11BLK_ListAllER3TCB, Type: None
2025-03-08 21:19:33,757 - my_text.py:107  -   Address: 0x1ABB0, Name: _ZN9TS7Worker22BLK_NoResource_ListBoTEP14TDataFunGetBotR3TCB, Type: Unknown
2025-03-08 21:19:33,757 - my_text.py:107  -   Address: 0x1AC20, Name: _ZN9TS7Worker11BLK_ListBoTEhbR3TCB, Type: None
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1AF40, Name: _ZN9TS7Worker25BLK_NoResource_GetBlkInfoEP17TResDataBlockInfoR3TCB, Type: Unknown
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1AFA0, Name: _ZN9TS7Worker26BLK_GetBlockNum_GetBlkInfoERiP17TReqDataBlockInfo, Type: Unknown
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1B000, Name: _ZN9TS7Worker26BLK_DoBlockInfo_GetBlkInfoEP7TS7AreaP17TResDataBlockInfoR3TCB, Type: Unknown
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1B190, Name: _ZN9TS7Worker15SZLNotAvailableEv, Type: None
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1B1F0, Name: _ZN9TS7Worker14SZLSystemStateEv, Type: None
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1B250, Name: _ZN9TS7Worker7SZLDataEPvi, Type: None
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1B300, Name: _ZN9TS7Worker9SZL_ID424Ev, Type: None
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1B3A0, Name: _ZN9TS7Worker16SZL_ID131_IDX003Ev, Type: None
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1B450, Name: _ZN9TS7Worker15PerformGroupSZLEv, Type: None
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1B93C, Name: def_1C407, Type: Unknown
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1B9B0, Name: def_1BF8A, Type: Unknown
2025-03-08 21:19:33,758 - my_text.py:107  -   Address: 0x1BD6B, Name: def_1C072, Type: Unknown
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1BE1C, Name: def_1C2B1, Type: Unknown
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1C737, Name: def_1C76C, Type: Unknown
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1C95B, Name: def_1C979, Type: Unknown
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1CDA0, Name: _ZN9TS7Worker20PerformGroupSecurityEv, Type: None
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1CF10, Name: _ZN9TS7Worker15PerformGetClockEv, Type: None
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1D050, Name: _ZN9TS7Worker15PerformSetClockEv, Type: None
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1D170, Name: _ZN12TSnap7ServerC2Ev, Type: None
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1D260, Name: _ZN12TSnap7Server6FindDBEt, Type: None
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1D290, Name: _ZN9TS7Worker14BLK_GetBlkInfoER3TCB, Type: None
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1D430, Name: _ZN9TS7Worker21PerformGroupBlockInfoEv, Type: None
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1D510, Name: _ZN9TS7Worker17PerformPDUUsrDataERi, Type: None
2025-03-08 21:19:33,759 - my_text.py:107  -   Address: 0x1D52A, Name: def_1D561, Type: Unknown
2025-03-08 21:19:33,760 - my_text.py:107  -   Address: 0x1D5E0, Name: _ZN9TS7Worker7GetAreaEht, Type: None
2025-03-08 21:19:33,760 - my_text.py:107  -   Address: 0x1D680, Name: _ZN12TSnap7Server9IndexOfDBEt, Type: None
2025-03-08 21:19:33,760 - my_text.py:107  -   Address: 0x1D6C0, Name: _ZN12TSnap7Server15FindFirstFreeDBEv, Type: None
2025-03-08 21:19:33,760 - my_text.py:107  -   Address: 0x1D6F0, Name: _ZN12TSnap7Server10RegisterDBEtPvt, Type: None
2025-03-08 21:19:33,760 - my_text.py:107  -   Address: 0x1D7E0, Name: _ZN12TSnap7Server11RegisterSysEiPvt, Type: None
2025-03-08 21:19:33,760 - my_text.py:107  -   Address: 0x1D890, Name: _ZN12TSnap7Server12UnregisterDBEt, Type: None
2025-03-08 21:19:33,760 - my_text.py:107  -   Address: 0x1D910, Name: _ZN12TSnap7Server13UnregisterSysEi, Type: None
2025-03-08 21:19:33,760 - my_text.py:107  -   Address: 0x1D970, Name: _ZN12TSnap7Server10DisposeAllEv, Type: None
2025-03-08 21:19:33,760 - my_text.py:107  -   Address: 0x1DA20, Name: _ZN12TSnap7ServerD2Ev, Type: None
2025-03-08 21:19:33,760 - my_text.py:107  -   Address: 0x1DA90, Name: _ZN12TSnap7ServerD0Ev, Type: None
2025-03-08 21:19:33,760 - my_text.py:107  -   Address: 0x1DAB0, Name: _ZN12TSnap7Server7StartToEPKc, Type: None
2025-03-08 21:19:33,761 - my_text.py:107  -   Address: 0x1DAC0, Name: _ZN12TSnap7Server8GetParamEiPv, Type: None
2025-03-08 21:19:33,761 - my_text.py:107  -   Address: 0x1DB20, Name: _ZN12TSnap7Server8SetParamEiPv, Type: None
2025-03-08 21:19:33,761 - my_text.py:107  -   Address: 0x1DBE0, Name: _ZN12TSnap7Server12RegisterAreaEitPvt, Type: None
2025-03-08 21:19:33,761 - my_text.py:107  -   Address: 0x1DC10, Name: _ZN12TSnap7Server14UnregisterAreaEit, Type: None
2025-03-08 21:19:33,761 - my_text.py:107  -   Address: 0x1DC30, Name: _ZN12TSnap7Server8LockAreaEit, Type: None
2025-03-08 21:19:33,761 - my_text.py:107  -   Address: 0x1DC90, Name: _ZN12TSnap7Server10UnlockAreaEit, Type: None
2025-03-08 21:19:33,761 - my_text.py:107  -   Address: 0x1DCF0, Name: _ZN12TSnap7Server21SetReadEventsCallBackEPFvPvP9TSrvEventiES0_, Type: Unknown
2025-03-08 21:19:33,761 - my_text.py:107  -   Address: 0x1DD10, Name: _ZN12TSnap7Server17SetRWAreaCallBackEPFiPviiP6TS7TagS0_ES0_, Type: Unknown
2025-03-08 21:19:33,762 - my_text.py:107  -   Address: 0x1DD30, Name: _ZN12TSnap7Server11DoReadEventEijttttt, Type: None
2025-03-08 21:19:33,762 - my_text.py:107  -   Address: 0x1DE20, Name: _ZN9TS7Worker11DoReadEventEjttttt, Type: None
2025-03-08 21:19:33,762 - my_text.py:107  -   Address: 0x1DE60, Name: _ZN12TSnap7Server10DoReadAreaEiiiiiiPv, Type: None
2025-03-08 21:19:33,762 - my_text.py:107  -   Address: 0x1DF30, Name: _ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv, Type: None
2025-03-08 21:19:33,762 - my_text.py:107  -   Address: 0x1E18A, Name: def_1E2C2, Type: Unknown
2025-03-08 21:19:33,762 - my_text.py:107  -   Address: 0x1E3A0, Name: _ZN9TS7Worker19PerformFunctionReadEv, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1E610, Name: _ZN12TSnap7Server11DoWriteAreaEiiiiiiPv, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1E6F0, Name: _ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1EAE0, Name: _ZN9TS7Worker20PerformFunctionWriteEv, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1EEF0, Name: _ZN9TS7Worker17PerformPDURequestERi, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1EFA0, Name: _ZN9TS7Worker17IsoPerformCommandERi, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1F080, Name: _ZN13TIsoTcpWorkerD2Ev, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1F0A0, Name: _ZN9TS7WorkerD2Ev, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1F0C0, Name: _ZN13TIsoTcpWorkerD0Ev, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1F0E0, Name: _ZN9TS7WorkerD0Ev, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1F100, Name: _Z11NumToStringiij, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1F300, Name: _ZL12StrBlockTypet, Type: None
2025-03-08 21:19:33,763 - my_text.py:107  -   Address: 0x1F323, Name: def_1F401, Type: Unknown
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x1F540, Name: _ZL9IsoTextOfi, Type: None
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x1F8A0, Name: _Z11IntToStringi, Type: None
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x1F8C0, Name: _ZL13TxtDataResultR9TSrvEvent.isra.8, Type: None
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x1F8E0, Name: def_1F9B1, Type: Unknown
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x1FAF0, Name: _ZL12TxtStartSizeR9TSrvEvent.isra.9, Type: None
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x1FCC0, Name: _ZL7TxtAreaR9TSrvEvent.isra.10, Type: None
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x1FF70, Name: _ZL9TcpTextOfi, Type: None
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x206D0, Name: _Z12TimeToStringl, Type: None
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x20840, Name: _Z17IpAddressToStringi, Type: None
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x208B0, Name: _ZL10SenderTextR9TSrvEvent.isra.6, Type: None
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x20B10, Name: _Z10ErrCliTexti, Type: None
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x21550, Name: _Z10ErrSrvTexti, Type: None
2025-03-08 21:19:33,764 - my_text.py:107  -   Address: 0x21A70, Name: _Z10ErrParTexti, Type: None
2025-03-08 21:19:33,765 - my_text.py:107  -   Address: 0x22170, Name: _Z10EvtSrvTextR9TSrvEvent, Type: None
2025-03-08 21:19:33,765 - my_text.py:107  -   Address: 0x22991, Name: def_230F1, Type: Unknown
2025-03-08 21:19:33,765 - my_text.py:107  -   Address: 0x22D6E, Name: def_230C9, Type: Unknown
2025-03-08 21:19:33,765 - my_text.py:107  -   Address: 0x24760, Name: _ZN17TSnap7MicroClientD2Ev, Type: None
2025-03-08 21:19:33,765 - my_text.py:107  -   Address: 0x24780, Name: _ZN17TSnap7MicroClientD0Ev, Type: None
2025-03-08 21:19:33,765 - my_text.py:107  -   Address: 0x247A0, Name: _ZN17TSnap7MicroClientC2Ev, Type: None
2025-03-08 21:19:33,765 - my_text.py:107  -   Address: 0x24880, Name: _ZN17TSnap7MicroClient18opListBlocksOfTypeEv, Type: None
2025-03-08 21:19:33,765 - my_text.py:107  -   Address: 0x24BE0, Name: _ZN17TSnap7MicroClient8FillTimeEtPc, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x24C40, Name: _ZN17TSnap7MicroClient8opDeleteEv, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x24E50, Name: _ZN17TSnap7MicroClient9BCDtoByteEh, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x24E70, Name: _ZN17TSnap7MicroClient9WordToBCDEt, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x24E90, Name: _ZN17TSnap7MicroClient9opPlcStopEv, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x24FC0, Name: _ZN17TSnap7MicroClient13opPlcHotStartEv, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x25100, Name: _ZN17TSnap7MicroClient14opPlcColdStartEv, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x25260, Name: _ZN17TSnap7MicroClient14opCopyRamToRomEv, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x253B0, Name: _ZN17TSnap7MicroClient10opCompressEv, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x254E0, Name: _ZN17TSnap7MicroClient8CpuErrorEi, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x255B0, Name: _ZN17TSnap7MicroClient15opClearPasswordEv, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x256C0, Name: _ZN17TSnap7MicroClient13opSetPasswordEv, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x25840, Name: _ZN17TSnap7MicroClient13opSetDateTimeEv, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x259E0, Name: _ZN17TSnap7MicroClient13opGetDateTimeEv, Type: None
2025-03-08 21:19:33,766 - my_text.py:107  -   Address: 0x25BA0, Name: _ZN17TSnap7MicroClient9opReadSZLEv, Type: None
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x25FE0, Name: _ZN17TSnap7MicroClient15opGetProtectionEv, Type: None
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x260C0, Name: _ZN17TSnap7MicroClient14opGetPlcStatusEv, Type: None
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x26170, Name: _ZN17TSnap7MicroClient12opGetCpuInfoEv, Type: None
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x26320, Name: _ZN17TSnap7MicroClient14opGetOrderCodeEv, Type: None
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x263E0, Name: _ZN17TSnap7MicroClient13opReadSZLListEv, Type: None
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x26510, Name: _ZN17TSnap7MicroClient8opUploadEv, Type: None
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x26B30, Name: _ZN17TSnap7MicroClient13opAgBlockInfoEv, Type: None
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x26EF0, Name: _ZN17TSnap7MicroClient12opListBlocksEv, Type: None
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x26FEC, Name: def_271D3, Type: Unknown
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x27070, Name: def_2704F, Type: Unknown
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x270B0, Name: def_2708F, Type: Unknown
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x270F0, Name: def_270CF, Type: Unknown
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x27130, Name: def_2710F, Type: Unknown
2025-03-08 21:19:33,767 - my_text.py:107  -   Address: 0x27170, Name: def_2714F, Type: Unknown
2025-03-08 21:19:33,768 - my_text.py:107  -   Address: 0x271B0, Name: def_2718F, Type: Unknown
2025-03-08 21:19:33,768 - my_text.py:107  -   Address: 0x27660, Name: _ZN17TSnap7MicroClient15opReadMultiVarsEv, Type: None
2025-03-08 21:19:33,768 - my_text.py:107  -   Address: 0x27970, Name: _ZN17TSnap7MicroClient12DataSizeByteEi, Type: None
2025-03-08 21:19:33,768 - my_text.py:107  -   Address: 0x27990, Name: _ZN17TSnap7MicroClient16opWriteMultiVarsEv, Type: None
2025-03-08 21:19:33,768 - my_text.py:107  -   Address: 0x27B19, Name: def_27C32, Type: Unknown
2025-03-08 21:19:33,768 - my_text.py:107  -   Address: 0x27DB0, Name: _ZN17TSnap7MicroClient11opWriteAreaEv, Type: None
2025-03-08 21:19:33,768 - my_text.py:107  -   Address: 0x27FC6, Name: def_2807D, Type: Unknown
2025-03-08 21:19:33,768 - my_text.py:107  -   Address: 0x28160, Name: _ZN17TSnap7MicroClient8opDBFillEv, Type: None
2025-03-08 21:19:33,768 - my_text.py:107  -   Address: 0x28220, Name: _ZN17TSnap7MicroClient10opReadAreaEv, Type: None
2025-03-08 21:19:33,768 - my_text.py:107  -   Address: 0x28530, Name: _ZN17TSnap7MicroClient7opDBGetEv, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x28650, Name: _ZN17TSnap7MicroClient7DWordAtEPv, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x28660, Name: _ZN17TSnap7MicroClient11opGetCpInfoEv, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x28720, Name: _ZN17TSnap7MicroClient10CheckBlockEiiPvi, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x287F0, Name: _ZN17TSnap7MicroClient15SubBlockToBlockEi, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x28810, Name: _ZN17TSnap7MicroClient10opDownloadEv, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x28F40, Name: _ZN17TSnap7MicroClient16PerformOperationEv, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x28F80, Name: def_28F66, Type: Unknown
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x29230, Name: _ZN17TSnap7MicroClient10DisconnectEv, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x29270, Name: _ZN17TSnap7MicroClient7ConnectEv, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x292C0, Name: _ZN17TSnap7MicroClient5ResetEb, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x292F0, Name: _ZN17TSnap7MicroClient17SetConnectionTypeEt, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x29300, Name: _ZN17TSnap7MicroClient19SetConnectionParamsEPKctt, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x29320, Name: _ZN17TSnap7MicroClient9ConnectToEPKcii, Type: None
2025-03-08 21:19:33,769 - my_text.py:107  -   Address: 0x29350, Name: _ZN17TSnap7MicroClient8GetParamEiPv, Type: None
2025-03-08 21:19:33,770 - my_text.py:107  -   Address: 0x29355, Name: def_29370, Type: Unknown
2025-03-08 21:19:33,770 - my_text.py:107  -   Address: 0x29400, Name: _ZN17TSnap7MicroClient8SetParamEiPv, Type: None
2025-03-08 21:19:33,770 - my_text.py:107  -   Address: 0x29405, Name: def_29420, Type: Unknown
2025-03-08 21:19:33,770 - my_text.py:107  -   Address: 0x294C0, Name: _ZN17TSnap7MicroClient8ReadAreaEiiiiiPv, Type: None
2025-03-08 21:19:33,770 - my_text.py:107  -   Address: 0x29540, Name: _ZN17TSnap7MicroClient9WriteAreaEiiiiiPv, Type: None
2025-03-08 21:19:33,770 - my_text.py:107  -   Address: 0x295C0, Name: _ZN17TSnap7MicroClient13ReadMultiVarsEP11TS7DataItemi, Type: Unknown
2025-03-08 21:19:33,770 - my_text.py:107  -   Address: 0x29620, Name: _ZN17TSnap7MicroClient14WriteMultiVarsEP11TS7DataItemi, Type: Unknown
2025-03-08 21:19:33,770 - my_text.py:107  -   Address: 0x29680, Name: _ZN17TSnap7MicroClient6DBReadEiiiPv, Type: None
2025-03-08 21:19:33,770 - my_text.py:107  -   Address: 0x296B0, Name: _ZN17TSnap7MicroClient7DBWriteEiiiPv, Type: None
2025-03-08 21:19:33,770 - my_text.py:107  -   Address: 0x296E0, Name: _ZN17TSnap7MicroClient6MBReadEiiPv, Type: None
2025-03-08 21:19:33,770 - my_text.py:107  -   Address: 0x29710, Name: _ZN17TSnap7MicroClient7MBWriteEiiPv, Type: None
2025-03-08 21:19:33,771 - my_text.py:107  -   Address: 0x29740, Name: _ZN17TSnap7MicroClient6EBReadEiiPv, Type: None
2025-03-08 21:19:33,771 - my_text.py:107  -   Address: 0x29770, Name: _ZN17TSnap7MicroClient7EBWriteEiiPv, Type: None
2025-03-08 21:19:33,771 - my_text.py:107  -   Address: 0x297A0, Name: _ZN17TSnap7MicroClient6ABReadEiiPv, Type: None
2025-03-08 21:19:33,771 - my_text.py:107  -   Address: 0x297D0, Name: _ZN17TSnap7MicroClient7ABWriteEiiPv, Type: None
2025-03-08 21:19:33,771 - my_text.py:107  -   Address: 0x29800, Name: _ZN17TSnap7MicroClient6TMReadEiiPv, Type: None
2025-03-08 21:19:33,771 - my_text.py:107  -   Address: 0x29830, Name: _ZN17TSnap7MicroClient7TMWriteEiiPv, Type: None
2025-03-08 21:19:33,771 - my_text.py:107  -   Address: 0x29860, Name: _ZN17TSnap7MicroClient6CTReadEiiPv, Type: None
2025-03-08 21:19:33,771 - my_text.py:107  -   Address: 0x29890, Name: _ZN17TSnap7MicroClient7CTWriteEiiPv, Type: None
2025-03-08 21:19:33,771 - my_text.py:107  -   Address: 0x298C0, Name: _ZN17TSnap7MicroClient10ListBlocksEP13TS7BlocksList, Type: Unknown
2025-03-08 21:19:33,771 - my_text.py:107  -   Address: 0x29920, Name: _ZN17TSnap7MicroClient14GetAgBlockInfoEiiP12TS7BlockInfo, Type: Unknown
2025-03-08 21:19:33,772 - my_text.py:107  -   Address: 0x29980, Name: _ZN17TSnap7MicroClient14GetPgBlockInfoEPvP12TS7BlockInfoi, Type: None
2025-03-08 21:19:33,772 - my_text.py:107  -   Address: 0x29AC0, Name: _ZN17TSnap7MicroClient16ListBlocksOfTypeEiPA8192_tRi, Type: None
2025-03-08 21:19:33,772 - my_text.py:107  -   Address: 0x29B40, Name: _ZN17TSnap7MicroClient6UploadEiiPvRi, Type: None
2025-03-08 21:19:33,772 - my_text.py:107  -   Address: 0x29BD0, Name: _ZN17TSnap7MicroClient10FullUploadEiiPvRi, Type: None
2025-03-08 21:19:33,772 - my_text.py:107  -   Address: 0x29C60, Name: _ZN17TSnap7MicroClient8DownloadEiPvi, Type: None
2025-03-08 21:19:33,772 - my_text.py:107  -   Address: 0x29D00, Name: _ZN17TSnap7MicroClient6DeleteEii, Type: None
2025-03-08 21:19:33,772 - my_text.py:107  -   Address: 0x29D60, Name: _ZN17TSnap7MicroClient5DBGetEiPvRi, Type: None
2025-03-08 21:19:33,772 - my_text.py:107  -   Address: 0x29DE0, Name: _ZN17TSnap7MicroClient6DBFillEii, Type: None
2025-03-08 21:19:33,772 - my_text.py:107  -   Address: 0x29E40, Name: _ZN17TSnap7MicroClient14GetPlcDateTimeER2tm, Type: None
2025-03-08 21:19:33,772 - my_text.py:107  -   Address: 0x29EA0, Name: _ZN17TSnap7MicroClient14SetPlcDateTimeEP2tm, Type: None
2025-03-08 21:19:33,773 - my_text.py:107  -   Address: 0x29F00, Name: _ZN17TSnap7MicroClient20SetPlcSystemDateTimeEv, Type: None
2025-03-08 21:19:33,773 - my_text.py:107  -   Address: 0x29F30, Name: _ZN17TSnap7MicroClient12GetOrderCodeEP12TS7OrderCode, Type: Unknown
2025-03-08 21:19:33,773 - my_text.py:107  -   Address: 0x29F90, Name: _ZN17TSnap7MicroClient10GetCpuInfoEP10TS7CpuInfo, Type: Unknown
2025-03-08 21:19:33,773 - my_text.py:107  -   Address: 0x29FF0, Name: _ZN17TSnap7MicroClient9GetCpInfoEP9TS7CpInfo, Type: Unknown
2025-03-08 21:19:33,773 - my_text.py:107  -   Address: 0x2A050, Name: _ZN17TSnap7MicroClient7ReadSZLEiiP6TS7SZLRi, Type: Unknown
2025-03-08 21:19:33,773 - my_text.py:107  -   Address: 0x2A0D0, Name: _ZN17TSnap7MicroClient11ReadSZLListEP10TS7SZLListRi, Type: Unknown
2025-03-08 21:19:33,773 - my_text.py:107  -   Address: 0x2A140, Name: _ZN17TSnap7MicroClient11PlcHotStartEv, Type: None
2025-03-08 21:19:33,773 - my_text.py:107  -   Address: 0x2A190, Name: _ZN17TSnap7MicroClient12PlcColdStartEv, Type: None
2025-03-08 21:19:33,773 - my_text.py:107  -   Address: 0x2A1E0, Name: _ZN17TSnap7MicroClient7PlcStopEv, Type: None
2025-03-08 21:19:33,774 - my_text.py:107  -   Address: 0x2A230, Name: _ZN17TSnap7MicroClient12CopyRamToRomEi, Type: None
2025-03-08 21:19:33,774 - my_text.py:107  -   Address: 0x2A2A0, Name: _ZN17TSnap7MicroClient8CompressEi, Type: None
2025-03-08 21:19:33,774 - my_text.py:107  -   Address: 0x2A310, Name: _ZN17TSnap7MicroClient12GetPlcStatusERi, Type: None
2025-03-08 21:19:33,774 - my_text.py:107  -   Address: 0x2A370, Name: _ZN17TSnap7MicroClient13GetProtectionEP13TS7Protection, Type: Unknown
2025-03-08 21:19:33,774 - my_text.py:107  -   Address: 0x2A3D0, Name: _ZN17TSnap7MicroClient18SetSessionPasswordEPc, Type: None
2025-03-08 21:19:33,774 - my_text.py:107  -   Address: 0x2A480, Name: _ZN17TSnap7MicroClient20ClearSessionPasswordEv, Type: None
2025-03-08 21:19:33,774 - my_text.py:107  -   Address: 0x2A4D0, Name: Cli_Create, Type: Unknown
2025-03-08 21:19:33,774 - my_text.py:107  -   Address: 0x2A520, Name: Cli_Destroy, Type: Unknown
2025-03-08 21:19:33,774 - my_text.py:107  -   Address: 0x2A540, Name: Cli_SetConnectionParams, Type: Unknown
2025-03-08 21:19:33,775 - my_text.py:107  -   Address: 0x2A570, Name: Cli_SetConnectionType, Type: Unknown
2025-03-08 21:19:33,775 - my_text.py:107  -   Address: 0x2A590, Name: Cli_ConnectTo, Type: Unknown
2025-03-08 21:19:33,775 - my_text.py:107  -   Address: 0x2A5B0, Name: Cli_Connect, Type: Unknown
2025-03-08 21:19:33,775 - my_text.py:107  -   Address: 0x2A5D0, Name: Cli_Disconnect, Type: Unknown
2025-03-08 21:19:33,775 - my_text.py:107  -   Address: 0x2A5F0, Name: Cli_GetParam, Type: Unknown
2025-03-08 21:19:33,775 - my_text.py:107  -   Address: 0x2A610, Name: Cli_SetParam, Type: Unknown
2025-03-08 21:19:33,775 - my_text.py:107  -   Address: 0x2A630, Name: Cli_SetAsCallback, Type: Unknown
2025-03-08 21:19:33,775 - my_text.py:107  -   Address: 0x2A650, Name: Cli_ReadArea, Type: Unknown
2025-03-08 21:19:33,775 - my_text.py:107  -   Address: 0x2A670, Name: Cli_WriteArea, Type: Unknown
2025-03-08 21:19:33,775 - my_text.py:107  -   Address: 0x2A690, Name: Cli_ReadMultiVars, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A6B0, Name: Cli_WriteMultiVars, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A6D0, Name: Cli_DBRead, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A6F0, Name: Cli_DBWrite, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A710, Name: Cli_MBRead, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A730, Name: Cli_MBWrite, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A750, Name: Cli_EBRead, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A770, Name: Cli_EBWrite, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A790, Name: Cli_ABRead, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A7B0, Name: Cli_ABWrite, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A7D0, Name: Cli_TMRead, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A7F0, Name: Cli_TMWrite, Type: Unknown
2025-03-08 21:19:33,776 - my_text.py:107  -   Address: 0x2A810, Name: Cli_CTRead, Type: Unknown
2025-03-08 21:19:33,777 - my_text.py:107  -   Address: 0x2A830, Name: Cli_CTWrite, Type: Unknown
2025-03-08 21:19:33,777 - my_text.py:107  -   Address: 0x2A850, Name: Cli_ListBlocks, Type: Unknown
2025-03-08 21:19:33,777 - my_text.py:107  -   Address: 0x2A870, Name: Cli_GetAgBlockInfo, Type: Unknown
2025-03-08 21:19:33,777 - my_text.py:107  -   Address: 0x2A890, Name: Cli_GetPgBlockInfo, Type: Unknown
2025-03-08 21:19:33,777 - my_text.py:107  -   Address: 0x2A8B0, Name: Cli_ListBlocksOfType, Type: Unknown
2025-03-08 21:19:33,777 - my_text.py:107  -   Address: 0x2A8D0, Name: Cli_Upload, Type: Unknown
2025-03-08 21:19:33,777 - my_text.py:107  -   Address: 0x2A8F0, Name: Cli_FullUpload, Type: Unknown
2025-03-08 21:19:33,777 - my_text.py:107  -   Address: 0x2A910, Name: Cli_Download, Type: Unknown
2025-03-08 21:19:33,777 - my_text.py:107  -   Address: 0x2A930, Name: Cli_Delete, Type: Unknown
2025-03-08 21:19:33,777 - my_text.py:107  -   Address: 0x2A950, Name: Cli_DBGet, Type: Unknown
2025-03-08 21:19:33,777 - my_text.py:107  -   Address: 0x2A970, Name: Cli_DBFill, Type: Unknown
2025-03-08 21:19:33,778 - my_text.py:107  -   Address: 0x2A990, Name: Cli_GetPlcDateTime, Type: Unknown
2025-03-08 21:19:33,778 - my_text.py:107  -   Address: 0x2A9B0, Name: Cli_SetPlcDateTime, Type: Unknown
2025-03-08 21:19:33,778 - my_text.py:107  -   Address: 0x2A9D0, Name: Cli_SetPlcSystemDateTime, Type: Unknown
2025-03-08 21:19:33,778 - my_text.py:107  -   Address: 0x2A9F0, Name: Cli_GetOrderCode, Type: Unknown
2025-03-08 21:19:33,778 - my_text.py:107  -   Address: 0x2AA10, Name: Cli_GetCpuInfo, Type: Unknown
2025-03-08 21:19:33,778 - my_text.py:107  -   Address: 0x2AA30, Name: Cli_GetCpInfo, Type: Unknown
2025-03-08 21:19:33,778 - my_text.py:107  -   Address: 0x2AA50, Name: Cli_ReadSZL, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2AA70, Name: Cli_ReadSZLList, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2AA90, Name: Cli_PlcHotStart, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2AAB0, Name: Cli_PlcColdStart, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2AAD0, Name: Cli_PlcStop, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2AAF0, Name: Cli_CopyRamToRom, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2AB10, Name: Cli_Compress, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2AB30, Name: Cli_GetPlcStatus, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2AB50, Name: Cli_GetProtection, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2AB70, Name: Cli_SetSessionPassword, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2AB90, Name: Cli_ClearSessionPassword, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2ABB0, Name: Cli_IsoExchangeBuffer, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2ABD0, Name: Cli_GetExecTime, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2ABF0, Name: Cli_GetLastError, Type: Unknown
2025-03-08 21:19:33,779 - my_text.py:107  -   Address: 0x2AC10, Name: Cli_GetPduLength, Type: Unknown
2025-03-08 21:19:33,780 - my_text.py:107  -   Address: 0x2AC40, Name: Cli_ErrorText, Type: Unknown
2025-03-08 21:19:33,781 - my_text.py:107  -   Address: 0x2ACD0, Name: Cli_GetConnected, Type: Unknown
2025-03-08 21:19:33,781 - my_text.py:107  -   Address: 0x2ACF0, Name: Cli_AsReadArea, Type: Unknown
2025-03-08 21:19:33,781 - my_text.py:107  -   Address: 0x2AD10, Name: Cli_AsWriteArea, Type: Unknown
2025-03-08 21:19:33,782 - my_text.py:107  -   Address: 0x2AD30, Name: Cli_AsDBRead, Type: Unknown
2025-03-08 21:19:33,782 - my_text.py:107  -   Address: 0x2AD50, Name: Cli_AsDBWrite, Type: Unknown
2025-03-08 21:19:33,782 - my_text.py:107  -   Address: 0x2AD70, Name: Cli_AsMBRead, Type: Unknown
2025-03-08 21:19:33,782 - my_text.py:107  -   Address: 0x2AD90, Name: Cli_AsMBWrite, Type: Unknown
2025-03-08 21:19:33,782 - my_text.py:107  -   Address: 0x2ADB0, Name: Cli_AsEBRead, Type: Unknown
2025-03-08 21:19:33,782 - my_text.py:107  -   Address: 0x2ADD0, Name: Cli_AsEBWrite, Type: Unknown
2025-03-08 21:19:33,782 - my_text.py:107  -   Address: 0x2ADF0, Name: Cli_AsABRead, Type: Unknown
2025-03-08 21:19:33,782 - my_text.py:107  -   Address: 0x2AE10, Name: Cli_AsABWrite, Type: Unknown
2025-03-08 21:19:33,782 - my_text.py:107  -   Address: 0x2AE30, Name: Cli_AsTMRead, Type: Unknown
2025-03-08 21:19:33,783 - my_text.py:107  -   Address: 0x2AE50, Name: Cli_AsTMWrite, Type: Unknown
2025-03-08 21:19:33,783 - my_text.py:107  -   Address: 0x2AE70, Name: Cli_AsCTRead, Type: Unknown
2025-03-08 21:19:33,783 - my_text.py:107  -   Address: 0x2AE90, Name: Cli_AsCTWrite, Type: Unknown
2025-03-08 21:19:33,783 - my_text.py:107  -   Address: 0x2AEB0, Name: Cli_AsListBlocksOfType, Type: Unknown
2025-03-08 21:19:33,783 - my_text.py:107  -   Address: 0x2AED0, Name: Cli_AsReadSZL, Type: Unknown
2025-03-08 21:19:33,783 - my_text.py:107  -   Address: 0x2AEF0, Name: Cli_AsReadSZLList, Type: Unknown
2025-03-08 21:19:33,783 - my_text.py:107  -   Address: 0x2AF10, Name: Cli_AsUpload, Type: Unknown
2025-03-08 21:19:33,783 - my_text.py:107  -   Address: 0x2AF30, Name: Cli_AsFullUpload, Type: Unknown
2025-03-08 21:19:33,783 - my_text.py:107  -   Address: 0x2AF50, Name: Cli_AsDownload, Type: Unknown
2025-03-08 21:19:33,783 - my_text.py:107  -   Address: 0x2AF70, Name: Cli_AsCopyRamToRom, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2AF90, Name: Cli_AsCompress, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2AFB0, Name: Cli_AsDBGet, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2AFD0, Name: Cli_AsDBFill, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2AFF0, Name: Cli_CheckAsCompletion, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2B010, Name: Cli_WaitAsCompletion, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2B030, Name: Srv_Create, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2B080, Name: Srv_Destroy, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2B0A0, Name: Srv_GetParam, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2B0C0, Name: Srv_SetParam, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2B0E0, Name: Srv_StartTo, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2B100, Name: Srv_Start, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2B120, Name: Srv_Stop, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2B140, Name: Srv_RegisterArea, Type: Unknown
2025-03-08 21:19:33,784 - my_text.py:107  -   Address: 0x2B160, Name: Srv_UnregisterArea, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B180, Name: Srv_LockArea, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B1A0, Name: Srv_UnlockArea, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B1C0, Name: Srv_GetStatus, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B1F0, Name: Srv_SetCpuStatus, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B210, Name: Srv_ErrorText, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B2A0, Name: Srv_EventText, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B330, Name: Srv_PickEvent, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B360, Name: Srv_ClearEvents, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B380, Name: Srv_GetMask, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B3C0, Name: Srv_SetMask, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B400, Name: Srv_SetEventsCallback, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B420, Name: Srv_SetReadEventsCallback, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B440, Name: Srv_SetRWAreaCallback, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B460, Name: Par_Create, Type: Unknown
2025-03-08 21:19:33,785 - my_text.py:107  -   Address: 0x2B4C0, Name: Par_Destroy, Type: Unknown
2025-03-08 21:19:33,786 - my_text.py:107  -   Address: 0x2B4E0, Name: Par_GetParam, Type: Unknown
2025-03-08 21:19:33,786 - my_text.py:107  -   Address: 0x2B500, Name: Par_SetParam, Type: Unknown
2025-03-08 21:19:33,786 - my_text.py:107  -   Address: 0x2B520, Name: Par_StartTo, Type: Unknown
2025-03-08 21:19:33,786 - my_text.py:107  -   Address: 0x2B540, Name: Par_Start, Type: Unknown
2025-03-08 21:19:33,786 - my_text.py:107  -   Address: 0x2B560, Name: Par_Stop, Type: Unknown
2025-03-08 21:19:33,786 - my_text.py:107  -   Address: 0x2B580, Name: Par_BSend, Type: Unknown
2025-03-08 21:19:33,786 - my_text.py:107  -   Address: 0x2B5A0, Name: Par_AsBSend, Type: Unknown
2025-03-08 21:19:33,786 - my_text.py:107  -   Address: 0x2B5C0, Name: Par_CheckAsBSendCompletion, Type: Unknown
2025-03-08 21:19:33,786 - my_text.py:107  -   Address: 0x2B5E0, Name: Par_WaitAsBSendCompletion, Type: Unknown
2025-03-08 21:19:33,786 - my_text.py:107  -   Address: 0x2B600, Name: Par_SetSendCallback, Type: Unknown
2025-03-08 21:19:33,786 - my_text.py:107  -   Address: 0x2B620, Name: Par_BRecv, Type: Unknown
2025-03-08 21:19:33,787 - my_text.py:107  -   Address: 0x2B640, Name: Par_CheckAsBRecvCompletion, Type: Unknown
2025-03-08 21:19:33,787 - my_text.py:107  -   Address: 0x2B660, Name: Par_SetRecvCallback, Type: Unknown
2025-03-08 21:19:33,787 - my_text.py:107  -   Address: 0x2B680, Name: Par_GetTimes, Type: Unknown
2025-03-08 21:19:33,787 - my_text.py:107  -   Address: 0x2B6B0, Name: Par_GetStats, Type: Unknown
2025-03-08 21:19:33,787 - my_text.py:107  -   Address: 0x2B6F0, Name: Par_GetLastError, Type: Unknown
2025-03-08 21:19:33,787 - my_text.py:107  -   Address: 0x2B710, Name: Par_GetStatus, Type: Unknown
2025-03-08 21:19:33,787 - my_text.py:107  -   Address: 0x2B730, Name: Par_ErrorText, Type: Unknown
2025-03-08 21:19:33,787 - my_text.py:107  -   Address: 0x2B7BC, Name: .term_proc, Type: Unknown
2025-03-08 21:19:33,787 - my_text.py:107  -   Address: 0x2B7E0, Name: cp, Type: None
2025-03-08 21:19:33,787 - my_text.py:107  -   Address: 0x2B7E8, Name: _ZTS10TMsgSocket, Type: Unknown
2025-03-08 21:19:33,788 - my_text.py:107  -   Address: 0x2B7F5, Name: _ZTS9TSnapBase, Type: Unknown
2025-03-08 21:19:33,788 - my_text.py:107  -   Address: 0x2B800, Name: _ZTS16TMsgWorkerThread, Type: Unknown
2025-03-08 21:19:33,788 - my_text.py:107  -   Address: 0x2B820, Name: _ZTS18TMsgListenerThread, Type: Unknown
2025-03-08 21:19:33,788 - my_text.py:107  -   Address: 0x2B840, Name: _ZTS16TCustomMsgServer, Type: Unknown
2025-03-08 21:19:33,788 - my_text.py:107  -   Address: 0x2B860, Name: _ZTS13TEcoTcpWorker, Type: Unknown
2025-03-08 21:19:33,788 - my_text.py:107  -   Address: 0x2B870, Name: _ZTS11TSnapThread, Type: Unknown
2025-03-08 21:19:33,788 - my_text.py:107  -   Address: 0x2B880, Name: _ZTS13TClientThread, Type: Unknown
2025-03-08 21:19:33,788 - my_text.py:107  -   Address: 0x2B890, Name: _ZTS12TSnap7Client, Type: Unknown
2025-03-08 21:19:33,788 - my_text.py:107  -   Address: 0x2B8A0, Name: _ZTS13TIsoTcpSocket, Type: Unknown
2025-03-08 21:19:33,788 - my_text.py:107  -   Address: 0x2B8B0, Name: jpt_18620, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2B8F0, Name: jpt_18720, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2B930, Name: _ZTS19TConnListenerThread, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2B950, Name: _ZTS14TPartnerThread, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2B970, Name: _ZTS13TSnap7Partner, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2B980, Name: _ZTS10TSnap7Peer, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2B9A0, Name: jpt_1BF8A, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2B9C8, Name: jpt_1C072, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2BA20, Name: jpt_1C2B1, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2BA54, Name: jpt_1C407, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2BA68, Name: jpt_1C76C, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2BA9C, Name: jpt_1C979, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2BACC, Name: jpt_1D561, Type: Unknown
2025-03-08 21:19:33,789 - my_text.py:107  -   Address: 0x2BAE8, Name: jpt_1E2C2, Type: Unknown
2025-03-08 21:19:33,790 - my_text.py:107  -   Address: 0x2BB60, Name: CSWTCH.62, Type: Unknown
2025-03-08 21:19:33,790 - my_text.py:107  -   Address: 0x2BBD4, Name: _ZL7BitMask, Type: None
2025-03-08 21:19:33,790 - my_text.py:107  -   Address: 0x2BBE0, Name: CSWTCH.73, Type: Unknown
2025-03-08 21:19:33,790 - my_text.py:107  -   Address: 0x2BC00, Name: _ZTS13TIsoTcpWorker, Type: Unknown
2025-03-08 21:19:33,790 - my_text.py:107  -   Address: 0x2BC10, Name: _ZTS9TS7Worker, Type: Unknown
2025-03-08 21:19:33,790 - my_text.py:107  -   Address: 0x2BC1B, Name: _ZTS12TSnap7Server, Type: Unknown
2025-03-08 21:19:33,790 - my_text.py:107  -   Address: 0x2BC2A, Name: aOb, Type: Unknown
2025-03-08 21:19:33,790 - my_text.py:107  -   Address: 0x2BC2D, Name: aSdb, Type: Unknown
2025-03-08 21:19:33,790 - my_text.py:107  -   Address: 0x2BC31, Name: aSfc, Type: Unknown
2025-03-08 21:19:33,790 - my_text.py:107  -   Address: 0x2BC35, Name: aSfb, Type: Unknown
2025-03-08 21:19:33,791 - my_text.py:107  -   Address: 0x2BC39, Name: aUnknown0x, Type: None
2025-03-08 21:19:33,791 - my_text.py:107  -   Address: 0x2BC47, Name: aIsoConnectionE, Type: Unknown
2025-03-08 21:19:33,791 - my_text.py:107  -   Address: 0x2BC5F, Name: aIsoDisconnectE, Type: Unknown
2025-03-08 21:19:33,791 - my_text.py:107  -   Address: 0x2BC77, Name: aIsoBadPduForma, Type: Unknown
2025-03-08 21:19:33,791 - my_text.py:107  -   Address: 0x2BC8D, Name: aIsoNullPassedA, Type: Unknown
2025-03-08 21:19:33,791 - my_text.py:107  -   Address: 0x2BCAB, Name: aIsoUnknownErro, Type: None
2025-03-08 21:19:33,791 - my_text.py:107  -   Address: 0x2BCC4, Name: aExceptionError, Type: Unknown
2025-03-08 21:19:33,791 - my_text.py:107  -   Address: 0x2BCD9, Name: aAreaNotFound, Type: Unknown
2025-03-08 21:19:33,791 - my_text.py:107  -   Address: 0x2BCED, Name: aOutOfRange, Type: Unknown
2025-03-08 21:19:33,791 - my_text.py:107  -   Address: 0x2BCFF, Name: aInvalidTranspo, Type: Unknown
2025-03-08 21:19:33,792 - my_text.py:107  -   Address: 0x2BD1B, Name: aDataSizeMismat, Type: Unknown
2025-03-08 21:19:33,792 - my_text.py:107  -   Address: 0x2BD33, Name: aUnknownErrorCo, Type: None
2025-03-08 21:19:33,792 - my_text.py:107  -   Address: 0x2BD4D, Name: aStart, Type: None
2025-03-08 21:19:33,792 - my_text.py:107  -   Address: 0x2BD56, Name: aSize, Type: None
2025-03-08 21:19:33,792 - my_text.py:107  -   Address: 0x2BD60, Name: aAreaPe, Type: Unknown
2025-03-08 21:19:33,792 - my_text.py:107  -   Address: 0x2BD6C, Name: aAreaPa, Type: Unknown
2025-03-08 21:19:33,792 - my_text.py:107  -   Address: 0x2BD78, Name: aAreaMk, Type: Unknown
2025-03-08 21:19:33,792 - my_text.py:107  -   Address: 0x2BD84, Name: aAreaCt, Type: Unknown
2025-03-08 21:19:33,792 - my_text.py:107  -   Address: 0x2BD90, Name: aAreaTm, Type: Unknown
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BD9C, Name: aAreaDb, Type: None
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BDA6, Name: aUnknownArea, Type: None
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BDB5, Name: aTcpBadFileNumb, Type: Unknown
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BDCC, Name: aTcpPermissionD, Type: Unknown
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BDE5, Name: aTcpBadAddress, Type: Unknown
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BDF8, Name: aTcpInvalidArgu, Type: Unknown
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BE10, Name: aTcpTooManyOpen, Type: Unknown
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BE2B, Name: aTcpOperationWo, Type: Unknown
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BE48, Name: aTcpMessageTooL, Type: Unknown
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BE60, Name: aTcpProtocolNot, Type: Unknown
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BE7E, Name: aTcpProtocolNot_0, Type: Unknown
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BE9C, Name: aTcpSocketNotSu, Type: Unknown
2025-03-08 21:19:33,793 - my_text.py:107  -   Address: 0x2BEB8, Name: aTcpAddressAlre, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BED6, Name: aTcpNetworkIsDo, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BEED, Name: aTcpNetworkIsUn, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BF0B, Name: aTcpConnectionT, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BF27, Name: aTcpConnectionR_0, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BF41, Name: aTcpFileNameIsT, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BF5E, Name: aTcpHostIsDown, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BF72, Name: aTcpUnreachable, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BF8A, Name: aTcpDirectoryIs, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BFA8, Name: aTcpTooManyUser, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BFBE, Name: aTcpDiskQuotaEx, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BFD9, Name: aTcpStaleNfsFil, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2BFF6, Name: aTcpInvalidAddr, Type: Unknown
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2C00D, Name: aTcpOtherSocket, Type: None
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2C029, Name: format, Type: None
2025-03-08 21:19:33,794 - my_text.py:107  -   Address: 0x2C041, Name: aServer, Type: None
2025-03-08 21:19:33,795 - my_text.py:107  -   Address: 0x2C04A, Name: aLibInvalidPara, Type: Unknown
2025-03-08 21:19:33,795 - my_text.py:107  -   Address: 0x2C067, Name: aLibInvalidObje, Type: Unknown
2025-03-08 21:19:33,795 - my_text.py:107  -   Address: 0x2C085, Name: aCliJobPending, Type: Unknown
2025-03-08 21:19:33,795 - my_text.py:107  -   Address: 0x2C097, Name: aCliInvalidWord, Type: Unknown
2025-03-08 21:19:33,795 - my_text.py:107  -   Address: 0x2C0B0, Name: aCliPartialData, Type: Unknown
2025-03-08 21:19:33,795 - my_text.py:107  -   Address: 0x2C0CB, Name: aCliInvalidCpuA, Type: Unknown
2025-03-08 21:19:33,795 - my_text.py:107  -   Address: 0x2C0E4, Name: aCpuAddressOutO, Type: Unknown
2025-03-08 21:19:33,795 - my_text.py:107  -   Address: 0x2C0FF, Name: aCpuInvalidTran, Type: Unknown
2025-03-08 21:19:33,795 - my_text.py:107  -   Address: 0x2C11C, Name: aCpuDataSizeMis, Type: Unknown
2025-03-08 21:19:33,795 - my_text.py:107  -   Address: 0x2C135, Name: aCpuItemNotAvai, Type: Unknown
2025-03-08 21:19:33,796 - my_text.py:107  -   Address: 0x2C14E, Name: aCpuInvalidValu, Type: Unknown
2025-03-08 21:19:33,796 - my_text.py:107  -   Address: 0x2C16B, Name: aCpuCannotStart, Type: Unknown
2025-03-08 21:19:33,796 - my_text.py:107  -   Address: 0x2C182, Name: aCpuPlcAlreadyR, Type: Unknown
2025-03-08 21:19:33,796 - my_text.py:107  -   Address: 0x2C198, Name: aCpuCannotStopP, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C1AE, Name: aCpuCannotCopyR, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C1CB, Name: aCpuCannotCompr, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C1E1, Name: aCpuPlcAlreadyS, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C1F8, Name: aCpuFunctionNot, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C215, Name: aCpuUploadSeque, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C232, Name: aCliInvalidBloc_1, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C24B, Name: aCliInvalidBloc_0, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C266, Name: aCliInvalidBloc, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C27F, Name: aCpuBlockInsert, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C29A, Name: aCpuBlockDelete, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C2B5, Name: aCpuInvalidPass, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C2CC, Name: aCliJobTimeout, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C2DE, Name: aCliPartialData_0, Type: Unknown
2025-03-08 21:19:33,797 - my_text.py:107  -   Address: 0x2C2F6, Name: aCliInvalidPara, Type: Unknown
2025-03-08 21:19:33,798 - my_text.py:107  -   Address: 0x2C311, Name: aCliUnknownErro, Type: None
2025-03-08 21:19:33,798 - my_text.py:107  -   Address: 0x2C329, Name: aSrvServerCanno, Type: Unknown
2025-03-08 21:19:33,798 - my_text.py:107  -   Address: 0x2C343, Name: aSrvUnknownArea, Type: Unknown
2025-03-08 21:19:33,798 - my_text.py:107  -   Address: 0x2C35B, Name: aSrvDbLimitReac, Type: Unknown
2025-03-08 21:19:33,798 - my_text.py:107  -   Address: 0x2C372, Name: aSrvInvalidPara_0, Type: Unknown
2025-03-08 21:19:33,798 - my_text.py:107  -   Address: 0x2C38D, Name: aSrvUnknownErro, Type: None
2025-03-08 21:19:33,798 - my_text.py:107  -   Address: 0x2C3A5, Name: aParFrameTimeou, Type: Unknown
2025-03-08 21:19:33,799 - my_text.py:107  -   Address: 0x2C3B9, Name: aParInvalidPduR, Type: Unknown
2025-03-08 21:19:33,799 - my_text.py:107  -   Address: 0x2C3D4, Name: aParSendTimeout, Type: Unknown
2025-03-08 21:19:33,799 - my_text.py:107  -   Address: 0x2C3E7, Name: aParRecvTimeout, Type: Unknown
2025-03-08 21:19:33,799 - my_text.py:107  -   Address: 0x2C3FA, Name: aParSendRefused, Type: Unknown
2025-03-08 21:19:33,800 - my_text.py:107  -   Address: 0x2C415, Name: aParErrorNegoti, Type: Unknown
2025-03-08 21:19:33,800 - my_text.py:107  -   Address: 0x2C431, Name: aParErrorSendin, Type: Unknown
2025-03-08 21:19:33,800 - my_text.py:107  -   Address: 0x2C44B, Name: aParErrorReceiv, Type: Unknown
2025-03-08 21:19:33,800 - my_text.py:107  -   Address: 0x2C467, Name: aParErrorBindin, Type: Unknown
2025-03-08 21:19:33,800 - my_text.py:107  -   Address: 0x2C47B, Name: aParInvalidPara, Type: Unknown
2025-03-08 21:19:33,800 - my_text.py:107  -   Address: 0x2C496, Name: aParUnknownErro, Type: None
2025-03-08 21:19:33,800 - my_text.py:107  -   Address: 0x2C4AE, Name: aFragmentOf, Type: None
2025-03-08 21:19:33,800 - my_text.py:107  -   Address: 0x2C4BB, Name: aBytesRejected, Type: None
2025-03-08 21:19:33,800 - my_text.py:107  -   Address: 0x2C4CB, Name: aMalformedPduOf, Type: None
2025-03-08 21:19:33,800 - my_text.py:107  -   Address: 0x2C4DD, Name: aMessageOfSpars, Type: None
2025-03-08 21:19:33,801 - my_text.py:107  -   Address: 0x2C4F0, Name: aCannotHandleTh, Type: Unknown
2025-03-08 21:19:33,801 - my_text.py:107  -   Address: 0x2C507, Name: aUnknownReturnC, Type: None
2025-03-08 21:19:33,801 - my_text.py:107  -   Address: 0x2C51D, Name: aPduIncoming, Type: None
2025-03-08 21:19:33,801 - my_text.py:107  -   Address: 0x2C52D, Name: aReadRequest, Type: None
2025-03-08 21:19:33,801 - my_text.py:107  -   Address: 0x2C53C, Name: aWriteRequest, Type: None
2025-03-08 21:19:33,801 - my_text.py:107  -   Address: 0x2C54C, Name: aBytes, Type: None
2025-03-08 21:19:33,801 - my_text.py:107  -   Address: 0x2C553, Name: aCpuControlRequ, Type: Unknown
2025-03-08 21:19:33,801 - my_text.py:107  -   Address: 0x2C56A, Name: aUnknown, Type: None
2025-03-08 21:19:33,801 - my_text.py:107  -   Address: 0x2C572, Name: aColdStartOk, Type: None
2025-03-08 21:19:33,801 - my_text.py:107  -   Address: 0x2C584, Name: aWarmStartOk, Type: None
2025-03-08 21:19:33,802 - my_text.py:107  -   Address: 0x2C596, Name: aStop, Type: None
2025-03-08 21:19:33,802 - my_text.py:107  -   Address: 0x2C59A, Name: aOk, Type: None
2025-03-08 21:19:33,802 - my_text.py:107  -   Address: 0x2C5A2, Name: aMemoryCompress, Type: None
2025-03-08 21:19:33,802 - my_text.py:107  -   Address: 0x2C5B9, Name: aCopyRamToRomOk, Type: None
2025-03-08 21:19:33,803 - my_text.py:107  -   Address: 0x2C5D0, Name: aBlockInsertOrD, Type: None
2025-03-08 21:19:33,803 - my_text.py:107  -   Address: 0x2C5EE, Name: aUnknownControl, Type: None
2025-03-08 21:19:33,803 - my_text.py:107  -   Address: 0x2C605, Name: aReadSzlRequest, Type: None
2025-03-08 21:19:33,804 - my_text.py:107  -   Address: 0x2C61D, Name: aIndex0x, Type: None
2025-03-08 21:19:33,804 - my_text.py:107  -   Address: 0x2C627, Name: aNotAvailable, Type: None
2025-03-08 21:19:33,804 - my_text.py:107  -   Address: 0x2C63A, Name: aSystemClockRea, Type: Unknown
2025-03-08 21:19:33,804 - my_text.py:107  -   Address: 0x2C656, Name: aSystemClockWri, Type: Unknown
2025-03-08 21:19:33,805 - my_text.py:107  -   Address: 0x2C673, Name: aBlockListReque, Type: None
2025-03-08 21:19:33,806 - my_text.py:107  -   Address: 0x2C688, Name: aBlockOfType, Type: None
2025-03-08 21:19:33,806 - my_text.py:107  -   Address: 0x2C697, Name: aListRequestedN, Type: None
2025-03-08 21:19:33,806 - my_text.py:107  -   Address: 0x2C6B3, Name: aBlockInfoReque, Type: None
2025-03-08 21:19:33,806 - my_text.py:107  -   Address: 0x2C6C9, Name: aUnknownEvent, Type: None
2025-03-08 21:19:33,806 - my_text.py:107  -   Address: 0x2C6D9, Name: aStarted, Type: None
2025-03-08 21:19:33,806 - my_text.py:107  -   Address: 0x2C6E1, Name: aStopped, Type: None
2025-03-08 21:19:33,806 - my_text.py:107  -   Address: 0x2C6E9, Name: aClientAdded, Type: None
2025-03-08 21:19:33,806 - my_text.py:107  -   Address: 0x2C6F6, Name: aClientRefused, Type: None
2025-03-08 21:19:33,807 - my_text.py:107  -   Address: 0x2C705, Name: aClientExceptio, Type: None
2025-03-08 21:19:33,807 - my_text.py:107  -   Address: 0x2C716, Name: aClientDisconne, Type: None
2025-03-08 21:19:33,807 - my_text.py:107  -   Address: 0x2C732, Name: aClientTerminat, Type: None
2025-03-08 21:19:33,808 - my_text.py:107  -   Address: 0x2C748, Name: aZyxwvutsrqponm, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C790, Name: aIsoDatasizePas, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C7C8, Name: aIsoAShortPacke, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C7E8, Name: aIsoTooManyPack, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C818, Name: aIsoTheSumOfFra, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C858, Name: aIsoAnErrorOccu, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C880, Name: aIsoAnErrorOccu_0, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C8A8, Name: aIsoInvalidConn, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C8D8, Name: aDataSizeExceed, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C8F8, Name: aTcpInterrupted, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C918, Name: aTcpOperationNo, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C940, Name: aTcpOperationAl, Type: Unknown
2025-03-08 21:19:33,809 - my_text.py:107  -   Address: 0x2C968, Name: aTcpSocketOpera, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2C990, Name: aTcpDestination, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2C9B8, Name: aTcpProtocolWro, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2C9E0, Name: aTcpOperationNo_0, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CA10, Name: aTcpProtocolFam, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CA38, Name: aTcpAddressFami, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CA60, Name: aTcpCanTAssignR, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CA88, Name: aTcpNetworkDrop, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CAB8, Name: aTcpSoftwareCau, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CAE0, Name: aTcpConnectionR, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CB00, Name: aTcpNoBufferSpa, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CB28, Name: aTcpSocketIsAlr, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CB50, Name: aTcpSocketIsNot, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CB70, Name: aTcpCanTSendAft, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CB98, Name: aTcpTooManyRefe, Type: Unknown
2025-03-08 21:19:33,810 - my_text.py:107  -   Address: 0x2CBC0, Name: aTcpTooManyLeve, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CBF0, Name: aTcpTooManyLeve_0, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CC20, Name: aCpuErrorInPduN, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CC40, Name: aCliInvalidPara_0, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CC60, Name: aCliTooMayItems, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CC90, Name: aCpuTotalDataEx, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CCB8, Name: aCliInvalidData, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CCE0, Name: aCpuDownloadSeq, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CD00, Name: aCpuFunctionNot_0, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CD40, Name: aCpuNoPasswordT, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CD68, Name: aCliFunctionRef, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CD98, Name: aCliTheBufferSu, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CDE0, Name: aCliCannotPerfo, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CE08, Name: aCliCannotChang, Type: Unknown
2025-03-08 21:19:33,811 - my_text.py:107  -   Address: 0x2CE30, Name: aSrvNullPassedA, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2CE58, Name: aSrvCannotRegis, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2CE88, Name: aSrvInvalidPara, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2CEA8, Name: aSrvCannotChang, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2CED0, Name: aParLocalAddres, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2CEF8, Name: aParNoMorePartn, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2CF20, Name: aParNoMoreServe, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2CF40, Name: aParInvalidPara_0, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2CF68, Name: aParCannotPerfo_1, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2CF98, Name: aParCannotPerfo_0, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2CFC0, Name: aParCannotPerfo, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2CFE8, Name: aParCannotChang, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2D010, Name: aParTheBufferSu, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2D058, Name: aFunctionGroupC, Type: Unknown
2025-03-08 21:19:33,812 - my_text.py:107  -   Address: 0x2D088, Name: aFunctionGroupP, Type: Unknown
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D0B8, Name: aTheClientRequi, Type: None
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D0E0, Name: aBlockUploadReq, Type: Unknown
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D130, Name: aBlockDownloadR, Type: Unknown
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D180, Name: aListRequestedS, Type: None
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D1A8, Name: aSecurityReques_0, Type: Unknown
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D1D8, Name: aSecurityReques_1, Type: Unknown
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D210, Name: aSecurityReques, Type: Unknown
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D238, Name: aCannotStartLis, Type: None
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D260, Name: aAClientWasRefu, Type: None
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D298, Name: aClientsHaveBee, Type: None
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D2C8, Name: jpt_1F401, Type: Unknown
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D304, Name: jpt_1F9B1, Type: Unknown
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D33C, Name: jpt_230C9, Type: Unknown
2025-03-08 21:19:33,813 - my_text.py:107  -   Address: 0x2D354, Name: jpt_230F1, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D370, Name: aYMD, Type: None
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D380, Name: jpt_2704F, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D3BC, Name: jpt_2708F, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D3F8, Name: jpt_270CF, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D434, Name: jpt_2710F, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D470, Name: jpt_2714F, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D4AC, Name: jpt_2718F, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D4E8, Name: jpt_271D3, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D524, Name: jpt_27C32, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D59C, Name: jpt_2807D, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D614, Name: jpt_28F66, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D688, Name: jpt_29370, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D6B4, Name: jpt_29420, Type: Unknown
2025-03-08 21:19:33,814 - my_text.py:107  -   Address: 0x2D6E0, Name: CSWTCH.75, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x2D760, Name: CSWTCH.86, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x2D780, Name: _ZTS17TSnap7MicroClient, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x330D0, Name: __FRAME_END__, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x234130, Name: __frame_dummy_init_array_entry, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x234148, Name: __do_global_dtors_aux_fini_array_entry, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x234158, Name: __JCR_LIST__, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x234160, Name: _ZTI10TMsgSocket, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x2341A0, Name: _ZTV10TMsgSocket, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x2341D0, Name: _ZTI9TSnapBase, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x2341E0, Name: _ZTI16TMsgWorkerThread, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x234200, Name: _ZTI18TMsgListenerThread, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x234220, Name: _ZTI16TCustomMsgServer, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x234240, Name: _ZTV16TMsgWorkerThread, Type: Unknown
2025-03-08 21:19:33,815 - my_text.py:107  -   Address: 0x234280, Name: _ZTV18TMsgListenerThread, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x2342C0, Name: _ZTV16TCustomMsgServer, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x234320, Name: _ZTV13TEcoTcpWorker, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x234350, Name: _ZTI13TEcoTcpWorker, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x234370, Name: _ZTI11TSnapThread, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x234380, Name: _ZTV11TSnapThread, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x2343B0, Name: _ZTI13TClientThread, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x2343D0, Name: _ZTI12TSnap7Client, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x234400, Name: _ZTV12TSnap7Client, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x234440, Name: _ZTV13TClientThread, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x234470, Name: _ZTI13TIsoTcpSocket, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x2344A0, Name: _ZTV13TIsoTcpSocket, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x2344E0, Name: _ZTI19TConnListenerThread, Type: Unknown
2025-03-08 21:19:33,816 - my_text.py:107  -   Address: 0x234500, Name: _ZTI14TPartnerThread, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x234520, Name: _ZTI13TSnap7Partner, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x234540, Name: _ZTV19TConnListenerThread, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x234580, Name: _ZTV14TPartnerThread, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x2345C0, Name: _ZTV13TSnap7Partner, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x234600, Name: _ZTI10TSnap7Peer, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x234620, Name: _ZTV10TSnap7Peer, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x234660, Name: _ZTI13TIsoTcpWorker, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x234680, Name: _ZTI9TS7Worker, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x2346A0, Name: _ZTI12TSnap7Server, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x2346C0, Name: _ZTV13TIsoTcpWorker, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x234720, Name: _ZTV9TS7Worker, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x234780, Name: _ZTV12TSnap7Server, Type: Unknown
2025-03-08 21:19:33,817 - my_text.py:107  -   Address: 0x2347D0, Name: _ZTI17TSnap7MicroClient, Type: Unknown
2025-03-08 21:19:33,818 - my_text.py:107  -   Address: 0x234800, Name: _ZTV17TSnap7MicroClient, Type: Unknown
2025-03-08 21:19:33,818 - my_text.py:107  -   Address: 0x234840, Name: _DYNAMIC, Type: Unknown
2025-03-08 21:19:33,818 - my_text.py:107  -   Address: 0x234A40, Name: SZL_ID_0131_IDX_0004_ptr, Type: None
2025-03-08 21:19:33,818 - my_text.py:107  -   Address: 0x234A48, Name: lpfunc, Type: None
2025-03-08 21:19:33,818 - my_text.py:107  -   Address: 0x234A50, Name: SZL_ID_0112_IDX_0200_ptr, Type: None
2025-03-08 21:19:33,818 - my_text.py:107  -   Address: 0x234A58, Name: SZL_ID_0131_IDX_0008_ptr, Type: None
2025-03-08 21:19:33,819 - my_text.py:107  -   Address: 0x234A60, Name: SZL_ID_0111_IDX_0007_ptr, Type: None
2025-03-08 21:19:33,819 - my_text.py:107  -   Address: 0x234A68, Name: _ZTV13TSnap7Partner_ptr, Type: Unknown
2025-03-08 21:19:33,819 - my_text.py:107  -   Address: 0x234A70, Name: SZL_ID_0F37_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,819 - my_text.py:107  -   Address: 0x234A78, Name: _ZTV11TSnapThread_ptr, Type: Unknown
2025-03-08 21:19:33,819 - my_text.py:107  -   Address: 0x234A80, Name: SZL_ID_0024_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,819 - my_text.py:107  -   Address: 0x234A88, Name: SZL_ID_0F74_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,819 - my_text.py:107  -   Address: 0x234A90, Name: SZL_ID_0112_IDX_0400_ptr, Type: None
2025-03-08 21:19:33,819 - my_text.py:107  -   Address: 0x234A98, Name: _ZTV19TConnListenerThread_ptr, Type: Unknown
2025-03-08 21:19:33,819 - my_text.py:107  -   Address: 0x234AA0, Name: SZL_ID_0112_IDX_0100_ptr, Type: None
2025-03-08 21:19:33,819 - my_text.py:107  -   Address: 0x234AA8, Name: SZL_ID_0112_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,820 - my_text.py:107  -   Address: 0x234AB0, Name: SZL_ID_0F1A_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,821 - my_text.py:107  -   Address: 0x234AB8, Name: _ZTV13TIsoTcpWorker_ptr, Type: Unknown
2025-03-08 21:19:33,821 - my_text.py:107  -   Address: 0x234AC0, Name: SZL_ID_0125_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,821 - my_text.py:107  -   Address: 0x234AC8, Name: SZL_ID_0132_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,821 - my_text.py:107  -   Address: 0x234AD0, Name: SZL_ID_0117_IDX_0002_ptr, Type: None
2025-03-08 21:19:33,821 - my_text.py:107  -   Address: 0x234AD8, Name: SZL_ID_0174_IDX_0005_ptr, Type: None
2025-03-08 21:19:33,821 - my_text.py:107  -   Address: 0x234AE0, Name: SZL_ID_0591_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,821 - my_text.py:107  -   Address: 0x234AE8, Name: SZL_ID_0015_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,822 - my_text.py:107  -   Address: 0x234AF0, Name: SZL_ID_0014_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,822 - my_text.py:107  -   Address: 0x234AF8, Name: __gmon_start___ptr, Type: Unknown
2025-03-08 21:19:33,822 - my_text.py:107  -   Address: 0x234B00, Name: _Jv_RegisterClasses_ptr, Type: Unknown
2025-03-08 21:19:33,822 - my_text.py:107  -   Address: 0x234B08, Name: SZL_ID_011C_IDX_000B_ptr, Type: None
2025-03-08 21:19:33,822 - my_text.py:107  -   Address: 0x234B10, Name: SZL_ID_0132_IDX_0004_ptr, Type: None
2025-03-08 21:19:33,822 - my_text.py:107  -   Address: 0x234B18, Name: SZL_ID_01A0_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,822 - my_text.py:107  -   Address: 0x234B20, Name: SZL_ID_0D97_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,822 - my_text.py:107  -   Address: 0x234B28, Name: SZL_ID_0194_IDX_0064_ptr, Type: None
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B30, Name: SZL_ID_0132_IDX_0008_ptr, Type: None
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B38, Name: SZL_ID_01A0_IDX_0009_ptr, Type: None
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B40, Name: SZL_ID_0131_IDX_0002_ptr, Type: None
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B48, Name: SZL_ID_01A0_IDX_000E_ptr, Type: None
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B50, Name: SZL_ID_01A0_IDX_0005_ptr, Type: None
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B58, Name: SZL_ID_0232_IDX_0004_ptr, Type: None
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B60, Name: SZL_ID_0118_IDX_0002_ptr, Type: None
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B68, Name: SZL_ID_0F11_IDX_0007_ptr, Type: None
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B70, Name: SZL_ID_0F92_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B78, Name: SZL_ID_01A0_IDX_0012_ptr, Type: None
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B80, Name: _ZTV18TMsgListenerThread_ptr, Type: Unknown
2025-03-08 21:19:33,823 - my_text.py:107  -   Address: 0x234B88, Name: SZL_ID_0232_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,824 - my_text.py:107  -   Address: 0x234B90, Name: SZL_ID_0131_IDX_0005_ptr, Type: None
2025-03-08 21:19:33,824 - my_text.py:107  -   Address: 0x234B98, Name: SZL_ID_01A0_IDX_000A_ptr, Type: None
2025-03-08 21:19:33,824 - my_text.py:107  -   Address: 0x234BA0, Name: SZL_ID_0F00_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,824 - my_text.py:107  -   Address: 0x234BA8, Name: SZL_ID_0222_IDX_0028_ptr, Type: None
2025-03-08 21:19:33,824 - my_text.py:107  -   Address: 0x234BB0, Name: SZL_ID_0131_IDX_0009_ptr, Type: None
2025-03-08 21:19:33,824 - my_text.py:107  -   Address: 0x234BB8, Name: SZL_ID_0137_IDX_07FE_ptr, Type: None
2025-03-08 21:19:33,824 - my_text.py:107  -   Address: 0x234BC0, Name: SZL_ID_0000_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,824 - my_text.py:107  -   Address: 0x234BC8, Name: _ZTV16TMsgWorkerThread_ptr, Type: Unknown
2025-03-08 21:19:33,824 - my_text.py:107  -   Address: 0x234BD0, Name: SZL_ID_011C_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234BD8, Name: start_routine, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234BE0, Name: SZL_ID_0222_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234BE8, Name: _ITM_deregisterTMCloneTable_ptr, Type: Unknown
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234BF0, Name: SZL_ID_0174_IDX_000B_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234BF8, Name: SZL_ID_0694_IDX_0064_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234C00, Name: _ZTV13TClientThread_ptr, Type: Unknown
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234C08, Name: SZL_ID_0094_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234C10, Name: SZL_ID_0F1B_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234C18, Name: SZL_ID_0125_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234C20, Name: SZL_ID_0F36_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234C28, Name: SZL_ID_0019_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234C30, Name: SZL_ID_011C_IDX_0003_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234C38, Name: SZL_ID_0117_IDX_0003_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234C40, Name: _ITM_registerTMCloneTable_ptr, Type: Unknown
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234C48, Name: SZL_ID_0F38_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,825 - my_text.py:107  -   Address: 0x234C50, Name: SZL_ID_011C_IDX_0007_ptr, Type: None
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234C58, Name: SZL_ID_0002_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234C60, Name: SZL_ID_001A_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234C68, Name: SZL_ID_0D91_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234C70, Name: SZL_ID_0174_IDX_0006_ptr, Type: None
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234C78, Name: SZL_ID_0132_IDX_000A_ptr, Type: None
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234C80, Name: __cxa_finalize_ptr, Type: Unknown
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234C88, Name: SZL_ID_0013_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234C90, Name: SZL_ID_0132_IDX_0005_ptr, Type: None
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234C98, Name: SZL_ID_01A0_IDX_0002_ptr, Type: None
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234CA0, Name: SZL_ID_0C91_IDX_07FE_ptr, Type: None
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234CA8, Name: SZL_ID_0132_IDX_0009_ptr, Type: None
2025-03-08 21:19:33,826 - my_text.py:107  -   Address: 0x234CB0, Name: SZL_ID_0025_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234CB8, Name: SZL_ID_0131_IDX_0003_ptr, Type: Unknown
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234CC0, Name: SZL_ID_01A0_IDX_000F_ptr, Type: None
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234CC8, Name: SZL_ID_0292_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234CD0, Name: SZL_ID_01A0_IDX_0006_ptr, Type: None
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234CD8, Name: _ZTV9TS7Worker_ptr, Type: Unknown
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234CE0, Name: SZL_ID_0118_IDX_0003_ptr, Type: None
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234CE8, Name: SZL_ID_0225_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234CF0, Name: SZL_ID_01A0_IDX_0013_ptr, Type: None
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234CF8, Name: SZL_ID_0A21_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234D00, Name: SZL_ID_00A0_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234D08, Name: SZL_ID_0131_IDX_0006_ptr, Type: None
2025-03-08 21:19:33,827 - my_text.py:107  -   Address: 0x234D10, Name: SZL_ID_01A0_IDX_000B_ptr, Type: None
2025-03-08 21:19:33,828 - my_text.py:107  -   Address: 0x234D18, Name: SZL_ID_0111_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,828 - my_text.py:107  -   Address: 0x234D20, Name: SZL_ID_0074_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,828 - my_text.py:107  -   Address: 0x234D28, Name: SZL_ID_0037_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,828 - my_text.py:107  -   Address: 0x234D30, Name: _ZTV10TMsgSocket_ptr, Type: Unknown
2025-03-08 21:19:33,828 - my_text.py:107  -   Address: 0x234D38, Name: SZL_ID_0115_IDX_0800_ptr, Type: None
2025-03-08 21:19:33,828 - my_text.py:107  -   Address: 0x234D40, Name: SZL_ID_0F17_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,828 - my_text.py:107  -   Address: 0x234D48, Name: SZL_ID_011C_IDX_0002_ptr, Type: None
2025-03-08 21:19:33,828 - my_text.py:107  -   Address: 0x234D50, Name: SZL_ID_001B_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,828 - my_text.py:107  -   Address: 0x234D58, Name: _ZTV10TSnap7Peer_ptr, Type: Unknown
2025-03-08 21:19:33,828 - my_text.py:107  -   Address: 0x234D60, Name: SZL_ID_0F18_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234D68, Name: SZL_ID_0036_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234D70, Name: SZL_ID_0222_IDX_0050_ptr, Type: None
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234D78, Name: SZL_ID_0F3A_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234D80, Name: SZL_ID_0174_IDX_000C_ptr, Type: None
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234D88, Name: _ZTV12TSnap7Client_ptr, Type: Unknown
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234D90, Name: SZL_ID_0012_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234D98, Name: SZL_ID_011C_IDX_0004_ptr, Type: None
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234DA0, Name: SZL_ID_0222_IDX_000A_ptr, Type: None
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234DA8, Name: _ZTV14TPartnerThread_ptr, Type: Unknown
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234DB0, Name: SZL_ID_0F11_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234DB8, Name: SZL_ID_0117_IDX_0004_ptr, Type: None
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234DC0, Name: src, Type: None
2025-03-08 21:19:33,829 - my_text.py:107  -   Address: 0x234DC8, Name: SZL_ID_0692_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234DD0, Name: SZL_ID_011C_IDX_0008_ptr, Type: None
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234DD8, Name: SZL_ID_0132_IDX_000B_ptr, Type: None
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234DE0, Name: SZL_ID_0F95_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234DE8, Name: _ZTV13TIsoTcpSocket_ptr, Type: Unknown
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234DF0, Name: SZL_ID_0021_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234DF8, Name: SZL_ID_0FA0_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234E00, Name: SZL_ID_0132_IDX_0002_ptr, Type: None
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234E08, Name: SZL_ID_0011_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234E10, Name: SZL_ID_01A0_IDX_0003_ptr, Type: None
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234E18, Name: SZL_ID_0222_IDX_0064_ptr, Type: None
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234E20, Name: _ZTV17TSnap7MicroClient_ptr, Type: Unknown
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234E28, Name: SZL_ID_0222_IDX_0014_ptr, Type: None
2025-03-08 21:19:33,830 - my_text.py:107  -   Address: 0x234E30, Name: SZL_ID_0132_IDX_0006_ptr, Type: None
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E38, Name: SZL_ID_0017_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E40, Name: SZL_ID_01A0_IDX_0007_ptr, Type: None
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E48, Name: SZL_ID_0118_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E50, Name: SZL_ID_0124_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E58, Name: SZL_ID_01A0_IDX_0014_ptr, Type: None
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E60, Name: pthread_cancel_ptr, Type: Unknown
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E68, Name: SZL_ID_01A0_IDX_0010_ptr, Type: None
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E70, Name: SZL_ID_0A91_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E78, Name: _ZTV12TSnap7Server_ptr, Type: Unknown
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E80, Name: SZL_ID_0131_IDX_0007_ptr, Type: None
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E88, Name: SZL_ID_0F9A_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E90, Name: SZL_ID_01A0_IDX_000C_ptr, Type: None
2025-03-08 21:19:33,831 - my_text.py:107  -   Address: 0x234E98, Name: SZL_ID_0F19_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234EA0, Name: SZL_ID_0111_IDX_0006_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234EA8, Name: SZL_ID_0424_IDX_XXXX_ptr, Type: Unknown
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234EB0, Name: SZL_ID_0F94_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234EB8, Name: SZL_ID_0F12_IDX_0400_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234EC0, Name: SZL_ID_001C_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234EC8, Name: SZL_ID_0F14_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234ED0, Name: SZL_ID_0018_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234ED8, Name: SZL_ID_0F23_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234EE0, Name: SZL_ID_0F12_IDX_0100_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234EE8, Name: SZL_ID_0794_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234EF0, Name: SZL_ID_0F12_IDX_0200_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234EF8, Name: SZL_ID_0F12_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,832 - my_text.py:107  -   Address: 0x234F00, Name: _ZNSs4_Rep20_S_empty_rep_storageE_ptr, Type: Unknown
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F08, Name: SZL_ID_0113_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F10, Name: SZL_ID_011C_IDX_0005_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F18, Name: SZL_ID_0117_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F20, Name: SZL_ID_0174_IDX_0004_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F28, Name: _ZTV13TEcoTcpWorker_ptr, Type: Unknown
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F30, Name: SZL_ID_011C_IDX_0009_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F38, Name: SZL_ID_0117_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F40, Name: SZL_ID_0038_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F48, Name: SZL_ID_0174_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F50, Name: SZL_ID_0132_IDX_000C_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F58, Name: SZL_ID_011C_IDX_000A_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F60, Name: SZL_ID_0F21_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F68, Name: SZL_ID_0132_IDX_0003_ptr, Type: None
2025-03-08 21:19:33,833 - my_text.py:107  -   Address: 0x234F70, Name: SZL_ID_0294_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234F78, Name: SZL_ID_01A0_IDX_0004_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234F80, Name: SZL_ID_01A0_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234F88, Name: SZL_ID_0132_IDX_0007_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234F90, Name: SZL_ID_0131_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234F98, Name: SZL_ID_0F1C_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234FA0, Name: SZL_ID_01A0_IDX_0008_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234FA8, Name: SZL_ID_0F25_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234FB0, Name: SZL_ID_0023_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234FB8, Name: SZL_ID_0095_IDX_XXXX_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234FC0, Name: SZL_ID_0092_IDX_0000_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234FC8, Name: SZLNotAvail_ptr, Type: Unknown
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234FD0, Name: SZL_ID_0F11_IDX_0006_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234FD8, Name: SZL_ID_0118_IDX_0001_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234FE0, Name: SZL_ID_01A0_IDX_0015_ptr, Type: None
2025-03-08 21:19:33,834 - my_text.py:107  -   Address: 0x234FE8, Name: SZL_ID_01A0_IDX_0011_ptr, Type: None
2025-03-08 21:19:33,835 - my_text.py:107  -   Address: 0x234FF0, Name: _ZTV16TCustomMsgServer_ptr, Type: Unknown
2025-03-08 21:19:33,835 - my_text.py:107  -   Address: 0x234FF8, Name: SZL_ID_01A0_IDX_000D_ptr, Type: None
2025-03-08 21:19:33,835 - my_text.py:107  -   Address: 0x235000, Name: _GLOBAL_OFFSET_TABLE_, Type: Unknown
2025-03-08 21:19:33,835 - my_text.py:107  -   Address: 0x235D80, Name: __dso_handle, Type: None
2025-03-08 21:19:33,835 - my_text.py:107  -   Address: 0x235D88, Name: DW.ref.__gxx_personality_v0, Type: Unknown
2025-03-08 21:19:33,835 - my_text.py:107  -   Address: 0x235DA0, Name: SZL_ID_0C91_IDX_07FE, Type: Unknown
2025-03-08 21:19:33,835 - my_text.py:107  -   Address: 0x235DC0, Name: SZL_ID_0131_IDX_0009, Type: Unknown
2025-03-08 21:19:33,835 - my_text.py:107  -   Address: 0x235E00, Name: SZL_ID_0131_IDX_0008, Type: Unknown
2025-03-08 21:19:33,835 - my_text.py:107  -   Address: 0x235E40, Name: SZL_ID_0131_IDX_0007, Type: Unknown
2025-03-08 21:19:33,835 - my_text.py:107  -   Address: 0x235E80, Name: SZL_ID_0131_IDX_0006, Type: Unknown
2025-03-08 21:19:33,835 - my_text.py:107  -   Address: 0x235EC0, Name: SZL_ID_0131_IDX_0005, Type: Unknown
2025-03-08 21:19:33,836 - my_text.py:107  -   Address: 0x235F00, Name: SZL_ID_0131_IDX_0004, Type: Unknown
2025-03-08 21:19:33,836 - my_text.py:107  -   Address: 0x235F40, Name: SZL_ID_0131_IDX_0003, Type: Unknown
2025-03-08 21:19:33,836 - my_text.py:107  -   Address: 0x235F80, Name: SZL_ID_0131_IDX_0002, Type: Unknown
2025-03-08 21:19:33,836 - my_text.py:107  -   Address: 0x235FC0, Name: SZL_ID_0131_IDX_0001, Type: Unknown
2025-03-08 21:19:33,836 - my_text.py:107  -   Address: 0x236000, Name: SZL_ID_0118_IDX_0003, Type: Unknown
2025-03-08 21:19:33,836 - my_text.py:107  -   Address: 0x236010, Name: SZL_ID_0118_IDX_0002, Type: Unknown
2025-03-08 21:19:33,836 - my_text.py:107  -   Address: 0x236020, Name: SZL_ID_0118_IDX_0001, Type: Unknown
2025-03-08 21:19:33,836 - my_text.py:107  -   Address: 0x236030, Name: SZL_ID_0118_IDX_0000, Type: Unknown
2025-03-08 21:19:33,836 - my_text.py:107  -   Address: 0x236040, Name: SZL_ID_0117_IDX_0004, Type: Unknown
2025-03-08 21:19:33,836 - my_text.py:107  -   Address: 0x236050, Name: SZL_ID_0117_IDX_0003, Type: Unknown
2025-03-08 21:19:33,837 - my_text.py:107  -   Address: 0x236060, Name: SZL_ID_0117_IDX_0002, Type: Unknown
2025-03-08 21:19:33,837 - my_text.py:107  -   Address: 0x236070, Name: SZL_ID_0117_IDX_0001, Type: Unknown
2025-03-08 21:19:33,837 - my_text.py:107  -   Address: 0x236080, Name: SZL_ID_0117_IDX_0000, Type: Unknown
2025-03-08 21:19:33,837 - my_text.py:107  -   Address: 0x2360A0, Name: SZL_ID_01A0_IDX_0015, Type: Unknown
2025-03-08 21:19:33,837 - my_text.py:107  -   Address: 0x236260, Name: SZL_ID_01A0_IDX_0014, Type: Unknown
2025-03-08 21:19:33,837 - my_text.py:107  -   Address: 0x236400, Name: SZL_ID_01A0_IDX_0013, Type: Unknown
2025-03-08 21:19:33,837 - my_text.py:107  -   Address: 0x2365A0, Name: SZL_ID_01A0_IDX_0012, Type: Unknown
2025-03-08 21:19:33,837 - my_text.py:107  -   Address: 0x236720, Name: SZL_ID_01A0_IDX_0011, Type: Unknown
2025-03-08 21:19:33,837 - my_text.py:107  -   Address: 0x236880, Name: SZL_ID_01A0_IDX_0010, Type: Unknown
2025-03-08 21:19:33,837 - my_text.py:107  -   Address: 0x2369E0, Name: SZL_ID_01A0_IDX_000F, Type: Unknown
2025-03-08 21:19:33,837 - my_text.py:107  -   Address: 0x236B20, Name: SZL_ID_01A0_IDX_000E, Type: Unknown
2025-03-08 21:19:33,838 - my_text.py:107  -   Address: 0x236C60, Name: SZL_ID_01A0_IDX_000D, Type: Unknown
2025-03-08 21:19:33,838 - my_text.py:107  -   Address: 0x236D80, Name: SZL_ID_01A0_IDX_000C, Type: Unknown
2025-03-08 21:19:33,838 - my_text.py:107  -   Address: 0x236E80, Name: SZL_ID_01A0_IDX_000B, Type: Unknown
2025-03-08 21:19:33,838 - my_text.py:107  -   Address: 0x236F80, Name: SZL_ID_01A0_IDX_000A, Type: Unknown
2025-03-08 21:19:33,838 - my_text.py:107  -   Address: 0x237060, Name: SZL_ID_01A0_IDX_0009, Type: Unknown
2025-03-08 21:19:33,838 - my_text.py:107  -   Address: 0x237120, Name: SZL_ID_01A0_IDX_0008, Type: Unknown
2025-03-08 21:19:33,838 - my_text.py:107  -   Address: 0x2371E0, Name: SZL_ID_01A0_IDX_0007, Type: Unknown
2025-03-08 21:19:33,838 - my_text.py:107  -   Address: 0x237280, Name: SZL_ID_01A0_IDX_0006, Type: Unknown
2025-03-08 21:19:33,838 - my_text.py:107  -   Address: 0x237320, Name: SZL_ID_01A0_IDX_0005, Type: Unknown
2025-03-08 21:19:33,838 - my_text.py:107  -   Address: 0x2373A0, Name: SZL_ID_01A0_IDX_0004, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x237400, Name: SZL_ID_01A0_IDX_0003, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x237460, Name: SZL_ID_01A0_IDX_0002, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x2374A0, Name: SZL_ID_01A0_IDX_0001, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x2374C0, Name: SZL_ID_01A0_IDX_0000, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x2374E0, Name: SZL_ID_0694_IDX_0064, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x237600, Name: SZL_ID_0194_IDX_0064, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x237710, Name: SZL_ID_0174_IDX_000C, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x237720, Name: SZL_ID_0174_IDX_000B, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x237730, Name: SZL_ID_0174_IDX_0006, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x237740, Name: SZL_ID_0174_IDX_0005, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x237750, Name: SZL_ID_0174_IDX_0004, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x237760, Name: SZL_ID_0174_IDX_0001, Type: Unknown
2025-03-08 21:19:33,839 - my_text.py:107  -   Address: 0x237780, Name: SZL_ID_0137_IDX_07FE, Type: Unknown
2025-03-08 21:19:33,840 - my_text.py:107  -   Address: 0x2377C0, Name: SZL_ID_0232_IDX_0004, Type: Unknown
2025-03-08 21:19:33,840 - my_text.py:107  -   Address: 0x237800, Name: SZL_ID_0232_IDX_0001, Type: Unknown
2025-03-08 21:19:33,840 - my_text.py:107  -   Address: 0x237840, Name: SZL_ID_0132_IDX_000C, Type: Unknown
2025-03-08 21:19:33,840 - my_text.py:107  -   Address: 0x237880, Name: SZL_ID_0132_IDX_000B, Type: Unknown
2025-03-08 21:19:33,840 - my_text.py:107  -   Address: 0x2378C0, Name: SZL_ID_0132_IDX_000A, Type: Unknown
2025-03-08 21:19:33,840 - my_text.py:107  -   Address: 0x237900, Name: SZL_ID_0132_IDX_0009, Type: Unknown
2025-03-08 21:19:33,840 - my_text.py:107  -   Address: 0x237940, Name: SZL_ID_0132_IDX_0008, Type: Unknown
2025-03-08 21:19:33,840 - my_text.py:107  -   Address: 0x237980, Name: SZL_ID_0132_IDX_0007, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x2379C0, Name: SZL_ID_0132_IDX_0006, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237A00, Name: SZL_ID_0132_IDX_0005, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237A40, Name: SZL_ID_0132_IDX_0004, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237A80, Name: SZL_ID_0132_IDX_0003, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237AC0, Name: SZL_ID_0132_IDX_0002, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237B00, Name: SZL_ID_0132_IDX_0001, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237B40, Name: SZL_ID_0225_IDX_0001, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237B50, Name: SZL_ID_0125_IDX_0001, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237B60, Name: SZL_ID_0125_IDX_0000, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237B80, Name: SZL_ID_0222_IDX_0064, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237BC0, Name: SZL_ID_0222_IDX_0050, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237C00, Name: SZL_ID_0222_IDX_0028, Type: Unknown
2025-03-08 21:19:33,841 - my_text.py:107  -   Address: 0x237C40, Name: SZL_ID_0222_IDX_0014, Type: Unknown
2025-03-08 21:19:33,842 - my_text.py:107  -   Address: 0x237C80, Name: SZL_ID_0222_IDX_000A, Type: Unknown
2025-03-08 21:19:33,842 - my_text.py:107  -   Address: 0x237CC0, Name: SZL_ID_0222_IDX_0001, Type: Unknown
2025-03-08 21:19:33,842 - my_text.py:107  -   Address: 0x237D00, Name: SZL_ID_011C_IDX_000B, Type: Unknown
2025-03-08 21:19:33,842 - my_text.py:107  -   Address: 0x237D40, Name: SZL_ID_011C_IDX_000A, Type: Unknown
2025-03-08 21:19:33,842 - my_text.py:107  -   Address: 0x237D80, Name: SZL_ID_011C_IDX_0009, Type: Unknown
2025-03-08 21:19:33,842 - my_text.py:107  -   Address: 0x237DC0, Name: SZL_ID_011C_IDX_0008, Type: Unknown
2025-03-08 21:19:33,842 - my_text.py:107  -   Address: 0x237E00, Name: SZL_ID_011C_IDX_0007, Type: Unknown
2025-03-08 21:19:33,842 - my_text.py:107  -   Address: 0x237E40, Name: SZL_ID_011C_IDX_0005, Type: Unknown
2025-03-08 21:19:33,842 - my_text.py:107  -   Address: 0x237E80, Name: SZL_ID_011C_IDX_0004, Type: Unknown
2025-03-08 21:19:33,842 - my_text.py:107  -   Address: 0x237EC0, Name: SZL_ID_011C_IDX_0003, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x237F00, Name: SZL_ID_011C_IDX_0002, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x237F40, Name: SZL_ID_011C_IDX_0001, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x237F70, Name: SZL_ID_0115_IDX_0800, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x237FA0, Name: SZL_ID_0113_IDX_0001, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x237FD0, Name: SZL_ID_0F12_IDX_0400, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x237FDC, Name: SZL_ID_0F12_IDX_0200, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x237FE8, Name: SZL_ID_0F12_IDX_0100, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x237FF4, Name: SZL_ID_0F12_IDX_0000, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x238000, Name: SZL_ID_0112_IDX_0400, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x23800C, Name: SZL_ID_0112_IDX_0200, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x238020, Name: SZL_ID_0112_IDX_0100, Type: Unknown
2025-03-08 21:19:33,843 - my_text.py:107  -   Address: 0x238030, Name: SZL_ID_0112_IDX_0000, Type: Unknown
2025-03-08 21:19:33,844 - my_text.py:107  -   Address: 0x23803E, Name: SZL_ID_0F11_IDX_0007, Type: Unknown
2025-03-08 21:19:33,844 - my_text.py:107  -   Address: 0x23804A, Name: SZL_ID_0F11_IDX_0006, Type: Unknown
2025-03-08 21:19:33,844 - my_text.py:107  -   Address: 0x238056, Name: SZL_ID_0F11_IDX_0001, Type: Unknown
2025-03-08 21:19:33,844 - my_text.py:107  -   Address: 0x238080, Name: SZL_ID_0111_IDX_0007, Type: Unknown
2025-03-08 21:19:33,844 - my_text.py:107  -   Address: 0x2380C0, Name: SZL_ID_0111_IDX_0006, Type: Unknown
2025-03-08 21:19:33,844 - my_text.py:107  -   Address: 0x238100, Name: SZL_ID_0111_IDX_0001, Type: Unknown
2025-03-08 21:19:33,844 - my_text.py:107  -   Address: 0x238140, Name: SZL_ID_0D97_IDX_0000, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x238180, Name: SZL_ID_0094_IDX_0000, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x238290, Name: SZL_ID_0692_IDX_0000, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x2382B0, Name: SZL_ID_0292_IDX_0000, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x2382D0, Name: SZL_ID_0092_IDX_0000, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x2382F0, Name: SZL_ID_0D91_IDX_0000, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x23830C, Name: SZL_ID_0F9A_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x238318, Name: SZL_ID_0F3A_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x238324, Name: SZL_ID_003A_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x238330, Name: SZL_ID_0F38_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x238340, Name: SZL_ID_0038_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x2383A0, Name: SZL_ID_0424_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,845 - my_text.py:107  -   Address: 0x2383C0, Name: SZL_ID_0124_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x2383E0, Name: SZL_ID_0024_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x23843C, Name: SZL_ID_0F23_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x238460, Name: SZL_ID_0023_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x238544, Name: SZL_ID_0F21_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x238550, Name: SZL_ID_0A21_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x238560, Name: SZL_ID_0021_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x2385C4, Name: SZL_ID_0F1B_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x2385E0, Name: SZL_ID_001B_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x238664, Name: SZL_ID_0F1A_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x238680, Name: SZL_ID_001A_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x2386B0, Name: SZL_ID_0F18_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x2386C0, Name: SZL_ID_0018_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,846 - my_text.py:107  -   Address: 0x2386DC, Name: SZL_ID_0F17_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x238700, Name: SZL_ID_0017_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x2388CA, Name: SZL_ID_0FA0_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x2388E0, Name: SZL_ID_00A0_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x2389B4, Name: SZL_ID_0F95_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x2389C0, Name: SZL_ID_0095_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x2389F4, Name: SZL_ID_0F94_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x238A00, Name: SZL_ID_0794_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x238B20, Name: SZL_ID_0294_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x238C2E, Name: SZL_ID_0F92_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x238C40, Name: SZL_ID_0A91_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x238C80, Name: SZL_ID_0591_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x238CCC, Name: SZL_ID_0F74_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x238CE0, Name: SZL_ID_0074_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x238D08, Name: SZL_ID_0F37_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x238D20, Name: SZL_ID_0037_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,847 - my_text.py:107  -   Address: 0x238D5C, Name: SZL_ID_0F25_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x238D70, Name: SZL_ID_0025_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x238D80, Name: SZL_ID_0F36_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x238D8C, Name: SZL_ID_0036_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x238D98, Name: SZL_ID_0F1C_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x238DC0, Name: SZL_ID_001C_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x238F20, Name: SZL_ID_0F19_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x238F40, Name: SZL_ID_0019_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x238F68, Name: SZL_ID_0F14_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x238F80, Name: SZL_ID_0015_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x238FC0, Name: SZL_ID_0014_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x239020, Name: SZL_ID_0013_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x2390E0, Name: SZL_ID_0012_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,848 - my_text.py:107  -   Address: 0x239120, Name: SZL_ID_0011_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x2391A0, Name: SZL_ID_0002_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x23936A, Name: SZL_ID_0F00_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x239380, Name: SZL_ID_0000_IDX_XXXX, Type: Unknown
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x23946C, Name: SZLSysState, Type: Unknown
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x239472, Name: SZLNotAvail, Type: Unknown
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x239480, Name: _ZL9libresult, Type: Unknown
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x239484, Name: __bss_start, Type: Unknown
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x239488, Name: __TMC_END__, Type: Unknown
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x239490, Name: completed.6718, Type: Unknown
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x2394A0, Name: _ZL8PingKind, Type: Unknown
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x2394A4, Name: _ZL23SocketsLayerInitializer, Type: SocketsLayer
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x2394B0, Name: _ZL14ServersManager, Type: None
2025-03-08 21:19:33,849 - my_text.py:107  -   Address: 0x2394B8, Name: _end, Type: Unknown
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x2394C0, Name: _ZNSs6appendEPKcm, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x2394C8, Name: pthread_setcancelstate, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x2394D0, Name: pthread_cond_destroy, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x2394D8, Name: memset, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x2394E0, Name: shutdown, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x2394E8, Name: close, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x2394F0, Name: ioctl, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x2394F8, Name: _Znam, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x239500, Name: pthread_cond_signal, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x239508, Name: _ZdlPv, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x239510, Name: _ZNSs7reserveEm, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x239518, Name: select, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x239520, Name: getpeername, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x239528, Name: gettimeofday, Type: None
2025-03-08 21:19:33,850 - my_text.py:107  -   Address: 0x239530, Name: recv, Type: None
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239538, Name: pthread_cond_timedwait, Type: None
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239540, Name: _ZNSsC1ERKSs, Type: None
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239548, Name: __cxa_atexit, Type: None
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239550, Name: setsockopt, Type: None
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239558, Name: pthread_mutex_init, Type: None
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239560, Name: _ZNSsD1Ev, Type: None
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239568, Name: strlen, Type: None
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239570, Name: _ZNSs4_Rep10_M_destroyERKSaIcE, Type: Unknown
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239578, Name: pthread_create, Type: None
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239580, Name: pthread_cond_init, Type: None
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239588, Name: listen, Type: None
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x239598, Name: _ZTVN10__cxxabiv117__class_type_infoE, Type: Unknown
2025-03-08 21:19:33,851 - my_text.py:107  -   Address: 0x2395A0, Name: pthread_setcanceltype, Type: None
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x2395A8, Name: pthread_join, Type: None
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x2395B0, Name: _ZNSsC1EPKcRKSaIcE, Type: Unknown
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x2395B8, Name: pthread_exit, Type: None
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x2395C0, Name: getsockopt, Type: None
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x2395C8, Name: getsockname, Type: None
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x2395D0, Name: connect, Type: None
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x2395D8, Name: __strcpy_chk, Type: Unknown
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x2395E0, Name: socket, Type: None
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x2395E8, Name: inet_ntoa, Type: None
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x2395F0, Name: __errno_location, Type: None
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x2395F8, Name: _ZTVN10__cxxabiv120__si_class_type_infoE, Type: Unknown
2025-03-08 21:19:33,852 - my_text.py:107  -   Address: 0x239600, Name: __stack_chk_fail, Type: Unknown
2025-03-08 21:19:33,853 - my_text.py:107  -   Address: 0x239608, Name: send, Type: None
2025-03-08 21:19:33,853 - my_text.py:107  -   Address: 0x239610, Name: _ZNSs6assignEPKcm, Type: None
2025-03-08 21:19:33,853 - my_text.py:107  -   Address: 0x239618, Name: strcpy, Type: None
2025-03-08 21:19:33,853 - my_text.py:107  -   Address: 0x239620, Name: pthread_cancel, Type: None
2025-03-08 21:19:33,853 - my_text.py:107  -   Address: 0x239628, Name: _ZNSs6assignERKSs, Type: None
2025-03-08 21:19:33,853 - my_text.py:107  -   Address: 0x239630, Name: nanosleep, Type: None
2025-03-08 21:19:33,854 - my_text.py:107  -   Address: 0x239638, Name: pthread_cond_wait, Type: None
2025-03-08 21:19:33,854 - my_text.py:107  -   Address: 0x239640, Name: _ZdaPv, Type: None
2025-03-08 21:19:33,854 - my_text.py:107  -   Address: 0x239648, Name: _ZTVN10__cxxabiv121__vmi_class_type_infoE, Type: Unknown
2025-03-08 21:19:33,854 - my_text.py:107  -   Address: 0x239650, Name: strncpy, Type: None
2025-03-08 21:19:33,855 - my_text.py:107  -   Address: 0x239658, Name: pthread_attr_init, Type: None
2025-03-08 21:19:33,855 - my_text.py:107  -   Address: 0x239660, Name: __cxa_end_catch, Type: None
2025-03-08 21:19:33,855 - my_text.py:107  -   Address: 0x239668, Name: _ZNSs4_Rep20_S_empty_rep_storageE, Type: Unknown
2025-03-08 21:19:33,857 - my_text.py:107  -   Address: 0x239670, Name: __cxa_begin_catch, Type: None
2025-03-08 21:19:33,857 - my_text.py:107  -   Address: 0x239678, Name: bind, Type: None
2025-03-08 21:19:33,857 - my_text.py:107  -   Address: 0x239680, Name: pthread_mutex_lock, Type: None
2025-03-08 21:19:33,857 - my_text.py:107  -   Address: 0x239688, Name: __gxx_personality_v0, Type: Unknown
2025-03-08 21:19:33,857 - my_text.py:107  -   Address: 0x239690, Name: localtime, Type: None
2025-03-08 21:19:33,857 - my_text.py:107  -   Address: 0x239698, Name: pthread_mutex_destroy, Type: None
2025-03-08 21:19:33,857 - my_text.py:107  -   Address: 0x2396A0, Name: _Znwm, Type: None
2025-03-08 21:19:33,857 - my_text.py:107  -   Address: 0x2396A8, Name: _Unwind_Resume, Type: None
2025-03-08 21:19:33,858 - my_text.py:107  -   Address: 0x2396B0, Name: pthread_cond_broadcast, Type: None
2025-03-08 21:19:33,858 - my_text.py:107  -   Address: 0x2396B8, Name: strftime, Type: None
2025-03-08 21:19:33,858 - my_text.py:107  -   Address: 0x2396C0, Name: accept, Type: None
2025-03-08 21:19:33,858 - my_text.py:107  -   Address: 0x2396C8, Name: clock_gettime, Type: None
2025-03-08 21:19:33,858 - my_text.py:107  -   Address: 0x2396D0, Name: pthread_mutex_unlock, Type: None
2025-03-08 21:19:33,859 - my_text.py:107  -   Address: 0x2396D8, Name: memcpy, Type: None
2025-03-08 21:19:33,859 - my_text.py:107  -   Address: 0x2396E0, Name: fcntl, Type: None
2025-03-08 21:19:33,859 - my_text.py:107  -   Address: 0x2396E8, Name: _ZNSs6appendERKSs, Type: None
2025-03-08 21:19:33,859 - my_text.py:107  -   Address: 0x2396F0, Name: __fdelt_chk, Type: Unknown
2025-03-08 21:19:33,859 - my_text.py:107  -   Address: 0x2396F8, Name: time, Type: None
2025-03-08 21:19:33,859 - my_text.py:107  -   Address: 0x239700, Name: inet_addr, Type: None
2025-03-08 21:19:33,859 - my_text.py:107  -   Address: 0x239708, Name: pthread_attr_setdetachstate, Type: None
2025-03-08 21:19:33,893 - my_text.py:274  - The function named main was not found.
2025-03-08 21:19:33,893 - my_text.py:275  - Analyze dynamic link libraries instead
2025-03-08 21:19:33,901 - my_text.py:286  - The offset address of the function Srv_Create is: 0x2b030
2025-03-08 21:19:33,901 - my_text.py:289  - The base address of the function Srv_Create is: 0x740c61a91030
2025-03-08 21:19:33,949 - my_text.py:286  - The offset address of the function Srv_RegisterArea is: 0x2b140
2025-03-08 21:19:33,949 - my_text.py:289  - The base address of the function Srv_RegisterArea is: 0x740c61a91140
2025-03-08 21:19:33,979 - my_text.py:286  - The offset address of the function Srv_RegisterArea is: 0x2b140
2025-03-08 21:19:33,979 - my_text.py:289  - The base address of the function Srv_RegisterArea is: 0x740c61a91140
2025-03-08 21:19:34,024 - my_text.py:286  - The offset address of the function Srv_RegisterArea is: 0x2b140
2025-03-08 21:19:34,024 - my_text.py:289  - The base address of the function Srv_RegisterArea is: 0x740c61a91140
2025-03-08 21:19:34,061 - my_text.py:286  - The offset address of the function Srv_SetMask is: 0x2b3c0
2025-03-08 21:19:34,061 - my_text.py:289  - The base address of the function Srv_SetMask is: 0x740c61a913c0
2025-03-08 21:19:34,066 - my_text.py:286  - The offset address of the function Srv_SetEventsCallback is: 0x2b400
2025-03-08 21:19:34,066 - my_text.py:289  - The base address of the function Srv_SetEventsCallback is: 0x740c61a91400
2025-03-08 21:19:34,077 - my_text.py:286  - The offset address of the function Srv_SetReadEventsCallback is: 0x2b420
2025-03-08 21:19:34,077 - my_text.py:289  - The base address of the function Srv_SetReadEventsCallback is: 0x740c61a91420
2025-03-08 21:19:34,088 - my_text.py:286  - The offset address of the function Srv_Start is: 0x2b100
2025-03-08 21:19:34,088 - my_text.py:289  - The base address of the function Srv_Start is: 0x740c61a91100
2025-03-08 21:19:34,258 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:34,258 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:35,186 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:35,186 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:35,376 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:35,376 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a785a0
2025-03-08 21:19:35,801 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:35,802 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:36,368 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:36,368 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:36,508 - my_text.py:286  - The offset address of the function _ZN7TPingerD2Ev is: 0x14760
2025-03-08 21:19:36,508 - my_text.py:289  - The base address of the function _ZN7TPingerD2Ev is: 0x740c61a79800
2025-03-08 21:19:38,841 - my_text.py:286  - The offset address of the function _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU is: 0x17540
2025-03-08 21:19:38,841 - my_text.py:289  - The base address of the function _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU is: 0x740c61a78960
2025-03-08 21:19:38,848 - my_text.py:286  - The offset address of the function _ZNSsC1ERKSs is: 0x239540
2025-03-08 21:19:38,848 - my_text.py:289  - The base address of the function _ZNSsC1ERKSs is: 0x740c61a7cd80
2025-03-08 21:19:38,918 - my_text.py:286  - The offset address of the function _ZN10TMsgSocket11WaitingDataEv is: 0x13600
2025-03-08 21:19:38,918 - my_text.py:289  - The base address of the function _ZN10TMsgSocket11WaitingDataEv is: 0x740c61a78100
2025-03-08 21:19:39,332 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:39,332 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:39,797 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:39,797 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:40,164 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:40,164 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:42,046 - my_text.py:286  - The offset address of the function _ZN11TSnapThread5StartEv is: 0x15b10
2025-03-08 21:19:42,046 - my_text.py:289  - The base address of the function _ZN11TSnapThread5StartEv is: 0x740c61a7ba20
2025-03-08 21:19:42,084 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:42,084 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:42,667 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:42,667 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:43,221 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:43,221 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:43,739 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:43,740 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:44,355 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:44,355 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:45,780 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:45,780 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:45,868 - my_text.py:286  - The offset address of the function _ZN9__gnu_cxxL27__exchange_and_add_dispatchEPii.constprop.11 is: 0x13210
2025-03-08 21:19:45,868 - my_text.py:289  - The base address of the function _ZN9__gnu_cxxL27__exchange_and_add_dispatchEPii.constprop.11 is: 0x740c61a79160
2025-03-08 21:19:45,907 - my_text.py:286  - The offset address of the function _ZNSs6appendERKSs is: 0x2396e8
2025-03-08 21:19:45,907 - my_text.py:289  - The base address of the function _ZNSs6appendERKSs is: 0x740c61a79600
2025-03-08 21:19:46,302 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:46,302 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:46,694 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:46,694 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:46,706 - my_text.py:286  - The offset address of the function _ZNSs6assignEPKcm is: 0x239610
2025-03-08 21:19:46,706 - my_text.py:289  - The base address of the function _ZNSs6assignEPKcm is: 0x740c61a78c30
2025-03-08 21:19:47,312 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:47,312 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:49,689 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:49,689 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:49,768 - my_text.py:286  - The offset address of the function _ZN9__gnu_cxxL27__exchange_and_add_dispatchEPii.constprop.11 is: 0x13210
2025-03-08 21:19:49,768 - my_text.py:289  - The base address of the function _ZN9__gnu_cxxL27__exchange_and_add_dispatchEPii.constprop.11 is: 0x740c61a79600
2025-03-08 21:19:49,850 - my_text.py:286  - The offset address of the function _ZN9__gnu_cxxL27__exchange_and_add_dispatchEPii.constprop.11 is: 0x13210
2025-03-08 21:19:49,850 - my_text.py:289  - The base address of the function _ZN9__gnu_cxxL27__exchange_and_add_dispatchEPii.constprop.11 is: 0x740c61a78630
2025-03-08 21:19:50,240 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:50,240 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:50,502 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:50,503 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:53,370 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:53,371 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a78eb0
2025-03-08 21:19:53,375 - my_text.py:286  - The offset address of the function _ZN13TIsoTcpSocket11ClrIsoErrorEv is: 0x16d80
2025-03-08 21:19:53,375 - my_text.py:289  - The base address of the function _ZN13TIsoTcpSocket11ClrIsoErrorEv is: 0x740c61a912a0
2025-03-08 21:19:53,403 - my_text.py:286  - The offset address of the function _ZN10TMsgSocket11WaitForDataEii is: 0x138e0
2025-03-08 21:19:53,404 - my_text.py:289  - The base address of the function _ZN10TMsgSocket11WaitForDataEii is: 0x740c61a77fd0
2025-03-08 21:19:53,432 - my_text.py:286  - The offset address of the function _ZN10TMsgSocket7CanReadEi is: 0x13800
2025-03-08 21:19:53,432 - my_text.py:289  - The base address of the function _ZN10TMsgSocket7CanReadEi is: 0x740c61a78e90
2025-03-08 21:19:53,517 - my_text.py:286  - The offset address of the function _ZN13TIsoTcpSocket7PDUSizeEPv is: 0x16f00
2025-03-08 21:19:53,517 - my_text.py:289  - The base address of the function _ZN13TIsoTcpSocket7PDUSizeEPv is: 0x740c61a77de0
2025-03-08 21:19:53,927 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:53,927 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:54,159 - my_text.py:286  - The offset address of the function Srv_EventText is: 0x2b2a0
2025-03-08 21:19:54,159 - my_text.py:289  - The base address of the function Srv_EventText is: 0x740c61a912a0
2025-03-08 21:19:55,980 - my_text.py:310  - Extracted information: {'0:0300001902f08032010000000000080000f0000001000101e0': {'2': {5: {'0x17434': '0x740c58000ce9 0xf0', '0x1743b': '0xf0', '0x17444': '0xf0', '0x1749b': '0x740c58000ce9 0xf0', '0x174a4': '0x740c58000ce9 0xf0', '0x16f29': '0x740c58000ce9 0xf0', '0x16f51': '0xf0;0xf0', '0x17803': '0x740c58000ce9 0xf0', '0x17807': '0xf0', '0x1780f': '0xf0'}, 6: {'0x17488': '0x740c58000cea 0x80', '0x1748f': '0x80', '0x17492': '0x740c58000cea 0x1', '0x175c8': '0x1'}, 2: {'0x16f00': '0x740c58000ce6 0x0', '0x16f08': '0x0', '0x16f0b': '0x0', '0x174af': '0x740c58000ce6 0x19', '0x16f41': '0x19', '0x16f44': '0x12', '0x16f80': '0x12;0x12', '0x174bb': '0x19', '0x174bf': '0x12;0x12', '0x174c4': '0x12;0x1000', '0x174c9': '0x740c58000ce6 0x12', '0x140ca': '0x740c58000ce6 0x12', '0x140de': '0x740c58000ce6 0x12', '0x138e5': '0x740c58000ce6 0x12', '0x138e6': '0x740c58000ce6 0x12', '0x138e8': '0x12;0x12', '0x13800': '0x740c58000ce6 0x12', '0x138aa': '0x740c58000ce6 0x12', '0x13912': '0x12;0x12', '0x13923': '0x740c58000ce6 0x12', '0x174e0': '0x740c58000ce6 0x12', '0x175cf': '0x0;0x12', '-0x1d8512caa807': '0x740c58000ce6 0x740c5cdfe930'}, 3: {'0x16f04': '0x740c58000ce7 0x19', '0x16f0b': '0x0', '0x174af': '0x740c58000ce6 0x19', '0x16f41': '0x19', '0x16f44': '0x12', '0x16f80': '0x12;0x12', '0x174bb': '0x19', '0x174bf': '0x12;0x12', '0x174c4': '0x12;0x1000', '0x174c9': '0x740c58000ce6 0x12', '0x140ca': '0x740c58000ce6 0x12', '0x140de': '0x740c58000ce6 0x12', '0x138e5': '0x740c58000ce6 0x12', '0x138e6': '0x740c58000ce6 0x12', '0x138e8': '0x12;0x12', '0x13800': '0x740c58000ce6 0x12', '0x138aa': '0x740c58000ce6 0x12', '0x13912': '0x12;0x12', '0x13923': '0x740c58000ce6 0x12', '0x174e0': '0x740c58000ce6 0x12', '0x175cf': '0x0;0x12', '-0x1d8512caa807': '0x740c58000ce6 0x740c5cdfe930'}, 4: {'0x16f4b': '0x2'}, 13: {'0x1a23c': '0x740c58000cf1 0x800', '0x13410': '0x740c58000cf1 0x800', '0x13412': '0x800', '0x1a245': '0x740c58000cf1 0x8'}, 14: {'0x1a23c': '0x740c58000cf1 0x800', '0x13410': '0x740c58000cf1 0x800', '0x13412': '0x800', '0x1a245': '0x740c58000cf1 0x8'}, 15: {'0x1a253': '0x740c58000cf3 0x0', '0x13410': '0x740c58000cf3 0x0', '0x13412': '0x0', '0x1a25c': '0x740c58000cf3 0x0', '0x1a264': '0x0;0x0'}, 16: {'0x1a253': '0x740c58000cf3 0x0', '0x13410': '0x740c58000cf3 0x0', '0x13412': '0x0', '0x1a25c': '0x740c58000cf3 0x0', '0x1a264': '0x0;0x0'}, 8: {'0x1a272': '0x740c58000cec 0x1', '0x1a276': '0x1', '0x1a27c': '0x1', '0x1efca': '0x740c58000cec 0x1', '0x1efce': '0x1'}, 17: {'0x1eefb': '0x740c58000cf5 0xf0', '0x1eeff': '0xf0', '0x1ef10': '0xf0', '0x1ef40': '0xf0', '0x1ef68': '0xf0'}, 11: {'0x1a57e': '0x740c58000cef 0x0', '0x1a589': '0x740c58000cef 0x0'}, 12: {'0x1a57e': '0x740c58000cef 0x0', '0x1a589': '0x740c58000cef 0x0'}, 19: {'0x1a5a2': '0x740c58000cf7 0x100', '0x1a5b4': '0x740c58000cf7 0x100'}, 20: {'0x1a5a2': '0x740c58000cf7 0x100', '0x1a5b4': '0x740c58000cf7 0x100'}, 21: {'0x1a5b9': '0x740c58000cf9 0x100', '0x1a5bd': '0x740c58000cf9 0x100'}, 22: {'0x1a5b9': '0x740c58000cf9 0x100', '0x1a5bd': '0x740c58000cf9 0x100'}, 23: {'0x1a5d5': '0x740c58000cfb 0xe001', '0x13410': '0x740c58000cfb 0xe001', '0x13412': '0xe001', '0x1a5e1': '0x1e0', '0x1a5eb': '0x1e0', '0x1a5f5': '0x740c58000cfb 0xe001', '0x1a5f9': '0x740c58000cfb 0xe001', '0x1a60d': '0x740c58000cfb 0xe001', '0x1a61d': '0x740c58000cfb 0x1e0', '0x1a628': '0x740c58000cfb 0x1e0', '0x1a633': '0x740c58000cfb 0x1e0', '0x1a3a8': '0x740c58000cfb 0x1e0', '0x14d08': '0x740c58000cfb 0x1e0', '0x14d30': '0x740c58000cfb 0x1e0', '0x14d4d': '0x740c58000cfb 0x1e0', '0x22c70': '0x740c58000cfb 0x1e0', '0x1f152': '0x740c58000cfb 0x4', '0x1f154': '0x740c58000cfb 0x4', '0x1f156': '0x740c58000cfb 0x4', '0x1f159': '0x4', '0x1f160': '0xa;0x0', '0x1f163': '0x4;0x0', '0x1f166': '0x740c58000cfb 0x4', '0x1f169': '0x4', '0x1f17a': '0x0;0x0', '0x1f150': '0x740c58000cfb 0x4', '0x1f17e': '0x4;0x4'}, 24: {'0x1a5d5': '0x740c58000cfb 0xe001', '0x13410': '0x740c58000cfb 0xe001', '0x13412': '0xe001', '0x1a5e1': '0x1e0', '0x1a5eb': '0x1e0', '0x1a5f5': '0x740c58000cfb 0xe001', '0x1a5f9': '0x740c58000cfb 0xe001', '0x1a60d': '0x740c58000cfb 0xe001', '0x1a61d': '0x740c58000cfb 0x1e0', '0x1a628': '0x740c58000cfb 0x1e0', '0x1a633': '0x740c58000cfb 0x1e0', '0x1a3a8': '0x740c58000cfb 0x1e0', '0x14d08': '0x740c58000cfb 0x1e0', '0x14d30': '0x740c58000cfb 0x1e0', '0x14d4d': '0x740c58000cfb 0x1e0', '0x22c70': '0x740c58000cfb 0x1e0', '0x1f152': '0x740c58000cfb 0x4', '0x1f154': '0x740c58000cfb 0x4', '0x1f156': '0x740c58000cfb 0x4', '0x1f159': '0x4', '0x1f160': '0xa;0x0', '0x1f163': '0x4;0x0', '0x1f166': '0x740c58000cfb 0x4', '0x1f169': '0x4', '0x1f17a': '0x0;0x0', '0x1f150': '0x740c58000cfb 0x4', '0x1f17e': '0x4;0x4'}}, '1': {2: {'0x138aa': '0x740c58000ce6 0x0', '0x13800': '0x740c58000ce6 0x0'}, 3: {'0x138aa': '0x740c58000ce6 0x0', '0x13800': '0x740c58000ce6 0x0'}}}, '1:0300001f02f080320100000100000e00000401120a10020004000083000000': {'2': {5: {'0x17434': '0x740c58000ce9 0xf0', '0x1743b': '0xf0', '0x17444': '0xf0', '0x1749b': '0x740c58000ce9 0xf0', '0x174a4': '0x740c58000ce9 0xf0', '0x16f29': '0x740c58000ce9 0xf0', '0x16f51': '0xf0;0xf0', '0x17803': '0x740c58000ce9 0xf0', '0x17807': '0xf0', '0x1780f': '0xf0'}, 6: {'0x17488': '0x740c58000cea 0x80', '0x1748f': '0x80', '0x17492': '0x740c58000cea 0x1', '0x175c8': '0x1'}, 2: {'0x16f00': '0x740c58000ce6 0x0', '0x16f08': '0x0', '0x16f0b': '0x0', '0x174af': '0x740c58000ce6 0x1f', '0x16f41': '0x1f', '0x16f44': '0x18', '0x16f80': '0x18;0x18', '0x174bb': '0x1f', '0x174bf': '0x18;0x18', '0x174c4': '0x18;0x1000', '0x174c9': '0x740c58000ce6 0x18', '0x140ca': '0x740c58000ce6 0x18', '0x140de': '0x740c58000ce6 0x18', '0x138e5': '0x740c58000ce6 0x18', '0x138e6': '0x740c58000ce6 0x18', '0x138e8': '0x18;0x18', '0x13800': '0x740c58000ce6 0x18', '0x138aa': '0x740c58000ce6 0x18', '0x13912': '0x18;0x18', '0x13923': '0x740c58000ce6 0x18', '0x174e0': '0x740c58000ce6 0x18', '0x175cf': '0x0;0x18'}, 3: {'0x16f04': '0x740c58000ce7 0x1f', '0x16f0b': '0x0', '0x174af': '0x740c58000ce6 0x1f', '0x16f41': '0x1f', '0x16f44': '0x18', '0x16f80': '0x18;0x18', '0x174bb': '0x1f', '0x174bf': '0x18;0x18', '0x174c4': '0x18;0x1000', '0x174c9': '0x740c58000ce6 0x18', '0x140ca': '0x740c58000ce6 0x18', '0x140de': '0x740c58000ce6 0x18', '0x138e5': '0x740c58000ce6 0x18', '0x138e6': '0x740c58000ce6 0x18', '0x138e8': '0x18;0x18', '0x13800': '0x740c58000ce6 0x18', '0x138aa': '0x740c58000ce6 0x18', '0x13912': '0x18;0x18', '0x13923': '0x740c58000ce6 0x18', '0x174e0': '0x740c58000ce6 0x18', '0x175cf': '0x0;0x18'}, 4: {'0x16f4b': '0x2'}, 13: {'0x1a23c': '0x740c58000cf1 0xe00', '0x13410': '0x740c58000cf1 0xe00', '0x13412': '0xe00', '0x1a245': '0x740c58000cf1 0xe'}, 14: {'0x1a23c': '0x740c58000cf1 0xe00', '0x13410': '0x740c58000cf1 0xe00', '0x13412': '0xe00', '0x1a245': '0x740c58000cf1 0xe'}, 15: {'0x1a253': '0x740c58000cf3 0x0', '0x13410': '0x740c58000cf3 0x0', '0x13412': '0x0', '0x1a25c': '0x740c58000cf3 0x0', '0x1a264': '0x0;0x0'}, 16: {'0x1a253': '0x740c58000cf3 0x0', '0x13410': '0x740c58000cf3 0x0', '0x13412': '0x0', '0x1a25c': '0x740c58000cf3 0x0', '0x1a264': '0x0;0x0'}, 8: {'0x1a272': '0x740c58000cec 0x1', '0x1a276': '0x1', '0x1a27c': '0x1', '0x1efca': '0x740c58000cec 0x1', '0x1efce': '0x1'}, 17: {'0x1eefb': '0x740c58000cf5 0x4', '0x1eeff': '0x4', '0x1ef03': '0x4', '0x1ef50': '0x4', '0x1ef54': '0x4', '0x1ef58': '0x4', '0x1e4f0': '0x740c58000cf5 0x4', '0x1e500': '0x740c58000cf5 0x4'}, 23: {'0x1e3ce': '0x740c58000cfb 0x1e0', '0x1e3d9': '0x740c58000cfb 0x1e0'}, 24: {'0x1e3ce': '0x740c58000cfb 0x1e0', '0x1e3d9': '0x740c58000cfb 0x1e0'}, 18: {'0x1e3d4': '0x740c58000cf6 0x1', '0x1e3e0': '0x1', '0x1e550': '0x1;0x1', '0x1e55a': '0x1', '0x1df3d': '0x740c58000cf6 0x1', '0x1e2f3': '0x740c58000cf6 0x1', '0x1e504': '0x740c58000cf6 0x1', '0x1e509': '0x740c58000cf6 0x1', '0x17181': '0x740c58000cf6 0x1', '0x1721a': '0x740c58000cf6 0x1', '0x1e512': '0x1', '0x14c88': '0x740c58000cf6 0x1', '0x14cdf': '0x740c58000cf6 0x1'}, 27: {'0x1df79': '0x740c58000cff 0x83', '0x1df80': '0x740c58000cff 0x83', '0x1df85': '0x83;0x83', '0x1df87': '0x83', '0x1dfa5': '0x740c58000cff 0x83', '0x1d5e0': '0x83', '0x1d5ec': '0x83', '0x1e5e6': '0x740c58000cff 0x83', '0x1a3a8': '0x740c58000cff 0x83', '0x14d08': '0x740c58000cff 0x83', '0x14d30': '0x740c58000cff 0x83', '0x14d4d': '0x740c58000cff 0x83'}, 11: {'0x1e4aa': '0x740c58000cef 0x1', '0x1e4cb': '0x740c58000cef 0x1'}, 12: {'0x1e4aa': '0x740c58000cef 0x1', '0x1e4cb': '0x740c58000cef 0x1'}}, '1': {2: {'0x138aa': '0x740c58000ce6 0x0', '0x13800': '0x740c58000ce6 0x0', '0x13f15': '0x740c58000ce6 0x0', '0x13f42': '0x740c58000ce6 0x0', '0x150c5': '0x740c58000ce6 0x0'}, 3: {'0x138aa': '0x740c58000ce6 0x0', '0x13800': '0x740c58000ce6 0x0', '0x13f15': '0x740c58000ce6 0x0', '0x13f42': '0x740c58000ce6 0x0', '0x150c5': '0x740c58000ce6 0x0'}}}, '2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000': {'2': {5: {'0x17434': '0x740c58000ce9 0xf0', '0x1743b': '0xf0', '0x17444': '0xf0', '0x1749b': '0x740c58000ce9 0xf0', '0x174a4': '0x740c58000ce9 0xf0', '0x16f29': '0x740c58000ce9 0xf0', '0x16f51': '0xf0;0xf0', '0x17803': '0x740c58000ce9 0xf0', '0x17807': '0xf0', '0x1780f': '0xf0'}, 6: {'0x17488': '0x740c58000cea 0x80', '0x1748f': '0x80', '0x17492': '0x740c58000cea 0x1', '0x175c8': '0x1'}, 2: {'0x16f00': '0x740c58000ce6 0x0', '0x16f08': '0x0', '0x16f0b': '0x0', '0x174af': '0x740c58000ce6 0x27', '0x16f41': '0x27', '0x16f44': '0x20', '0x16f80': '0x20;0x20', '0x174bb': '0x27', '0x174bf': '0x20;0x20', '0x174c4': '0x20;0x1000', '0x174c9': '0x740c58000ce6 0x20', '0x140ca': '0x740c58000ce6 0x20', '0x140de': '0x740c58000ce6 0x20', '0x138e5': '0x740c58000ce6 0x20', '0x138e6': '0x740c58000ce6 0x20', '0x138e8': '0x20;0x20', '0x13800': '0x740c58000ce6 0x20', '0x138aa': '0x740c58000ce6 0x20', '0x13912': '0x20;0x20', '0x13923': '0x740c58000ce6 0x20', '0x174e0': '0x740c58000ce6 0x20', '0x175cf': '0x0;0x20'}, 3: {'0x16f04': '0x740c58000ce7 0x27', '0x16f0b': '0x0', '0x174af': '0x740c58000ce6 0x27', '0x16f41': '0x27', '0x16f44': '0x20', '0x16f80': '0x20;0x20', '0x174bb': '0x27', '0x174bf': '0x20;0x20', '0x174c4': '0x20;0x1000', '0x174c9': '0x740c58000ce6 0x20', '0x140ca': '0x740c58000ce6 0x20', '0x140de': '0x740c58000ce6 0x20', '0x138e5': '0x740c58000ce6 0x20', '0x138e6': '0x740c58000ce6 0x20', '0x138e8': '0x20;0x20', '0x13800': '0x740c58000ce6 0x20', '0x138aa': '0x740c58000ce6 0x20', '0x13912': '0x20;0x20', '0x13923': '0x740c58000ce6 0x20', '0x174e0': '0x740c58000ce6 0x20', '0x175cf': '0x0;0x20'}, 4: {'0x16f4b': '0x2'}, 13: {'0x1a23c': '0x740c58000cf1 0xe00', '0x13410': '0x740c58000cf1 0xe00', '0x13412': '0xe00', '0x1a245': '0x740c58000cf1 0xe', '0x1eb15': '0x740c58000cf1 0xe00', '0x1eb28': '0x740c58000cf1 0xe', '0x1eb2c': '0xe', '0x1ebb2': '0x740c58000ceb;0x18', '0x1eb8c': '0x18;0x8', '0x1eb92': '0x20'}, 14: {'0x1a23c': '0x740c58000cf1 0xe00', '0x13410': '0x740c58000cf1 0xe00', '0x13412': '0xe00', '0x1a245': '0x740c58000cf1 0xe', '0x1eb15': '0x740c58000cf1 0xe00', '0x1eb28': '0x740c58000cf1 0xe', '0x1eb2c': '0xe', '0x1ebb2': '0x740c58000ceb;0x18', '0x1eb8c': '0x18;0x8', '0x1eb92': '0x20'}, 15: {'0x1a253': '0x740c58000cf3 0x800', '0x13410': '0x740c58000cf3 0x800', '0x13412': '0x800', '0x1a25c': '0x740c58000cf3 0x8', '0x1a264': '0x8;0x8'}, 16: {'0x1a253': '0x740c58000cf3 0x800', '0x13410': '0x740c58000cf3 0x800', '0x13412': '0x800', '0x1a25c': '0x740c58000cf3 0x8', '0x1a264': '0x8;0x8'}, 8: {'0x1a272': '0x740c58000cec 0x1', '0x1a276': '0x1', '0x1a27c': '0x1', '0x1efca': '0x740c58000cec 0x1', '0x1efce': '0x1'}, 17: {'0x1eefb': '0x740c58000cf5 0x5', '0x1eeff': '0x5', '0x1ef03': '0x5', '0x1ef50': '0x5'}, 18: {'0x1eb30': '0x740c58000cf6 0x1', '0x1eb34': '0x740c58000cf6 0x1', '0x1eb38': '0x740c58000cf6 0x1', '0x1eb3d': '0x1', '0x1eb40': '0x740c58000cf6 0xf', '0x1eb44': '0x1;0x1', '0x1eb52': '0x740c58000cf6 0x1', '0x1eb5e': '0x1', '0x1eb69': '0x740c58000cf6 0x0', '0x1ebed': '0x1', '0x1ebf2': '0x740c58000cf6 0x1', '0x1ebf6': '0x740c58000cf6 0x1', '0x1ed48': '0x740c58000cf6 0x0', '0x1ed6d': '0x0', '0x1ed77': '0x740c58000cf6 0x1', '0x1e70a': '0x740c58000cf6 0x1', '0x1ea79': '0x740c58000cf6 0x1', '0x1eda4': '0x1;0x1', '0x1ee07': '0x740c58000cf6 0xf', '0x1717a': '0x740c58000cf6 0xf', '0x17181': '0x740c58000cf6 0x1', '0x13f65': '0x740c58000cf6 0xf', '0x13720': '0x740c58000cf6 0x16', '0x137ca': '0x740c58000cf6 0x16', '0x13fbb': '0x740c58000cf6 0x16', '0x13fd0': '0x16;0x16', '0x13fa3': '0x740c58000cf6 0xf', '0x1721a': '0x740c58000cf6 0x1', '0x14c88': '0x740c58000cf6 0x1', '0x14cdf': '0x740c58000cf6 0x1'}, 22: {'0x1eba3': '0x740c58000cfa 0x2', '0x1ebc4': '0x2'}, 33: {'0x1ebbb': '0x740c58000d05 0x2000', '0x13410': '0x740c58000d05 0x2000', '0x13412': '0x2000', '0x1ebce': '0x20', '0x1ebd2': '0x740c58000d05 0x4', '0x1eb83': '0x4', '0x1eb8f': '0x0'}, 34: {'0x1ebbb': '0x740c58000d05 0x2000', '0x13410': '0x740c58000d05 0x2000', '0x13412': '0x2000', '0x1ebce': '0x20', '0x1ebd2': '0x740c58000d05 0x4', '0x1eb83': '0x4', '0x1eb8f': '0x0'}, 27: {'0x1e732': '0x740c58000cff 0x83', '0x1e73b': '0x740c58000cff 0x83', '0x1e73f': '0x83;0x83', '0x1e741': '0x83', '0x1e75f': '0x740c58000cff 0x83', '0x1d5e0': '0x83', '0x1d5ec': '0x83', '0x1ee36': '0x740c58000cff 0x83', '0x1a3a8': '0x740c58000cff 0x83', '0x14d08': '0x740c58000cff 0x83', '0x14d30': '0x740c58000cff 0x83', '0x14d4d': '0x740c58000cff 0x83', '0x22726': '0x740c58000cff 0x83', '0x1fcdb': '0x83', '0x1fce8': '0x83'}, 11: {'0x1edd4': '0x740c58000cef 0x1', '0x1eddb': '0x740c58000cef 0x1'}, 12: {'0x1edd4': '0x740c58000cef 0x1', '0x1eddb': '0x740c58000cef 0x1'}}, '1': {18: {'0x13896': '0x0', '0x1389c': '0x0;0x0'}, 2: {'0x138a9': '0x740c58000ce6 0x56876137da80', '0x13801': '0x740c58000ce6 0x56876137da80', '0x13f10': '0x740c58000ce6 0x56876137da80', '0x13f3d': '0x740c58000ce6 0x56876137da80', '0x150c0': '0x740c58000ce6 0x56876137da80'}, 3: {'0x138a9': '0x740c58000ce6 0x56876137da80', '0x13801': '0x740c58000ce6 0x56876137da80', '0x13f10': '0x740c58000ce6 0x56876137da80', '0x13f3d': '0x740c58000ce6 0x56876137da80', '0x150c0': '0x740c58000ce6 0x56876137da80'}, 22: {'0x1387c': '0x3;0x0'}}}, '3:0300002102f080320700000100000800080001120411440100ff09000404240000': {'2': {5: {'0x17434': '0x740c58000ce9 0xf0', '0x1743b': '0xf0', '0x17444': '0xf0', '0x1749b': '0x740c58000ce9 0xf0', '0x174a4': '0x740c58000ce9 0xf0', '0x16f29': '0x740c58000ce9 0xf0', '0x16f51': '0xf0;0xf0', '0x17803': '0x740c58000ce9 0xf0', '0x17807': '0xf0', '0x1780f': '0xf0'}, 6: {'0x17488': '0x740c58000cea 0x80', '0x1748f': '0x80', '0x17492': '0x740c58000cea 0x1', '0x175c8': '0x1'}, 2: {'0x16f00': '0x740c58000ce6 0x0', '0x16f08': '0x0', '0x16f0b': '0x0', '0x174af': '0x740c58000ce6 0x21', '0x16f41': '0x21', '0x16f44': '0x1a', '0x16f80': '0x1a;0x1a', '0x174bb': '0x21', '0x174bf': '0x1a;0x1a', '0x174c4': '0x1a;0x1000', '0x174c9': '0x740c58000ce6 0x1a', '0x140ca': '0x740c58000ce6 0x1a', '0x140de': '0x740c58000ce6 0x1a', '0x138e5': '0x740c58000ce6 0x1a', '0x138e6': '0x740c58000ce6 0x1a', '0x138e8': '0x1a;0x1a', '0x13923': '0x740c58000ce6 0x1a', '0x174e0': '0x740c58000ce6 0x1a', '0x175cf': '0x0;0x1a'}, 3: {'0x16f04': '0x740c58000ce7 0x21', '0x16f0b': '0x0', '0x174af': '0x740c58000ce6 0x21', '0x16f41': '0x21', '0x16f44': '0x1a', '0x16f80': '0x1a;0x1a', '0x174bb': '0x21', '0x174bf': '0x1a;0x1a', '0x174c4': '0x1a;0x1000', '0x174c9': '0x740c58000ce6 0x1a', '0x140ca': '0x740c58000ce6 0x1a', '0x140de': '0x740c58000ce6 0x1a', '0x138e5': '0x740c58000ce6 0x1a', '0x138e6': '0x740c58000ce6 0x1a', '0x138e8': '0x1a;0x1a', '0x13923': '0x740c58000ce6 0x1a', '0x174e0': '0x740c58000ce6 0x1a', '0x175cf': '0x0;0x1a'}, 4: {'0x16f4b': '0x2'}, 13: {'0x1a23c': '0x740c58000cf1 0x800', '0x13410': '0x740c58000cf1 0x800', '0x13412': '0x800', '0x1a245': '0x740c58000cf1 0x8'}, 14: {'0x1a23c': '0x740c58000cf1 0x800', '0x13410': '0x740c58000cf1 0x800', '0x13412': '0x800', '0x1a245': '0x740c58000cf1 0x8'}, 15: {'0x1a253': '0x740c58000cf3 0x800', '0x13410': '0x740c58000cf3 0x800', '0x13412': '0x800', '0x1a25c': '0x740c58000cf3 0x8', '0x1a264': '0x8;0x8'}, 16: {'0x1a253': '0x740c58000cf3 0x800', '0x13410': '0x740c58000cf3 0x800', '0x13412': '0x800', '0x1a25c': '0x740c58000cf3 0x8', '0x1a264': '0x8;0x8'}, 8: {'0x1a272': '0x740c58000cec 0x7', '0x1a276': '0x7', '0x1a27c': '0x7', '0x1efca': '0x740c58000cec 0x7', '0x1efce': '0x7', '0x1efd6': '0x7'}, 22: {'0x1d51b': '0x740c58000cfa 0x44'}, 23: {'0x1d51f': '0x740c58000cfb 0x1', '0x1b534': '0x740c58000cfb 0x1', '0x1b538': '0x740c58000cfb 0x1', '0x1b55d': '0x740c58000cfb 0x1', '0x1b561': '0x1', '0x1b569': '0x1'}, 11: {'0x1b48b': '0x740c58000cef 0x1', '0x1b4ab': '0x740c58000cef 0x1'}, 12: {'0x1b48b': '0x740c58000cef 0x1', '0x1b4ab': '0x740c58000cef 0x1'}, 17: {'0x1b4d6': '0x740c58000cf5 0x0', '0x1b4d9': '0x740c58000cf5 0x0'}, 18: {'0x1b4e9': '0x740c58000cf6 0x1', '0x1b4ed': '0x740c58000cf6 0x1'}, 19: {'0x1b4fe': '0x740c58000cf7 0x12', '0x1b502': '0x740c58000cf7 0x12'}, 24: {'0x1b549': '0x740c58000cfc 0x0', '0x1b54d': '0x740c58000cfc 0x0'}, 29: {'0x1b592': '0x740c58000d01 0x2404', '0x13410': '0x740c58000d01 0x2404', '0x13412': '0x2404', '0x1b5a6': '0x740c58000d01 0x424', '0x1b5ac': '0x740c58000d01 0x424', '0x1b5cb': '0x740c58000d01 0x424', '0x1b5d1': '0x424', '0x1b5e3': '0x424', '0x1b5f6': '0x424', '0x1b608': '0x424', '0x1b9c0': '0x424', '0x1b665': '0x740c58000d01 0x424', '0x1a3a8': '0x740c58000d01 0x424', '0x14d08': '0x740c58000d01 0x424', '0x14d30': '0x740c58000d01 0x424', '0x14d4d': '0x740c58000d01 0x424', '0x22adb': '0x740c58000d01 0x424', '0x1f152': '0x740c58000d01 0x4', '0x1f154': '0x740c58000d01 0x4', '0x1f156': '0x740c58000d01 0x4', '0x1f159': '0x4', '0x1f160': '0x10;0x0', '0x1f163': '0x4;0x0', '0x1f166': '0x740c58000d01 0x4', '0x1f169': '0x4', '0x1f17a': '0x0;0x0', '0x1f150': '0x740c58000d01 0x4', '0x1f17e': '0x4;0x4'}, 30: {'0x1b592': '0x740c58000d01 0x2404', '0x13410': '0x740c58000d01 0x2404', '0x13412': '0x2404', '0x1b5a6': '0x740c58000d01 0x424', '0x1b5ac': '0x740c58000d01 0x424', '0x1b5cb': '0x740c58000d01 0x424', '0x1b5d1': '0x424', '0x1b5e3': '0x424', '0x1b5f6': '0x424', '0x1b608': '0x424', '0x1b9c0': '0x424', '0x1b665': '0x740c58000d01 0x424', '0x1a3a8': '0x740c58000d01 0x424', '0x14d08': '0x740c58000d01 0x424', '0x14d30': '0x740c58000d01 0x424', '0x14d4d': '0x740c58000d01 0x424', '0x22adb': '0x740c58000d01 0x424', '0x1f152': '0x740c58000d01 0x4', '0x1f154': '0x740c58000d01 0x4', '0x1f156': '0x740c58000d01 0x4', '0x1f159': '0x4', '0x1f160': '0x10;0x0', '0x1f163': '0x4;0x0', '0x1f166': '0x740c58000d01 0x4', '0x1f169': '0x4', '0x1f17a': '0x0;0x0', '0x1f150': '0x740c58000d01 0x4', '0x1f17e': '0x4;0x4'}, 31: {'0x1b5b9': '0x740c58000d03 0x0', '0x13410': '0x740c58000d03 0x0', '0x13412': '0x0', '0x1b5c2': '0x740c58000d03 0x0', '0x1b5c5': '0x740c58000d03 0x0', '0x1b657': '0x740c58000d03 0x0', '0x1a3a4': '0x740c58000d03 0x0', '0x14d0d': '0x740c58000d03 0x0', '0x14d35': '0x740c58000d03 0x0', '0x14d53': '0x740c58000d03 0x0', '0x22ac0': '0x740c58000d03 0x0', '0x1f152': '0x740c58000d03 0x0', '0x1f154': '0x740c58000d03 0x0', '0x1f156': '0x740c58000d03 0x0', '0x1f159': '0x0', '0x1f160': '0x10;0x0', '0x1f163': '0x0;0x0', '0x1f166': '0x740c58000d03 0x0', '0x1f169': '0x0', '0x1f17a': '0x0;0x0', '0x1f17e': '0x0;0x0'}, 32: {'0x1b5b9': '0x740c58000d03 0x0', '0x13410': '0x740c58000d03 0x0', '0x13412': '0x0', '0x1b5c2': '0x740c58000d03 0x0', '0x1b5c5': '0x740c58000d03 0x0', '0x1b657': '0x740c58000d03 0x0', '0x1a3a4': '0x740c58000d03 0x0', '0x14d0d': '0x740c58000d03 0x0', '0x14d35': '0x740c58000d03 0x0', '0x14d53': '0x740c58000d03 0x0', '0x22ac0': '0x740c58000d03 0x0', '0x1f152': '0x740c58000d03 0x0', '0x1f154': '0x740c58000d03 0x0', '0x1f156': '0x740c58000d03 0x0', '0x1f159': '0x0', '0x1f160': '0x10;0x0', '0x1f163': '0x0;0x0', '0x1f166': '0x740c58000d03 0x0', '0x1f169': '0x0', '0x1f17a': '0x0;0x0', '0x1f17e': '0x0;0x0'}}}}
2025-03-08 21:19:55,984 - my_text.py:352  - Local variables for _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb: {'var_40': {'start': 8, 'end': 8}, 'var_30': {'start': 24, 'end': 31}, 'var_28': {'start': 32, 'end': 39}, 'var_20': {'start': 40, 'end': 47}, 'var_18': {'start': 48, 'end': 55}, 'var_10': {'start': 56, 'end': 63}, 'var_8': {'start': 64, 'end': 71}, ' r': {'start': 72, 'end': 79}}
2025-03-08 21:19:55,986 - my_text.py:150  - Pseudocode line:   v10 = *((_BYTE *)this + 393);
2025-03-08 21:19:55,986 - my_text.py:150  - Pseudocode line:   if ( v10 == 0xE0 )
2025-03-08 21:19:55,986 - my_text.py:150  - Pseudocode line:   if ( v10 != 0xF0 )
2025-03-08 21:19:55,986 - my_text.py:150  - Pseudocode line:   v15 = v10;
2025-03-08 21:19:55,987 - my_text.py:150  - Pseudocode line:   if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )
2025-03-08 21:19:55,988 - my_text.py:352  - Local variables for _ZN13TIsoTcpSocket8CheckPDUEPvh: {'var_18': {'start': 0, 'end': 7}, 'var_10': {'start': 8, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:19:55,989 - my_text.py:150  - Pseudocode line:   TIsoTcpSocket::ClrIsoError(this);
2025-03-08 21:19:55,989 - my_text.py:150  - Pseudocode line:     || *((_BYTE *)a2 + 5) != a3 )
2025-03-08 21:19:55,990 - my_text.py:352  - Local variables for _ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind: {'var_10': {'start': 8, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:19:55,991 - my_text.py:150  - Pseudocode line:     result = a2[5];
2025-03-08 21:19:55,991 - my_text.py:150  - Pseudocode line:     if ( (_BYTE)result == 0xE0 )
2025-03-08 21:19:55,991 - my_text.py:150  - Pseudocode line:     else if ( (_BYTE)result == 0xF0 )
2025-03-08 21:19:55,991 - my_text.py:150  - Pseudocode line:   *a5 = *((_BYTE *)this + 394) >> 7;
2025-03-08 21:19:55,991 - my_text.py:150  - Pseudocode line:   *a5 = *((_BYTE *)this + 394) >> 7;
2025-03-08 21:19:55,991 - my_text.py:150  - Pseudocode line:   *a5 = *((_BYTE *)this + 394) >> 7;
2025-03-08 21:19:55,993 - my_text.py:352  - Local variables for _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU: {'dest': {'start': 8, 'end': 15}, 'var_58': {'start': 16, 'end': 16}, 'var_48': {'start': 32, 'end': 103}, ' r': {'start': 104, 'end': 111}}
2025-03-08 21:19:55,994 - my_text.py:150  - Pseudocode line:         goto LABEL_8;
2025-03-08 21:19:55,995 - my_text.py:352  - Local variables for _ZN13TIsoTcpSocket7PDUSizeEPv: {' r': {'start': 0, 'end': 7}}
2025-03-08 21:19:55,995 - my_text.py:150  - Pseudocode line:   return a2[3] + (a2[2] << 8);
2025-03-08 21:19:55,995 - my_text.py:150  - Pseudocode line:   return a2[3] + (a2[2] << 8);
2025-03-08 21:19:55,995 - my_text.py:150  - Pseudocode line:   return a2[3] + (a2[2] << 8);
2025-03-08 21:19:55,995 - my_text.py:150  - Pseudocode line:   v13 = TIsoTcpSocket::PDUSize(this, v5);
2025-03-08 21:19:55,995 - my_text.py:150  - Pseudocode line:   if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9
2025-03-08 21:19:55,995 - my_text.py:150  - Pseudocode line:   if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9
2025-03-08 21:19:55,996 - my_text.py:150  - Pseudocode line:   return 0LL;
2025-03-08 21:19:55,996 - my_text.py:150  - Pseudocode line:   v14 = v13 - 7;
2025-03-08 21:19:55,996 - my_text.py:150  - Pseudocode line:     return *((unsigned int *)this + 1126);
2025-03-08 21:19:55,996 - my_text.py:150  - Pseudocode line:     return *((unsigned int *)this + 1126);
2025-03-08 21:19:55,996 - my_text.py:150  - Pseudocode line:   TMsgSocket::RecvPacket(this, buf, v14);
2025-03-08 21:19:55,998 - my_text.py:352  - Local variables for _ZN10TMsgSocket10RecvPacketEPvi: {'var_18': {'start': 0, 'end': 7}, 'var_10': {'start': 8, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:19:55,998 - my_text.py:150  - Pseudocode line:   TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));
2025-03-08 21:19:55,999 - my_text.py:150  - Pseudocode line:   TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));
2025-03-08 21:19:56,000 - my_text.py:352  - Local variables for _ZN10TMsgSocket11WaitForDataEii: {'var_28': {'start': 0, 'end': 39}, ' r': {'start': 40, 'end': 47}}
2025-03-08 21:19:56,001 - my_text.py:150  - Pseudocode line:   if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )
2025-03-08 21:19:56,001 - my_text.py:150  - Pseudocode line:   if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )
2025-03-08 21:19:56,001 - my_text.py:150  - Pseudocode line:   if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )
2025-03-08 21:19:56,003 - my_text.py:352  - Local variables for _ZN10TMsgSocket7CanReadEi: {'var_A8': {'start': 0, 'end': 7}, 'var_A0': {'start': 8, 'end': 15}, 'readfds': {'start': 16, 'end': 143}, ' r': {'start': 168, 'end': 175}}
2025-03-08 21:19:56,004 - my_text.py:150  - Pseudocode line:   if ( *((_DWORD *)this + 6) == -1 )
2025-03-08 21:19:56,004 - my_text.py:150  - Pseudocode line:   return 0;
2025-03-08 21:19:56,004 - my_text.py:150  - Pseudocode line:     v4 = (int)TMsgSocket::WaitingData(this) < a2;
2025-03-08 21:19:56,004 - my_text.py:150  - Pseudocode line:   return result;
2025-03-08 21:19:56,005 - my_text.py:150  - Pseudocode line:   *a4 = v14;
2025-03-08 21:19:56,005 - my_text.py:150  - Pseudocode line:   v5 = 0;
2025-03-08 21:19:56,005 - my_text.py:326  - Function not found at address -0x1d8512caa807
2025-03-08 21:19:56,005 - my_text.py:150  - Pseudocode line:   return a2[3] + (a2[2] << 8);
2025-03-08 21:19:56,005 - my_text.py:326  - Function not found at address -0x1d8512caa807
2025-03-08 21:19:56,006 - my_text.py:150  - Pseudocode line:     || *((_BYTE *)a2 + 4) <= 1u
2025-03-08 21:19:56,007 - my_text.py:352  - Local variables for _ZN9TS7Worker11CheckPDU_inEi: {'var_20': {'start': 8, 'end': 15}, 'var_18': {'start': 16, 'end': 23}, 'var_10': {'start': 24, 'end': 31}, 'var_8': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}
2025-03-08 21:19:56,009 - my_text.py:150  - Pseudocode line:   v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));
2025-03-08 21:19:56,009 - my_text.py:352  - Local variables for _ZN9TSnapBase8SwapWordEt: {' r': {'start': 0, 'end': 7}}
2025-03-08 21:19:56,009 - my_text.py:150  - Pseudocode line:   result = __ROL2__(a2, 8);
2025-03-08 21:19:56,009 - my_text.py:150  - Pseudocode line:   result = __ROL2__(a2, 8);
2025-03-08 21:19:56,009 - my_text.py:150  - Pseudocode line:   v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));
2025-03-08 21:19:56,010 - my_text.py:150  - Pseudocode line:      + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))
2025-03-08 21:19:56,010 - my_text.py:150  - Pseudocode line:   v3 = v2
2025-03-08 21:19:56,010 - my_text.py:150  - Pseudocode line:   result = 0LL;
2025-03-08 21:19:56,010 - my_text.py:150  - Pseudocode line:     return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;
2025-03-08 21:19:56,010 - my_text.py:150  - Pseudocode line:     return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;
2025-03-08 21:19:56,010 - my_text.py:150  - Pseudocode line:     return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;
2025-03-08 21:19:56,011 - my_text.py:352  - Local variables for _ZN9TS7Worker17IsoPerformCommandERi: {'var_28': {'start': 0, 'end': 3}, 'var_10': {'start': 24, 'end': 31}, 'var_8': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}
2025-03-08 21:19:56,012 - my_text.py:150  - Pseudocode line:   v4 = *(_BYTE *)(*((_QWORD *)this + 564) + 1LL);
2025-03-08 21:19:56,012 - my_text.py:150  - Pseudocode line:   if ( v4 == 1 )
2025-03-08 21:19:56,013 - my_text.py:352  - Local variables for _ZN9TS7Worker17PerformPDURequestERi: {'var_18': {'start': 0, 'end': 3}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:19:56,014 - my_text.py:150  - Pseudocode line:   v2 = *(_BYTE *)(*((_QWORD *)this + 564) + 10LL);
2025-03-08 21:19:56,014 - my_text.py:150  - Pseudocode line:   if ( v2 > 0x1Fu )
2025-03-08 21:19:56,014 - my_text.py:150  - Pseudocode line:     if ( v2 < 0x28u )
2025-03-08 21:19:56,014 - my_text.py:150  - Pseudocode line:     if ( v2 <= 0x29u )
2025-03-08 21:19:56,015 - my_text.py:150  - Pseudocode line:     if ( v2 != 0xF0 )
2025-03-08 21:19:56,024 - my_text.py:352  - Local variables for _ZN9TS7Worker24PerformFunctionNegotiateEv: {'var_1038': {'start': 0, 'end': 3}, 'src': {'start': 16, 'end': 16}, 'var_1027': {'start': 17, 'end': 17}, 'var_1026': {'start': 18, 'end': 19}, 'var_1024': {'start': 20, 'end': 21}, 'var_1022': {'start': 22, 'end': 23}, 'var_1020': {'start': 24, 'end': 25}, 'var_101E': {'start': 26, 'end': 27}, 'var_101C': {'start': 28, 'end': 28}, 'var_101B': {'start': 29, 'end': 29}, 'var_101A': {'start': 30, 'end': 31}, 'var_1018': {'start': 32, 'end': 33}, 'var_1016': {'start': 34, 'end': 35}, 'var_20': {'start': 4120, 'end': 4127}, ' r': {'start': 4152, 'end': 4159}}
2025-03-08 21:19:56,026 - my_text.py:150  - Pseudocode line:   v3 = v2[2];
2025-03-08 21:19:56,026 - my_text.py:150  - Pseudocode line:   v11 = v3;
2025-03-08 21:19:56,026 - my_text.py:150  - Pseudocode line:   v4 = v2[6];
2025-03-08 21:19:56,026 - my_text.py:150  - Pseudocode line:   v17 = v4;
2025-03-08 21:19:56,027 - my_text.py:150  - Pseudocode line:   v18 = v2[7];
2025-03-08 21:19:56,027 - my_text.py:150  - Pseudocode line:   v18 = v2[7];
2025-03-08 21:19:56,027 - my_text.py:150  - Pseudocode line:     v6 = TSnapBase::SwapWord(v1, v2[8]);
2025-03-08 21:19:56,027 - my_text.py:150  - Pseudocode line:     if ( v6 <= 0xEFu )
2025-03-08 21:19:56,027 - my_text.py:150  - Pseudocode line:       if ( v6 > 0x1000u )
2025-03-08 21:19:56,028 - my_text.py:150  - Pseudocode line:         v7 = v2[8];
2025-03-08 21:19:56,028 - my_text.py:150  - Pseudocode line:       v19 = v7;
2025-03-08 21:19:56,028 - my_text.py:150  - Pseudocode line:   *((_DWORD *)this + 2170) = (unsigned __int16)TSnapBase::SwapWord(v1, v7);
2025-03-08 21:19:56,028 - my_text.py:150  - Pseudocode line:   TIsoTcpSocket::isoSendBuffer(this, src, 20);
2025-03-08 21:19:56,028 - my_text.py:150  - Pseudocode line:   *((_DWORD *)this + 2170) = (unsigned __int16)TSnapBase::SwapWord(v1, v7);
2025-03-08 21:19:56,029 - my_text.py:150  - Pseudocode line:   TS7Worker::DoEvent(this, 0x80000u, 0, *((_WORD *)this + 4340), 0, 0, 0);
2025-03-08 21:19:56,029 - my_text.py:352  - Local variables for _ZN9TS7Worker7DoEventEjttttt: {'var_18': {'start': 0, 'end': 3}, 'var_10': {'start': 8, 'end': 11}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:19:56,030 - my_text.py:150  - Pseudocode line:            a4,
2025-03-08 21:19:56,031 - my_text.py:352  - Local variables for _ZN16TCustomMsgServer7DoEventEijttttt: {'var_70': {'start': 8, 'end': 11}, 'var_68': {'start': 16, 'end': 19}, 'var_60': {'start': 24, 'end': 27}, 'var_58': {'start': 32, 'end': 35}, 'var_50': {'start': 40, 'end': 43}, 'timer': {'start': 48, 'end': 55}, 'var_40': {'start': 56, 'end': 59}, 'var_3C': {'start': 60, 'end': 63}, 'var_38': {'start': 64, 'end': 65}, 'var_36': {'start': 66, 'end': 67}, 'var_34': {'start': 68, 'end': 69}, 'var_32': {'start': 70, 'end': 71}, 'var_30': {'start': 72, 'end': 73}, 'var_28': {'start': 80, 'end': 87}, 'var_20': {'start': 88, 'end': 95}, 'var_18': {'start': 96, 'end': 103}, 'var_10': {'start': 104, 'end': 111}, 'var_8': {'start': 112, 'end': 119}, ' r': {'start': 120, 'end': 127}}
2025-03-08 21:19:56,033 - my_text.py:150  - Pseudocode line:       pthread_mutex_lock(*((pthread_mutex_t **)this + 11));
2025-03-08 21:19:56,033 - my_text.py:150  - Pseudocode line:       v25 = a7;
2025-03-08 21:19:56,033 - my_text.py:150  - Pseudocode line:       v23 = a5;
2025-03-08 21:19:56,094 - my_text.py:352  - Local variables for _Z10EvtSrvTextR9TSrvEvent: {'var_463': {'start': 5, 'end': 5}, 'var_462': {'start': 6, 'end': 6}, 'var_461': {'start': 7, 'end': 7}, 'var_460': {'start': 8, 'end': 8}, 'var_45F': {'start': 9, 'end': 9}, 'var_45E': {'start': 10, 'end': 10}, 'var_45D': {'start': 11, 'end': 11}, 'var_45C': {'start': 12, 'end': 12}, 'var_45B': {'start': 13, 'end': 13}, 'var_45A': {'start': 14, 'end': 14}, 'var_459': {'start': 15, 'end': 15}, 'var_458': {'start': 16, 'end': 23}, 'anonymous_0': {'start': 24, 'end': 24}, 'var_448': {'start': 32, 'end': 39}, 'anonymous_1': {'start': 40, 'end': 40}, 'var_438': {'start': 48, 'end': 55}, 'anonymous_2': {'start': 56, 'end': 56}, 'var_428': {'start': 64, 'end': 71}, 'var_418': {'start': 80, 'end': 87}, 'var_408': {'start': 96, 'end': 103}, 'var_3F8': {'start': 112, 'end': 119}, 'var_3E8': {'start': 128, 'end': 135}, 'var_3D8': {'start': 144, 'end': 151}, 'var_3C8': {'start': 160, 'end': 167}, 'var_3B8': {'start': 176, 'end': 183}, 'var_3A8': {'start': 192, 'end': 199}, 'var_398': {'start': 208, 'end': 215}, 'var_388': {'start': 224, 'end': 231}, 'var_378': {'start': 240, 'end': 247}, 'var_368': {'start': 256, 'end': 271}, 'var_358': {'start': 272, 'end': 279}, 'var_348': {'start': 288, 'end': 295}, 'var_338': {'start': 304, 'end': 311}, 'var_328': {'start': 320, 'end': 327}, 'var_318': {'start': 336, 'end': 343}, 'var_308': {'start': 352, 'end': 359}, 'var_2F8': {'start': 368, 'end': 375}, 'var_2E8': {'start': 384, 'end': 391}, 'var_2D8': {'start': 400, 'end': 407}, 'var_2C8': {'start': 416, 'end': 431}, 'var_2B8': {'start': 432, 'end': 439}, 'var_2A8': {'start': 448, 'end': 455}, 'var_298': {'start': 464, 'end': 471}, 'var_288': {'start': 480, 'end': 487}, 'var_278': {'start': 496, 'end': 511}, 'var_268': {'start': 512, 'end': 519}, 'var_258': {'start': 528, 'end': 543}, 'var_248': {'start': 544, 'end': 551}, 'var_238': {'start': 560, 'end': 575}, 'var_228': {'start': 576, 'end': 583}, 'var_218': {'start': 592, 'end': 607}, 'var_208': {'start': 608, 'end': 615}, 'var_1F8': {'start': 624, 'end': 631}, 'var_1E8': {'start': 640, 'end': 655}, 'var_1D8': {'start': 656, 'end': 663}, 'var_1C8': {'start': 672, 'end': 679}, 'var_1B8': {'start': 688, 'end': 695}, 'var_1A8': {'start': 704, 'end': 711}, 'var_198': {'start': 720, 'end': 727}, 'var_188': {'start': 736, 'end': 743}, 'var_178': {'start': 752, 'end': 759}, 'var_168': {'start': 768, 'end': 775}, 'var_158': {'start': 784, 'end': 791}, 'var_148': {'start': 800, 'end': 807}, 'var_138': {'start': 816, 'end': 831}, 'var_128': {'start': 832, 'end': 839}, 'var_118': {'start': 848, 'end': 855}, 'var_108': {'start': 864, 'end': 871}, 'var_F8': {'start': 880, 'end': 887}, 'var_E8': {'start': 896, 'end': 903}, 'var_D8': {'start': 912, 'end': 919}, 'var_C8': {'start': 928, 'end': 935}, 'var_B8': {'start': 944, 'end': 951}, 'var_A8': {'start': 960, 'end': 967}, 'var_98': {'start': 976, 'end': 991}, 'var_88': {'start': 992, 'end': 999}, 'var_78': {'start': 1008, 'end': 1015}, 'var_68': {'start': 1024, 'end': 1039}, 'var_58': {'start': 1040, 'end': 1047}, 'var_48': {'start': 1056, 'end': 1063}, 'var_38': {'start': 1072, 'end': 1079}, 'var_28': {'start': 1088, 'end': 1095}, 'var_20': {'start': 1096, 'end': 1103}, 'var_18': {'start': 1104, 'end': 1111}, 'var_10': {'start': 1112, 'end': 1119}, 'var_8': {'start': 1120, 'end': 1127}, ' r': {'start': 1128, 'end': 1135}}
2025-03-08 21:19:56,149 - my_text.py:150  - Pseudocode line:           IntToString((int)v88);
2025-03-08 21:19:56,152 - my_text.py:352  - Local variables for _Z11NumToStringiij: {'var_79': {'start': 15, 'end': 15}, 'var_78': {'start': 16, 'end': 23}, 'var_68': {'start': 32, 'end': 32}, 'var_30': {'start': 88, 'end': 95}, ' r': {'start': 136, 'end': 143}}
2025-03-08 21:19:56,155 - my_text.py:150  - Pseudocode line:       a2 /= a3;
2025-03-08 21:19:56,156 - my_text.py:150  - Pseudocode line:       a2 /= a3;
2025-03-08 21:19:56,156 - my_text.py:150  - Pseudocode line:         break;
2025-03-08 21:19:56,156 - my_text.py:150  - Pseudocode line:         break;
2025-03-08 21:19:56,156 - my_text.py:150  - Pseudocode line:         break;
2025-03-08 21:19:56,156 - my_text.py:150  - Pseudocode line:       *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];
2025-03-08 21:19:56,157 - my_text.py:150  - Pseudocode line:       *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];
2025-03-08 21:19:56,157 - my_text.py:150  - Pseudocode line:       *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];
2025-03-08 21:19:56,157 - my_text.py:150  - Pseudocode line:       *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];
2025-03-08 21:19:56,157 - my_text.py:150  - Pseudocode line:       a2 /= a3;
2025-03-08 21:19:56,157 - my_text.py:150  - Pseudocode line:     if ( a2 < 0 )
2025-03-08 21:19:56,158 - my_text.py:364  - 0:0300001902f08032010000000000080000f0000001000101e0 c_taint_asm_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'movzx   edx, [rsp+48h+var_40]; unsigned __int8', 'cmp     dl, 0E0h', 'movzx   edx, byte ptr [rbx+189h]', 'cmp     dl, 0F0h', 'mov     [rsp+48h+var_40], dl'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp     [rbx+5], r12b', 'mov     r12d, edx'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'movzx   eax, byte ptr [rbx+5]', 'cmp     al, 0F0h', 'cmp     al, 0E0h'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'movzx   eax, byte ptr [rbx+18Ah]', 'mov     [r15], al', 'shr     al, 7'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'cmp     [rsp+68h+var_58], 0'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'movzx   eax, byte ptr [rsi+2]', 'add     eax, edx', 'shl     eax, 8'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'test    r15d, r15d', 'mov     edx, r15d; int', 'sub     r15d, 7', 'mov     [r12], r15d', 'cmp     r15d, r13d', 'mov     r15d, eax'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'sub     eax, 7', 'xor     eax, eax', 'cmp     eax, 0FF9h'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'mov     esi, ebp; int', 'mov     ebp, edx'}, '_ZN10TMsgSocket11WaitForDataEii': {'push    rbp', 'xor     esi, esi; int', 'pop     rbp', 'mov     ebp, esi', 'cmp     eax, ebp'}, '_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'add     ebp, [rsp+68h+var_48]'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'movzx   edx, byte ptr [rsi+3]', 'add     eax, edx'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'test    r15d, r15d', 'mov     edx, r15d; int', 'sub     r15d, 7', 'mov     [r12], r15d', 'cmp     r15d, r13d', 'mov     r15d, eax'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'sub     eax, 7', 'xor     eax, eax', 'cmp     eax, 0FF9h'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'mov     esi, ebp; int', 'mov     ebp, edx'}, '_ZN10TMsgSocket11WaitForDataEii': {'push    rbp', 'xor     esi, esi; int', 'pop     rbp', 'mov     ebp, esi', 'cmp     eax, ebp'}, '_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'add     ebp, [rsp+68h+var_48]'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp     byte ptr [rbx+4], 1'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   esi, word ptr [rax+6]; unsigned __int16', 'movzx   r13d, ax'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   esi, word ptr [rax+6]; unsigned __int16', 'movzx   r13d, ax'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   eax, ax', 'xor     eax, eax', 'movzx   esi, word ptr [rax+8]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   eax, ax', 'xor     eax, eax', 'movzx   esi, word ptr [rax+8]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   edx, byte ptr [rax+1]', 'cmp     dl, 7', 'cmp     dl, 1'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'cmp     al, 1', 'movzx   eax, byte ptr [rax+1]'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {"cmp     al, 28h ; '('", "cmp     al, 29h ; ')'", 'movzx   eax, byte ptr [rax+0Ah]', 'cmp     al, 1Fh', 'cmp     al, 0F0h'}}, 11: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'movzx   eax, word ptr [rbp+4]', 'mov     [rsp+1038h+var_1024], ax'}}, 12: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'movzx   eax, word ptr [rbp+4]', 'mov     [rsp+1038h+var_1024], ax'}}, 19: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'mov     [rsp+1038h+var_101A], ax', 'movzx   eax, word ptr [rbp+0Ch]'}}, 20: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'mov     [rsp+1038h+var_101A], ax', 'movzx   eax, word ptr [rbp+0Ch]'}}, 21: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'movzx   eax, word ptr [rbp+0Eh]', 'mov     [rsp+1038h+var_1018], ax'}}, 22: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'movzx   eax, word ptr [rbp+0Eh]', 'mov     [rsp+1038h+var_1018], ax'}}, 23: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'movzx   esi, ax; unsigned __int16', 'cmp     ax, 1000h', 'movzx   eax, word ptr [rbp+10h]', 'movzx   esi, word ptr [rbp+10h]; unsigned __int16', 'mov     [rsp+1038h+var_1016], ax', 'mov     [rbx+21E8h], eax', 'movzx   eax, ax', 'cmp     ax, 0EFh', 'movzx   ecx, word ptr [rbx+21E8h]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}, '_ZN9TS7Worker7DoEventEjttttt': {'movzx   r8d, cx'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'mov     [rsp+78h+var_36], r8w', 'mov     [rsp+78h+var_68], r8d', 'mov     r8d, [rsp+78h+var_68]'}, '_Z10EvtSrvTextR9TSrvEvent': {'movzx   esi, word ptr [rbp+12h]'}, '_Z11NumToStringiij': {'mov     eax, esi', 'imul    edx, eax', 'test    esi, esi', "add     edx, 23h ; '#'", 'mov     edx, r10d', 'mov     edx, esi', 'sub     r10d, edx', 'mov     r10d, esi', 'test    eax, eax', 'mov     esi, eax', 'sar     edx, 1Fh'}}, 24: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'movzx   esi, ax; unsigned __int16', 'cmp     ax, 1000h', 'movzx   eax, word ptr [rbp+10h]', 'movzx   esi, word ptr [rbp+10h]; unsigned __int16', 'mov     [rsp+1038h+var_1016], ax', 'mov     [rbx+21E8h], eax', 'movzx   eax, ax', 'cmp     ax, 0EFh', 'movzx   ecx, word ptr [rbx+21E8h]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}, '_ZN9TS7Worker7DoEventEjttttt': {'movzx   r8d, cx'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'mov     [rsp+78h+var_36], r8w', 'mov     [rsp+78h+var_68], r8d', 'mov     r8d, [rsp+78h+var_68]'}, '_Z10EvtSrvTextR9TSrvEvent': {'movzx   esi, word ptr [rbp+12h]'}, '_Z11NumToStringiij': {'mov     eax, esi', 'imul    edx, eax', 'test    esi, esi', "add     edx, 23h ; '#'", 'mov     edx, r10d', 'mov     edx, esi', 'sub     r10d, edx', 'mov     r10d, esi', 'test    eax, eax', 'mov     esi, eax', 'sar     edx, 1Fh'}}}, '1': {2: {'_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}}}}
2025-03-08 21:19:56,160 - my_text.py:150  - Pseudocode line:     if ( v2 >= 0x1Du )
2025-03-08 21:19:56,161 - my_text.py:150  - Pseudocode line:     switch ( v2 )
2025-03-08 21:19:56,161 - my_text.py:150  - Pseudocode line:     switch ( v2 )
2025-03-08 21:19:56,161 - my_text.py:150  - Pseudocode line:     switch ( v2 )
2025-03-08 21:19:56,172 - my_text.py:352  - Local variables for _ZN9TS7Worker19PerformFunctionReadEv: {'var_1098': {'start': 0, 'end': 3}, 'var_107C': {'start': 28, 'end': 31}, 'var_1078': {'start': 32, 'end': 39}, 'src': {'start': 40, 'end': 47}, 'var_1068': {'start': 48, 'end': 51}, 'var_1058': {'start': 64, 'end': 65}, 'var_1056': {'start': 66, 'end': 67}, 'var_1054': {'start': 68, 'end': 69}, 'var_1052': {'start': 70, 'end': 71}, 'var_1050': {'start': 72, 'end': 73}, 'var_1048': {'start': 80, 'end': 80}, 'var_1047': {'start': 81, 'end': 81}, 'var_1046': {'start': 82, 'end': 83}, 'var_1044': {'start': 84, 'end': 85}, 'var_1042': {'start': 86, 'end': 87}, 'var_1040': {'start': 88, 'end': 89}, 'var_103E': {'start': 90, 'end': 91}, 'var_103C': {'start': 92, 'end': 92}, 'var_103B': {'start': 93, 'end': 93}, 'var_40': {'start': 4184, 'end': 4191}, ' r': {'start': 4248, 'end': 4255}}
2025-03-08 21:19:56,175 - my_text.py:150  - Pseudocode line:   v24 = *(_BYTE *)(v1 + 10);
2025-03-08 21:19:56,175 - my_text.py:150  - Pseudocode line:   v24 = *(_BYTE *)(v1 + 10);
2025-03-08 21:19:56,175 - my_text.py:150  - Pseudocode line:   v2 = *(unsigned __int8 *)(v1 + 11);
2025-03-08 21:19:56,175 - my_text.py:150  - Pseudocode line:   v3 = v1;
2025-03-08 21:19:56,175 - my_text.py:150  - Pseudocode line:   v2 = *(unsigned __int8 *)(v1 + 11);
2025-03-08 21:19:56,176 - my_text.py:150  - Pseudocode line:   if ( (unsigned __int8)v2 > 0x14u )
2025-03-08 21:19:56,176 - my_text.py:150  - Pseudocode line:     v12 = v2 - 1;
2025-03-08 21:19:56,176 - my_text.py:150  - Pseudocode line:     if ( v2 == 1 )
2025-03-08 21:19:56,182 - my_text.py:352  - Local variables for _ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv: {'var_68': {'start': 0, 'end': 3}, 'var_60': {'start': 8, 'end': 15}, 'n': {'start': 16, 'end': 23}, 'var_50': {'start': 24, 'end': 31}, 'src': {'start': 32, 'end': 39}, 'var_40': {'start': 40, 'end': 43}, 'var_39': {'start': 47, 'end': 47}, 'var_30': {'start': 56, 'end': 63}, 'var_28': {'start': 64, 'end': 71}, 'var_20': {'start': 72, 'end': 79}, 'var_18': {'start': 80, 'end': 87}, 'var_10': {'start': 88, 'end': 95}, 'var_8': {'start': 96, 'end': 103}, ' r': {'start': 104, 'end': 111}}
2025-03-08 21:19:56,187 - my_text.py:150  - Pseudocode line:   a5[3] = 0;
2025-03-08 21:19:56,187 - my_text.py:150  - Pseudocode line:       return TS7Worker::RA_NotFound(this, a2, a5);
2025-03-08 21:19:56,188 - my_text.py:150  - Pseudocode line:   v25 = *(_BYTE *)(v1 + 11);
2025-03-08 21:19:56,188 - my_text.py:150  - Pseudocode line:   v25 = *(_BYTE *)(v1 + 11);
2025-03-08 21:19:56,190 - my_text.py:352  - Local variables for _ZN13TIsoTcpSocket13isoSendBufferEPvi: {'var_20': {'start': 8, 'end': 15}, 'var_18': {'start': 16, 'end': 23}, 'var_10': {'start': 24, 'end': 31}, 'var_8': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}
2025-03-08 21:19:56,192 - my_text.py:150  - Pseudocode line:   TIsoTcpSocket::ClrIsoError(this);
2025-03-08 21:19:56,192 - my_text.py:150  - Pseudocode line:   return TIsoTcpSocket::SetIsoError(this, v5);
2025-03-08 21:19:56,192 - my_text.py:150  - Pseudocode line:   if ( v2 == 1 )
2025-03-08 21:19:56,192 - my_text.py:150  - Pseudocode line:   v9 = *((_BYTE *)this + 80) == 0;
2025-03-08 21:19:56,192 - my_text.py:150  - Pseudocode line:     if ( (result & a3) != 0 || (v10 & a3) != 0 )
2025-03-08 21:19:56,193 - my_text.py:150  - Pseudocode line:   a5[1] = *(unsigned __int8 *)(a3 + 8);
2025-03-08 21:19:56,193 - my_text.py:150  - Pseudocode line:   a5[1] = *(unsigned __int8 *)(a3 + 8);
2025-03-08 21:19:56,193 - my_text.py:150  - Pseudocode line:   v9 = 0;
2025-03-08 21:19:56,193 - my_text.py:150  - Pseudocode line:   if ( *(_BYTE *)(a3 + 8) == 0x84 )
2025-03-08 21:19:56,193 - my_text.py:150  - Pseudocode line:     Area = TS7Worker::GetArea(this, *(_BYTE *)(a3 + 8), v9);
2025-03-08 21:19:56,194 - my_text.py:352  - Local variables for _ZN9TS7Worker7GetAreaEht: {' r': {'start': 0, 'end': 7}}
2025-03-08 21:19:56,195 - my_text.py:150  - Pseudocode line:   if ( a2 == 0x81 )
2025-03-08 21:19:56,195 - my_text.py:150  - Pseudocode line:       if ( a2 < 0x83u )
2025-03-08 21:19:56,196 - my_text.py:150  - Pseudocode line:     TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);
2025-03-08 21:19:56,196 - my_text.py:150  - Pseudocode line:   v9 = *(_WORD *)(v3 + 4);
2025-03-08 21:19:56,196 - my_text.py:150  - Pseudocode line:   v20 = v9;
2025-03-08 21:19:56,197 - my_text.py:352  - Local variables for _ZN10TMsgSocket9SckAcceptEv: {'var_10': {'start': 8, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:19:56,197 - my_text.py:150  - Pseudocode line:   *((_DWORD *)this + 30) = 0;
2025-03-08 21:19:56,198 - my_text.py:150  - Pseudocode line:   return v1;
2025-03-08 21:19:56,200 - my_text.py:352  - Local variables for _ZN16TCustomMsgServer8IncomingEi: {'var_38': {'start': 0, 'end': 3}, 'var_30': {'start': 8, 'end': 11}, 'var_20': {'start': 24, 'end': 31}, 'var_18': {'start': 32, 'end': 39}, 'var_10': {'start': 40, 'end': 47}, 'var_8': {'start': 48, 'end': 55}, ' r': {'start': 56, 'end': 63}}
2025-03-08 21:19:56,201 - my_text.py:150  - Pseudocode line:   SockAddr = Msg_GetSockAddr(a2);
2025-03-08 21:19:56,202 - my_text.py:364  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 c_taint_asm_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'movzx   edx, [rsp+48h+var_40]; unsigned __int8', 'cmp     dl, 0E0h', 'movzx   edx, byte ptr [rbx+189h]', 'cmp     dl, 0F0h', 'mov     [rsp+48h+var_40], dl'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp     [rbx+5], r12b', 'mov     r12d, edx'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'movzx   eax, byte ptr [rbx+5]', 'cmp     al, 0F0h', 'cmp     al, 0E0h'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'movzx   eax, byte ptr [rbx+18Ah]', 'mov     [r15], al', 'shr     al, 7'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'cmp     [rsp+68h+var_58], 0'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'movzx   eax, byte ptr [rsi+2]', 'add     eax, edx', 'shl     eax, 8'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'test    r15d, r15d', 'mov     edx, r15d; int', 'sub     r15d, 7', 'mov     [r12], r15d', 'cmp     r15d, r13d', 'mov     r15d, eax'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'sub     eax, 7', 'xor     eax, eax', 'cmp     eax, 0FF9h'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'mov     esi, ebp; int', 'mov     ebp, edx'}, '_ZN10TMsgSocket11WaitForDataEii': {'push    rbp', 'xor     esi, esi; int', 'pop     rbp', 'mov     ebp, esi', 'cmp     eax, ebp'}, '_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'add     ebp, [rsp+68h+var_48]'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'movzx   edx, byte ptr [rsi+3]', 'add     eax, edx'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'test    r15d, r15d', 'mov     edx, r15d; int', 'sub     r15d, 7', 'mov     [r12], r15d', 'cmp     r15d, r13d', 'mov     r15d, eax'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'sub     eax, 7', 'xor     eax, eax', 'cmp     eax, 0FF9h'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'mov     esi, ebp; int', 'mov     ebp, edx'}, '_ZN10TMsgSocket11WaitForDataEii': {'push    rbp', 'xor     esi, esi; int', 'pop     rbp', 'mov     ebp, esi', 'cmp     eax, ebp'}, '_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'add     ebp, [rsp+68h+var_48]'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp     byte ptr [rbx+4], 1'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   esi, word ptr [rax+6]; unsigned __int16', 'movzx   r13d, ax'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   esi, word ptr [rax+6]; unsigned __int16', 'movzx   r13d, ax'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   eax, ax', 'xor     eax, eax', 'movzx   esi, word ptr [rax+8]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   eax, ax', 'xor     eax, eax', 'movzx   esi, word ptr [rax+8]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   edx, byte ptr [rax+1]', 'cmp     dl, 7', 'cmp     dl, 1'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'cmp     al, 1', 'movzx   eax, byte ptr [rax+1]'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {'cmp     al, 5', 'cmp     al, 1Dh', 'cmp     al, 1Ah', 'cmp     al, 4', 'movzx   eax, byte ptr [rax+0Ah]', 'cmp     al, 1Fh'}, '_ZN9TS7Worker19PerformFunctionReadEv': {'mov     [rsp+1098h+var_103C], al', 'movzx   eax, byte ptr [r13+0Ah]'}}, 23: {'_ZN9TS7Worker19PerformFunctionReadEv': {'mov     [rsp+1098h+var_1068], eax', 'mov     eax, [rdi+21E8h]'}}, 24: {'_ZN9TS7Worker19PerformFunctionReadEv': {'mov     [rsp+1098h+var_1068], eax', 'mov     eax, [rdi+21E8h]'}}, 18: {'_ZN9TS7Worker19PerformFunctionReadEv': {'cmp     r12b, 14h', 'movzx   eax, byte ptr [r13+0Bh]', 'movzx   r12d, byte ptr [r13+0Bh]', 'cmp     r12d, 1', 'mov     [rsp+1098h+var_103B], al', 'test    r12d, r12d'}, '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': {'mov     [rsp+var_20], r12', 'mov     r12, [rsp+68h+var_20]'}, '_ZN13TIsoTcpSocket13isoSendBufferEPvi': {'mov     [rsp+var_10], r12', 'mov     r12, [rsp+28h+var_10]'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'mov     r12, [rsp+78h+var_18]', 'mov     [rsp+var_18], r12'}}, 27: {'_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': {'movzx   esi, byte ptr [rbp+8]; unsigned __int8', 'xor     eax, eax', 'movzx   eax, byte ptr [rdx+8]', 'mov     [r8+2], ax', 'cmp     byte ptr [rdx+8], 84h'}, '_ZN9TS7Worker7GetAreaEht': {'cmp     sil, 83h', 'cmp     sil, 81h'}, '_ZN9TS7Worker19PerformFunctionReadEv': {'movzx   ecx, [rsp+1098h+var_1056]; unsigned __int16'}, '_ZN9TS7Worker7DoEventEjttttt': {'movzx   r8d, cx'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'mov     [rsp+78h+var_36], r8w', 'mov     [rsp+78h+var_68], r8d', 'mov     r8d, [rsp+78h+var_68]'}}, 11: {'_ZN9TS7Worker19PerformFunctionReadEv': {'mov     [rsp+1098h+var_1044], ax', 'movzx   eax, word ptr [rax+4]'}}, 12: {'_ZN9TS7Worker19PerformFunctionReadEv': {'mov     [rsp+1098h+var_1044], ax', 'movzx   eax, word ptr [rax+4]'}}}, '1': {2: {'_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}, '_ZN10TMsgSocket9SckAcceptEv': {'mov     [rsp+var_8], rbp', 'mov     rbp, [rsp+18h+var_8]'}, '_ZN16TCustomMsgServer8IncomingEi': {'mov     [rsp+var_18], rbp'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}, '_ZN10TMsgSocket9SckAcceptEv': {'mov     [rsp+var_8], rbp', 'mov     rbp, [rsp+18h+var_8]'}, '_ZN16TCustomMsgServer8IncomingEi': {'mov     [rsp+var_18], rbp'}}}}
2025-03-08 21:19:56,215 - my_text.py:352  - Local variables for _ZN9TS7Worker20PerformFunctionWriteEv: {'var_1128': {'start': 0, 'end': 3}, 'src': {'start': 16, 'end': 23}, 'var_1110': {'start': 24, 'end': 31}, 'var_1108': {'start': 32, 'end': 39}, 'var_10FC': {'start': 44, 'end': 47}, 'var_10F8': {'start': 48, 'end': 49}, 'var_10F6': {'start': 50, 'end': 51}, 'var_10F4': {'start': 52, 'end': 53}, 'var_10F2': {'start': 54, 'end': 55}, 'var_10F0': {'start': 56, 'end': 57}, 'var_10E8': {'start': 64, 'end': 71}, 'var_1048': {'start': 224, 'end': 224}, 'var_1047': {'start': 225, 'end': 225}, 'var_1046': {'start': 226, 'end': 227}, 'var_1044': {'start': 228, 'end': 229}, 'var_1042': {'start': 230, 'end': 231}, 'var_1040': {'start': 232, 'end': 233}, 'var_103E': {'start': 234, 'end': 235}, 'var_103C': {'start': 236, 'end': 236}, 'var_103B': {'start': 237, 'end': 237}, 'var_40': {'start': 4328, 'end': 4335}, ' r': {'start': 4392, 'end': 4399}}
2025-03-08 21:19:56,219 - my_text.py:150  - Pseudocode line:   v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;
2025-03-08 21:19:56,219 - my_text.py:150  - Pseudocode line:   v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;
2025-03-08 21:19:56,219 - my_text.py:150  - Pseudocode line:   v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;
2025-03-08 21:19:56,219 - my_text.py:150  - Pseudocode line:       v9 = v3 + *((_QWORD *)this + 564);
2025-03-08 21:19:56,219 - my_text.py:150  - Pseudocode line:       v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);
2025-03-08 21:19:56,220 - my_text.py:150  - Pseudocode line:       v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);
2025-03-08 21:19:56,220 - my_text.py:150  - Pseudocode line:   v17 = *((unsigned __int8 *)src + 11);
2025-03-08 21:19:56,220 - my_text.py:150  - Pseudocode line:   v17 = *((unsigned __int8 *)src + 11);
2025-03-08 21:19:56,221 - my_text.py:150  - Pseudocode line:   v17 = *((unsigned __int8 *)src + 11);
2025-03-08 21:19:56,221 - my_text.py:150  - Pseudocode line:   v21 = v17 + 14;
2025-03-08 21:19:56,221 - my_text.py:150  - Pseudocode line:   v21 = v17 + 14;
2025-03-08 21:19:56,221 - my_text.py:150  - Pseudocode line:   v21 = v17 + 14;
2025-03-08 21:19:56,221 - my_text.py:150  - Pseudocode line:     v4 = &v27;
2025-03-08 21:19:56,221 - my_text.py:150  - Pseudocode line:     v19 = (TSnapBase *)(unsigned int)(v17 - 1);
2025-03-08 21:19:56,222 - my_text.py:150  - Pseudocode line:     v19 = (TSnapBase *)(unsigned int)(v17 - 1);
2025-03-08 21:19:56,222 - my_text.py:150  - Pseudocode line:     if ( v17 == 1 )
2025-03-08 21:19:56,222 - my_text.py:150  - Pseudocode line:     v37 = *((_BYTE *)src + 11);
2025-03-08 21:19:56,222 - my_text.py:150  - Pseudocode line:     v37 = *((_BYTE *)src + 11);
2025-03-08 21:19:56,222 - my_text.py:150  - Pseudocode line:       v14 = 0LL;
2025-03-08 21:19:56,223 - my_text.py:150  - Pseudocode line:       while ( v14 != (TSnapBase *)((char *)v19 + 1) );
2025-03-08 21:19:56,223 - my_text.py:150  - Pseudocode line:       while ( v14 != (TSnapBase *)((char *)v19 + 1) );
2025-03-08 21:19:56,228 - my_text.py:352  - Local variables for _ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv: {'var_68': {'start': 0, 'end': 3}, 'var_60': {'start': 8, 'end': 15}, 'var_58': {'start': 16, 'end': 23}, 'var_4C': {'start': 28, 'end': 31}, 'dest': {'start': 32, 'end': 39}, 'var_40': {'start': 40, 'end': 43}, 'var_39': {'start': 47, 'end': 47}, 'var_30': {'start': 56, 'end': 63}, 'var_28': {'start': 64, 'end': 71}, 'var_20': {'start': 72, 'end': 79}, 'var_18': {'start': 80, 'end': 87}, 'var_10': {'start': 88, 'end': 95}, 'var_8': {'start': 96, 'end': 103}, ' r': {'start': 104, 'end': 111}}
2025-03-08 21:19:56,232 - my_text.py:150  - Pseudocode line:   a4[3] = 0;
2025-03-08 21:19:56,232 - my_text.py:150  - Pseudocode line:       return TS7Worker::WA_NotFound(this, a4);
2025-03-08 21:19:56,233 - my_text.py:150  - Pseudocode line:       while ( v14 != (TSnapBase *)((char *)v19 + 1) );
2025-03-08 21:19:56,233 - my_text.py:150  - Pseudocode line:       TIsoTcpSocket::isoSendBuffer(this, &v29, v21);
2025-03-08 21:19:56,233 - my_text.py:150  - Pseudocode line:   TIsoTcpSocket::ClrIsoError(this);
2025-03-08 21:19:56,234 - my_text.py:352  - Local variables for _ZN10TMsgSocket10SendPacketEPvi: {'var_18': {'start': 0, 'end': 7}, 'var_10': {'start': 8, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:19:56,235 - my_text.py:150  - Pseudocode line:   v4 = *((_DWORD *)this + 29);
2025-03-08 21:19:56,236 - my_text.py:352  - Local variables for _ZN10TMsgSocket8CanWriteEi: {'var_A8': {'start': 0, 'end': 7}, 'var_A0': {'start': 8, 'end': 15}, 'writefds': {'start': 16, 'end': 143}, ' r': {'start': 168, 'end': 175}}
2025-03-08 21:19:56,237 - my_text.py:150  - Pseudocode line:   if ( *((_DWORD *)this + 6) == -1 )
2025-03-08 21:19:56,237 - my_text.py:150  - Pseudocode line:   return 0;
2025-03-08 21:19:56,237 - my_text.py:150  - Pseudocode line:     v7 = send(*((_DWORD *)this + 6), buf, v5, 0x4000);
2025-03-08 21:19:56,237 - my_text.py:150  - Pseudocode line:     result = 0LL;
2025-03-08 21:19:56,238 - my_text.py:150  - Pseudocode line:     return 110LL;
2025-03-08 21:19:56,238 - my_text.py:150  - Pseudocode line:       v8 = *v6;
2025-03-08 21:19:56,238 - my_text.py:150  - Pseudocode line:       if ( (unsigned __int8)(v8 - 28) <= 1u || v8 == 1 )
2025-03-08 21:19:56,238 - my_text.py:150  - Pseudocode line:       v10 = *(_WORD *)(v9 + 2);
2025-03-08 21:19:56,238 - my_text.py:150  - Pseudocode line:         v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10) >> 3;
2025-03-08 21:19:56,239 - my_text.py:150  - Pseudocode line:         v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10) >> 3;
2025-03-08 21:19:56,239 - my_text.py:150  - Pseudocode line:       v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);
2025-03-08 21:19:56,239 - my_text.py:150  - Pseudocode line:       v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);
2025-03-08 21:19:56,239 - my_text.py:150  - Pseudocode line:   a4[1] = *(unsigned __int8 *)(a3 + 8);
2025-03-08 21:19:56,239 - my_text.py:150  - Pseudocode line:   a4[1] = *(unsigned __int8 *)(a3 + 8);
2025-03-08 21:19:56,239 - my_text.py:150  - Pseudocode line:   v7 = 0;
2025-03-08 21:19:56,239 - my_text.py:150  - Pseudocode line:   if ( *(_BYTE *)(a3 + 8) == 0x84 )
2025-03-08 21:19:56,240 - my_text.py:150  - Pseudocode line:     Area = TS7Worker::GetArea(this, *(_BYTE *)(a3 + 8), v7);
2025-03-08 21:19:56,240 - my_text.py:150  - Pseudocode line:       TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);
2025-03-08 21:19:56,240 - my_text.py:150  - Pseudocode line:         TxtStartSize((std::string *)v84, v58, v62, v70[0], v71, v72, v73, v74, v75);
2025-03-08 21:19:56,244 - my_text.py:352  - Local variables for _ZL7TxtAreaR9TSrvEvent.isra.10: {'var_49': {'start': 15, 'end': 15}, 'var_48': {'start': 16, 'end': 31}, 'var_38': {'start': 32, 'end': 39}, 'var_20': {'start': 56, 'end': 63}, 'var_18': {'start': 64, 'end': 71}, 'var_10': {'start': 72, 'end': 79}, 'var_8': {'start': 80, 'end': 87}, ' r': {'start': 88, 'end': 95}}
2025-03-08 21:19:56,247 - my_text.py:150  - Pseudocode line:   if ( a2 == 129 )
2025-03-08 21:19:56,247 - my_text.py:150  - Pseudocode line:   if ( a2 == 131 )
2025-03-08 21:19:56,247 - my_text.py:150  - Pseudocode line:       v32 = *(_WORD *)(v15 + 4);
2025-03-08 21:19:56,248 - my_text.py:150  - Pseudocode line:       v32 = *(_WORD *)(v15 + 4);
2025-03-08 21:19:56,248 - my_text.py:150  - Pseudocode line:   if ( v5 != -1LL )
2025-03-08 21:19:56,248 - my_text.py:150  - Pseudocode line:   if ( v5 != -1LL )
2025-03-08 21:19:56,248 - my_text.py:150  - Pseudocode line:   return 0;
2025-03-08 21:19:56,248 - my_text.py:150  - Pseudocode line:   if ( *((_DWORD *)this + 6) == -1 )
2025-03-08 21:19:56,249 - my_text.py:150  - Pseudocode line:   *((_DWORD *)this + 30) = 0;
2025-03-08 21:19:56,249 - my_text.py:150  - Pseudocode line:   return v1;
2025-03-08 21:19:56,249 - my_text.py:150  - Pseudocode line:   SockAddr = Msg_GetSockAddr(a2);
2025-03-08 21:19:56,249 - my_text.py:150  - Pseudocode line:   readfds.fds_bits[v3] |= 1LL << (*((_DWORD *)this + 6) % 64);
2025-03-08 21:19:56,249 - my_text.py:364  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 c_taint_asm_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'movzx   edx, [rsp+48h+var_40]; unsigned __int8', 'cmp     dl, 0E0h', 'movzx   edx, byte ptr [rbx+189h]', 'cmp     dl, 0F0h', 'mov     [rsp+48h+var_40], dl'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp     [rbx+5], r12b', 'mov     r12d, edx'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'movzx   eax, byte ptr [rbx+5]', 'cmp     al, 0F0h', 'cmp     al, 0E0h'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'movzx   eax, byte ptr [rbx+18Ah]', 'mov     [r15], al', 'shr     al, 7'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'cmp     [rsp+68h+var_58], 0'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'movzx   eax, byte ptr [rsi+2]', 'add     eax, edx', 'shl     eax, 8'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'test    r15d, r15d', 'mov     edx, r15d; int', 'sub     r15d, 7', 'mov     [r12], r15d', 'cmp     r15d, r13d', 'mov     r15d, eax'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'sub     eax, 7', 'xor     eax, eax', 'cmp     eax, 0FF9h'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'mov     esi, ebp; int', 'mov     ebp, edx'}, '_ZN10TMsgSocket11WaitForDataEii': {'push    rbp', 'xor     esi, esi; int', 'pop     rbp', 'mov     ebp, esi', 'cmp     eax, ebp'}, '_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'add     ebp, [rsp+68h+var_48]'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'movzx   edx, byte ptr [rsi+3]', 'add     eax, edx'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'test    r15d, r15d', 'mov     edx, r15d; int', 'sub     r15d, 7', 'mov     [r12], r15d', 'cmp     r15d, r13d', 'mov     r15d, eax'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'sub     eax, 7', 'xor     eax, eax', 'cmp     eax, 0FF9h'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'mov     esi, ebp; int', 'mov     ebp, edx'}, '_ZN10TMsgSocket11WaitForDataEii': {'push    rbp', 'xor     esi, esi; int', 'pop     rbp', 'mov     ebp, esi', 'cmp     eax, ebp'}, '_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'add     ebp, [rsp+68h+var_48]'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp     byte ptr [rbx+4], 1'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   esi, word ptr [rax+6]; unsigned __int16', 'movzx   r13d, ax'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'sbb     r14, 0FFFFFFFFFFFFFFFFh', 'movzx   r14d, ax', 'add     r14, rdx', 'movzx   esi, word ptr [rdx+6]; unsigned __int16', 'add     r14, 0Ah', 'add     rax, r14'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   esi, word ptr [rax+6]; unsigned __int16', 'movzx   r13d, ax'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'sbb     r14, 0FFFFFFFFFFFFFFFFh', 'movzx   r14d, ax', 'add     r14, rdx', 'movzx   esi, word ptr [rdx+6]; unsigned __int16', 'add     r14, 0Ah', 'add     rax, r14'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   eax, ax', 'xor     eax, eax', 'movzx   esi, word ptr [rax+8]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   eax, ax', 'xor     eax, eax', 'movzx   esi, word ptr [rax+8]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   edx, byte ptr [rax+1]', 'cmp     dl, 7', 'cmp     dl, 1'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'cmp     al, 1', 'movzx   eax, byte ptr [rax+1]'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {'cmp     al, 1Fh', 'movzx   eax, byte ptr [rax+0Ah]', 'cmp     al, 5', 'cmp     al, 1Dh'}}, 18: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'mov     eax, dword ptr [rsp+1128h+var_1110]', 'add     edx, 0Eh', 'mov     [rsp+1128h+var_103B], al', 'mov     dword ptr [rsp+1128h+var_1110], edx', 'movzx   eax, byte ptr [rdx+0Bh]', 'mov     r12, r8', 'mov     edx, [rsp+1128h+var_10FC]; int', 'test    r11d, r11d', 'add     r8, 1', 'mov     r11d, dword ptr [rsp+1128h+var_1110]', 'mov     [rsp+1128h+var_1108], rax', 'mov     [rsp+1128h+var_10FC], edx', 'movzx   edx, byte ptr [rdx+0Bh]', 'mov     r8, [rsp+1128h+var_1108]', 'sub     eax, 1', 'cmp     rbp, r12', 'cmp     dword ptr [rsp+1128h+var_1110], 1'}, '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': {'mov     [rsp+var_20], r12', 'mov     r12, [rsp+68h+var_20]'}, '_ZN13TIsoTcpSocket13isoSendBufferEPvi': {'mov     [rsp+var_10], r12', 'mov     r12, [rsp+28h+var_10]', 'mov     ebp, edx'}, '_ZN10TMsgSocket10SendPacketEPvi': {'cmp     rdx, rbp', 'mov     rdx, rbp; n', 'mov     [rsp+var_10], rbp', 'mov     rbp, [rsp+18h+var_10]'}, '_ZN10TMsgSocket8CanWriteEi': {'pop     rbp', 'push    rbp'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'mov     r12, [rsp+78h+var_18]', 'mov     [rsp+var_18], r12'}}, 22: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'movzx   edx, byte ptr [r12]', 'cmp     dl, 1'}}, 33: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'cmp     eax, 1', 'shr     ax, 3', 'movzx   esi, word ptr [rax+2]; unsigned __int16', 'movzx   eax, ax', 'and     eax, 1'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 34: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'cmp     eax, 1', 'shr     ax, 3', 'movzx   esi, word ptr [rax+2]; unsigned __int16', 'movzx   eax, ax', 'and     eax, 1'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 27: {'_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': {'mov     [rcx+2], ax', 'xor     eax, eax', 'movzx   eax, byte ptr [rdx+8]', 'movzx   esi, byte ptr [r13+8]; unsigned __int8', 'cmp     byte ptr [rdx+8], 84h'}, '_ZN9TS7Worker7GetAreaEht': {'cmp     sil, 83h', 'cmp     sil, 81h'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'movzx   ecx, [rsp+1128h+var_10F6]; unsigned __int16'}, '_ZN9TS7Worker7DoEventEjttttt': {'movzx   r8d, cx'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'mov     [rsp+78h+var_36], r8w', 'mov     [rsp+78h+var_68], r8d', 'mov     r8d, [rsp+78h+var_68]'}, '_Z10EvtSrvTextR9TSrvEvent': {'movzx   esi, word ptr [rbp+12h]'}, '_ZL7TxtAreaR9TSrvEvent.isra.10': {'cmp     si, 83h', 'cmp     si, 81h'}}, 11: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'mov     [rsp+1128h+var_1044], ax', 'movzx   eax, word ptr [rax+4]'}}, 12: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'mov     [rsp+1128h+var_1044], ax', 'movzx   eax, word ptr [rax+4]'}}}, '1': {18: {'_ZN10TMsgSocket7CanReadEi': {'cmp     rax, 0FFFFFFFFFFFFFFFFh', 'test    rax, rax'}}, 2: {'_ZN10TMsgSocket7CanReadEi': {'push    rbx', 'pop     rbx'}, '_ZN10TMsgSocket9SckAcceptEv': {'mov     rbx, [rsp+18h+var_10]', 'mov     [rsp+var_10], rbx'}, '_ZN16TCustomMsgServer8IncomingEi': {'mov     [rsp+var_20], rbx'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'push    rbx', 'pop     rbx'}, '_ZN10TMsgSocket9SckAcceptEv': {'mov     rbx, [rsp+18h+var_10]', 'mov     [rsp+var_10], rbx'}, '_ZN16TCustomMsgServer8IncomingEi': {'mov     [rsp+var_20], rbx'}}, 22: {'_ZN10TMsgSocket7CanReadEi': {'sub     ecx, edx'}}}}
2025-03-08 21:19:56,250 - my_text.py:150  - Pseudocode line:   if ( v4 != 7 )
2025-03-08 21:19:56,252 - my_text.py:352  - Local variables for _ZN9TS7Worker17PerformPDUUsrDataERi: {'var_18': {'start': 0, 'end': 3}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:19:56,253 - my_text.py:150  - Pseudocode line:   v3 = *(unsigned __int8 *)(v2 + 15);
2025-03-08 21:19:56,253 - my_text.py:150  - Pseudocode line:   v4 = *(_BYTE *)(v2 + 16);
2025-03-08 21:19:56,274 - my_text.py:352  - Local variables for _ZN9TS7Worker15PerformGroupSZLEv: {'var_28': {'start': 0, 'end': 3}, ' r': {'start': 40, 'end': 47}}
2025-03-08 21:19:56,293 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*((_QWORD *)this + 1080) + 6LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 6LL);
2025-03-08 21:19:56,293 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*((_QWORD *)this + 1080) + 6LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 6LL);
2025-03-08 21:19:56,293 - my_text.py:150  - Pseudocode line:   v7 = *(_BYTE *)(v6 + 6);
2025-03-08 21:19:56,293 - my_text.py:150  - Pseudocode line:   if ( v7 == 2 )
2025-03-08 21:19:56,294 - my_text.py:150  - Pseudocode line:   if ( v7 != 1 )
2025-03-08 21:19:56,294 - my_text.py:150  - Pseudocode line:   LOWORD(v2) = *(_WORD *)(v2 + 4);
2025-03-08 21:19:56,294 - my_text.py:150  - Pseudocode line:   *((_WORD *)this + 2266) = v2;
2025-03-08 21:19:56,294 - my_text.py:150  - Pseudocode line:   **((_BYTE **)this + 1080) = *v5;
2025-03-08 21:19:56,294 - my_text.py:150  - Pseudocode line:   **((_BYTE **)this + 1080) = *v5;
2025-03-08 21:19:56,295 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*((_QWORD *)this + 1080) + 1LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 1LL);
2025-03-08 21:19:56,295 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*((_QWORD *)this + 1080) + 1LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 1LL);
2025-03-08 21:19:56,295 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*((_QWORD *)this + 1080) + 2LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 2LL);
2025-03-08 21:19:56,295 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*((_QWORD *)this + 1080) + 2LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 2LL);
2025-03-08 21:19:56,296 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*((_QWORD *)this + 1080) + 7LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 7LL);
2025-03-08 21:19:56,296 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*((_QWORD *)this + 1080) + 7LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 7LL);
2025-03-08 21:19:56,296 - my_text.py:150  - Pseudocode line:   v10 = *(_WORD *)(v9 + 22);
2025-03-08 21:19:56,296 - my_text.py:150  - Pseudocode line:   v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));
2025-03-08 21:19:56,297 - my_text.py:150  - Pseudocode line:   *((_DWORD *)this + 2164) = (unsigned __int16)TSnapBase::SwapWord(v1, v10);
2025-03-08 21:19:56,297 - my_text.py:150  - Pseudocode line:   v12 = *((_DWORD *)this + 2164);
2025-03-08 21:19:56,297 - my_text.py:150  - Pseudocode line:   if ( v12 == 404 )
2025-03-08 21:19:56,298 - my_text.py:150  - Pseudocode line:   if ( v12 == 3860 )
2025-03-08 21:19:56,300 - my_text.py:150  - Pseudocode line:     else if ( v12 > 1684 )
2025-03-08 21:19:56,301 - my_text.py:150  - Pseudocode line:     else if ( v12 > 658 )
2025-03-08 21:19:56,303 - my_text.py:150  - Pseudocode line:       if ( v12 == 1060 )
2025-03-08 21:19:56,305 - my_text.py:150  - Pseudocode line:   v14 = *((_WORD *)this + 4328);
2025-03-08 21:19:56,306 - my_text.py:150  - Pseudocode line:           NumToString((std::string *)v115, *(unsigned __int16 *)(a2 + 18), 0x10u);
2025-03-08 21:19:56,306 - my_text.py:150  - Pseudocode line:   v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));
2025-03-08 21:19:56,307 - my_text.py:150  - Pseudocode line:   *((_DWORD *)this + 2165) = v11;
2025-03-08 21:19:56,307 - my_text.py:150  - Pseudocode line:   *((_DWORD *)this + 2165) = v11;
2025-03-08 21:19:56,309 - my_text.py:150  - Pseudocode line:   v13 = *((_WORD *)this + 4330);
2025-03-08 21:19:56,309 - my_text.py:150  - Pseudocode line:            a5,
2025-03-08 21:19:56,309 - my_text.py:150  - Pseudocode line:       pthread_mutex_lock(*((pthread_mutex_t **)this + 11));
2025-03-08 21:19:56,310 - my_text.py:150  - Pseudocode line:       v25 = a7;
2025-03-08 21:19:56,310 - my_text.py:150  - Pseudocode line:       v24 = a6;
2025-03-08 21:19:56,311 - my_text.py:150  - Pseudocode line:           NumToString((std::string *)v118, *(unsigned __int16 *)(a2 + 20), 0x10u);
2025-03-08 21:19:56,311 - my_text.py:364  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 c_taint_asm_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'movzx   edx, [rsp+48h+var_40]; unsigned __int8', 'cmp     dl, 0E0h', 'movzx   edx, byte ptr [rbx+189h]', 'cmp     dl, 0F0h', 'mov     [rsp+48h+var_40], dl'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp     [rbx+5], r12b', 'mov     r12d, edx'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'movzx   eax, byte ptr [rbx+5]', 'cmp     al, 0F0h', 'cmp     al, 0E0h'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'movzx   eax, byte ptr [rbx+18Ah]', 'mov     [r15], al', 'shr     al, 7'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'cmp     [rsp+68h+var_58], 0'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'movzx   eax, byte ptr [rsi+2]', 'add     eax, edx', 'shl     eax, 8'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'test    r15d, r15d', 'mov     edx, r15d; int', 'sub     r15d, 7', 'mov     [r12], r15d', 'cmp     r15d, r13d', 'mov     r15d, eax'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'sub     eax, 7', 'xor     eax, eax', 'cmp     eax, 0FF9h'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'mov     esi, ebp; int', 'mov     ebp, edx'}, '_ZN10TMsgSocket11WaitForDataEii': {'pop     rbp', 'mov     ebp, esi', 'push    rbp', 'xor     esi, esi; int'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'add     ebp, [rsp+68h+var_48]'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'movzx   edx, byte ptr [rsi+3]', 'add     eax, edx'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'test    r15d, r15d', 'mov     edx, r15d; int', 'sub     r15d, 7', 'mov     [r12], r15d', 'cmp     r15d, r13d', 'mov     r15d, eax'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'sub     eax, 7', 'xor     eax, eax', 'cmp     eax, 0FF9h'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'mov     esi, ebp; int', 'mov     ebp, edx'}, '_ZN10TMsgSocket11WaitForDataEii': {'pop     rbp', 'mov     ebp, esi', 'push    rbp', 'xor     esi, esi; int'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'add     ebp, [rsp+68h+var_48]'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp     byte ptr [rbx+4], 1'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   esi, word ptr [rax+6]; unsigned __int16', 'movzx   r13d, ax'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   esi, word ptr [rax+6]; unsigned __int16', 'movzx   r13d, ax'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   eax, ax', 'xor     eax, eax', 'movzx   esi, word ptr [rax+8]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   eax, ax', 'xor     eax, eax', 'movzx   esi, word ptr [rax+8]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx   edx, byte ptr [rax+1]', 'cmp     dl, 7', 'cmp     dl, 1'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'cmp     al, 1', 'movzx   eax, byte ptr [rax+1]', 'cmp     al, 7'}}, 22: {'_ZN9TS7Worker17PerformPDUUsrDataERi': {'movzx   ecx, byte ptr [rax+0Fh]; unsigned __int16'}}, 23: {'_ZN9TS7Worker17PerformPDUUsrDataERi': {'movzx   esi, byte ptr [rax+10h]'}, '_ZN9TS7Worker15PerformGroupSZLEv': {'movzx   eax, byte ptr [rax+6]', 'cmp     al, 2', 'cmp     al, 1', 'movzx   edx, byte ptr [rdx+6]', 'mov     [rax+6], dl'}}, 11: {'_ZN9TS7Worker15PerformGroupSZLEv': {'movzx   eax, word ptr [rax+4]', 'mov     [rdi+11B4h], ax'}}, 12: {'_ZN9TS7Worker15PerformGroupSZLEv': {'movzx   eax, word ptr [rax+4]', 'mov     [rdi+11B4h], ax'}}, 17: {'_ZN9TS7Worker15PerformGroupSZLEv': {'movzx   edx, byte ptr [rdx]', 'mov     [rax], dl'}}, 18: {'_ZN9TS7Worker15PerformGroupSZLEv': {'movzx   edx, byte ptr [rdx+1]', 'mov     [rax+1], dl'}}, 19: {'_ZN9TS7Worker15PerformGroupSZLEv': {'movzx   edx, byte ptr [rdx+2]', 'mov     [rax+2], dl'}}, 24: {'_ZN9TS7Worker15PerformGroupSZLEv': {'mov     [rax+7], dl', 'movzx   edx, byte ptr [rdx+7]'}}, 29: {'_ZN9TS7Worker15PerformGroupSZLEv': {'cmp     edx, 292h', 'cmp     edx, 694h', 'mov     edx, [rbx+21D0h]', 'movzx   ecx, word ptr [rbx+21D0h]; unsigned __int16', 'mov     [rbx+21D0h], eax', 'cmp     edx, 424h', 'cmp     edx, 0F14h', 'movzx   eax, ax', 'cmp     edx, 194h', 'movzx   esi, word ptr [rax+16h]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}, '_ZN9TS7Worker7DoEventEjttttt': {'movzx   r8d, cx'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'mov     [rsp+78h+var_36], r8w', 'mov     [rsp+78h+var_68], r8d', 'mov     r8d, [rsp+78h+var_68]'}, '_Z10EvtSrvTextR9TSrvEvent': {'movzx   esi, word ptr [rbp+12h]; int'}, '_Z11NumToStringiij': {'mov     eax, esi', 'imul    edx, eax', 'test    esi, esi', "add     edx, 23h ; '#'", 'mov     edx, r10d', 'mov     edx, esi', 'sub     r10d, edx', 'mov     r10d, esi', 'test    eax, eax', 'mov     esi, eax', 'sar     edx, 1Fh'}}, 30: {'_ZN9TS7Worker15PerformGroupSZLEv': {'cmp     edx, 292h', 'cmp     edx, 694h', 'mov     edx, [rbx+21D0h]', 'movzx   ecx, word ptr [rbx+21D0h]; unsigned __int16', 'mov     [rbx+21D0h], eax', 'cmp     edx, 424h', 'cmp     edx, 0F14h', 'movzx   eax, ax', 'cmp     edx, 194h', 'movzx   esi, word ptr [rax+16h]; unsigned __int16'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}, '_ZN9TS7Worker7DoEventEjttttt': {'movzx   r8d, cx'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'mov     [rsp+78h+var_36], r8w', 'mov     [rsp+78h+var_68], r8d', 'mov     r8d, [rsp+78h+var_68]'}, '_Z10EvtSrvTextR9TSrvEvent': {'movzx   esi, word ptr [rbp+12h]; int'}, '_Z11NumToStringiij': {'mov     eax, esi', 'imul    edx, eax', 'test    esi, esi', "add     edx, 23h ; '#'", 'mov     edx, r10d', 'mov     edx, esi', 'sub     r10d, edx', 'mov     r10d, esi', 'test    eax, eax', 'mov     esi, eax', 'sar     edx, 1Fh'}}, 31: {'_ZN9TS7Worker15PerformGroupSZLEv': {'movzx   r8d, word ptr [rbx+21D4h]; unsigned __int16', 'mov     [rbx+21D4h], edx', 'movzx   esi, word ptr [rax+6]; unsigned __int16', 'movzx   edx, ax'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}, '_ZN9TS7Worker7DoEventEjttttt': {'movzx   r9d, r8w'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'mov     [rsp+78h+var_70], r9d', 'mov     [rsp+78h+var_34], r9w', 'mov     r9d, [rsp+78h+var_70]'}, '_Z10EvtSrvTextR9TSrvEvent': {'movzx   esi, word ptr [rbp+14h]; int'}, '_Z11NumToStringiij': {'mov     eax, esi', 'imul    edx, eax', 'test    esi, esi', "add     edx, 23h ; '#'", 'mov     edx, r10d', 'mov     edx, esi', 'sub     r10d, edx', 'mov     r10d, esi', 'test    eax, eax', 'sar     edx, 1Fh'}}, 32: {'_ZN9TS7Worker15PerformGroupSZLEv': {'movzx   r8d, word ptr [rbx+21D4h]; unsigned __int16', 'mov     [rbx+21D4h], edx', 'movzx   esi, word ptr [rax+6]; unsigned __int16', 'movzx   edx, ax'}, '_ZN9TSnapBase8SwapWordEt': {'mov     eax, esi', 'rol     ax, 8'}, '_ZN9TS7Worker7DoEventEjttttt': {'movzx   r9d, r8w'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'mov     [rsp+78h+var_70], r9d', 'mov     [rsp+78h+var_34], r9w', 'mov     r9d, [rsp+78h+var_70]'}, '_Z10EvtSrvTextR9TSrvEvent': {'movzx   esi, word ptr [rbp+14h]; int'}, '_Z11NumToStringiij': {'mov     eax, esi', 'imul    edx, eax', 'test    esi, esi', "add     edx, 23h ; '#'", 'mov     edx, r10d', 'mov     edx, esi', 'sub     r10d, edx', 'mov     r10d, esi', 'test    eax, eax', 'sar     edx, 1Fh'}}}}
2025-03-08 21:19:56,312 - my_text.py:366  - local_vars: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'var_40': {'start': 8, 'end': 8}, 'var_30': {'start': 24, 'end': 31}, 'var_28': {'start': 32, 'end': 39}, 'var_20': {'start': 40, 'end': 47}, 'var_18': {'start': 48, 'end': 55}, 'var_10': {'start': 56, 'end': 63}, 'var_8': {'start': 64, 'end': 71}, ' r': {'start': 72, 'end': 79}}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'var_18': {'start': 0, 'end': 7}, 'var_10': {'start': 8, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'var_10': {'start': 8, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'dest': {'start': 8, 'end': 15}, 'var_58': {'start': 16, 'end': 16}, 'var_48': {'start': 32, 'end': 103}, ' r': {'start': 104, 'end': 111}}, '_ZN13TIsoTcpSocket7PDUSizeEPv': {' r': {'start': 0, 'end': 7}}, '_ZN10TMsgSocket10RecvPacketEPvi': {'var_18': {'start': 0, 'end': 7}, 'var_10': {'start': 8, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}, '_ZN10TMsgSocket11WaitForDataEii': {'var_28': {'start': 0, 'end': 39}, ' r': {'start': 40, 'end': 47}}, '_ZN10TMsgSocket7CanReadEi': {'var_A8': {'start': 0, 'end': 7}, 'var_A0': {'start': 8, 'end': 15}, 'readfds': {'start': 16, 'end': 143}, ' r': {'start': 168, 'end': 175}}, '_ZN9TS7Worker11CheckPDU_inEi': {'var_20': {'start': 8, 'end': 15}, 'var_18': {'start': 16, 'end': 23}, 'var_10': {'start': 24, 'end': 31}, 'var_8': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}, '_ZN9TSnapBase8SwapWordEt': {' r': {'start': 0, 'end': 7}}, '_ZN9TS7Worker17IsoPerformCommandERi': {'var_28': {'start': 0, 'end': 3}, 'var_10': {'start': 24, 'end': 31}, 'var_8': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}, '_ZN9TS7Worker17PerformPDURequestERi': {'var_18': {'start': 0, 'end': 3}, ' r': {'start': 24, 'end': 31}}, '_ZN9TS7Worker24PerformFunctionNegotiateEv': {'var_1038': {'start': 0, 'end': 3}, 'src': {'start': 16, 'end': 16}, 'var_1027': {'start': 17, 'end': 17}, 'var_1026': {'start': 18, 'end': 19}, 'var_1024': {'start': 20, 'end': 21}, 'var_1022': {'start': 22, 'end': 23}, 'var_1020': {'start': 24, 'end': 25}, 'var_101E': {'start': 26, 'end': 27}, 'var_101C': {'start': 28, 'end': 28}, 'var_101B': {'start': 29, 'end': 29}, 'var_101A': {'start': 30, 'end': 31}, 'var_1018': {'start': 32, 'end': 33}, 'var_1016': {'start': 34, 'end': 35}, 'var_20': {'start': 4120, 'end': 4127}, ' r': {'start': 4152, 'end': 4159}}, '_ZN9TS7Worker7DoEventEjttttt': {'var_18': {'start': 0, 'end': 3}, 'var_10': {'start': 8, 'end': 11}, ' r': {'start': 24, 'end': 31}}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'var_70': {'start': 8, 'end': 11}, 'var_68': {'start': 16, 'end': 19}, 'var_60': {'start': 24, 'end': 27}, 'var_58': {'start': 32, 'end': 35}, 'var_50': {'start': 40, 'end': 43}, 'timer': {'start': 48, 'end': 55}, 'var_40': {'start': 56, 'end': 59}, 'var_3C': {'start': 60, 'end': 63}, 'var_38': {'start': 64, 'end': 65}, 'var_36': {'start': 66, 'end': 67}, 'var_34': {'start': 68, 'end': 69}, 'var_32': {'start': 70, 'end': 71}, 'var_30': {'start': 72, 'end': 73}, 'var_28': {'start': 80, 'end': 87}, 'var_20': {'start': 88, 'end': 95}, 'var_18': {'start': 96, 'end': 103}, 'var_10': {'start': 104, 'end': 111}, 'var_8': {'start': 112, 'end': 119}, ' r': {'start': 120, 'end': 127}}, '_Z10EvtSrvTextR9TSrvEvent': {'var_463': {'start': 5, 'end': 5}, 'var_462': {'start': 6, 'end': 6}, 'var_461': {'start': 7, 'end': 7}, 'var_460': {'start': 8, 'end': 8}, 'var_45F': {'start': 9, 'end': 9}, 'var_45E': {'start': 10, 'end': 10}, 'var_45D': {'start': 11, 'end': 11}, 'var_45C': {'start': 12, 'end': 12}, 'var_45B': {'start': 13, 'end': 13}, 'var_45A': {'start': 14, 'end': 14}, 'var_459': {'start': 15, 'end': 15}, 'var_458': {'start': 16, 'end': 23}, 'anonymous_0': {'start': 24, 'end': 24}, 'var_448': {'start': 32, 'end': 39}, 'anonymous_1': {'start': 40, 'end': 40}, 'var_438': {'start': 48, 'end': 55}, 'anonymous_2': {'start': 56, 'end': 56}, 'var_428': {'start': 64, 'end': 71}, 'var_418': {'start': 80, 'end': 87}, 'var_408': {'start': 96, 'end': 103}, 'var_3F8': {'start': 112, 'end': 119}, 'var_3E8': {'start': 128, 'end': 135}, 'var_3D8': {'start': 144, 'end': 151}, 'var_3C8': {'start': 160, 'end': 167}, 'var_3B8': {'start': 176, 'end': 183}, 'var_3A8': {'start': 192, 'end': 199}, 'var_398': {'start': 208, 'end': 215}, 'var_388': {'start': 224, 'end': 231}, 'var_378': {'start': 240, 'end': 247}, 'var_368': {'start': 256, 'end': 271}, 'var_358': {'start': 272, 'end': 279}, 'var_348': {'start': 288, 'end': 295}, 'var_338': {'start': 304, 'end': 311}, 'var_328': {'start': 320, 'end': 327}, 'var_318': {'start': 336, 'end': 343}, 'var_308': {'start': 352, 'end': 359}, 'var_2F8': {'start': 368, 'end': 375}, 'var_2E8': {'start': 384, 'end': 391}, 'var_2D8': {'start': 400, 'end': 407}, 'var_2C8': {'start': 416, 'end': 431}, 'var_2B8': {'start': 432, 'end': 439}, 'var_2A8': {'start': 448, 'end': 455}, 'var_298': {'start': 464, 'end': 471}, 'var_288': {'start': 480, 'end': 487}, 'var_278': {'start': 496, 'end': 511}, 'var_268': {'start': 512, 'end': 519}, 'var_258': {'start': 528, 'end': 543}, 'var_248': {'start': 544, 'end': 551}, 'var_238': {'start': 560, 'end': 575}, 'var_228': {'start': 576, 'end': 583}, 'var_218': {'start': 592, 'end': 607}, 'var_208': {'start': 608, 'end': 615}, 'var_1F8': {'start': 624, 'end': 631}, 'var_1E8': {'start': 640, 'end': 655}, 'var_1D8': {'start': 656, 'end': 663}, 'var_1C8': {'start': 672, 'end': 679}, 'var_1B8': {'start': 688, 'end': 695}, 'var_1A8': {'start': 704, 'end': 711}, 'var_198': {'start': 720, 'end': 727}, 'var_188': {'start': 736, 'end': 743}, 'var_178': {'start': 752, 'end': 759}, 'var_168': {'start': 768, 'end': 775}, 'var_158': {'start': 784, 'end': 791}, 'var_148': {'start': 800, 'end': 807}, 'var_138': {'start': 816, 'end': 831}, 'var_128': {'start': 832, 'end': 839}, 'var_118': {'start': 848, 'end': 855}, 'var_108': {'start': 864, 'end': 871}, 'var_F8': {'start': 880, 'end': 887}, 'var_E8': {'start': 896, 'end': 903}, 'var_D8': {'start': 912, 'end': 919}, 'var_C8': {'start': 928, 'end': 935}, 'var_B8': {'start': 944, 'end': 951}, 'var_A8': {'start': 960, 'end': 967}, 'var_98': {'start': 976, 'end': 991}, 'var_88': {'start': 992, 'end': 999}, 'var_78': {'start': 1008, 'end': 1015}, 'var_68': {'start': 1024, 'end': 1039}, 'var_58': {'start': 1040, 'end': 1047}, 'var_48': {'start': 1056, 'end': 1063}, 'var_38': {'start': 1072, 'end': 1079}, 'var_28': {'start': 1088, 'end': 1095}, 'var_20': {'start': 1096, 'end': 1103}, 'var_18': {'start': 1104, 'end': 1111}, 'var_10': {'start': 1112, 'end': 1119}, 'var_8': {'start': 1120, 'end': 1127}, ' r': {'start': 1128, 'end': 1135}}, '_Z11NumToStringiij': {'var_79': {'start': 15, 'end': 15}, 'var_78': {'start': 16, 'end': 23}, 'var_68': {'start': 32, 'end': 32}, 'var_30': {'start': 88, 'end': 95}, ' r': {'start': 136, 'end': 143}}, '_ZN9TS7Worker19PerformFunctionReadEv': {'var_1098': {'start': 0, 'end': 3}, 'var_107C': {'start': 28, 'end': 31}, 'var_1078': {'start': 32, 'end': 39}, 'src': {'start': 40, 'end': 47}, 'var_1068': {'start': 48, 'end': 51}, 'var_1058': {'start': 64, 'end': 65}, 'var_1056': {'start': 66, 'end': 67}, 'var_1054': {'start': 68, 'end': 69}, 'var_1052': {'start': 70, 'end': 71}, 'var_1050': {'start': 72, 'end': 73}, 'var_1048': {'start': 80, 'end': 80}, 'var_1047': {'start': 81, 'end': 81}, 'var_1046': {'start': 82, 'end': 83}, 'var_1044': {'start': 84, 'end': 85}, 'var_1042': {'start': 86, 'end': 87}, 'var_1040': {'start': 88, 'end': 89}, 'var_103E': {'start': 90, 'end': 91}, 'var_103C': {'start': 92, 'end': 92}, 'var_103B': {'start': 93, 'end': 93}, 'var_40': {'start': 4184, 'end': 4191}, ' r': {'start': 4248, 'end': 4255}}, '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': {'var_68': {'start': 0, 'end': 3}, 'var_60': {'start': 8, 'end': 15}, 'n': {'start': 16, 'end': 23}, 'var_50': {'start': 24, 'end': 31}, 'src': {'start': 32, 'end': 39}, 'var_40': {'start': 40, 'end': 43}, 'var_39': {'start': 47, 'end': 47}, 'var_30': {'start': 56, 'end': 63}, 'var_28': {'start': 64, 'end': 71}, 'var_20': {'start': 72, 'end': 79}, 'var_18': {'start': 80, 'end': 87}, 'var_10': {'start': 88, 'end': 95}, 'var_8': {'start': 96, 'end': 103}, ' r': {'start': 104, 'end': 111}}, '_ZN13TIsoTcpSocket13isoSendBufferEPvi': {'var_20': {'start': 8, 'end': 15}, 'var_18': {'start': 16, 'end': 23}, 'var_10': {'start': 24, 'end': 31}, 'var_8': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}, '_ZN9TS7Worker7GetAreaEht': {' r': {'start': 0, 'end': 7}}, '_ZN10TMsgSocket9SckAcceptEv': {'var_10': {'start': 8, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}, '_ZN16TCustomMsgServer8IncomingEi': {'var_38': {'start': 0, 'end': 3}, 'var_30': {'start': 8, 'end': 11}, 'var_20': {'start': 24, 'end': 31}, 'var_18': {'start': 32, 'end': 39}, 'var_10': {'start': 40, 'end': 47}, 'var_8': {'start': 48, 'end': 55}, ' r': {'start': 56, 'end': 63}}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'var_1128': {'start': 0, 'end': 3}, 'src': {'start': 16, 'end': 23}, 'var_1110': {'start': 24, 'end': 31}, 'var_1108': {'start': 32, 'end': 39}, 'var_10FC': {'start': 44, 'end': 47}, 'var_10F8': {'start': 48, 'end': 49}, 'var_10F6': {'start': 50, 'end': 51}, 'var_10F4': {'start': 52, 'end': 53}, 'var_10F2': {'start': 54, 'end': 55}, 'var_10F0': {'start': 56, 'end': 57}, 'var_10E8': {'start': 64, 'end': 71}, 'var_1048': {'start': 224, 'end': 224}, 'var_1047': {'start': 225, 'end': 225}, 'var_1046': {'start': 226, 'end': 227}, 'var_1044': {'start': 228, 'end': 229}, 'var_1042': {'start': 230, 'end': 231}, 'var_1040': {'start': 232, 'end': 233}, 'var_103E': {'start': 234, 'end': 235}, 'var_103C': {'start': 236, 'end': 236}, 'var_103B': {'start': 237, 'end': 237}, 'var_40': {'start': 4328, 'end': 4335}, ' r': {'start': 4392, 'end': 4399}}, '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': {'var_68': {'start': 0, 'end': 3}, 'var_60': {'start': 8, 'end': 15}, 'var_58': {'start': 16, 'end': 23}, 'var_4C': {'start': 28, 'end': 31}, 'dest': {'start': 32, 'end': 39}, 'var_40': {'start': 40, 'end': 43}, 'var_39': {'start': 47, 'end': 47}, 'var_30': {'start': 56, 'end': 63}, 'var_28': {'start': 64, 'end': 71}, 'var_20': {'start': 72, 'end': 79}, 'var_18': {'start': 80, 'end': 87}, 'var_10': {'start': 88, 'end': 95}, 'var_8': {'start': 96, 'end': 103}, ' r': {'start': 104, 'end': 111}}, '_ZN10TMsgSocket10SendPacketEPvi': {'var_18': {'start': 0, 'end': 7}, 'var_10': {'start': 8, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}, '_ZN10TMsgSocket8CanWriteEi': {'var_A8': {'start': 0, 'end': 7}, 'var_A0': {'start': 8, 'end': 15}, 'writefds': {'start': 16, 'end': 143}, ' r': {'start': 168, 'end': 175}}, '_ZL7TxtAreaR9TSrvEvent.isra.10': {'var_49': {'start': 15, 'end': 15}, 'var_48': {'start': 16, 'end': 31}, 'var_38': {'start': 32, 'end': 39}, 'var_20': {'start': 56, 'end': 63}, 'var_18': {'start': 64, 'end': 71}, 'var_10': {'start': 72, 'end': 79}, 'var_8': {'start': 80, 'end': 87}, ' r': {'start': 88, 'end': 95}}, '_ZN9TS7Worker17PerformPDUUsrDataERi': {'var_18': {'start': 0, 'end': 3}, ' r': {'start': 24, 'end': 31}}, '_ZN9TS7Worker15PerformGroupSZLEv': {'var_28': {'start': 0, 'end': 3}, ' r': {'start': 40, 'end': 47}}}
2025-03-08 21:19:56,313 - my_text.py:368  - c_code: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': '__int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n', '_ZN13TIsoTcpSocket8CheckPDUEPvh': '__int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n', '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': '__int64 __fastcall TIsoTcpSocket::IsoPeek(TIsoTcpSocket *a1, unsigned __int8 *a2, _DWORD *a3)\n{\n  __int64 result; // rax\n\n  result = TIsoTcpSocket::PDUSize(a1, a2);\n  if ( (_DWORD)result == 7 )\n  {\n    *a3 = 2;\n  }\n  else if ( (unsigned int)result <= 6 )\n  {\n    *a3 = 3;\n  }\n  else\n  {\n    result = a2[5];\n    if ( (_BYTE)result == 0xE0 )\n    {\n      *a3 = 0;\n    }\n    else if ( (_BYTE)result == 0xF0 )\n    {\n      *a3 = 5;\n    }\n    else\n    {\n      result = 3 * (unsigned int)((_BYTE)result != 0x80) + 1;\n      *a3 = result;\n    }\n  }\n  return result;\n}\n', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': '__int64 __fastcall TIsoTcpSocket::isoRecvPDU(TIsoTcpSocket *this, char *a2)\n{\n  int v2; // r14d\n  char *v3; // r15\n  int v4; // ebp\n  unsigned int v5; // ebx\n  int v7; // ebp\n  unsigned int v8; // eax\n  bool v9; // [rsp+10h] [rbp-58h] BYREF\n  int v10[18]; // [rsp+20h] [rbp-48h] BYREF\n\n  v2 = 1;\n  v3 = (char *)this + 395;\n  v4 = 0;\n  v9 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  while ( 1 )\n  {\n    do\n    {\n      v3 += v4;\n      if ( 4096 - v4 <= 0 )\n        break;\n      v5 = TIsoTcpSocket::isoRecvFragment(this, v3, 4096 - v4, v10, &v9);\n      if ( v5 )\n        goto LABEL_4;\n      if ( v9 )\n        goto LABEL_8;\n      ++v2;\n      v4 += v10[0];\n    }\n    while ( v2 <= *((_DWORD *)this + 96) );\n    v8 = TIsoTcpSocket::SetIsoError(this, 458752);\n    v5 = v8;\n    if ( v9 )\n      break;\n    if ( v8 )\n      goto LABEL_4;\n  }\n  if ( v8 )\n  {\nLABEL_4:\n    if ( *((_DWORD *)this + 30) != 104 )\n      TMsgSocket::Purge(this);\n    return v5;\n  }\nLABEL_8:\n  v5 = 0;\n  v7 = v10[0] + v4 + 7;\n  *((_BYTE *)this + 391) = v7;\n  *((_BYTE *)this + 390) = BYTE1(v7);\n  if ( (char *)this + 388 != a2 )\n    memcpy(a2, (char *)this + 388, v7);\n  return v5;\n}\n', '_ZN13TIsoTcpSocket7PDUSizeEPv': '__int64 __fastcall TIsoTcpSocket::PDUSize(TIsoTcpSocket *this, unsigned __int8 *a2)\n{\n  return a2[3] + (a2[2] << 8);\n}\n', '_ZN10TMsgSocket10RecvPacketEPvi': '__int64 __fastcall TMsgSocket::RecvPacket(TMsgSocket *this, void *buf, int a3)\n{\n  __int64 result; // rax\n  int v5; // eax\n\n  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));\n  result = *((unsigned int *)this + 30);\n  if ( (_DWORD)result )\n  {\n    if ( (_DWORD)result != 110 )\n      goto LABEL_6;\n    TMsgSocket::Purge(this);\n    goto LABEL_9;\n  }\n  v5 = recv(*((_DWORD *)this + 6), buf, a3, 0x4000);\n  if ( !v5 )\n  {\n    *((_DWORD *)this + 30) = 104;\nLABEL_4:\n    *((_BYTE *)this + 124) = 0;\n    return 104LL;\n  }\n  if ( v5 >= 0 )\n  {\nLABEL_9:\n    result = *((unsigned int *)this + 30);\n    goto LABEL_6;\n  }\n  result = TMsgSocket::GetLastSocketError(this);\n  *((_DWORD *)this + 30) = result;\nLABEL_6:\n  if ( (_DWORD)result == 104 )\n    goto LABEL_4;\n  return result;\n}\n', '_ZN10TMsgSocket11WaitForDataEii': '__int64 __fastcall TMsgSocket::WaitForData(TMsgSocket *this, int a2, unsigned int a3)\n{\n  bool v4; // cc\n  __int64 result; // rax\n  unsigned int v6[10]; // [rsp+0h] [rbp-28h] BYREF\n\n  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )\n  {\n    *((_DWORD *)this + 30) = 104;\n    result = 104LL;\nLABEL_12:\n    *((_BYTE *)this + 124) = 0;\n    return result;\n  }\n  *((_DWORD *)this + 30) = 0;\n  v6[0] = SysGetTick();\n  while ( 1 )\n  {\n    v4 = (int)TMsgSocket::WaitingData(this) < a2;\n    result = *((unsigned int *)this + 30);\n    if ( !v4 || (_DWORD)result )\n      break;\n    if ( (unsigned int)DeltaTime(v6) < a3 )\n      SysSleep(1u);\n    else\n      *((_DWORD *)this + 30) = 110;\n  }\n  if ( (_DWORD)result == 104 )\n    goto LABEL_12;\n  return result;\n}\n', '_ZN10TMsgSocket7CanReadEi': 'bool __fastcall TMsgSocket::CanRead(TMsgSocket *this, int a2)\n{\n  __int64 v3; // rax\n  int v4; // edi\n  int v5; // eax\n  struct timeval v7; // [rsp+0h] [rbp-A8h] BYREF\n  fd_set readfds; // [rsp+10h] [rbp-98h] BYREF\n\n  if ( *((_DWORD *)this + 6) == -1 )\n    return 0;\n  v7.tv_sec = a2 / 1000;\n  v7.tv_usec = 1000 * (a2 % 1000);\n  memset(&readfds, 0, sizeof(readfds));\n  v3 = __fdelt_chk(*((int *)this + 6));\n  v4 = *((_DWORD *)this + 6);\n  readfds.fds_bits[v3] |= 1LL << (*((_DWORD *)this + 6) % 64);\n  v5 = select(v4 + 1, &readfds, 0LL, 0LL, &v7);\n  if ( v5 != -1LL )\n    return v5 > 0LL;\n  *((_DWORD *)this + 30) = TMsgSocket::GetLastSocketError(this);\n  return 0;\n}\n', '_ZN9TS7Worker11CheckPDU_inEi': '_BOOL8 __fastcall TS7Worker::CheckPDU_in(TS7Worker *this, int a2)\n{\n  int v2; // r13d\n  int v3; // edx\n  _BOOL8 result; // rax\n\n  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));\n  v3 = v2\n     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))\n     + 10;\n  result = 0LL;\n  if ( v3 == a2 )\n    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;\n  return result;\n}\n', '_ZN9TSnapBase8SwapWordEt': '__int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n', '_ZN9TS7Worker17IsoPerformCommandERi': '__int64 __fastcall TS7Worker::IsoPerformCommand(TS7Worker *this, int *a2)\n{\n  int v3; // esi\n  char v4; // al\n\n  v3 = *a2;\n  if ( !v3 )\n    return TS7Worker::PerformPDUAck(this, a2);\n  if ( !(unsigned __int8)TS7Worker::CheckPDU_in(this, v3) )\n  {\n    TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 2u, *(_WORD *)a2, 0, 0, 0);\n    return 0LL;\n  }\n  v4 = *(_BYTE *)(*((_QWORD *)this + 564) + 1LL);\n  if ( v4 == 1 )\n    return TS7Worker::PerformPDURequest(this, a2);\n  if ( v4 != 7 )\n    return 0LL;\n  return TS7Worker::PerformPDUUsrData(this, a2);\n}\n', '_ZN9TS7Worker17PerformPDURequestERi': '__int64 __fastcall TS7Worker::PerformPDURequest(TS7Worker *this, int *a2)\n{\n  unsigned __int8 v2; // al\n\n  v2 = *(_BYTE *)(*((_QWORD *)this + 564) + 10LL);\n  if ( v2 > 0x1Fu )\n  {\n    if ( v2 < 0x28u )\n      goto LABEL_5;\n    if ( v2 <= 0x29u )\n      return TS7Worker::PerformFunctionControl(this, v2);\n    if ( v2 != 0xF0 )\n      goto LABEL_5;\n    return TS7Worker::PerformFunctionNegotiate(this);\n  }\n  else\n  {\n    if ( v2 >= 0x1Du )\n      return TS7Worker::PerformFunctionUpload(this);\n    switch ( v2 )\n    {\n      case 5u:\n        return TS7Worker::PerformFunctionWrite(this);\n      case 0x1Au:\n        return TS7Worker::PerformFunctionDownload(this);\n      case 4u:\n        return TS7Worker::PerformFunctionRead(this);\n      default:\nLABEL_5:\n        TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 4u, *(_WORD *)a2, 0, 0, 0);\n        return 1LL;\n    }\n  }\n}\n', '_ZN9TS7Worker24PerformFunctionNegotiateEv': '__int64 __fastcall TS7Worker::PerformFunctionNegotiate(TS7Worker *this)\n{\n  TSnapBase *v1; // r12\n  _WORD *v2; // rbp\n  __int16 v3; // ax\n  __int16 v4; // ax\n  unsigned __int16 v5; // si\n  unsigned __int16 v6; // ax\n  unsigned __int16 v7; // ax\n  char src[2]; // [rsp+10h] [rbp-1028h] BYREF\n  __int16 v10; // [rsp+12h] [rbp-1026h]\n  __int16 v11; // [rsp+14h] [rbp-1024h]\n  __int16 v12; // [rsp+16h] [rbp-1022h]\n  __int16 v13; // [rsp+18h] [rbp-1020h]\n  __int16 v14; // [rsp+1Ah] [rbp-101Eh]\n  char v15; // [rsp+1Ch] [rbp-101Ch]\n  char v16; // [rsp+1Dh] [rbp-101Bh]\n  __int16 v17; // [rsp+1Eh] [rbp-101Ah]\n  __int16 v18; // [rsp+20h] [rbp-1018h]\n  unsigned __int16 v19; // [rsp+22h] [rbp-1016h]\n  unsigned __int64 v20; // [rsp+1018h] [rbp-20h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (_WORD *)*((_QWORD *)this + 564);\n  v20 = __readfsqword(0x28u);\n  src[0] = 50;\n  src[1] = 3;\n  v3 = v2[2];\n  v10 = 0;\n  v11 = v3;\n  v15 = -16;\n  v12 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 8u);\n  v16 = 0;\n  v4 = v2[6];\n  v13 = 0;\n  v14 = 0;\n  v17 = v4;\n  v18 = v2[7];\n  v5 = *(_WORD *)(*((_QWORD *)this + 1084) + 24794LL);\n  if ( v5 )\n  {\n    v7 = TSnapBase::SwapWord(v1, v5);\n    v19 = v7;\n  }\n  else\n  {\n    v6 = TSnapBase::SwapWord(v1, v2[8]);\n    if ( v6 <= 0xEFu )\n    {\n      v7 = TSnapBase::SwapWord(v1, 0xF0u);\n      v19 = v7;\n    }\n    else\n    {\n      if ( v6 > 0x1000u )\n        v7 = TSnapBase::SwapWord(v1, 0x1000u);\n      else\n        v7 = v2[8];\n      v19 = v7;\n    }\n  }\n  *((_DWORD *)this + 2170) = (unsigned __int16)TSnapBase::SwapWord(v1, v7);\n  TIsoTcpSocket::isoSendBuffer(this, src, 20);\n  TS7Worker::DoEvent(this, 0x80000u, 0, *((_WORD *)this + 4340), 0, 0, 0);\n  return 1LL;\n}\n', '_ZN9TS7Worker7DoEventEjttttt': '__int64 __fastcall TS7Worker::DoEvent(\n        TS7Worker *this,\n        unsigned int a2,\n        unsigned __int16 a3,\n        unsigned __int16 a4,\n        unsigned __int16 a5,\n        unsigned __int16 a6,\n        unsigned __int16 a7)\n{\n  return (*(__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD))(**((_QWORD **)this + 1084) + 24LL))(\n           *((_QWORD *)this + 1084),\n           *((unsigned int *)this + 15),\n           a2,\n           a3,\n           a4,\n           a5,\n           a6,\n           a7);\n}\n', '_ZN16TCustomMsgServer7DoEventEijttttt': 'int __fastcall TCustomMsgServer::DoEvent(\n        TCustomMsgServer *this,\n        int a2,\n        int a3,\n        __int16 a4,\n        __int16 a5,\n        __int16 a6,\n        unsigned __int16 a7,\n        unsigned __int16 a8)\n{\n  bool v9; // zf\n  int v10; // edi\n  int result; // eax\n  bool v12; // bp\n  bool v13; // r14\n  void (__fastcall *v14)(_QWORD, time_t *, __int64); // rax\n  time_t timer; // [rsp+30h] [rbp-48h] BYREF\n  int v20; // [rsp+38h] [rbp-40h]\n  int v21; // [rsp+3Ch] [rbp-3Ch]\n  __int16 v22; // [rsp+40h] [rbp-38h]\n  __int16 v23; // [rsp+42h] [rbp-36h]\n  __int16 v24; // [rsp+44h] [rbp-34h]\n  unsigned __int16 v25; // [rsp+46h] [rbp-32h]\n  unsigned __int16 v26; // [rsp+48h] [rbp-30h]\n\n  v9 = *((_BYTE *)this + 80) == 0;\n  v10 = *((_DWORD *)this + 2074);\n  result = *((_DWORD *)this + 2075);\n  if ( v9 )\n  {\n    v12 = (v10 & a3) != 0;\n    v13 = (result & a3) != 0;\n    if ( (result & a3) != 0 || (v10 & a3) != 0 )\n    {\n      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));\n      time(&timer);\n      v25 = a7;\n      v20 = a2;\n      v21 = a3;\n      v22 = a4;\n      v23 = a5;\n      v24 = a6;\n      v26 = a8;\n      if ( v13 )\n      {\n        v14 = (void (__fastcall *)(_QWORD, time_t *, __int64))*((_QWORD *)this + 8);\n        if ( v14 )\n          v14(*((_QWORD *)this + 9), &timer, 26LL);\n      }\n      if ( v12 )\n        TMsgEventQueue::Insert(*((TMsgEventQueue **)this + 7), &timer);\n      return pthread_mutex_unlock(*((pthread_mutex_t **)this + 11));\n    }\n  }\n  return result;\n}\n', '_Z10EvtSrvTextR9TSrvEvent': 'std::string *__fastcall EvtSrvText(std::string *a1, __int64 a2)\n{\n  unsigned int v3; // esi\n  __int64 v4; // r13\n  __int64 v5; // r13\n  __int64 v6; // r13\n  __int64 v7; // r13\n  __int64 v8; // r13\n  __int64 v9; // r13\n  __int64 v10; // r13\n  __int64 v11; // r13\n  __int64 v12; // r14\n  __int64 v13; // r14\n  __int64 v14; // r14\n  __int64 v15; // rbp\n  __int64 v16; // rbp\n  unsigned __int16 v17; // ax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r13\n  __int64 v21; // r13\n  __int64 v22; // r13\n  __int64 v23; // r13\n  __int64 v24; // rbp\n  __int64 v26; // r14\n  __int64 v27; // r14\n  __int64 v28; // r14\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r13\n  __int64 v32; // r13\n  __int64 v33; // r13\n  __int64 v34; // r14\n  __int64 v35; // r13\n  __int64 v36; // r13\n  __int64 v37; // r14\n  __int64 v38; // r14\n  __int64 v39; // r13\n  __int16 v40; // ax\n  __int64 v41; // r14\n  __int64 v42; // r13\n  __int64 v43; // r13\n  __int64 v44; // r13\n  __int16 v45; // dx\n  __int64 v46; // r14\n  __int64 v47; // r14\n  __int64 v48; // r14\n  __int64 v49; // r14\n  __int64 v50; // r13\n  __int64 v51; // r13\n  __int64 v52; // r13\n  __int64 v53; // r13\n  __int64 v54; // r13\n  __int64 v55; // r13\n  int v56; // [rsp+0h] [rbp-468h]\n  int v57; // [rsp+0h] [rbp-468h]\n  int v58; // [rsp+0h] [rbp-468h]\n  char v59; // [rsp+5h] [rbp-463h] BYREF\n  char v60; // [rsp+6h] [rbp-462h] BYREF\n  char v61; // [rsp+7h] [rbp-461h] BYREF\n  char v62; // [rsp+8h] [rbp-460h] BYREF\n  char v63; // [rsp+9h] [rbp-45Fh] BYREF\n  char v64; // [rsp+Ah] [rbp-45Eh] BYREF\n  char v65; // [rsp+Bh] [rbp-45Dh] BYREF\n  char v66; // [rsp+Ch] [rbp-45Ch] BYREF\n  char v67; // [rsp+Dh] [rbp-45Bh] BYREF\n  char v68; // [rsp+Eh] [rbp-45Ah] BYREF\n  char v69; // [rsp+Fh] [rbp-459h] BYREF\n  int v70[2]; // [rsp+10h] [rbp-458h] BYREF\n  char v71; // [rsp+18h] [rbp-450h]\n  __int64 v72; // [rsp+20h] [rbp-448h] BYREF\n  char v73; // [rsp+28h] [rbp-440h]\n  __int64 v74; // [rsp+30h] [rbp-438h] BYREF\n  char v75; // [rsp+38h] [rbp-430h]\n  __int64 v76[2]; // [rsp+40h] [rbp-428h] BYREF\n  __int64 v77[2]; // [rsp+50h] [rbp-418h] BYREF\n  __int64 v78[2]; // [rsp+60h] [rbp-408h] BYREF\n  __int64 v79[2]; // [rsp+70h] [rbp-3F8h] BYREF\n  __int64 v80[2]; // [rsp+80h] [rbp-3E8h] BYREF\n  __int64 v81[2]; // [rsp+90h] [rbp-3D8h] BYREF\n  __int64 v82[2]; // [rsp+A0h] [rbp-3C8h] BYREF\n  __int64 v83[2]; // [rsp+B0h] [rbp-3B8h] BYREF\n  __int64 v84[2]; // [rsp+C0h] [rbp-3A8h] BYREF\n  __int64 v85[2]; // [rsp+D0h] [rbp-398h] BYREF\n  __int64 v86[2]; // [rsp+E0h] [rbp-388h] BYREF\n  __int64 v87[2]; // [rsp+F0h] [rbp-378h] BYREF\n  _QWORD v88[2]; // [rsp+100h] [rbp-368h] BYREF\n  __int64 v89[2]; // [rsp+110h] [rbp-358h] BYREF\n  __int64 v90[2]; // [rsp+120h] [rbp-348h] BYREF\n  __int64 v91[2]; // [rsp+130h] [rbp-338h] BYREF\n  __int64 v92[2]; // [rsp+140h] [rbp-328h] BYREF\n  __int64 v93[2]; // [rsp+150h] [rbp-318h] BYREF\n  __int64 v94[2]; // [rsp+160h] [rbp-308h] BYREF\n  __int64 v95[2]; // [rsp+170h] [rbp-2F8h] BYREF\n  __int64 v96[2]; // [rsp+180h] [rbp-2E8h] BYREF\n  __int64 v97[2]; // [rsp+190h] [rbp-2D8h] BYREF\n  _QWORD v98[2]; // [rsp+1A0h] [rbp-2C8h] BYREF\n  __int64 v99[2]; // [rsp+1B0h] [rbp-2B8h] BYREF\n  __int64 v100[2]; // [rsp+1C0h] [rbp-2A8h] BYREF\n  __int64 v101[2]; // [rsp+1D0h] [rbp-298h] BYREF\n  __int64 v102[2]; // [rsp+1E0h] [rbp-288h] BYREF\n  _QWORD v103[2]; // [rsp+1F0h] [rbp-278h] BYREF\n  __int64 v104[2]; // [rsp+200h] [rbp-268h] BYREF\n  _QWORD v105[2]; // [rsp+210h] [rbp-258h] BYREF\n  __int64 v106[2]; // [rsp+220h] [rbp-248h] BYREF\n  _QWORD v107[2]; // [rsp+230h] [rbp-238h] BYREF\n  __int64 v108[2]; // [rsp+240h] [rbp-228h] BYREF\n  _QWORD v109[2]; // [rsp+250h] [rbp-218h] BYREF\n  __int64 v110[2]; // [rsp+260h] [rbp-208h] BYREF\n  __int64 v111[2]; // [rsp+270h] [rbp-1F8h] BYREF\n  _QWORD v112[2]; // [rsp+280h] [rbp-1E8h] BYREF\n  __int64 v113[2]; // [rsp+290h] [rbp-1D8h] BYREF\n  __int64 v114[2]; // [rsp+2A0h] [rbp-1C8h] BYREF\n  __int64 v115[2]; // [rsp+2B0h] [rbp-1B8h] BYREF\n  __int64 v116[2]; // [rsp+2C0h] [rbp-1A8h] BYREF\n  __int64 v117[2]; // [rsp+2D0h] [rbp-198h] BYREF\n  __int64 v118[2]; // [rsp+2E0h] [rbp-188h] BYREF\n  __int64 v119[2]; // [rsp+2F0h] [rbp-178h] BYREF\n  __int64 v120[2]; // [rsp+300h] [rbp-168h] BYREF\n  __int64 v121[2]; // [rsp+310h] [rbp-158h] BYREF\n  __int64 v122[2]; // [rsp+320h] [rbp-148h] BYREF\n  _QWORD v123[2]; // [rsp+330h] [rbp-138h] BYREF\n  __int64 v124[2]; // [rsp+340h] [rbp-128h] BYREF\n  __int64 v125[2]; // [rsp+350h] [rbp-118h] BYREF\n  __int64 v126[2]; // [rsp+360h] [rbp-108h] BYREF\n  __int64 v127[2]; // [rsp+370h] [rbp-F8h] BYREF\n  __int64 v128[2]; // [rsp+380h] [rbp-E8h] BYREF\n  __int64 v129[2]; // [rsp+390h] [rbp-D8h] BYREF\n  __int64 v130[2]; // [rsp+3A0h] [rbp-C8h] BYREF\n  __int64 v131[2]; // [rsp+3B0h] [rbp-B8h] BYREF\n  __int64 v132[2]; // [rsp+3C0h] [rbp-A8h] BYREF\n  _QWORD v133[2]; // [rsp+3D0h] [rbp-98h] BYREF\n  __int64 v134[2]; // [rsp+3E0h] [rbp-88h] BYREF\n  __int64 v135[2]; // [rsp+3F0h] [rbp-78h] BYREF\n  _QWORD v136[2]; // [rsp+400h] [rbp-68h] BYREF\n  __int64 v137[2]; // [rsp+410h] [rbp-58h] BYREF\n  __int64 v138[2]; // [rsp+420h] [rbp-48h] BYREF\n  __int64 v139[2]; // [rsp+430h] [rbp-38h] BYREF\n\n  v3 = *(_DWORD *)(a2 + 12);\n  *(_QWORD *)v70 = (char *)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( v3 > 0x8000 )\n  {\n    if ( v3 == 0x200000 )\n    {\n      if ( *(_WORD *)(a2 + 18) == 1 )\n        std::string::string(v93, "System clock read requested", &v64);\n      else\n        std::string::string(v93, "System clock write requested", &v63);\n      std::string::assign((std::string *)v70, (const std::string *)v93);\n      v6 = v93[0] - 24;\n      if ( (_UNKNOWN *)(v93[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_56;\n      goto LABEL_101;\n    }\n    if ( v3 <= 0x200000 )\n    {\n      if ( v3 == 0x40000 )\n      {\n        TxtDataResult((std::string *)v86, v56, v62, v70[0], v71);\n        TxtStartSize((std::string *)v84, v58, v62, v70[0], v71, v72, v73, v74, v75);\n        TxtArea((std::string *)v82);\n        v83[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v83, *(_QWORD *)(v82[0] - 24) + 15LL);\n        std::string::append((std::string *)v83, "Write request, ", 0xFuLL);\n        std::string::append((std::string *)v83, (const std::string *)v82);\n        std::string::string((std::string *)v85, (const std::string *)v83);\n        std::string::append((std::string *)v85, (const std::string *)v84);\n        std::string::string((std::string *)v87, (const std::string *)v85);\n        std::string::append((std::string *)v87, (const std::string *)v86);\n        std::string::assign((std::string *)v70, (const std::string *)v87);\n        v19 = v87[0] - 24;\n        if ( (_UNKNOWN *)(v87[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v19 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v19, &v69);\n        }\n        v20 = v85[0] - 24;\n        if ( (_UNKNOWN *)(v85[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v20 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v20, &v69);\n        }\n        v21 = v83[0] - 24;\n        if ( (_UNKNOWN *)(v83[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v21 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v21, &v69);\n        }\n        v22 = v82[0] - 24;\n        if ( (_UNKNOWN *)(v82[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v22 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v22, &v69);\n        }\n        v23 = v84[0] - 24;\n        if ( (_UNKNOWN *)(v84[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v23 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v23, &v69);\n        }\n        v6 = v86[0] - 24;\n        if ( (_UNKNOWN *)(v86[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_101;\n        goto LABEL_56;\n      }\n      if ( v3 > 0x40000 )\n      {\n        if ( v3 == 0x80000 )\n        {\n          IntToString((int)v88);\n          v89[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v89, *(_QWORD *)(v88[0] - 24LL) + 34LL);\n          std::string::append((std::string *)v89, "The client requires a PDU size of ", 0x22uLL);\n          std::string::append((std::string *)v89, (const std::string *)v88);\n          std::string::string((std::string *)v90, (const std::string *)v89);\n          std::string::append((std::string *)v90, " bytes", 6uLL);\n          std::string::assign((std::string *)v70, (const std::string *)v90);\n          v35 = v90[0] - 24;\n          if ( (_UNKNOWN *)(v90[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v35 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v35, &v69);\n          }\n          v36 = v89[0] - 24;\n          if ( (_UNKNOWN *)(v89[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v36 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v36, &v69);\n          }\n          v6 = v88[0] - 24LL;\n          if ( (_UNKNOWN *)(v88[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n        if ( v3 == 0x100000 )\n        {\n          NumToString((std::string *)v118, *(unsigned __int16 *)(a2 + 20), 0x10u);\n          NumToString((std::string *)v115, *(unsigned __int16 *)(a2 + 18), 0x10u);\n          v116[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v116, *(_QWORD *)(v115[0] - 24) + 23LL);\n          std::string::append((std::string *)v116, "Read SZL request, ID:0x", 0x17uLL);\n          std::string::append((std::string *)v116, (const std::string *)v115);\n          std::string::string((std::string *)v117, (const std::string *)v116);\n          std::string::append((std::string *)v117, " INDEX:0x", 9uLL);\n          std::string::string((std::string *)v114, (const std::string *)v117);\n          std::string::append((std::string *)v114, (const std::string *)v118);\n          v30 = v117[0] - 24;\n          if ( (_UNKNOWN *)(v117[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v30 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v30, &v69);\n          }\n          v31 = v116[0] - 24;\n          if ( (_UNKNOWN *)(v116[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v31 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v31, &v69);\n          }\n          v32 = v115[0] - 24;\n          if ( (_UNKNOWN *)(v115[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v32 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v32, &v69);\n          }\n          v33 = v118[0] - 24;\n          if ( (_UNKNOWN *)(v118[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v33 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v33, &v69);\n          }\n          if ( *(_WORD *)(a2 + 16) )\n          {\n            std::string::string((std::string *)v92, (const std::string *)v114);\n            std::string::append((std::string *)v92, " --> NOT AVAILABLE", 0x12uLL);\n          }\n          else\n          {\n            std::string::string((std::string *)v92, (const std::string *)v114);\n            std::string::append((std::string *)v92, " --> OK", 7uLL);\n          }\n          v34 = v114[0] - 24;\n          if ( (_UNKNOWN *)(v114[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v34 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v34, &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v92);\n          v6 = v92[0] - 24;\n          if ( (_UNKNOWN *)(v92[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      else\n      {\n        if ( v3 == (_DWORD)&stru_10000 )\n        {\n          switch ( *(_WORD *)(a2 + 16) )\n          {\n            case 1:\n              IntToString((int)v103);\n              v102[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v102, *(_QWORD *)(v103[0] - 24LL) + 12LL);\n              std::string::append((std::string *)v102, "Fragment of ", 0xCuLL);\n              std::string::append((std::string *)v102, (const std::string *)v103);\n              std::string::string((std::string *)&v72, (const std::string *)v102);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v47 = v102[0] - 24;\n              if ( (_UNKNOWN *)(v102[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v47 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v47, &v69);\n              }\n              v38 = v103[0] - 24LL;\n              if ( (_UNKNOWN *)(v103[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 2:\n              IntToString((int)v105);\n              v104[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v104, *(_QWORD *)(v105[0] - 24LL) + 17LL);\n              std::string::append((std::string *)v104, "Malformed PDU of ", 0x11uLL);\n              std::string::append((std::string *)v104, (const std::string *)v105);\n              std::string::string((std::string *)&v72, (const std::string *)v104);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v46 = v104[0] - 24;\n              if ( (_UNKNOWN *)(v104[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v46 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v46, &v69);\n              }\n              v38 = v105[0] - 24LL;\n              if ( (_UNKNOWN *)(v105[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 3:\n              IntToString((int)v107);\n              v106[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v106, *(_QWORD *)(v107[0] - 24LL) + 18LL);\n              std::string::append((std::string *)v106, "Message of sparse ", 0x12uLL);\n              std::string::append((std::string *)v106, (const std::string *)v107);\n              std::string::string((std::string *)&v72, (const std::string *)v106);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v48 = v106[0] - 24;\n              if ( (_UNKNOWN *)(v106[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v48 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v48, &v69);\n              }\n              v38 = v107[0] - 24LL;\n              if ( (_UNKNOWN *)(v107[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 4:\n              std::string::string(&v72, "Cannot handle this PDU", &v59);\n              break;\n            case 5:\n              v45 = *(_WORD *)(a2 + 18);\n              if ( v45 == 65 )\n              {\n                std::string::string(&v72, "Function group programmer not yet implemented", &v61);\n              }\n              else\n              {\n                if ( v45 != 66 )\n                  goto LABEL_86;\n                std::string::string(&v72, "Function group cyclic data not yet implemented", &v60);\n              }\n              break;\n            default:\nLABEL_86:\n              IntToString((int)v109);\n              v108[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v108, *(_QWORD *)(v109[0] - 24LL) + 21LL);\n              std::string::append((std::string *)v108, "Unknown Return code (", 0x15uLL);\n              std::string::append((std::string *)v108, (const std::string *)v109);\n              std::string::string((std::string *)&v72, (const std::string *)v108);\n              std::string::append((std::string *)&v72, ")", 1uLL);\n              v37 = v108[0] - 24;\n              if ( (_UNKNOWN *)(v108[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v37 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v37, &v69);\n              }\n              v38 = v109[0] - 24LL;\n              if ( (_UNKNOWN *)(v109[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n              {\nLABEL_127:\n                if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v38 + 16)) <= 0 )\n                  std::string::_Rep::_M_destroy(v38, &v69);\n              }\n              break;\n          }\n          v74 = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)&v74, *(_QWORD *)(v72 - 24) + 15LL);\n          std::string::append((std::string *)&v74, "PDU incoming : ", 0xFuLL);\n          std::string::append((std::string *)&v74, (const std::string *)&v72);\n          std::string::assign((std::string *)v70, (const std::string *)&v74);\n          v39 = v74 - 24;\n          if ( (_UNKNOWN *)(v74 - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v39 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v39, &v69);\n          }\n          v6 = v72 - 24;\n          if ( (_UNKNOWN *)(v72 - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n        if ( v3 == (_DWORD)&loc_20000 )\n        {\n          TxtDataResult((std::string *)v80, v56, v62, v70[0], v71);\n          TxtStartSize((std::string *)v78, v57, v62, v70[0], v71, v72, v73, v74, v75);\n          TxtArea((std::string *)v76);\n          v77[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v77, *(_QWORD *)(v76[0] - 24) + 14LL);\n          std::string::append((std::string *)v77, "Read request, ", 0xEuLL);\n          std::string::append((std::string *)v77, (const std::string *)v76);\n          std::string::string((std::string *)v79, (const std::string *)v77);\n          std::string::append((std::string *)v79, (const std::string *)v78);\n          std::string::string((std::string *)v81, (const std::string *)v79);\n          std::string::append((std::string *)v81, (const std::string *)v80);\n          std::string::assign((std::string *)v70, (const std::string *)v81);\n          v7 = v81[0] - 24;\n          if ( (_UNKNOWN *)(v81[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v7 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v7, &v69);\n          }\n          v8 = v79[0] - 24;\n          if ( (_UNKNOWN *)(v79[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v8 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v8, &v69);\n          }\n          v9 = v77[0] - 24;\n          if ( (_UNKNOWN *)(v77[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v9 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v9, &v69);\n          }\n          v10 = v76[0] - 24;\n          if ( (_UNKNOWN *)(v76[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v10 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v10, &v69);\n          }\n          v11 = v78[0] - 24;\n          if ( (_UNKNOWN *)(v78[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v11 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v11, &v69);\n          }\n          v6 = v80[0] - 24;\n          if ( (_UNKNOWN *)(v80[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      goto LABEL_8;\n    }\n    if ( v3 != 0x1000000 )\n    {\n      if ( v3 > 0x1000000 )\n      {\n        if ( v3 == 0x2000000 )\n        {\n          v40 = *(_WORD *)(a2 + 18);\n          if ( v40 == 1 )\n          {\n            std::string::string(v97, "Security request : Set session password --> OK", &v67);\n          }\n          else if ( v40 == 2 )\n          {\n            std::string::string(v97, "Security request : Clear session password --> OK", &v68);\n          }\n          else\n          {\n            std::string::string(v97, "Security request : Unknown Subfunction", &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v97);\n          v6 = v97[0] - 24;\n          if ( (_UNKNOWN *)(v97[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n        if ( v3 == 0x4000000 )\n        {\n          std::string::string(v110, "CPU Control request : ", &v62);\n          switch ( (unsigned __int16)v91 )\n          {\n            case 0u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Unknown", 7uLL);\n              break;\n            case 1u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Cold START --> OK", 0x11uLL);\n              break;\n            case 2u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Warm START --> OK", 0x11uLL);\n              break;\n            case 3u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "STOP --> OK", 0xBuLL);\n              break;\n            case 4u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Memory compress --> OK", 0x16uLL);\n              break;\n            case 5u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Copy Ram to Rom --> OK", 0x16uLL);\n              break;\n            case 6u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Block Insert or Delete --> OK", 0x1DuLL);\n              break;\n            default:\n              IntToString((int)v112);\n              std::string::string((std::string *)v111, (const std::string *)v110);\n              std::string::append((std::string *)v111, "Unknown control code (", 0x16uLL);\n              std::string::string((std::string *)v113, (const std::string *)v111);\n              std::string::append((std::string *)v113, (const std::string *)v112);\n              std::string::string((std::string *)v91, (const std::string *)v113);\n              std::string::append((std::string *)v91, ")", 1uLL);\n              v26 = v113[0] - 24;\n              if ( (_UNKNOWN *)(v113[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v26 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v26, &v69);\n              }\n              v27 = v111[0] - 24;\n              if ( (_UNKNOWN *)(v111[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v27 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v27, &v69);\n              }\n              v28 = v112[0] - 24LL;\n              if ( (_UNKNOWN *)(v112[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v28 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v28, &v69);\n              }\n              break;\n          }\n          v29 = v110[0] - 24;\n          if ( (_UNKNOWN *)(v110[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v29 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v29, &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v91);\n          v6 = v91[0] - 24;\n          if ( (_UNKNOWN *)(v91[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      else\n      {\n        if ( v3 == 0x400000 )\n        {\n          std::string::string(v94, "Block upload requested --> NOT PERFORMED (due to invalid security level)", &v65);\n          std::string::assign((std::string *)v70, (const std::string *)v94);\n          v6 = v94[0] - 24;\n          if ( (_UNKNOWN *)(v94[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n        if ( v3 == 0x800000 )\n        {\n          std::string::string(v95, "Block download requested --> NOT PERFORMED (due to invalid security level)", &v66);\n          std::string::assign((std::string *)v70, (const std::string *)v95);\n          v6 = v95[0] - 24;\n          if ( (_UNKNOWN *)(v95[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n      }\nLABEL_8:\n      IntToString((int)v98);\n      v99[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v99, *(_QWORD *)(v98[0] - 24LL) + 15LL);\n      std::string::append((std::string *)v99, "Unknown event (", 0xFuLL);\n      std::string::append((std::string *)v99, (const std::string *)v98);\n      std::string::string((std::string *)v100, (const std::string *)v99);\n      std::string::append((std::string *)v100, ")", 1uLL);\n      std::string::assign((std::string *)v70, (const std::string *)v100);\n      v4 = v100[0] - 24;\n      if ( (_UNKNOWN *)(v100[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v4 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v4, &v69);\n      }\n      v5 = v99[0] - 24;\n      if ( (_UNKNOWN *)(v99[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v5 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v5, &v69);\n      }\n      v6 = v98[0] - 24LL;\n      if ( (_UNKNOWN *)(v98[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n      {\nLABEL_101:\n        if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v6 + 16)) <= 0 )\n          std::string::_Rep::_M_destroy(v6, &v69);\n      }\nLABEL_56:\n      SenderText((std::string *)v101, v56, v62, v70[0], v71, v72, v73);\n      std::string::string(a1, (const std::string *)v101);\n      std::string::append(a1, (const std::string *)v70);\n      v16 = v101[0] - 24;\n      if ( (_UNKNOWN *)(v101[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_57;\n      goto LABEL_34;\n    }\n    v17 = *(_WORD *)(a2 + 18);\n    v119[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    if ( v17 == 2 )\n    {\n      StrBlockType((std::string *)v128);\n      v129[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v129, *(_QWORD *)(v128[0] - 24) + 14LL);\n      std::string::append((std::string *)v129, "Block of type ", 0xEuLL);\n      std::string::append((std::string *)v129, (const std::string *)v128);\n      std::string::string((std::string *)v130, (const std::string *)v129);\n      std::string::append((std::string *)v130, " list requested (start sequence)", 0x20uLL);\n      std::string::assign((std::string *)v119, (const std::string *)v130);\n      v42 = v130[0] - 24;\n      if ( (_UNKNOWN *)(v130[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v42 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v42, &v69);\n      }\n      v43 = v129[0] - 24;\n      if ( (_UNKNOWN *)(v129[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v43 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v43, &v69);\n      }\n      v44 = v128[0] - 24;\n      if ( (_UNKNOWN *)(v128[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_118;\n    }\n    else\n    {\n      if ( v17 <= 2u )\n      {\n        if ( v17 == 1 )\n          std::string::assign((std::string *)v119, "Block list requested", 0x14uLL);\n        goto LABEL_45;\n      }\n      if ( v17 == 3 )\n      {\n        StrBlockType((std::string *)v125);\n        v126[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v126, *(_QWORD *)(v125[0] - 24) + 14LL);\n        std::string::append((std::string *)v126, "Block of type ", 0xEuLL);\n        std::string::append((std::string *)v126, (const std::string *)v125);\n        std::string::string((std::string *)v127, (const std::string *)v126);\n        std::string::append((std::string *)v127, " list requested (next part)", 0x1BuLL);\n        std::string::assign((std::string *)v119, (const std::string *)v127);\n        v54 = v127[0] - 24;\n        if ( (_UNKNOWN *)(v127[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v54 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v54, &v69);\n        }\n        v55 = v126[0] - 24;\n        if ( (_UNKNOWN *)(v126[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v55 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v55, &v69);\n        }\n        v44 = v125[0] - 24;\n        if ( (_UNKNOWN *)(v125[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_118;\n      }\n      else if ( v17 == 4 )\n      {\n        IntToString((int)v123);\n        StrBlockType((std::string *)v120);\n        v121[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v121, *(_QWORD *)(v120[0] - 24) + 21LL);\n        std::string::append((std::string *)v121, "Block info requested ", 0x15uLL);\n        std::string::append((std::string *)v121, (const std::string *)v120);\n        std::string::string((std::string *)v122, (const std::string *)v121);\n        std::string::append((std::string *)v122, " ", 1uLL);\n        std::string::string((std::string *)v124, (const std::string *)v122);\n        std::string::append((std::string *)v124, (const std::string *)v123);\n        std::string::assign((std::string *)v119, (const std::string *)v124);\n        v50 = v124[0] - 24;\n        if ( (_UNKNOWN *)(v124[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v50 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v50, &v69);\n        }\n        v51 = v122[0] - 24;\n        if ( (_UNKNOWN *)(v122[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v51 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v51, &v69);\n        }\n        v52 = v121[0] - 24;\n        if ( (_UNKNOWN *)(v121[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v52 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v52, &v69);\n        }\n        v53 = v120[0] - 24;\n        if ( (_UNKNOWN *)(v120[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v53 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v53, &v69);\n        }\n        v44 = v123[0] - 24LL;\n        if ( (_UNKNOWN *)(v123[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n        {\nLABEL_118:\n          if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v44 + 16)) <= 0 )\n            std::string::_Rep::_M_destroy(v44, &v69);\n        }\n      }\n    }\nLABEL_45:\n    if ( *(_WORD *)(a2 + 16) )\n    {\n      std::string::string((std::string *)v96, (const std::string *)v119);\n      std::string::append((std::string *)v96, " --> NOT AVAILABLE", 0x12uLL);\n    }\n    else\n    {\n      std::string::string((std::string *)v96, (const std::string *)v119);\n      std::string::append((std::string *)v96, " --> OK", 7uLL);\n    }\n    v18 = v119[0] - 24;\n    if ( (_UNKNOWN *)(v119[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v18 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v18, &v69);\n    }\n    std::string::assign((std::string *)v70, (const std::string *)v96);\n    v6 = v96[0] - 24;\n    if ( (_UNKNOWN *)(v96[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n      goto LABEL_101;\n    goto LABEL_56;\n  }\n  v131[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( v3 == 16 )\n  {\n    std::string::assign((std::string *)v131, "Client refused", 0xEuLL);\n    goto LABEL_32;\n  }\n  if ( v3 <= 0x10 )\n  {\n    if ( v3 == 2 )\n    {\n      std::string::assign((std::string *)v131, "stopped", 7uLL);\n      goto LABEL_32;\n    }\n    if ( v3 <= 2 )\n    {\n      if ( v3 == 1 )\n      {\n        std::string::assign((std::string *)v131, "started", 7uLL);\n        goto LABEL_32;\n      }\n    }\n    else\n    {\n      if ( v3 == 4 )\n      {\n        TcpTextOf((std::string *)v138);\n        v139[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v139, *(_QWORD *)(v138[0] - 24) + 39LL);\n        std::string::append((std::string *)v139, "Cannot start listener - Socket Error : ", 0x27uLL);\n        std::string::append((std::string *)v139, (const std::string *)v138);\n        std::string::assign((std::string *)v131, (const std::string *)v139);\n        v49 = v139[0] - 24;\n        if ( (_UNKNOWN *)(v139[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v49 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v49, &v69);\n        }\n        v14 = v138[0] - 24;\n        if ( (_UNKNOWN *)(v138[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_107;\n        goto LABEL_32;\n      }\n      if ( v3 == 8 )\n      {\n        std::string::assign((std::string *)v131, "Client added", 0xCuLL);\n        goto LABEL_32;\n      }\n    }\nLABEL_29:\n    IntToString((int)v133);\n    v134[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    std::string::reserve((std::string *)v134, *(_QWORD *)(v133[0] - 24LL) + 15LL);\n    std::string::append((std::string *)v134, "Unknown event (", 0xFuLL);\n    std::string::append((std::string *)v134, (const std::string *)v133);\n    std::string::string((std::string *)v135, (const std::string *)v134);\n    std::string::append((std::string *)v135, ")", 1uLL);\n    std::string::assign((std::string *)v131, (const std::string *)v135);\n    v12 = v135[0] - 24;\n    if ( (_UNKNOWN *)(v135[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v12 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v12, &v69);\n    }\n    v13 = v134[0] - 24;\n    if ( (_UNKNOWN *)(v134[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v13 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v13, &v69);\n    }\n    v14 = v133[0] - 24LL;\n    if ( (_UNKNOWN *)(v133[0] - 24LL) == &std::string::_Rep::_S_empty_rep_storage )\n      goto LABEL_32;\nLABEL_107:\n    if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v14 + 16)) <= 0 )\n      std::string::_Rep::_M_destroy(v14, &v69);\n    goto LABEL_32;\n  }\n  if ( v3 == 128 )\n  {\n    std::string::assign((std::string *)v131, "Client disconnected by peer", 0x1BuLL);\n    goto LABEL_32;\n  }\n  if ( v3 <= 0x80 )\n  {\n    if ( v3 == 32 )\n    {\n      std::string::assign((std::string *)v131, "A client was refused due to maximum connections number", 0x36uLL);\n      goto LABEL_32;\n    }\n    if ( v3 == 64 )\n    {\n      std::string::assign((std::string *)v131, "Client exception", 0x10uLL);\n      goto LABEL_32;\n    }\n    goto LABEL_29;\n  }\n  if ( v3 == 256 )\n  {\n    std::string::assign((std::string *)v131, "Client terminated", 0x11uLL);\n    goto LABEL_32;\n  }\n  if ( v3 != 512 )\n    goto LABEL_29;\n  IntToString((int)v136);\n  std::string::string((std::string *)v137, (const std::string *)v136);\n  std::string::append((std::string *)v137, " clients have been dropped bacause unresponsive", 0x2FuLL);\n  std::string::assign((std::string *)v131, (const std::string *)v137);\n  v41 = v137[0] - 24;\n  if ( (_UNKNOWN *)(v137[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v41 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v41, &v69);\n  }\n  v14 = v136[0] - 24LL;\n  if ( (_UNKNOWN *)(v136[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n    goto LABEL_107;\nLABEL_32:\n  SenderText((std::string *)v132, v56, v62, v70[0], v71, v72, v73);\n  std::string::string(a1, (const std::string *)v132);\n  std::string::append(a1, (const std::string *)v131);\n  v15 = v132[0] - 24;\n  if ( (_UNKNOWN *)(v132[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v15 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v15, &v69);\n  }\n  v16 = v131[0] - 24;\n  if ( (_UNKNOWN *)(v131[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n  {\nLABEL_34:\n    if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v16 + 16)) <= 0 )\n      std::string::_Rep::_M_destroy(v16, &v69);\n  }\nLABEL_57:\n  v24 = *(_QWORD *)v70 - 24LL;\n  if ( (_UNKNOWN *)(*(_QWORD *)v70 - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v24 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v24, &v69);\n  }\n  return a1;\n}\n', '_Z11NumToStringiij': 'std::string *__fastcall NumToString(std::string *a1, int a2, int a3, unsigned int a4)\n{\n  unsigned __int64 v4; // r13\n  char *v5; // rcx\n  char *v6; // rax\n  char *i; // rdx\n  char v8; // cl\n  unsigned __int64 j; // rsi\n  __int64 v10; // rbp\n  char v12; // [rsp+Fh] [rbp-79h] BYREF\n  __int64 v13[2]; // [rsp+10h] [rbp-78h] BYREF\n  char v14[56]; // [rsp+20h] [rbp-68h] BYREF\n  unsigned __int64 v15; // [rsp+58h] [rbp-30h]\n\n  v4 = a4;\n  v15 = __readfsqword(0x28u);\n  *(_QWORD *)a1 = (char *)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( (unsigned int)(a3 - 2) > 0x22 )\n  {\n    v14[0] = 0;\n  }\n  else\n  {\n    v5 = v14;\n    while ( 1 )\n    {\n      *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];\n      if ( !(a2 / a3) )\n        break;\n      a2 /= a3;\n    }\n    if ( a2 < 0 )\n      *v5++ = 45;\n    v6 = v5 - 1;\n    *v5 = 0;\n    for ( i = v14; v6 > i; ++i )\n    {\n      v8 = *v6;\n      *v6-- = *i;\n      *i = v8;\n    }\n  }\n  std::string::assign(a1, v14, strlen(v14));\n  if ( (_DWORD)v4 )\n  {\n    for ( j = *(_QWORD *)(*(_QWORD *)a1 - 24LL); j < v4; j = *(_QWORD *)(*(_QWORD *)a1 - 24LL) )\n    {\n      v13[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v13, j + 1);\n      std::string::append((std::string *)v13, "0", 1uLL);\n      std::string::append((std::string *)v13, a1);\n      std::string::assign(a1, (const std::string *)v13);\n      v10 = v13[0] - 24;\n      if ( (_UNKNOWN *)(v13[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v10 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v10, &v12);\n      }\n    }\n  }\n  return a1;\n}\n', '_ZN9TS7Worker19PerformFunctionReadEv': '__int64 __fastcall TS7Worker::PerformFunctionRead(TS7Worker *this)\n{\n  __int64 v1; // r13\n  int v2; // r12d\n  __int64 v3; // rax\n  int v4; // ebx\n  int v5; // r14d\n  unsigned __int16 v6; // ax\n  unsigned __int16 v7; // bx\n  int v8; // r14d\n  __int16 v9; // ax\n  unsigned __int16 Area; // ax\n  int v12; // [rsp+1Ch] [rbp-107Ch]\n  unsigned __int16 v13; // [rsp+40h] [rbp-1058h]\n  unsigned __int16 v14; // [rsp+42h] [rbp-1056h]\n  unsigned __int16 v15; // [rsp+44h] [rbp-1054h]\n  unsigned __int16 v16; // [rsp+46h] [rbp-1052h]\n  unsigned __int16 v17; // [rsp+48h] [rbp-1050h]\n  char v18[2]; // [rsp+50h] [rbp-1048h] BYREF\n  __int16 v19; // [rsp+52h] [rbp-1046h]\n  __int16 v20; // [rsp+54h] [rbp-1044h]\n  __int16 v21; // [rsp+56h] [rbp-1042h]\n  __int16 v22; // [rsp+58h] [rbp-1040h]\n  __int16 v23; // [rsp+5Ah] [rbp-103Eh]\n  char v24; // [rsp+5Ch] [rbp-103Ch]\n  char v25; // [rsp+5Dh] [rbp-103Bh]\n  unsigned __int64 v26; // [rsp+1058h] [rbp-40h]\n\n  v1 = *((_QWORD *)this + 564);\n  v26 = __readfsqword(0x28u);\n  v2 = *(unsigned __int8 *)(v1 + 11);\n  v3 = v1;\n  if ( (unsigned __int8)v2 > 0x14u )\n  {\n    *(_BYTE *)(v1 + 11) = 20;\n    v12 = 19;\n    v2 = 20;\n    goto LABEL_3;\n  }\n  if ( *(_BYTE *)(v1 + 11) )\n  {\n    v12 = v2 - 1;\n    if ( v2 == 1 )\n    {\n      Area = TS7Worker::ReadArea(this);\n      if ( v12 > 0 )\n        Area -= ((Area & 1) == 0) - 1;\n      v5 = Area + 6;\n      goto LABEL_7;\n    }\nLABEL_3:\n    v4 = 0;\n    v5 = 2;\n    do\n    {\n      v6 = TS7Worker::ReadArea(this);\n      if ( v4 < v12 )\n        v6 -= ((v6 & 1) == 0) - 1;\n      v5 += v6 + 4;\n      ++v4;\n      TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n    }\n    while ( v4 < v2 );\nLABEL_7:\n    v7 = v5 - 2;\n    v3 = *((_QWORD *)this + 564);\n    v8 = v5 + 12;\n    goto LABEL_8;\n  }\n  v8 = 14;\n  v7 = 0;\nLABEL_8:\n  v9 = *(_WORD *)(v3 + 4);\n  v18[0] = 50;\n  v18[1] = 3;\n  v19 = 0;\n  v20 = v9;\n  v21 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 2u);\n  v23 = 0;\n  v22 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v7);\n  v24 = *(_BYTE *)(v1 + 10);\n  v25 = *(_BYTE *)(v1 + 11);\n  TIsoTcpSocket::isoSendBuffer(this, v18, v8);\n  if ( v2 == 1 )\n    TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n  return 1LL;\n}\n', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': '__int64 __fastcall TS7Worker::ReadArea(TS7Worker *this, __int64 a2, __int64 a3, int *a4, _WORD *a5)\n{\n  unsigned __int16 v9; // ax\n  __int64 Area; // r13\n  int v11; // r11d\n  char v12; // dl\n  char v13; // al\n  int v14; // eax\n  unsigned int v15; // r10d\n  unsigned int v16; // esi\n  unsigned int v17; // eax\n  char v18; // dl\n  int v19; // r14d\n  unsigned int v20; // r9d\n  __int64 v21; // rax\n  char v22; // al\n  unsigned int v23; // r10d\n  unsigned __int16 v24; // si\n  pthread_mutex_t *v26; // r13\n  int n; // [rsp+10h] [rbp-58h]\n  unsigned int na; // [rsp+10h] [rbp-58h]\n  unsigned int nb; // [rsp+10h] [rbp-58h]\n  TSnapBase *v30; // [rsp+18h] [rbp-50h]\n  void *src; // [rsp+20h] [rbp-48h]\n  int v32; // [rsp+28h] [rbp-40h]\n  unsigned __int8 v33; // [rsp+2Fh] [rbp-39h]\n\n  a5[3] = 0;\n  a5[4] = 0;\n  *a5 = 0;\n  a5[2] = 0;\n  a5[1] = *(unsigned __int8 *)(a3 + 8);\n  v9 = 0;\n  if ( *(_BYTE *)(a3 + 8) == 0x84 )\n  {\n    v9 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 6));\n    a5[2] = v9;\n  }\n  if ( *(_BYTE *)(*((_QWORD *)this + 1084) + 24792LL) )\n  {\n    Area = 0LL;\n  }\n  else\n  {\n    Area = TS7Worker::GetArea(this, *(_BYTE *)(a3 + 8), v9);\n    if ( !Area )\n      return TS7Worker::RA_NotFound(this, a2, a5);\n  }\n  v11 = TS7Worker::DataSizeByte(this, *(unsigned __int8 *)(a3 + 3));\n  if ( !v11 )\n    return TS7Worker::RA_OutOfRange(this, a2, a5);\n  v12 = *(_BYTE *)(a3 + 3);\n  v13 = *(_BYTE *)(a3 + 8);\n  if ( (v12 == 29) != (v13 == 29) || (v12 == 28) != (v13 == 28) )\n    return TS7Worker::RA_OutOfRange(this, a2, a5);\n  n = v11;\n  v30 = (TS7Worker *)((char *)this + 8);\n  v32 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 4));\n  v14 = *a4;\n  v15 = n * v32;\n  a5[4] = n * v32;\n  if ( v14 == n * v32 )\n    return TS7Worker::RA_SizeOverPDU(this, a2, a5);\n  *a4 = v14 - v15;\n  if ( *(_BYTE *)(a3 + 3) == 1 && v15 > 1 )\n    return TS7Worker::RA_OutOfRange(this, a2, a5);\n  v16 = *(_DWORD *)(a3 + 8);\n  na = n * v32;\n  LOBYTE(v16) = 0;\n  v17 = TSnapBase::SwapDWord(v30, v16);\n  v18 = *(_BYTE *)(a3 + 3);\n  if ( v18 != 29 && v18 != 1 )\n  {\n    if ( v18 == 28 )\n    {\n      v19 = v17;\nLABEL_34:\n      v20 = v17 >> 1;\n      goto LABEL_15;\n    }\n    if ( (v17 & 7) != 0 )\n      return TS7Worker::RA_OutOfRange(this, a2, a5);\n  }\n  v19 = v17;\n  if ( v18 != 1 )\n  {\n    v19 = v17 >> 3;\n    if ( v18 == 29 )\n      v19 = v17;\n  }\n  v20 = v17 >> 3;\n  v33 = v17 & 7;\n  if ( (unsigned __int8)(v18 - 28) <= 1u )\n    goto LABEL_34;\nLABEL_15:\n  v21 = *((_QWORD *)this + 1084);\n  a5[3] = v20;\n  if ( !*(_BYTE *)(v21 + 24792) )\n  {\n    if ( *(unsigned __int16 *)(Area + 2) < v20 + na )\n      return TS7Worker::RA_OutOfRange(this, a2, a5);\n    src = (void *)(*(_QWORD *)(Area + 8) + v20);\n  }\n  TS7Worker::DoReadEvent(this, (unsigned int)&loc_20000, 0, a5[1], a5[2], v20, a5[4]);\n  if ( *(_BYTE *)(*((_QWORD *)this + 1084) + 24792LL) )\n  {\n    memset((void *)(a2 + 4), 0, na);\n    v22 = TSnap7Server::DoReadArea(\n            *((TSnap7Server **)this + 1084),\n            *((_DWORD *)this + 15),\n            (unsigned __int16)a5[1],\n            (unsigned __int16)a5[2],\n            v19,\n            v32,\n            *(unsigned __int8 *)(a3 + 3),\n            (void *)(a2 + 4));\n    v23 = na;\n    if ( v22 )\n      goto LABEL_20;\n    return TS7Worker::RA_NotFound(this, a2, a5);\n  }\n  v26 = *(pthread_mutex_t **)(Area + 16);\n  pthread_mutex_lock(v26);\n  memcpy((void *)(a2 + 4), src, na);\n  pthread_mutex_unlock(v26);\n  v23 = na;\nLABEL_20:\n  *(_BYTE *)a2 = -1;\n  switch ( *(_BYTE *)(a3 + 3) )\n  {\n    case 1:\n      *(_BYTE *)(a2 + 1) = 3;\n      *(_BYTE *)(a2 + 4) = (BitMask[v33] & *(_BYTE *)(a2 + 4)) != 0;\n      v24 = v23;\n      break;\n    case 3:\n    case 0x1C:\n    case 0x1D:\n      *(_BYTE *)(a2 + 1) = 9;\n      v24 = v23;\n      break;\n    case 5:\n    case 7:\n      *(_BYTE *)(a2 + 1) = 5;\n      goto LABEL_22;\n    case 8:\n      *(_BYTE *)(a2 + 1) = 7;\n      v24 = v23;\n      break;\n    default:\n      *(_BYTE *)(a2 + 1) = 4;\nLABEL_22:\n      v24 = 8 * v23;\n      break;\n  }\n  nb = v23;\n  *(_WORD *)(a2 + 2) = TSnapBase::SwapWord(v30, v24);\n  *a5 = 0;\n  return nb;\n}\n', '_ZN13TIsoTcpSocket13isoSendBufferEPvi': '__int64 __fastcall TIsoTcpSocket::isoSendBuffer(TIsoTcpSocket *this, void *src, int a3)\n{\n  int v5; // esi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( (unsigned int)(a3 + 6) > 0x1006 )\n  {\n    v5 = 0x40000;\n  }\n  else\n  {\n    *((_BYTE *)this + 388) = 3;\n    *((_BYTE *)this + 389) = 0;\n    *((_BYTE *)this + 392) = 2;\n    *((_BYTE *)this + 393) = -16;\n    *((_BYTE *)this + 391) = a3 + 7;\n    *((_BYTE *)this + 394) = 0x80;\n    *((_BYTE *)this + 390) = (unsigned __int16)(a3 + 7) >> 8;\n    if ( src )\n      memcpy((char *)this + 395, src, a3);\n    TMsgSocket::SendPacket(this, (char *)this + 388, a3 + 7);\n    if ( !*((_DWORD *)this + 30) )\n      return 0LL;\n    v5 = 589824;\n  }\n  return TIsoTcpSocket::SetIsoError(this, v5);\n}\n', '_ZN9TS7Worker7GetAreaEht': '__int64 __fastcall TS7Worker::GetArea(TS7Worker *this, unsigned __int8 a2, unsigned __int16 a3)\n{\n  if ( a2 == 0x81 )\n    return *(_QWORD *)(*((_QWORD *)this + 1084) + 24752LL);\n  if ( a2 <= 0x81u )\n  {\n    if ( a2 == 28 )\n    {\n      return *(_QWORD *)(*((_QWORD *)this + 1084) + 24776LL);\n    }\n    else\n    {\n      if ( a2 != 29 )\n        return 0LL;\n      return *(_QWORD *)(*((_QWORD *)this + 1084) + 24784LL);\n    }\n  }\n  else\n  {\n    if ( a2 != 0x83 )\n    {\n      if ( a2 < 0x83u )\n        return *(_QWORD *)(*((_QWORD *)this + 1084) + 24760LL);\n      if ( a2 == 0x84 )\n        return TSnap7Server::FindDB(*((TSnap7Server **)this + 1084), a3);\n      return 0LL;\n    }\n    return *(_QWORD *)(*((_QWORD *)this + 1084) + 24768LL);\n  }\n}\n', '_ZN10TMsgSocket9SckAcceptEv': '__int64 __fastcall TMsgSocket::SckAccept(TMsgSocket *this)\n{\n  unsigned int v1; // ebp\n\n  *((_DWORD *)this + 30) = 0;\n  v1 = accept(*((_DWORD *)this + 6), 0LL, 0LL);\n  if ( v1 == -1 )\n    *((_DWORD *)this + 30) = TMsgSocket::GetLastSocketError(this);\n  return v1;\n}\n', '_ZN16TCustomMsgServer8IncomingEi': '__int64 __fastcall TCustomMsgServer::Incoming(TCustomMsgServer *this, unsigned int a2)\n{\n  unsigned int SockAddr; // r13d\n  int Free; // r12d\n  __int64 v4; // rax\n  unsigned int *v5; // r13\n  TMsgWorkerThread *v6; // rbp\n\n  SockAddr = Msg_GetSockAddr(a2);\n  if ( (*(unsigned __int8 (__fastcall **)(TCustomMsgServer *, _QWORD))(*(_QWORD *)this + 8LL))(this, a2) )\n  {\n    TCustomMsgServer::LockList(this);\n    Free = TCustomMsgServer::FirstFree(this);\n    v4 = *(_QWORD *)this;\n    if ( Free < 0 )\n    {\n      (*(void (__fastcall **)(TCustomMsgServer *, _QWORD, __int64, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD))(v4 + 24))(\n        this,\n        SockAddr,\n        32LL,\n        0LL,\n        0LL,\n        0LL,\n        0,\n        0);\n      Msg_CloseSocket(a2);\n    }\n    else\n    {\n      v5 = (unsigned int *)(*(__int64 (__fastcall **)(TCustomMsgServer *, _QWORD))(v4 + 16))(this, a2);\n      v6 = (TMsgWorkerThread *)operator new(0x30uLL);\n      TMsgWorkerThread::TMsgWorkerThread(v6, (TMsgSocket *)v5, this);\n      *((_QWORD *)this + Free + 12) = v6;\n      *((_DWORD *)v6 + 10) = Free;\n      ++*((_DWORD *)this + 2077);\n      TSnapThread::Start(v6);\n      (*(void (__fastcall **)(TCustomMsgServer *, _QWORD, __int64, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD))(*(_QWORD *)this + 24LL))(\n        this,\n        v5[15],\n        8LL,\n        0LL,\n        0LL,\n        0LL,\n        0,\n        0);\n    }\n    return TCustomMsgServer::UnlockList(this);\n  }\n  else\n  {\n    Msg_CloseSocket(a2);\n    return (*(__int64 (__fastcall **)(TCustomMsgServer *, _QWORD, __int64, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD))(*(_QWORD *)this + 24LL))(\n             this,\n             SockAddr,\n             16LL,\n             0LL,\n             0LL,\n             0LL,\n             0,\n             0);\n  }\n}\n', '_ZN9TS7Worker20PerformFunctionWriteEv': '__int64 __fastcall TS7Worker::PerformFunctionWrite(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  unsigned __int16 *v2; // rdx\n  __int64 v3; // r14\n  __int64 *v4; // rsi\n  __int64 *v5; // r15\n  char *v6; // r12\n  int v7; // eax\n  char v8; // dl\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  __int64 v11; // rbp\n  __int64 v12; // rax\n  TSnapBase *v14; // rbp\n  __int64 v15; // rax\n  unsigned __int16 *src; // [rsp+10h] [rbp-1118h]\n  int v17; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v18; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v19; // [rsp+20h] [rbp-1108h]\n  TSnapBase *v20; // [rsp+20h] [rbp-1108h]\n  int v21; // [rsp+2Ch] [rbp-10FCh]\n  unsigned __int16 v22; // [rsp+30h] [rbp-10F8h]\n  unsigned __int16 v23; // [rsp+32h] [rbp-10F6h]\n  unsigned __int16 v24; // [rsp+34h] [rbp-10F4h]\n  unsigned __int16 v25; // [rsp+36h] [rbp-10F2h]\n  unsigned __int16 v26; // [rsp+38h] [rbp-10F0h]\n  __int64 v27; // [rsp+40h] [rbp-10E8h] BYREF\n  _QWORD v28[19]; // [rsp+48h] [rbp-10E0h] BYREF\n  char v29; // [rsp+E0h] [rbp-1048h] BYREF\n  char v30; // [rsp+E1h] [rbp-1047h]\n  __int16 v31; // [rsp+E2h] [rbp-1046h]\n  __int16 v32; // [rsp+E4h] [rbp-1044h]\n  __int16 v33; // [rsp+E6h] [rbp-1042h]\n  __int16 v34; // [rsp+E8h] [rbp-1040h]\n  __int16 v35; // [rsp+EAh] [rbp-103Eh]\n  char v36; // [rsp+ECh] [rbp-103Ch]\n  unsigned __int8 v37; // [rsp+EDh] [rbp-103Bh]\n  _BYTE v38[4090]; // [rsp+EEh] [rbp-103Ah]\n  unsigned __int64 v39; // [rsp+10E8h] [rbp-40h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (unsigned __int16 *)*((_QWORD *)this + 564);\n  v39 = __readfsqword(0x28u);\n  src = v2;\n  v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;\n  v17 = *((unsigned __int8 *)src + 11);\n  v21 = v17 + 14;\n  if ( *((_BYTE *)src + 11) )\n  {\n    v4 = &v27;\n    v5 = v28;\n    v6 = (char *)src + 15;\n    v19 = (TSnapBase *)(unsigned int)(v17 - 1);\n    while ( 1 )\n    {\n      v8 = *v6;\n      v9 = v3 + *((_QWORD *)this + 564);\n      *v4 = v9;\n      v10 = *(_WORD *)(v9 + 2);\n      if ( (unsigned __int8)(v8 - 28) <= 1u || v8 == 1 )\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n      else\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10) >> 3;\n      v4 = v5;\n      v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);\n      v6 += 12;\n      if ( v5 == &v28[(_QWORD)v19] )\n        break;\n      ++v5;\n    }\n    v36 = 5;\n    v37 = *((_BYTE *)src + 11);\n    if ( v17 == 1 )\n    {\n      v18 = (TS7Worker *)((char *)this + 8);\n      v14 = 0LL;\n      do\n      {\n        v38[(_QWORD)v14] = TS7Worker::WriteArea(this);\n        v14 = (TSnapBase *)((char *)v14 + 1);\n      }\n      while ( v14 != (TSnapBase *)((char *)v19 + 1) );\n      v15 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v15 + 4);\n      v33 = TSnapBase::SwapWord(v18, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v18, 1u);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n      TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n    }\n    else\n    {\n      v20 = (TS7Worker *)((char *)this + 8);\n      v11 = 0LL;\n      do\n      {\n        v38[v11++] = TS7Worker::WriteArea(this);\n        TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n      }\n      while ( v11 != (unsigned int)(v17 - 1) + 1LL );\n      v12 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v12 + 4);\n      v33 = TSnapBase::SwapWord(v20, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v20, v17);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n    }\n  }\n  else\n  {\n    v36 = 5;\n    v29 = 50;\n    v30 = 3;\n    v31 = 0;\n    v37 = *((_BYTE *)src + 11);\n    v32 = *(_WORD *)(*((_QWORD *)this + 564) + 4LL);\n    v33 = TSnapBase::SwapWord(v1, 2u);\n    v35 = 0;\n    v34 = TSnapBase::SwapWord(v1, 0);\n    TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n  }\n  return 1LL;\n}\n', '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': '__int64 __fastcall TS7Worker::WriteArea(TS7Worker *this, __int64 a2, __int64 a3, _WORD *a4)\n{\n  unsigned __int16 v7; // ax\n  __int64 Area; // rbx\n  int v9; // r15d\n  char v10; // dl\n  char v11; // al\n  unsigned __int16 v12; // ax\n  unsigned int v13; // r15d\n  unsigned int v14; // esi\n  unsigned int v15; // eax\n  char v16; // dl\n  int v18; // ecx\n  __int64 v19; // rsi\n  __int64 v20; // rax\n  unsigned int v21; // r12d\n  char v22; // al\n  TSnap7Server *v23; // rdi\n  pthread_mutex_t *v24; // rbx\n  char v25; // al\n  int v27; // [rsp+1Ch] [rbp-4Ch]\n  _BYTE *dest; // [rsp+20h] [rbp-48h]\n  int v29; // [rsp+28h] [rbp-40h]\n  unsigned __int8 v30; // [rsp+2Fh] [rbp-39h]\n\n  a4[3] = 0;\n  a4[4] = 0;\n  *a4 = 0;\n  a4[2] = 0;\n  a4[1] = *(unsigned __int8 *)(a3 + 8);\n  v7 = 0;\n  if ( *(_BYTE *)(a3 + 8) == 0x84 )\n  {\n    v7 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 6));\n    a4[2] = v7;\n  }\n  if ( *(_BYTE *)(*((_QWORD *)this + 1084) + 24792LL) )\n  {\n    Area = 0LL;\n  }\n  else\n  {\n    Area = TS7Worker::GetArea(this, *(_BYTE *)(a3 + 8), v7);\n    if ( !Area )\n      return TS7Worker::WA_NotFound(this, a4);\n  }\n  v9 = TS7Worker::DataSizeByte(this, *(unsigned __int8 *)(a3 + 3));\n  if ( !v9 )\n    return TS7Worker::WA_InvalidTransportSize(this, a4);\n  v10 = *(_BYTE *)(a3 + 3);\n  v11 = *(_BYTE *)(a3 + 8);\n  if ( (v10 == 29) != (v11 == 29) )\n    return TS7Worker::WA_OutOfRange(this, a4);\n  if ( (v10 == 28) != (v11 == 28) )\n    return TS7Worker::WA_OutOfRange(this, a4);\n  v12 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 4));\n  v13 = v12 * v9;\n  v27 = v12;\n  a4[4] = v13;\n  if ( *(_BYTE *)(a3 + 3) == 1 && v13 > 1 )\n    return TS7Worker::WA_OutOfRange(this, a4);\n  v14 = *(_DWORD *)(a3 + 8);\n  LOBYTE(v14) = 0;\n  v15 = TSnapBase::SwapDWord((TS7Worker *)((char *)this + 8), v14);\n  v16 = *(_BYTE *)(a3 + 3);\n  if ( v16 == 29 || v16 == 1 )\n  {\nLABEL_15:\n    if ( v16 == 1 )\n    {\n      v29 = v15;\n    }\n    else\n    {\n      v18 = v15 >> 3;\n      if ( v16 == 29 )\n        v18 = v15;\n      v29 = v18;\n    }\n    v19 = v15 >> 3;\n    v30 = v15 & 7;\n    if ( (unsigned __int8)(v16 - 28) > 1u )\n      goto LABEL_20;\n    goto LABEL_38;\n  }\n  if ( v16 != 28 )\n  {\n    if ( (v15 & 7) != 0 )\n      return TS7Worker::WA_OutOfRange(this, a4);\n    goto LABEL_15;\n  }\n  v29 = v15;\nLABEL_38:\n  v19 = v15 >> 1;\nLABEL_20:\n  v20 = *((_QWORD *)this + 1084);\n  a4[3] = v19;\n  if ( !*(_BYTE *)(v20 + 24792) )\n  {\n    if ( *(unsigned __int16 *)(Area + 2) < (unsigned int)v19 + v13 )\n      return TS7Worker::WA_OutOfRange(this, a4);\n    dest = (_BYTE *)(*(_QWORD *)(Area + 8) + v19);\n  }\n  v21 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a2 + 2));\n  v22 = *(_BYTE *)(a2 + 1);\n  if ( v22 != 7 && v22 != 9 && v22 != 3 )\n    v21 >>= 3;\n  if ( v21 != v13 )\n    return TS7Worker::WA_DataSizeMismatch(this, a4);\n  v23 = (TSnap7Server *)*((_QWORD *)this + 1084);\n  if ( !*((_BYTE *)v23 + 24792) )\n  {\n    if ( *(_BYTE *)(a3 + 3) == 1 )\n    {\n      v25 = BitMask[v30];\n      if ( (*(_BYTE *)(a2 + 4) & 1) != 0 )\n        *dest |= v25;\n      else\n        *dest &= ~v25;\n    }\n    else\n    {\n      v24 = *(pthread_mutex_t **)(Area + 16);\n      pthread_mutex_lock(v24);\n      memcpy(dest, (const void *)(a2 + 4), v21);\n      pthread_mutex_unlock(v24);\n    }\n    return 0xFFFFFFFFLL;\n  }\n  if ( (unsigned __int8)TSnap7Server::DoWriteArea(\n                          v23,\n                          *((_DWORD *)this + 15),\n                          (unsigned __int16)a4[1],\n                          (unsigned __int16)a4[2],\n                          v29,\n                          v27,\n                          *(unsigned __int8 *)(a3 + 3),\n                          (void *)(a2 + 4)) )\n    return 0xFFFFFFFFLL;\n  return TS7Worker::WA_NotFound(this, a4);\n}\n', '_ZN10TMsgSocket10SendPacketEPvi': '__int64 __fastcall TMsgSocket::SendPacket(TMsgSocket *this, void *buf, int a3)\n{\n  int v4; // esi\n  size_t v5; // rbp\n  __int64 result; // rax\n  ssize_t v7; // rdx\n\n  v4 = *((_DWORD *)this + 29);\n  v5 = a3;\n  *((_DWORD *)this + 30) = 0;\n  if ( v4 <= 0 || (unsigned __int8)TMsgSocket::CanWrite(this, v4) )\n  {\n    v7 = send(*((_DWORD *)this + 6), buf, v5, 0x4000);\n    result = 0LL;\n    if ( v7 != v5 )\n    {\n      TMsgSocket::SockCheck(this, -1);\n      return 0xFFFFFFFFLL;\n    }\n  }\n  else\n  {\n    *((_DWORD *)this + 30) = 110;\n    return 110LL;\n  }\n  return result;\n}\n', '_ZN10TMsgSocket8CanWriteEi': 'bool __fastcall TMsgSocket::CanWrite(TMsgSocket *this, int a2)\n{\n  __int64 v3; // rax\n  int v4; // edi\n  int v5; // eax\n  struct timeval v7; // [rsp+0h] [rbp-A8h] BYREF\n  fd_set writefds; // [rsp+10h] [rbp-98h] BYREF\n\n  if ( *((_DWORD *)this + 6) == -1 )\n    return 0;\n  v7.tv_sec = a2 / 1000;\n  v7.tv_usec = 1000 * (a2 % 1000);\n  memset(&writefds, 0, sizeof(writefds));\n  v3 = __fdelt_chk(*((int *)this + 6));\n  v4 = *((_DWORD *)this + 6);\n  writefds.fds_bits[v3] |= 1LL << (*((_DWORD *)this + 6) % 64);\n  v5 = select(v4 + 1, 0LL, &writefds, 0LL, &v7);\n  if ( v5 != -1LL )\n    return v5 > 0LL;\n  *((_DWORD *)this + 30) = TMsgSocket::GetLastSocketError(this);\n  return 0;\n}\n', '_ZL7TxtAreaR9TSrvEvent.isra.10': 'std::string *__fastcall TxtArea(std::string *this, unsigned __int16 a2)\n{\n  __int64 v2; // rbp\n  __int64 v3; // rbp\n  char v5; // [rsp+Fh] [rbp-49h] BYREF\n  _QWORD v6[2]; // [rsp+10h] [rbp-48h] BYREF\n  __int64 v7[3]; // [rsp+20h] [rbp-38h] BYREF\n\n  if ( a2 == 129 )\n  {\n    std::string::string(this, "Area : PE, ", &v5);\n    return this;\n  }\n  if ( a2 <= 0x81u )\n  {\n    if ( a2 == 28 )\n    {\n      std::string::string(this, "Area : CT, ", &v5);\n      return this;\n    }\n    if ( a2 == 29 )\n    {\n      std::string::string(this, "Area : TM, ", &v5);\n      return this;\n    }\nLABEL_8:\n    IntToString((int)v6);\n    v7[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    std::string::reserve((std::string *)v7, *(_QWORD *)(v6[0] - 24LL) + 14LL);\n    std::string::append((std::string *)v7, "Unknown area (", 0xEuLL);\n    std::string::append((std::string *)v7, (const std::string *)v6);\n    std::string::string(this, (const std::string *)v7);\n    std::string::append(this, ")", 1uLL);\n    goto LABEL_9;\n  }\n  if ( a2 == 131 )\n  {\n    std::string::string(this, "Area : MK, ", &v5);\n    return this;\n  }\n  if ( a2 < 0x83u )\n  {\n    std::string::string(this, "Area : PA, ", &v5);\n    return this;\n  }\n  if ( a2 != 132 )\n    goto LABEL_8;\n  IntToString((int)v6);\n  v7[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n  std::string::reserve((std::string *)v7, *(_QWORD *)(v6[0] - 24LL) + 9LL);\n  std::string::append((std::string *)v7, "Area : DB", 9uLL);\n  std::string::append((std::string *)v7, (const std::string *)v6);\n  std::string::string(this, (const std::string *)v7);\n  std::string::append(this, ", ", 2uLL);\nLABEL_9:\n  v2 = v7[0] - 24;\n  if ( (_UNKNOWN *)(v7[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v2 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v2, &v5);\n  }\n  v3 = v6[0] - 24LL;\n  if ( (_UNKNOWN *)(v6[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v3 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v3, &v5);\n  }\n  return this;\n}\n', '_ZN9TS7Worker17PerformPDUUsrDataERi': "__int64 __fastcall TS7Worker::PerformPDUUsrData(TS7Worker *this, int *a2)\n{\n  __int64 v2; // rax\n  unsigned __int16 v3; // cx\n  char v4; // si\n  __int64 result; // rax\n\n  v2 = *((_QWORD *)this + 564);\n  v3 = *(unsigned __int8 *)(v2 + 15);\n  v4 = *(_BYTE *)(v2 + 16);\n  switch ( (char)v3 )\n  {\n    case 'A':\n      result = TS7Worker::PerformGroupProgrammer(this);\n      break;\n    case 'B':\n      result = TS7Worker::PerformGroupCyclicData(this);\n      break;\n    case 'C':\n      result = TS7Worker::PerformGroupBlockInfo(this);\n      break;\n    case 'D':\n      result = TS7Worker::PerformGroupSZL(this);\n      break;\n    case 'E':\n      result = TS7Worker::PerformGroupSecurity(this);\n      break;\n    case 'G':\n      if ( v4 == 1 )\n      {\n        result = TS7Worker::PerformGetClock(this);\n      }\n      else\n      {\n        if ( v4 != 2 )\n          goto LABEL_3;\n        result = TS7Worker::PerformSetClock(this);\n      }\n      break;\n    default:\n      TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 0xBu, v3, 0, 0, 0);\nLABEL_3:\n      result = 1LL;\n      break;\n  }\n  return result;\n}\n", '_ZN9TS7Worker15PerformGroupSZLEv': "__int64 __fastcall TS7Worker::PerformGroupSZL(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  __int64 v2; // rax\n  __int64 v3; // rdx\n  __int16 v4; // ax\n  _BYTE *v5; // rdx\n  __int64 v6; // rax\n  char v7; // al\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  unsigned __int16 v11; // ax\n  int v12; // edx\n  unsigned __int16 v13; // r8\n  unsigned __int16 v14; // cx\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = *((_QWORD *)this + 564);\n  *((_BYTE *)this + 4528) = 50;\n  *((_BYTE *)this + 4529) = 7;\n  *((_BYTE *)this + 8664) = 0;\n  *((_WORD *)this + 2265) = 0;\n  v3 = v2 + 10;\n  LOWORD(v2) = *(_WORD *)(v2 + 4);\n  *((_QWORD *)this + 1078) = v3;\n  *((_QWORD *)this + 1080) = (char *)this + 4538;\n  *((_WORD *)this + 2266) = v2;\n  *((_QWORD *)this + 1081) = (char *)this + 4550;\n  v4 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 0xCu);\n  v5 = (_BYTE *)*((_QWORD *)this + 1078);\n  *((_WORD *)this + 2267) = v4;\n  **((_BYTE **)this + 1080) = *v5;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 1LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 1LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 2LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 2LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 3LL) = 8;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 4LL) = 18;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 5LL) = -124;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 6LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 6LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 7LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 7LL);\n  v6 = *((_QWORD *)this + 1080);\n  *(_WORD *)(v6 + 8) = 0;\n  v7 = *(_BYTE *)(v6 + 6);\n  if ( v7 == 2 )\n  {\n    TS7Worker::SZLSystemState(this);\n    return 1LL;\n  }\n  if ( v7 != 1 )\n  {\n    TS7Worker::SZLNotAvailable(this);\n    return 1LL;\n  }\n  v9 = *((_QWORD *)this + 564);\n  v10 = *(_WORD *)(v9 + 22);\n  *((_QWORD *)this + 1079) = v9 + 18;\n  *((_DWORD *)this + 2164) = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n  v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));\n  *((_DWORD *)this + 2165) = v11;\n  v12 = *((_DWORD *)this + 2164);\n  if ( v12 == 404 )\n  {\n    if ( v11 == 100 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0194_IDX_0064, 270);\n      goto LABEL_17;\n    }\nLABEL_16:\n    TS7Worker::SZLNotAvailable(this);\n    goto LABEL_17;\n  }\n  if ( v12 <= 404 )\n  {\n    if ( v12 == 56 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0038_IDX_XXXX, 78);\n      goto LABEL_17;\n    }\n    if ( v12 <= 56 )\n    {\n      if ( v12 == 25 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0019_IDX_XXXX, 40);\n        goto LABEL_17;\n      }\n      if ( v12 > 25 )\n      {\n        if ( v12 == 35 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0023_IDX_XXXX, 228);\n          goto LABEL_17;\n        }\n        if ( v12 > 35 )\n        {\n          if ( v12 == 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0025_IDX_XXXX, 16);\n            goto LABEL_17;\n          }\n          if ( v12 < 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0024_IDX_XXXX, 92);\n            goto LABEL_17;\n          }\n          if ( v12 == 54 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0036_IDX_XXXX, 12);\n            goto LABEL_17;\n          }\n          if ( v12 == 55 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0037_IDX_XXXX, 60);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001B_IDX_XXXX, 132);\n            goto LABEL_17;\n          }\n          if ( v12 < 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001A_IDX_XXXX, 48);\n            goto LABEL_17;\n          }\n          if ( v12 == 28 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001C_IDX_XXXX, 352);\n            goto LABEL_17;\n          }\n          if ( v12 == 33 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0021_IDX_XXXX, 100);\n            goto LABEL_17;\n          }\n        }\n      }\n      else\n      {\n        if ( v12 == 19 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0013_IDX_XXXX, 192);\n          goto LABEL_17;\n        }\n        if ( v12 > 19 )\n        {\n          if ( v12 == 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0015_IDX_XXXX, 62);\n            goto LABEL_17;\n          }\n          if ( v12 < 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0014_IDX_XXXX, 84);\n            goto LABEL_17;\n          }\n          if ( v12 == 23 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0017_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 == 24 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0018_IDX_XXXX, 28);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 2 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0002_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 > 2 )\n          {\n            if ( v12 == 17 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0011_IDX_XXXX, 124);\n              goto LABEL_17;\n            }\n            if ( v12 == 18 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0012_IDX_XXXX, 58);\n              goto LABEL_17;\n            }\n          }\n          else if ( !v12 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0000_IDX_XXXX, 236);\n            goto LABEL_17;\n          }\n        }\n      }\n    }\n    else if ( v12 == 277 )\n    {\n      if ( v11 == 2048 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0115_IDX_0800, 22);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 277 )\n    {\n      if ( v12 == 293 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0000, 16);\n          goto LABEL_17;\n        }\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 293 )\n      {\n        if ( v12 == 306 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0003, 52);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0009, 52);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000A, 52);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000B, 52);\n              break;\n            case 0xCu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000C, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 > 306 )\n        {\n          if ( v12 == 311 )\n          {\n            if ( v11 == 2046 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0137_IDX_07FE, 60);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 372 )\n          {\n            switch ( v11 )\n            {\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0001, 16);\n                break;\n              case 4u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0004, 16);\n                break;\n              case 5u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0005, 16);\n                break;\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0006, 16);\n                break;\n              case 0xBu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000B, 16);\n                break;\n              case 0xCu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000C, 16);\n                break;\n              default:\n                goto LABEL_16;\n            }\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 305 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZL_ID131_IDX003(this);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0009, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 280 )\n      {\n        switch ( v11 )\n        {\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0001, 16);\n            goto LABEL_17;\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0000, 16);\n            goto LABEL_17;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0002, 16);\n            goto LABEL_17;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0003, 16);\n            goto LABEL_17;\n        }\n      }\n      else if ( v12 > 280 )\n      {\n        if ( v12 == 284 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0001, 46);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0002, 46);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0003, 46);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0004, 46);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0005, 46);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0007, 46);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0008, 46);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0009, 46);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000A, 46);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000B, 46);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 == 292 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0124_IDX_XXXX, 32);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 279 )\n      {\n        switch ( v11 )\n        {\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0000, 16);\n            break;\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0001, 16);\n            break;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0002, 16);\n            break;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0003, 16);\n            break;\n          case 4u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0004, 16);\n            break;\n          default:\n            goto LABEL_16;\n        }\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 149 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0095_IDX_XXXX, 52);\n        goto LABEL_17;\n      }\n      if ( v12 > 149 )\n      {\n        if ( v12 == 273 )\n        {\n          switch ( v11 )\n          {\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0006, 40);\n              goto LABEL_17;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0007, 40);\n              goto LABEL_17;\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0001, 40);\n              goto LABEL_17;\n          }\n        }\n        else if ( v12 > 273 )\n        {\n          if ( v12 == 274 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0100, 16);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0000, 14);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 275 && v11 == 1 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0113_IDX_0001, 48);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 160 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_00A0_IDX_XXXX, 212);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 116 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0074_IDX_XXXX, 40);\n          goto LABEL_17;\n        }\n        if ( v12 > 116 )\n        {\n          if ( v12 == 146 )\n          {\n            if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0092_IDX_0000, 28);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 148 && !v11 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0094_IDX_0000, 270);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 58 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_003A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3860 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F14_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3860 )\n  {\n    if ( v12 == 1684 )\n    {\n      if ( v11 == 100 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0694_IDX_0064, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 1684 )\n    {\n      if ( v12 == 3473 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D91_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 3473 )\n      {\n        if ( v12 == 3840 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F00_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 > 3840 )\n        {\n          if ( v12 == 3857 )\n          {\n            switch ( v11 )\n            {\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0006, 12);\n                goto LABEL_17;\n              case 7u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0007, 12);\n                goto LABEL_17;\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0001, 12);\n                goto LABEL_17;\n            }\n          }\n          else if ( v12 == 3858 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0100, 12);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0000, 12);\n              goto LABEL_17;\n            }\n          }\n        }\n        else if ( v12 == 3479 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D97_IDX_0000, 60);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 2593 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0A21_IDX_XXXX, 16);\n          goto LABEL_17;\n        }\n        if ( v12 > 2593 )\n        {\n          if ( v12 == 2705 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0A91_IDX_XXXX, 44);\n            goto LABEL_17;\n          }\n          if ( v12 == 3217 && v11 == 2046 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0C91_IDX_07FE, 28);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 1940 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0794_IDX_XXXX, 270);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 658 )\n    {\n      if ( !v11 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0292_IDX_0000, 28);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 658 )\n    {\n      if ( v12 == 1060 )\n      {\n        TS7Worker::SZL_ID424(this);\n        goto LABEL_17;\n      }\n      if ( v12 > 1060 )\n      {\n        if ( v12 == 1425 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0591_IDX_XXXX, 76);\n          goto LABEL_17;\n        }\n        if ( v12 == 1682 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0692_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 660 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0294_IDX_XXXX, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 546 )\n    {\n      if ( v11 == 20 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0014, 40);\n        goto LABEL_17;\n      }\n      if ( v11 > 0x14u )\n      {\n        switch ( v11 )\n        {\n          case 'P':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0050, 40);\n            goto LABEL_17;\n          case 'd':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0064, 40);\n            goto LABEL_17;\n          case '(':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0028, 40);\n            goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0001, 40);\n          goto LABEL_17;\n        }\n        if ( v11 == 10 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_000A, 40);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 > 546 )\n    {\n      if ( v12 == 549 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0225_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 562 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0001, 52);\n          goto LABEL_17;\n        }\n        if ( v11 == 4 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0004, 52);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 416 )\n    {\n      switch ( v11 )\n      {\n        case 0u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0000, 12);\n          break;\n        case 1u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0001, 32);\n          break;\n        case 2u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0002, 52);\n          break;\n        case 3u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0003, 72);\n          break;\n        case 4u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0004, 92);\n          break;\n        case 5u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0005, 112);\n          break;\n        case 6u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0006, 132);\n          break;\n        case 7u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0007, 152);\n          break;\n        case 8u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0008, 172);\n          break;\n        case 9u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0009, 192);\n          break;\n        case 0xAu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000A, 212);\n          break;\n        case 0xBu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000B, 232);\n          break;\n        case 0xCu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000C, 252);\n          break;\n        case 0xDu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000D, 272);\n          break;\n        case 0xEu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000E, 292);\n          break;\n        case 0xFu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000F, 312);\n          break;\n        case 0x10u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0010, 332);\n          break;\n        case 0x11u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0011, 352);\n          break;\n        case 0x12u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0012, 372);\n          break;\n        case 0x13u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0013, 392);\n          break;\n        case 0x14u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0014, 412);\n          break;\n        case 0x15u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0015, 432);\n          break;\n        default:\n          goto LABEL_16;\n      }\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3894 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F36_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3894 )\n  {\n    if ( v12 == 3986 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F92_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3986 )\n    {\n      if ( v12 == 3989 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F95_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 > 3989 )\n      {\n        if ( v12 == 3994 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F9A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 == 4000 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0FA0_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 3988 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F94_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F38_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 < 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F37_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3898 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F3A_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3956 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F74_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3867 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F1B_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3867 )\n  {\n    if ( v12 == 3873 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F21_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3873 )\n    {\n      if ( v12 == 3875 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F23_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3877 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F25_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 3868 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F1C_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3864 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F18_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3864 )\n  {\n    if ( v12 == 3863 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F17_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3865 )\n    TS7Worker::SZLData(this, &SZL_ID_0F19_IDX_XXXX, 12);\n  else\n    TS7Worker::SZLData(this, &SZL_ID_0F1A_IDX_XXXX, 12);\nLABEL_17:\n  v13 = *((_WORD *)this + 4330);\n  v14 = *((_WORD *)this + 4328);\n  if ( *((_BYTE *)this + 8664) )\n    TS7Worker::DoEvent(this, 0x100000u, 0, v14, v13, 0, 0);\n  else\n    TS7Worker::DoEvent(this, 0x100000u, 0xCu, v14, v13, 0, 0);\n  return 1LL;\n}\n"}
2025-03-08 21:19:56,314 - my_text.py:383  - 0:0300001902f08032010000000000080000f0000001000101e0 Updated c_taint_asm_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'cmp', 'byte', 'movzx', 'unsigned', '48h', 'dl', '189h', 'ptr', 'rbx', 'edx', '0E0h', '0F0h', 'rsp', 'mov', '__int8', 'var_40'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'r12d', '5', 'rbx', 'edx', 'mov', 'r12b'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'byte', 'cmp', 'eax', 'movzx', '0F0h', 'rbx', 'ptr', '5', '0E0h', 'al'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'byte', 'r15', 'eax', 'movzx', '18Ah', 'rbx', 'ptr', 'shr', 'al', 'mov', '7'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'cmp', 'rsp', 'var_58', '0', '68h'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'byte', 'eax', '8', 'movzx', 'ptr', 'edx', 'shl', '2', 'rsi', 'add'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', 'cmp', 'eax', 'sub', 'r13d', 'edx', 'r12', '7', 'test', 'mov', 'r15d'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'eax', 'xor', 'sub', '0FF9h', '7'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'int', 'edx', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket11WaitForDataEii': {'int', 'cmp', 'eax', 'push', 'rbp', 'xor', 'pop', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket7CanReadEi': {'rbp', 'pop', 'push'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'var_48', 'rsp', 'ebp', 'add', '68h'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'byte', 'eax', 'movzx', 'ptr', 'edx', '3', 'rsi', 'add'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', 'cmp', 'eax', 'sub', 'r13d', 'edx', 'r12', '7', 'test', 'mov', 'r15d'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'eax', 'xor', 'sub', '0FF9h', '7'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'int', 'edx', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket11WaitForDataEii': {'int', 'cmp', 'eax', 'push', 'rbp', 'xor', 'pop', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket7CanReadEi': {'rbp', 'pop', 'push'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'var_48', 'rsp', 'ebp', 'add', '68h'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'byte', '1', 'rbx', '4', 'ptr'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx', '6', 'unsigned', 'word', 'ptr', 'esi', 'r13d', '__int16', 'ax', 'rax'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx', '6', 'unsigned', 'word', 'ptr', 'esi', 'r13d', '__int16', 'ax', 'rax'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'eax', '8', 'movzx', 'unsigned', 'word', 'xor', 'ptr', 'ax', '__int16', 'rax', 'esi'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'eax', '8', 'movzx', 'unsigned', 'word', 'xor', 'ptr', 'ax', '__int16', 'rax', 'esi'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'byte', 'cmp', 'movzx', '1', 'dl', 'ptr', 'edx', '7', 'rax'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'cmp', 'byte', 'eax', 'movzx', '1', 'ptr', 'al', 'rax'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {'cmp', 'byte', '0Ah', 'eax', 'movzx', '28h', '0F0h', 'ptr', '1Fh', 'al', '29h', 'rax'}}, 11: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'eax', 'movzx', 'rbp', 'word', 'ptr', '4', 'ax', 'rsp', '1038h', 'var_1024', 'mov'}}, 12: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'eax', 'movzx', 'rbp', 'word', 'ptr', '4', 'ax', 'rsp', '1038h', 'var_1024', 'mov'}}, 19: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'eax', '0Ch', 'movzx', 'rbp', 'word', 'var_101A', 'ptr', 'ax', 'rsp', '1038h', 'mov'}}, 20: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'eax', '0Ch', 'movzx', 'rbp', 'word', 'var_101A', 'ptr', 'ax', 'rsp', '1038h', 'mov'}}, 21: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'eax', 'movzx', 'rbp', 'word', 'ptr', 'ax', 'rsp', '1038h', 'mov', 'var_1018', '0Eh'}}, 22: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'eax', 'movzx', 'rbp', 'word', 'ptr', 'ax', 'rsp', '1038h', 'mov', 'var_1018', '0Eh'}}, 23: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'movzx', 'unsigned', 'ecx', 'rbp', 'rbx', 'rsp', 'esi', 'cmp', '21E8h', '__int16', '1000h', '1038h', 'ptr', '10h', '0EFh', 'eax', 'word', 'ax', 'var_1016', 'mov'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}, '_ZN9TS7Worker7DoEventEjttttt': {'cx', 'movzx', 'r8d'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'r8d', 'r8w', '78h', 'rsp', 'mov', 'var_36', 'var_68'}, '_Z10EvtSrvTextR9TSrvEvent': {'movzx', 'rbp', 'word', 'ptr', '12h', 'esi'}, '_Z11NumToStringiij': {'r10d', 'sar', 'eax', 'imul', 'sub', 'edx', '23h', '1Fh', 'test', 'mov', 'add', 'esi'}}, 24: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'movzx', 'unsigned', 'ecx', 'rbp', 'rbx', 'rsp', 'esi', 'cmp', '21E8h', '__int16', '1000h', '1038h', 'ptr', '10h', '0EFh', 'eax', 'word', 'ax', 'var_1016', 'mov'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}, '_ZN9TS7Worker7DoEventEjttttt': {'cx', 'movzx', 'r8d'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'r8d', 'r8w', '78h', 'rsp', 'mov', 'var_36', 'var_68'}, '_Z10EvtSrvTextR9TSrvEvent': {'movzx', 'rbp', 'word', 'ptr', '12h', 'esi'}, '_Z11NumToStringiij': {'r10d', 'sar', 'eax', 'imul', 'sub', 'edx', '23h', '1Fh', 'test', 'mov', 'add', 'esi'}}}, '1': {2: {'_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}}}}
2025-03-08 21:19:56,314 - my_text.py:383  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Updated c_taint_asm_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'cmp', 'byte', 'movzx', 'unsigned', '48h', 'dl', '189h', 'ptr', 'rbx', 'edx', '0E0h', '0F0h', 'rsp', 'mov', '__int8', 'var_40'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'r12d', '5', 'rbx', 'edx', 'mov', 'r12b'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'byte', 'cmp', 'eax', 'movzx', '0F0h', 'rbx', 'ptr', '5', '0E0h', 'al'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'byte', 'r15', 'eax', 'movzx', '18Ah', 'rbx', 'ptr', 'shr', 'al', 'mov', '7'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'cmp', 'rsp', 'var_58', '0', '68h'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'byte', 'eax', '8', 'movzx', 'ptr', 'edx', 'shl', '2', 'rsi', 'add'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', 'cmp', 'eax', 'sub', 'r13d', 'edx', 'r12', '7', 'test', 'mov', 'r15d'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'eax', 'xor', 'sub', '0FF9h', '7'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'int', 'edx', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket11WaitForDataEii': {'int', 'cmp', 'eax', 'push', 'rbp', 'xor', 'pop', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket7CanReadEi': {'rbp', 'pop', 'push'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'var_48', 'rsp', 'ebp', 'add', '68h'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'byte', 'eax', 'movzx', 'ptr', 'edx', '3', 'rsi', 'add'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', 'cmp', 'eax', 'sub', 'r13d', 'edx', 'r12', '7', 'test', 'mov', 'r15d'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'eax', 'xor', 'sub', '0FF9h', '7'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'int', 'edx', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket11WaitForDataEii': {'int', 'cmp', 'eax', 'push', 'rbp', 'xor', 'pop', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket7CanReadEi': {'rbp', 'pop', 'push'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'var_48', 'rsp', 'ebp', 'add', '68h'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'byte', '1', 'rbx', '4', 'ptr'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx', '6', 'unsigned', 'word', 'ptr', 'esi', 'r13d', '__int16', 'ax', 'rax'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx', '6', 'unsigned', 'word', 'ptr', 'esi', 'r13d', '__int16', 'ax', 'rax'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'eax', '8', 'movzx', 'unsigned', 'word', 'xor', 'ptr', 'ax', '__int16', 'rax', 'esi'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'eax', '8', 'movzx', 'unsigned', 'word', 'xor', 'ptr', 'ax', '__int16', 'rax', 'esi'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'byte', 'cmp', 'movzx', '1', 'dl', 'ptr', 'edx', '7', 'rax'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'cmp', 'byte', 'eax', 'movzx', '1', 'ptr', 'al', 'rax'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {'cmp', 'byte', '1Ah', 'eax', '0Ah', 'movzx', '5', '4', 'ptr', '1Dh', '1Fh', 'al', 'rax'}, '_ZN9TS7Worker19PerformFunctionReadEv': {'byte', 'r13', '0Ah', 'eax', 'movzx', '1098h', 'ptr', 'rsp', 'al', 'var_103C', 'mov'}}, 23: {'_ZN9TS7Worker19PerformFunctionReadEv': {'var_1068', 'eax', 'rdi', '1098h', '21E8h', 'rsp', 'mov'}}, 24: {'_ZN9TS7Worker19PerformFunctionReadEv': {'var_1068', 'eax', 'rdi', '1098h', '21E8h', 'rsp', 'mov'}}, 18: {'_ZN9TS7Worker19PerformFunctionReadEv': {'cmp', 'byte', 'eax', 'r12d', 'movzx', '1', 'al', '1098h', 'ptr', '14h', 'mov', '0Bh', 'rsp', 'var_103B', 'test', 'r13', 'r12b'}, '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': {'r12', 'rsp', 'var_20', 'mov', '68h'}, '_ZN13TIsoTcpSocket13isoSendBufferEPvi': {'var_10', '28h', 'r12', 'rsp', 'mov'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'78h', 'rsp', 'r12', 'mov', 'var_18'}}, 27: {'_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': {'byte', 'rdx', 'cmp', '8', 'eax', 'movzx', 'unsigned', 'rbp', '84h', '2', 'xor', 'ptr', 'ax', 'r8', 'mov', '__int8', 'esi'}, '_ZN9TS7Worker7GetAreaEht': {'cmp', 'sil', '81h', '83h'}, '_ZN9TS7Worker19PerformFunctionReadEv': {'ecx', 'movzx', 'unsigned', '__int16', 'var_1056', 'rsp', '1098h'}, '_ZN9TS7Worker7DoEventEjttttt': {'cx', 'movzx', 'r8d'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'r8d', 'r8w', '78h', 'rsp', 'mov', 'var_36', 'var_68'}}, 11: {'_ZN9TS7Worker19PerformFunctionReadEv': {'eax', 'movzx', '1098h', 'var_1044', 'word', 'ptr', '4', 'ax', 'rsp', 'mov', 'rax'}}, 12: {'_ZN9TS7Worker19PerformFunctionReadEv': {'eax', 'movzx', '1098h', 'var_1044', 'word', 'ptr', '4', 'ax', 'rsp', 'mov', 'rax'}}}, '1': {2: {'_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}, '_ZN10TMsgSocket9SckAcceptEv': {'mov     [rsp+var_8], rbp', 'mov     rbp, [rsp+18h+var_8]'}, '_ZN16TCustomMsgServer8IncomingEi': {'mov     [rsp+var_18], rbp'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'pop     rbp', 'push    rbp'}, '_ZN10TMsgSocket9SckAcceptEv': {'mov     [rsp+var_8], rbp', 'mov     rbp, [rsp+18h+var_8]'}, '_ZN16TCustomMsgServer8IncomingEi': {'mov     [rsp+var_18], rbp'}}}}
2025-03-08 21:19:56,315 - my_text.py:383  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Updated c_taint_asm_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'cmp', 'byte', 'movzx', 'unsigned', '48h', 'dl', '189h', 'ptr', 'rbx', 'edx', '0E0h', '0F0h', 'rsp', 'mov', '__int8', 'var_40'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'r12d', '5', 'rbx', 'edx', 'mov', 'r12b'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'byte', 'cmp', 'eax', 'movzx', '0F0h', 'rbx', 'ptr', '5', '0E0h', 'al'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'byte', 'r15', 'eax', 'movzx', '18Ah', 'rbx', 'ptr', 'shr', 'al', 'mov', '7'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'cmp', 'rsp', 'var_58', '0', '68h'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'byte', 'eax', '8', 'movzx', 'ptr', 'edx', 'shl', '2', 'rsi', 'add'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', 'cmp', 'eax', 'sub', 'r13d', 'edx', 'r12', '7', 'test', 'mov', 'r15d'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'eax', 'xor', 'sub', '0FF9h', '7'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'int', 'edx', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket11WaitForDataEii': {'int', 'cmp', 'eax', 'push', 'rbp', 'xor', 'pop', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket7CanReadEi': {'rbp', 'pop', 'push'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'var_48', 'rsp', 'ebp', 'add', '68h'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'byte', 'eax', 'movzx', 'ptr', 'edx', '3', 'rsi', 'add'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', 'cmp', 'eax', 'sub', 'r13d', 'edx', 'r12', '7', 'test', 'mov', 'r15d'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'eax', 'xor', 'sub', '0FF9h', '7'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'int', 'edx', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket11WaitForDataEii': {'int', 'cmp', 'eax', 'push', 'rbp', 'xor', 'pop', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket7CanReadEi': {'rbp', 'pop', 'push'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'var_48', 'rsp', 'ebp', 'add', '68h'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'byte', '1', 'rbx', '4', 'ptr'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx', '6', 'unsigned', 'word', 'ptr', 'esi', 'r13d', '__int16', 'ax', 'rax'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'rdx', 'sbb', 'r14d', '0Ah', 'movzx', '6', 'unsigned', 'word', 'esi', 'ptr', 'ax', '__int16', '0FFFFFFFFFFFFFFFFh', 'rax', 'add', 'r14'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx', '6', 'unsigned', 'word', 'ptr', 'esi', 'r13d', '__int16', 'ax', 'rax'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'rdx', 'sbb', 'r14d', '0Ah', 'movzx', '6', 'unsigned', 'word', 'esi', 'ptr', 'ax', '__int16', '0FFFFFFFFFFFFFFFFh', 'rax', 'add', 'r14'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'eax', '8', 'movzx', 'unsigned', 'word', 'xor', 'ptr', 'ax', '__int16', 'rax', 'esi'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'eax', '8', 'movzx', 'unsigned', 'word', 'xor', 'ptr', 'ax', '__int16', 'rax', 'esi'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'byte', 'cmp', 'movzx', '1', 'dl', 'ptr', 'edx', '7', 'rax'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'cmp', 'byte', 'eax', 'movzx', '1', 'ptr', 'al', 'rax'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {'cmp', 'byte', '0Ah', 'eax', 'movzx', 'ptr', '5', '1Dh', '1Fh', 'al', 'rax'}}, 18: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'int', 'var_10FC', 'movzx', 'rbp', 'sub', 'rsp', 'var_103B', '0Bh', '0Eh', 'rdx', 'cmp', 'var_1108', 'edx', 'r11d', '1128h', 'test', 'add', 'rax', '1', 'ptr', 'r8', 'al', 'byte', 'eax', 'dword', 'r12', 'mov', 'var_1110'}, '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': {'r12', 'rsp', 'var_20', 'mov', '68h'}, '_ZN13TIsoTcpSocket13isoSendBufferEPvi': {'var_10', '28h', 'edx', 'r12', 'rsp', 'ebp', 'mov'}, '_ZN10TMsgSocket10SendPacketEPvi': {'cmp', 'rdx', 'var_10', 'rbp', 'n', '18h', 'rsp', 'mov'}, '_ZN10TMsgSocket8CanWriteEi': {'rbp', 'pop', 'push'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'78h', 'rsp', 'r12', 'mov', 'var_18'}}, 22: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'byte', 'cmp', 'movzx', '1', 'dl', 'ptr', 'edx', 'r12'}}, 33: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'cmp', 'eax', 'movzx', '1', 'unsigned', 'and', 'word', 'ptr', '3', 'shr', 'ax', '__int16', '2', 'rax', 'esi'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 34: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'cmp', 'eax', 'movzx', '1', 'unsigned', 'and', 'word', 'ptr', '3', 'shr', 'ax', '__int16', '2', 'rax', 'esi'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 27: {'_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': {'byte', 'rdx', 'r13', 'cmp', 'eax', '8', 'movzx', 'unsigned', '84h', 'xor', 'rcx', 'ptr', 'ax', '2', 'mov', '__int8', 'esi'}, '_ZN9TS7Worker7GetAreaEht': {'cmp', 'sil', '81h', '83h'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'ecx', 'movzx', 'unsigned', '__int16', 'rsp', 'var_10F6', '1128h'}, '_ZN9TS7Worker7DoEventEjttttt': {'cx', 'movzx', 'r8d'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'r8d', 'r8w', '78h', 'rsp', 'mov', 'var_36', 'var_68'}, '_Z10EvtSrvTextR9TSrvEvent': {'movzx', 'rbp', 'word', 'ptr', '12h', 'esi'}, '_ZL7TxtAreaR9TSrvEvent.isra.10': {'cmp', '81h', '83h', 'si'}}, 11: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'eax', 'movzx', 'word', 'var_1044', 'ptr', '4', 'ax', 'rsp', '1128h', 'mov', 'rax'}}, 12: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'eax', 'movzx', 'word', 'var_1044', 'ptr', '4', 'ax', 'rsp', '1128h', 'mov', 'rax'}}}, '1': {18: {'_ZN10TMsgSocket7CanReadEi': {'cmp     rax, 0FFFFFFFFFFFFFFFFh', 'test    rax, rax'}}, 2: {'_ZN10TMsgSocket7CanReadEi': {'push    rbx', 'pop     rbx'}, '_ZN10TMsgSocket9SckAcceptEv': {'mov     rbx, [rsp+18h+var_10]', 'mov     [rsp+var_10], rbx'}, '_ZN16TCustomMsgServer8IncomingEi': {'mov     [rsp+var_20], rbx'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'push    rbx', 'pop     rbx'}, '_ZN10TMsgSocket9SckAcceptEv': {'mov     rbx, [rsp+18h+var_10]', 'mov     [rsp+var_10], rbx'}, '_ZN16TCustomMsgServer8IncomingEi': {'mov     [rsp+var_20], rbx'}}, 22: {'_ZN10TMsgSocket7CanReadEi': {'sub     ecx, edx'}}}}
2025-03-08 21:19:56,316 - my_text.py:383  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Updated c_taint_asm_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'cmp', 'byte', 'movzx', 'unsigned', '48h', 'dl', '189h', 'ptr', 'rbx', 'edx', '0E0h', '0F0h', 'rsp', 'mov', '__int8', 'var_40'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'r12d', '5', 'rbx', 'edx', 'mov', 'r12b'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'byte', 'cmp', 'eax', 'movzx', '0F0h', 'rbx', 'ptr', '5', '0E0h', 'al'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'byte', 'r15', 'eax', 'movzx', '18Ah', 'rbx', 'ptr', 'shr', 'al', 'mov', '7'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'cmp', 'rsp', 'var_58', '0', '68h'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'byte', 'eax', '8', 'movzx', 'ptr', 'edx', 'shl', '2', 'rsi', 'add'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', 'cmp', 'eax', 'sub', 'r13d', 'edx', 'r12', '7', 'test', 'mov', 'r15d'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'eax', 'xor', 'sub', '0FF9h', '7'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'int', 'edx', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket11WaitForDataEii': {'int', 'push', 'rbp', 'xor', 'pop', 'ebp', 'mov', 'esi'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'var_48', 'rsp', 'ebp', 'add', '68h'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'byte', 'eax', 'movzx', 'ptr', 'edx', '3', 'rsi', 'add'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', 'cmp', 'eax', 'sub', 'r13d', 'edx', 'r12', '7', 'test', 'mov', 'r15d'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'eax', 'xor', 'sub', '0FF9h', '7'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'int', 'edx', 'ebp', 'mov', 'esi'}, '_ZN10TMsgSocket11WaitForDataEii': {'int', 'push', 'rbp', 'xor', 'pop', 'ebp', 'mov', 'esi'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'var_48', 'rsp', 'ebp', 'add', '68h'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'cmp', 'byte', '1', 'rbx', '4', 'ptr'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx', '6', 'unsigned', 'word', 'ptr', 'esi', 'r13d', '__int16', 'ax', 'rax'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'movzx', '6', 'unsigned', 'word', 'ptr', 'esi', 'r13d', '__int16', 'ax', 'rax'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'eax', '8', 'movzx', 'unsigned', 'word', 'xor', 'ptr', 'ax', '__int16', 'rax', 'esi'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'eax', '8', 'movzx', 'unsigned', 'word', 'xor', 'ptr', 'ax', '__int16', 'rax', 'esi'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'byte', 'cmp', 'movzx', '1', 'dl', 'ptr', 'edx', '7', 'rax'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'cmp', 'byte', 'eax', 'movzx', '1', 'ptr', 'al', '7', 'rax'}}, 22: {'_ZN9TS7Worker17PerformPDUUsrDataERi': {'byte', 'ecx', 'movzx', 'unsigned', 'ptr', '__int16', '0Fh', 'rax'}}, 23: {'_ZN9TS7Worker17PerformPDUUsrDataERi': {'byte', 'movzx', 'ptr', 'esi', '10h', 'rax'}, '_ZN9TS7Worker15PerformGroupSZLEv': {'byte', 'cmp', 'rdx', 'eax', 'movzx', '6', '1', '2', 'dl', 'ptr', 'edx', 'al', 'mov', 'rax'}}, 11: {'_ZN9TS7Worker15PerformGroupSZLEv': {'11B4h', 'eax', 'rdi', 'movzx', 'word', 'ptr', '4', 'ax', 'mov', 'rax'}}, 12: {'_ZN9TS7Worker15PerformGroupSZLEv': {'11B4h', 'eax', 'rdi', 'movzx', 'word', 'ptr', '4', 'ax', 'mov', 'rax'}}, 17: {'_ZN9TS7Worker15PerformGroupSZLEv': {'byte', 'rdx', 'movzx', 'dl', 'ptr', 'edx', 'mov', 'rax'}}, 18: {'_ZN9TS7Worker15PerformGroupSZLEv': {'byte', 'rdx', 'movzx', '1', 'dl', 'ptr', 'edx', 'mov', 'rax'}}, 19: {'_ZN9TS7Worker15PerformGroupSZLEv': {'byte', 'rdx', 'movzx', 'dl', 'ptr', 'edx', '2', 'mov', 'rax'}}, 24: {'_ZN9TS7Worker15PerformGroupSZLEv': {'byte', 'rdx', 'movzx', 'dl', 'ptr', 'edx', '7', 'mov', 'rax'}}, 29: {'_ZN9TS7Worker15PerformGroupSZLEv': {'movzx', 'ecx', 'unsigned', 'rbx', '292h', '0F14h', 'esi', '194h', 'cmp', '21D0h', 'edx', '__int16', 'rax', 'ptr', '16h', 'eax', '424h', 'word', 'ax', '694h', 'mov'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}, '_ZN9TS7Worker7DoEventEjttttt': {'cx', 'movzx', 'r8d'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'r8d', 'r8w', '78h', 'rsp', 'mov', 'var_36', 'var_68'}, '_Z10EvtSrvTextR9TSrvEvent': {'int', 'movzx', 'rbp', 'word', 'ptr', '12h', 'esi'}, '_Z11NumToStringiij': {'r10d', 'sar', 'eax', 'imul', 'sub', 'edx', '23h', '1Fh', 'test', 'mov', 'add', 'esi'}}, 30: {'_ZN9TS7Worker15PerformGroupSZLEv': {'movzx', 'ecx', 'unsigned', 'rbx', '292h', '0F14h', 'esi', '194h', 'cmp', '21D0h', 'edx', '__int16', 'rax', 'ptr', '16h', 'eax', '424h', 'word', 'ax', '694h', 'mov'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}, '_ZN9TS7Worker7DoEventEjttttt': {'cx', 'movzx', 'r8d'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'r8d', 'r8w', '78h', 'rsp', 'mov', 'var_36', 'var_68'}, '_Z10EvtSrvTextR9TSrvEvent': {'int', 'movzx', 'rbp', 'word', 'ptr', '12h', 'esi'}, '_Z11NumToStringiij': {'r10d', 'sar', 'eax', 'imul', 'sub', 'edx', '23h', '1Fh', 'test', 'mov', 'add', 'esi'}}, 31: {'_ZN9TS7Worker15PerformGroupSZLEv': {'movzx', 'r8d', 'unsigned', '6', 'word', 'ptr', 'rbx', 'edx', '__int16', 'ax', 'mov', 'rax', 'esi', '21D4h'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}, '_ZN9TS7Worker7DoEventEjttttt': {'r9d', 'movzx', 'r8w'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'var_70', 'var_34', '78h', 'r9w', 'r9d', 'rsp', 'mov'}, '_Z10EvtSrvTextR9TSrvEvent': {'int', 'movzx', 'rbp', 'word', 'ptr', '14h', 'esi'}, '_Z11NumToStringiij': {'r10d', 'sar', 'eax', 'imul', 'sub', 'edx', '23h', '1Fh', 'test', 'mov', 'add', 'esi'}}, 32: {'_ZN9TS7Worker15PerformGroupSZLEv': {'movzx', 'r8d', 'unsigned', '6', 'word', 'ptr', 'rbx', 'edx', '__int16', 'ax', 'mov', 'rax', 'esi', '21D4h'}, '_ZN9TSnapBase8SwapWordEt': {'eax', '8', 'ax', 'rol', 'mov', 'esi'}, '_ZN9TS7Worker7DoEventEjttttt': {'r9d', 'movzx', 'r8w'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'var_70', 'var_34', '78h', 'r9w', 'r9d', 'rsp', 'mov'}, '_Z10EvtSrvTextR9TSrvEvent': {'int', 'movzx', 'rbp', 'word', 'ptr', '14h', 'esi'}, '_Z11NumToStringiij': {'r10d', 'sar', 'eax', 'imul', 'sub', 'edx', '23h', '1Fh', 'test', 'mov', 'add', 'esi'}}}}
2025-03-08 21:19:56,316 - my_text.py:394  - bss:0000000000239490 completed.6718 (Unknown)
2025-03-08 21:19:56,316 - my_text.py:394  - bss:00000000002394A0 _ZL8PingKind (Unknown)
2025-03-08 21:19:56,316 - my_text.py:394  - bss:00000000002394A4 _ZL23SocketsLayerInitializer (SocketsLayer)
2025-03-08 21:19:56,316 - my_text.py:394  - bss:00000000002394B0 _ZL14ServersManager (TServersManager *)
2025-03-08 21:19:56,318 - my_text.py:432  - {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'  if ( v10 != 0xF0 )', '  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )', '  v10 = *((_BYTE *)this + 393);', '  if ( v10 == 0xE0 )', '  v15 = v10;'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'    || *((_BYTE *)a2 + 5) != a3 )', '  TIsoTcpSocket::ClrIsoError(this);'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'    else if ( (_BYTE)result == 0xF0 )', '    if ( (_BYTE)result == 0xE0 )', '    result = a2[5];'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'  *a5 = *((_BYTE *)this + 394) >> 7;'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'        goto LABEL_8;'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'  return a2[3] + (a2[2] << 8);'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'    return *((unsigned int *)this + 1126);', '  TMsgSocket::RecvPacket(this, buf, v14);', '  *a4 = v14;', '  v14 = v13 - 7;', '  v13 = TIsoTcpSocket::PDUSize(this, v5);'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'  return 0LL;', '  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));'}, '_ZN10TMsgSocket11WaitForDataEii': {'  return result;', '  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )', '    v4 = (int)TMsgSocket::WaitingData(this) < a2;'}, '_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'  v5 = 0;'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'  return a2[3] + (a2[2] << 8);'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'    return *((unsigned int *)this + 1126);', '  TMsgSocket::RecvPacket(this, buf, v14);', '  *a4 = v14;', '  v14 = v13 - 7;', '  v13 = TIsoTcpSocket::PDUSize(this, v5);'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'  return 0LL;', '  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));'}, '_ZN10TMsgSocket11WaitForDataEii': {'  return result;', '  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )', '    v4 = (int)TMsgSocket::WaitingData(this) < a2;'}, '_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'  v5 = 0;'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'    || *((_BYTE *)a2 + 4) <= 1u'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v3 = v2', '     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))', '  result = 0LL;'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v3 = v2', '     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))', '  result = 0LL;'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'  if ( v4 == 1 )', '  v4 = *(_BYTE *)(*((_QWORD *)this + 564) + 1LL);'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {'  v2 = *(_BYTE *)(*((_QWORD *)this + 564) + 10LL);', '  if ( v2 > 0x1Fu )', '    if ( v2 != 0xF0 )', '    if ( v2 < 0x28u )', '    if ( v2 <= 0x29u )'}}, 11: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'  v3 = v2[2];', '  v11 = v3;'}}, 12: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'  v3 = v2[2];', '  v11 = v3;'}}, 19: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'  v17 = v4;', '  v4 = v2[6];'}}, 20: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'  v17 = v4;', '  v4 = v2[6];'}}, 21: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'  v18 = v2[7];'}}, 22: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'  v18 = v2[7];'}}, 23: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'    if ( v6 <= 0xEFu )', '        v7 = v2[8];', '      v19 = v7;', '  *((_DWORD *)this + 2170) = (unsigned __int16)TSnapBase::SwapWord(v1, v7);', '  TS7Worker::DoEvent(this, 0x80000u, 0, *((_WORD *)this + 4340), 0, 0, 0);', '    v6 = TSnapBase::SwapWord(v1, v2[8]);', '  TIsoTcpSocket::isoSendBuffer(this, src, 20);', '      if ( v6 > 0x1000u )'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}, '_ZN9TS7Worker7DoEventEjttttt': {'           a4,'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'      v23 = a5;', '      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));', '      v25 = a7;'}, '_Z10EvtSrvTextR9TSrvEvent': {'          IntToString((int)v88);'}, '_Z11NumToStringiij': {'      *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];', '    if ( a2 < 0 )', '      a2 /= a3;', '        break;'}}, 24: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'    if ( v6 <= 0xEFu )', '        v7 = v2[8];', '      v19 = v7;', '  *((_DWORD *)this + 2170) = (unsigned __int16)TSnapBase::SwapWord(v1, v7);', '  TS7Worker::DoEvent(this, 0x80000u, 0, *((_WORD *)this + 4340), 0, 0, 0);', '    v6 = TSnapBase::SwapWord(v1, v2[8]);', '  TIsoTcpSocket::isoSendBuffer(this, src, 20);', '      if ( v6 > 0x1000u )'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}, '_ZN9TS7Worker7DoEventEjttttt': {'           a4,'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'      v23 = a5;', '      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));', '      v25 = a7;'}, '_Z10EvtSrvTextR9TSrvEvent': {'          IntToString((int)v88);'}, '_Z11NumToStringiij': {'      *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];', '    if ( a2 < 0 )', '      a2 /= a3;', '        break;'}}}, '1': {2: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}}}}
2025-03-08 21:19:56,319 - my_text.py:443  - 0:0300001902f08032010000000000080000f0000001000101e0 Updated c_taint_c_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', '0xF0', 'unsigned', 'TIsoTcpSocket', 'v10', 'if', 'v5', '393', 'v15', 'CheckPDU', '_BYTE', 'this', '0xE0'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'_BYTE', 'ClrIsoError', 'TIsoTcpSocket', '5', 'a3', 'this', 'a2'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'result', '0xF0', 'if', '5', 'else', '_BYTE', '0xE0', 'a2'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'_BYTE', '394', 'a5', '7', 'this'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'goto', 'LABEL_8'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'return', '8', '3', '2', 'a2'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'return', 'int', 'v13', 'PDUSize', 'unsigned', 'a4', 'TIsoTcpSocket', 'v5', 'buf', 'TMsgSocket', 'RecvPacket', '7', '1126', 'this', 'v14'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'return', 'int', 'PDUSize', 'unsigned', 'TIsoTcpSocket', 'if', '0LL', '7', '0xFF9', 'this', 'a2'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'_DWORD', '28', 'TMsgSocket', 'a3', 'WaitForData', 'this'}, '_ZN10TMsgSocket11WaitForDataEii': {'return', 'int', 'WaitingData', 'result', 'unsigned', 'if', 'v4', 'this', 'TMsgSocket', '__int8', '0', 'a2', 'CanRead'}, '_ZN10TMsgSocket7CanReadEi': {'return', '1', '6', 'if', '_DWORD', 'this', '0'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'v5', '0'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'return', '8', '3', '2', 'a2'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'return', 'int', 'v13', 'PDUSize', 'unsigned', 'a4', 'TIsoTcpSocket', 'v5', 'buf', 'TMsgSocket', 'RecvPacket', '7', '1126', 'this', 'v14'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'return', 'int', 'PDUSize', 'unsigned', 'TIsoTcpSocket', 'if', '0LL', '7', '0xFF9', 'this', 'a2'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'_DWORD', '28', 'TMsgSocket', 'a3', 'WaitForData', 'this'}, '_ZN10TMsgSocket11WaitForDataEii': {'return', 'int', 'WaitingData', 'result', 'unsigned', 'if', 'v4', 'this', 'TMsgSocket', '__int8', '0', 'a2', 'CanRead'}, '_ZN10TMsgSocket7CanReadEi': {'return', '1', '6', 'if', '_DWORD', 'this', '0'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'v5', '0'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'1u', '4', 'a2', '_BYTE'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '6LL', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', 'SwapWord', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '6LL', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', 'SwapWord', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '8LL', 'result', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', '0LL', 'SwapWord', 'v3', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '8LL', 'result', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', '0LL', 'SwapWord', 'v3', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'return', '_QWORD', '1', '1LL', 'this', '_BYTE', '564', '7'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'_QWORD', '1', '1LL', '564', 'v4', 'if', '_BYTE', 'this'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {'_QWORD', '0xF0', 'if', '10LL', 'v2', '0x28u', 'this', '_BYTE', '0x29u', '564', '0x1Fu'}}, 11: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'v3', '2', 'v11', 'v2'}}, 12: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'v3', '2', 'v11', 'v2'}}, 19: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'6', 'v4', 'v2', 'v17'}}, 20: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'6', 'v4', 'v2', 'v17'}}, 21: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'v18', '7', 'v2'}}, 22: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'v18', '7', 'v2'}}, 23: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'_WORD', 'unsigned', 'if', '0x80000u', 'DoEvent', 'TSnapBase', '__int16', '20', '8', 'src', 'TIsoTcpSocket', 'v2', '0xEFu', '4340', 'v6', 'this', '0x1000u', 'v7', 'v19', '2170', '_DWORD', 'isoSendBuffer', 'SwapWord', 'TS7Worker', '0', 'v1'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}, '_ZN9TS7Worker7DoEventEjttttt': {'a4'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'pthread_mutex_t', 'v23', '11', 'a5', 'pthread_mutex_lock', 'a7', 'this', 'v25'}, '_Z10EvtSrvTextR9TSrvEvent': {'int', 'IntToString', 'v88'}, '_Z11NumToStringiij': {'break', '35', 'aZyxwvutsrqponm', 'if', 'v5', 'a3', '0', 'a2'}}, 24: {'_ZN9TS7Worker24PerformFunctionNegotiateEv': {'_WORD', 'unsigned', 'if', '0x80000u', 'DoEvent', 'TSnapBase', '__int16', '20', '8', 'src', 'TIsoTcpSocket', 'v2', '0xEFu', '4340', 'v6', 'this', '0x1000u', 'v7', 'v19', '2170', '_DWORD', 'isoSendBuffer', 'SwapWord', 'TS7Worker', '0', 'v1'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}, '_ZN9TS7Worker7DoEventEjttttt': {'a4'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'pthread_mutex_t', 'v23', '11', 'a5', 'pthread_mutex_lock', 'a7', 'this', 'v25'}, '_Z10EvtSrvTextR9TSrvEvent': {'int', 'IntToString', 'v88'}, '_Z11NumToStringiij': {'break', '35', 'aZyxwvutsrqponm', 'if', 'v5', 'a3', '0', 'a2'}}}, '1': {2: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}}}}
2025-03-08 21:19:56,321 - my_text.py:460  - 0:0300001902f08032010000000000080000f0000001000101e0 var_flow: {'2': {5: {'_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a3', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v15', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:var_40', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v10', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a5', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_58'}, 2: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 3: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 13: {'_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 14: {'_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 15: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 16: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 8: {'_ZN9TS7Worker17IsoPerformCommandERi:v4'}, 17: {'_ZN9TS7Worker17PerformPDURequestERi:v2'}, 11: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1024', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v3', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v11', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 12: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1024', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v3', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v11', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 19: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:v4', '_ZN9TS7Worker24PerformFunctionNegotiateEv:var_101A', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v17', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 20: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:v4', '_ZN9TS7Worker24PerformFunctionNegotiateEv:var_101A', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v17', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 21: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1018', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v18', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 22: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1018', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v18', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 23: {'_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_ZN9TS7Worker24PerformFunctionNegotiateEv:src', '_ZN9TS7Worker7DoEventEjttttt:a4', '_Z11NumToStringiij:a3', '_Z11NumToStringiij:a2', '_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1016', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v7', '_Z10EvtSrvTextR9TSrvEvent:v88', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v1', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v19', '_ZN16TCustomMsgServer7DoEventEijttttt:var_36', '_ZN16TCustomMsgServer7DoEventEijttttt:var_68', '_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_ZN16TCustomMsgServer7DoEventEijttttt:a5', '_Z11NumToStringiij:v5', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN16TCustomMsgServer7DoEventEijttttt:v23', 'global:aZyxwvutsrqponm', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v6', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 24: {'_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_ZN9TS7Worker24PerformFunctionNegotiateEv:src', '_ZN9TS7Worker7DoEventEjttttt:a4', '_Z11NumToStringiij:a3', '_Z11NumToStringiij:a2', '_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1016', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v7', '_Z10EvtSrvTextR9TSrvEvent:v88', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v1', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v19', '_ZN16TCustomMsgServer7DoEventEijttttt:var_36', '_ZN16TCustomMsgServer7DoEventEijttttt:var_68', '_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_ZN16TCustomMsgServer7DoEventEijttttt:a5', '_Z11NumToStringiij:v5', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN16TCustomMsgServer7DoEventEijttttt:v23', 'global:aZyxwvutsrqponm', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v6', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}}, '1': {5: {'_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a3', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v15', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:var_40', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v10', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a5', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_58'}, 2: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 3: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 13: {'_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 14: {'_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 15: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 16: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 8: {'_ZN9TS7Worker17IsoPerformCommandERi:v4'}, 17: {'_ZN9TS7Worker17PerformPDURequestERi:v2'}, 11: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1024', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v3', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v11', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 12: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1024', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v3', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v11', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 19: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:v4', '_ZN9TS7Worker24PerformFunctionNegotiateEv:var_101A', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v17', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 20: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:v4', '_ZN9TS7Worker24PerformFunctionNegotiateEv:var_101A', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v17', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 21: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1018', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v18', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 22: {'_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1018', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v18', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 23: {'_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_ZN9TS7Worker24PerformFunctionNegotiateEv:src', '_ZN9TS7Worker7DoEventEjttttt:a4', '_Z11NumToStringiij:a3', '_Z11NumToStringiij:a2', '_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1016', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v7', '_Z10EvtSrvTextR9TSrvEvent:v88', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v1', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v19', '_ZN16TCustomMsgServer7DoEventEijttttt:var_36', '_ZN16TCustomMsgServer7DoEventEijttttt:var_68', '_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_ZN16TCustomMsgServer7DoEventEijttttt:a5', '_Z11NumToStringiij:v5', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN16TCustomMsgServer7DoEventEijttttt:v23', 'global:aZyxwvutsrqponm', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v6', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}, 24: {'_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_ZN9TS7Worker24PerformFunctionNegotiateEv:src', '_ZN9TS7Worker7DoEventEjttttt:a4', '_Z11NumToStringiij:a3', '_Z11NumToStringiij:a2', '_ZN9TS7Worker24PerformFunctionNegotiateEv:var_1016', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v7', '_Z10EvtSrvTextR9TSrvEvent:v88', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v1', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v19', '_ZN16TCustomMsgServer7DoEventEijttttt:var_36', '_ZN16TCustomMsgServer7DoEventEijttttt:var_68', '_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_ZN16TCustomMsgServer7DoEventEijttttt:a5', '_Z11NumToStringiij:v5', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN16TCustomMsgServer7DoEventEijttttt:v23', 'global:aZyxwvutsrqponm', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v6', '_ZN9TS7Worker24PerformFunctionNegotiateEv:v2'}}}
2025-03-08 21:19:56,322 - my_text.py:478  - Key pair (2, 3): Similarity = 1.0
2025-03-08 21:19:56,322 - my_text.py:478  - Key pair (13, 14): Similarity = 1.0
2025-03-08 21:19:56,322 - my_text.py:478  - Key pair (15, 16): Similarity = 1.0
2025-03-08 21:19:56,322 - my_text.py:478  - Key pair (11, 12): Similarity = 1.0
2025-03-08 21:19:56,323 - my_text.py:478  - Key pair (19, 20): Similarity = 1.0
2025-03-08 21:19:56,323 - my_text.py:478  - Key pair (21, 22): Similarity = 1.0
2025-03-08 21:19:56,323 - my_text.py:478  - Key pair (23, 24): Similarity = 1.0
2025-03-08 21:19:56,323 - my_text.py:482  - 0:0300001902f08032010000000000080000f0000001000101e0 Similarity matrix: {(5, 6): 0.0, (6, 2): 0.0, (2, 3): 1.0, (3, 4): 0.09090909090909091, (4, 13): 0.0, (13, 14): 1.0, (14, 15): 0.6666666666666666, (15, 16): 1.0, (16, 8): 0.0, (8, 17): 0.0, (17, 11): 0.0, (11, 12): 1.0, (12, 19): 0.14285714285714285, (19, 20): 1.0, (20, 21): 0.16666666666666666, (21, 22): 1.0, (22, 23): 0.045454545454545456, (23, 24): 1.0}
2025-03-08 21:19:56,323 - my_text.py:519  - 0:0300001902f08032010000000000080000f0000001000101e0 Merged queue: [(2, 3), (4,), (5,), (6,), (8,), (11, 12), (13, 14), (15, 16), (17,), (19, 20), (21, 22), (23, 24)]
2025-03-08 21:19:56,323 - my_text.py:525  - 0:0300001902f08032010000000000080000f0000001000101e0 used_fields: ['2,3', '4', '5', '6', '8', '11,12', '13,14', '15,16', '17', '19,20', '21,22', '23,24']
2025-03-08 21:19:56,323 - my_text.py:541  - 0:0300001902f08032010000000000080000f0000001000101e0 data_new: {(2, 3): {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['v5', 'a4', 'v14', 'v13'], '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': ['v5', 'var_48'], '_ZN10TMsgSocket11WaitForDataEii': ['a2', 'v4'], '_ZN13TIsoTcpSocket7PDUSizeEPv': ['a2'], '_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a2'], '_ZN10TMsgSocket10RecvPacketEPvi': ['a3']}, (4,): {'_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a2']}, (5,): {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['v10', 'v5', 'v15', 'var_40'], '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': ['a2'], '_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a3', 'a2']}, (6,): {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['a5'], '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': ['var_58']}, (8,): {'_ZN9TS7Worker17IsoPerformCommandERi': ['v4']}, (11, 12): {'_ZN9TS7Worker24PerformFunctionNegotiateEv': ['var_1024', 'v3', 'v11', 'v2']}, (13, 14): {'_ZN9TSnapBase8SwapWordEt': ['a2'], '_ZN9TS7Worker11CheckPDU_inEi': ['v2']}, (15, 16): {'_ZN9TS7Worker11CheckPDU_inEi': ['v3', 'v2'], '_ZN9TSnapBase8SwapWordEt': ['a2']}, (17,): {'_ZN9TS7Worker17PerformPDURequestERi': ['v2']}, (19, 20): {'_ZN9TS7Worker24PerformFunctionNegotiateEv': ['var_101A', 'v4', 'v17', 'v2']}, (21, 22): {'_ZN9TS7Worker24PerformFunctionNegotiateEv': ['var_1018', 'v18', 'v2']}, (23, 24): {'_ZN16TCustomMsgServer7DoEventEijttttt': ['a7', 'var_36', 'var_68', 'v25', 'a5', 'v23'], '_ZN9TS7Worker24PerformFunctionNegotiateEv': ['src', 'var_1016', 'v7', 'v1', 'v19', 'v6', 'v2'], '_ZN9TS7Worker7DoEventEjttttt': ['a4'], '_Z11NumToStringiij': ['a3', 'a2', 'v5'], '_Z10EvtSrvTextR9TSrvEvent': ['v88'], '_ZN9TSnapBase8SwapWordEt': ['a2'], 'global': ['aZyxwvutsrqponm']}}
2025-03-08 21:19:56,324 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (2, 3)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvPDU(TIsoTcpSocket *this, char *a2)\n{\n  int v2; // r14d\n  char *v3; // r15\n  int v4; // ebp\n  unsigned int v5; // ebx\n  int v7; // ebp\n  unsigned int v8; // eax\n  bool v9; // [rsp+10h] [rbp-58h] BYREF\n  int v10[18]; // [rsp+20h] [rbp-48h] BYREF\n\n  v2 = 1;\n  v3 = (char *)this + 395;\n  v4 = 0;\n  v9 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  while ( 1 )\n  {\n    do\n    {\n      v3 += v4;\n      if ( 4096 - v4 <= 0 )\n        break;\n      v5 = TIsoTcpSocket::isoRecvFragment(this, v3, 4096 - v4, v10, &v9);\n      if ( v5 )\n        goto LABEL_4;\n      if ( v9 )\n        goto LABEL_8;\n      ++v2;\n      v4 += v10[0];\n    }\n    while ( v2 <= *((_DWORD *)this + 96) );\n    v8 = TIsoTcpSocket::SetIsoError(this, 458752);\n    v5 = v8;\n    if ( v9 )\n      break;\n    if ( v8 )\n      goto LABEL_4;\n  }\n  if ( v8 )\n  {\nLABEL_4:\n    if ( *((_DWORD *)this + 30) != 104 )\n      TMsgSocket::Purge(this);\n    return v5;\n  }\nLABEL_8:\n  v5 = 0;\n  v7 = v10[0] + v4 + 7;\n  *((_BYTE *)this + 391) = v7;\n  *((_BYTE *)this + 390) = BYTE1(v7);\n  if ( (char *)this + 388 != a2 )\n    memcpy(a2, (char *)this + 388, v7);\n  return v5;\n}\n\n                        \n                        Function Name: _ZN10TMsgSocket11WaitForDataEii\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TMsgSocket::WaitForData(TMsgSocket *this, int a2, unsigned int a3)\n{\n  bool v4; // cc\n  __int64 result; // rax\n  unsigned int v6[10]; // [rsp+0h] [rbp-28h] BYREF\n\n  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )\n  {\n    *((_DWORD *)this + 30) = 104;\n    result = 104LL;\nLABEL_12:\n    *((_BYTE *)this + 124) = 0;\n    return result;\n  }\n  *((_DWORD *)this + 30) = 0;\n  v6[0] = SysGetTick();\n  while ( 1 )\n  {\n    v4 = (int)TMsgSocket::WaitingData(this) < a2;\n    result = *((unsigned int *)this + 30);\n    if ( !v4 || (_DWORD)result )\n      break;\n    if ( (unsigned int)DeltaTime(v6) < a3 )\n      SysSleep(1u);\n    else\n      *((_DWORD *)this + 30) = 110;\n  }\n  if ( (_DWORD)result == 104 )\n    goto LABEL_12;\n  return result;\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket7PDUSizeEPv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::PDUSize(TIsoTcpSocket *this, unsigned __int8 *a2)\n{\n  return a2[3] + (a2[2] << 8);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                        \n                        Function Name: _ZN10TMsgSocket10RecvPacketEPvi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TMsgSocket::RecvPacket(TMsgSocket *this, void *buf, int a3)\n{\n  __int64 result; // rax\n  int v5; // eax\n\n  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));\n  result = *((unsigned int *)this + 30);\n  if ( (_DWORD)result )\n  {\n    if ( (_DWORD)result != 110 )\n      goto LABEL_6;\n    TMsgSocket::Purge(this);\n    goto LABEL_9;\n  }\n  v5 = recv(*((_DWORD *)this + 6), buf, a3, 0x4000);\n  if ( !v5 )\n  {\n    *((_DWORD *)this + 30) = 104;\nLABEL_4:\n    *((_BYTE *)this + 124) = 0;\n    return 104LL;\n  }\n  if ( v5 >= 0 )\n  {\nLABEL_9:\n    result = *((unsigned int *)this + 30);\n    goto LABEL_6;\n  }\n  result = TMsgSocket::GetLastSocketError(this);\n  *((_DWORD *)this + 30) = result;\nLABEL_6:\n  if ( (_DWORD)result == 104 )\n    goto LABEL_4;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (2, 3) appear to "contaminate" the global variables  and local variables v5, a4, v14, v13, v5, var_48, a2, v4, a2, a2, a3. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (2, 3) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:19:57,434 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
unsigned int, length
```
2025-03-08 21:19:59,434 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (4,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (4,) appear to "contaminate" the global variables  and local variables a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (4,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:00,165 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
int, length
```
2025-03-08 21:20:02,166 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (5,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::IsoPeek(TIsoTcpSocket *a1, unsigned __int8 *a2, _DWORD *a3)\n{\n  __int64 result; // rax\n\n  result = TIsoTcpSocket::PDUSize(a1, a2);\n  if ( (_DWORD)result == 7 )\n  {\n    *a3 = 2;\n  }\n  else if ( (unsigned int)result <= 6 )\n  {\n    *a3 = 3;\n  }\n  else\n  {\n    result = a2[5];\n    if ( (_BYTE)result == 0xE0 )\n    {\n      *a3 = 0;\n    }\n    else if ( (_BYTE)result == 0xF0 )\n    {\n      *a3 = 5;\n    }\n    else\n    {\n      result = 3 * (unsigned int)((_BYTE)result != 0x80) + 1;\n      *a3 = result;\n    }\n  }\n  return result;\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (5,) appear to "contaminate" the global variables  and local variables v10, v5, v15, var_40, a2, a3, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (5,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:03,292 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
int, length
```
2025-03-08 21:20:05,293 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (6,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvPDU(TIsoTcpSocket *this, char *a2)\n{\n  int v2; // r14d\n  char *v3; // r15\n  int v4; // ebp\n  unsigned int v5; // ebx\n  int v7; // ebp\n  unsigned int v8; // eax\n  bool v9; // [rsp+10h] [rbp-58h] BYREF\n  int v10[18]; // [rsp+20h] [rbp-48h] BYREF\n\n  v2 = 1;\n  v3 = (char *)this + 395;\n  v4 = 0;\n  v9 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  while ( 1 )\n  {\n    do\n    {\n      v3 += v4;\n      if ( 4096 - v4 <= 0 )\n        break;\n      v5 = TIsoTcpSocket::isoRecvFragment(this, v3, 4096 - v4, v10, &v9);\n      if ( v5 )\n        goto LABEL_4;\n      if ( v9 )\n        goto LABEL_8;\n      ++v2;\n      v4 += v10[0];\n    }\n    while ( v2 <= *((_DWORD *)this + 96) );\n    v8 = TIsoTcpSocket::SetIsoError(this, 458752);\n    v5 = v8;\n    if ( v9 )\n      break;\n    if ( v8 )\n      goto LABEL_4;\n  }\n  if ( v8 )\n  {\nLABEL_4:\n    if ( *((_DWORD *)this + 30) != 104 )\n      TMsgSocket::Purge(this);\n    return v5;\n  }\nLABEL_8:\n  v5 = 0;\n  v7 = v10[0] + v4 + 7;\n  *((_BYTE *)this + 391) = v7;\n  *((_BYTE *)this + 390) = BYTE1(v7);\n  if ( (char *)this + 388 != a2 )\n    memcpy(a2, (char *)this + 388, v7);\n  return v5;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (6,) appear to "contaminate" the global variables  and local variables a5, var_58. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (6,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:06,096 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
int, length
```
2025-03-08 21:20:08,097 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (8,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker17IsoPerformCommandERi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::IsoPerformCommand(TS7Worker *this, int *a2)\n{\n  int v3; // esi\n  char v4; // al\n\n  v3 = *a2;\n  if ( !v3 )\n    return TS7Worker::PerformPDUAck(this, a2);\n  if ( !(unsigned __int8)TS7Worker::CheckPDU_in(this, v3) )\n  {\n    TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 2u, *(_WORD *)a2, 0, 0, 0);\n    return 0LL;\n  }\n  v4 = *(_BYTE *)(*((_QWORD *)this + 564) + 1LL);\n  if ( v4 == 1 )\n    return TS7Worker::PerformPDURequest(this, a2);\n  if ( v4 != 7 )\n    return 0LL;\n  return TS7Worker::PerformPDUUsrData(this, a2);\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (8,) appear to "contaminate" the global variables  and local variables v4. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (8,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:08,980 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
int, length
```
2025-03-08 21:20:10,981 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (11, 12)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker24PerformFunctionNegotiateEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionNegotiate(TS7Worker *this)\n{\n  TSnapBase *v1; // r12\n  _WORD *v2; // rbp\n  __int16 v3; // ax\n  __int16 v4; // ax\n  unsigned __int16 v5; // si\n  unsigned __int16 v6; // ax\n  unsigned __int16 v7; // ax\n  char src[2]; // [rsp+10h] [rbp-1028h] BYREF\n  __int16 v10; // [rsp+12h] [rbp-1026h]\n  __int16 v11; // [rsp+14h] [rbp-1024h]\n  __int16 v12; // [rsp+16h] [rbp-1022h]\n  __int16 v13; // [rsp+18h] [rbp-1020h]\n  __int16 v14; // [rsp+1Ah] [rbp-101Eh]\n  char v15; // [rsp+1Ch] [rbp-101Ch]\n  char v16; // [rsp+1Dh] [rbp-101Bh]\n  __int16 v17; // [rsp+1Eh] [rbp-101Ah]\n  __int16 v18; // [rsp+20h] [rbp-1018h]\n  unsigned __int16 v19; // [rsp+22h] [rbp-1016h]\n  unsigned __int64 v20; // [rsp+1018h] [rbp-20h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (_WORD *)*((_QWORD *)this + 564);\n  v20 = __readfsqword(0x28u);\n  src[0] = 50;\n  src[1] = 3;\n  v3 = v2[2];\n  v10 = 0;\n  v11 = v3;\n  v15 = -16;\n  v12 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 8u);\n  v16 = 0;\n  v4 = v2[6];\n  v13 = 0;\n  v14 = 0;\n  v17 = v4;\n  v18 = v2[7];\n  v5 = *(_WORD *)(*((_QWORD *)this + 1084) + 24794LL);\n  if ( v5 )\n  {\n    v7 = TSnapBase::SwapWord(v1, v5);\n    v19 = v7;\n  }\n  else\n  {\n    v6 = TSnapBase::SwapWord(v1, v2[8]);\n    if ( v6 <= 0xEFu )\n    {\n      v7 = TSnapBase::SwapWord(v1, 0xF0u);\n      v19 = v7;\n    }\n    else\n    {\n      if ( v6 > 0x1000u )\n        v7 = TSnapBase::SwapWord(v1, 0x1000u);\n      else\n        v7 = v2[8];\n      v19 = v7;\n    }\n  }\n  *((_DWORD *)this + 2170) = (unsigned __int16)TSnapBase::SwapWord(v1, v7);\n  TIsoTcpSocket::isoSendBuffer(this, src, 20);\n  TS7Worker::DoEvent(this, 0x80000u, 0, *((_WORD *)this + 4340), 0, 0, 0);\n  return 1LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (11, 12) appear to "contaminate" the global variables  and local variables var_1024, v3, v11, v2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (11, 12) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:11,810 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
unsigned short, length
```
2025-03-08 21:20:13,812 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (13, 14)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker11CheckPDU_inEi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        _BOOL8 __fastcall TS7Worker::CheckPDU_in(TS7Worker *this, int a2)\n{\n  int v2; // r13d\n  int v3; // edx\n  _BOOL8 result; // rax\n\n  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));\n  v3 = v2\n     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))\n     + 10;\n  result = 0LL;\n  if ( v3 == a2 )\n    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (13, 14) appear to "contaminate" the global variables  and local variables a2, v2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (13, 14) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:14,743 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
int, length
```
2025-03-08 21:20:16,744 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (15, 16)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker11CheckPDU_inEi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        _BOOL8 __fastcall TS7Worker::CheckPDU_in(TS7Worker *this, int a2)\n{\n  int v2; // r13d\n  int v3; // edx\n  _BOOL8 result; // rax\n\n  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));\n  v3 = v2\n     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))\n     + 10;\n  result = 0LL;\n  if ( v3 == a2 )\n    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (15, 16) appear to "contaminate" the global variables  and local variables v3, v2, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (15, 16) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:17,554 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
int, length
```
2025-03-08 21:20:19,555 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (17,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker17PerformPDURequestERi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformPDURequest(TS7Worker *this, int *a2)\n{\n  unsigned __int8 v2; // al\n\n  v2 = *(_BYTE *)(*((_QWORD *)this + 564) + 10LL);\n  if ( v2 > 0x1Fu )\n  {\n    if ( v2 < 0x28u )\n      goto LABEL_5;\n    if ( v2 <= 0x29u )\n      return TS7Worker::PerformFunctionControl(this, v2);\n    if ( v2 != 0xF0 )\n      goto LABEL_5;\n    return TS7Worker::PerformFunctionNegotiate(this);\n  }\n  else\n  {\n    if ( v2 >= 0x1Du )\n      return TS7Worker::PerformFunctionUpload(this);\n    switch ( v2 )\n    {\n      case 5u:\n        return TS7Worker::PerformFunctionWrite(this);\n      case 0x1Au:\n        return TS7Worker::PerformFunctionDownload(this);\n      case 4u:\n        return TS7Worker::PerformFunctionRead(this);\n      default:\nLABEL_5:\n        TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 4u, *(_WORD *)a2, 0, 0, 0);\n        return 1LL;\n    }\n  }\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (17,) appear to "contaminate" the global variables  and local variables v2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (17,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:20,335 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
int, length
```
2025-03-08 21:20:22,336 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (19, 20)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker24PerformFunctionNegotiateEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionNegotiate(TS7Worker *this)\n{\n  TSnapBase *v1; // r12\n  _WORD *v2; // rbp\n  __int16 v3; // ax\n  __int16 v4; // ax\n  unsigned __int16 v5; // si\n  unsigned __int16 v6; // ax\n  unsigned __int16 v7; // ax\n  char src[2]; // [rsp+10h] [rbp-1028h] BYREF\n  __int16 v10; // [rsp+12h] [rbp-1026h]\n  __int16 v11; // [rsp+14h] [rbp-1024h]\n  __int16 v12; // [rsp+16h] [rbp-1022h]\n  __int16 v13; // [rsp+18h] [rbp-1020h]\n  __int16 v14; // [rsp+1Ah] [rbp-101Eh]\n  char v15; // [rsp+1Ch] [rbp-101Ch]\n  char v16; // [rsp+1Dh] [rbp-101Bh]\n  __int16 v17; // [rsp+1Eh] [rbp-101Ah]\n  __int16 v18; // [rsp+20h] [rbp-1018h]\n  unsigned __int16 v19; // [rsp+22h] [rbp-1016h]\n  unsigned __int64 v20; // [rsp+1018h] [rbp-20h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (_WORD *)*((_QWORD *)this + 564);\n  v20 = __readfsqword(0x28u);\n  src[0] = 50;\n  src[1] = 3;\n  v3 = v2[2];\n  v10 = 0;\n  v11 = v3;\n  v15 = -16;\n  v12 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 8u);\n  v16 = 0;\n  v4 = v2[6];\n  v13 = 0;\n  v14 = 0;\n  v17 = v4;\n  v18 = v2[7];\n  v5 = *(_WORD *)(*((_QWORD *)this + 1084) + 24794LL);\n  if ( v5 )\n  {\n    v7 = TSnapBase::SwapWord(v1, v5);\n    v19 = v7;\n  }\n  else\n  {\n    v6 = TSnapBase::SwapWord(v1, v2[8]);\n    if ( v6 <= 0xEFu )\n    {\n      v7 = TSnapBase::SwapWord(v1, 0xF0u);\n      v19 = v7;\n    }\n    else\n    {\n      if ( v6 > 0x1000u )\n        v7 = TSnapBase::SwapWord(v1, 0x1000u);\n      else\n        v7 = v2[8];\n      v19 = v7;\n    }\n  }\n  *((_DWORD *)this + 2170) = (unsigned __int16)TSnapBase::SwapWord(v1, v7);\n  TIsoTcpSocket::isoSendBuffer(this, src, 20);\n  TS7Worker::DoEvent(this, 0x80000u, 0, *((_WORD *)this + 4340), 0, 0, 0);\n  return 1LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (19, 20) appear to "contaminate" the global variables  and local variables var_101A, v4, v17, v2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (19, 20) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:23,463 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
unsigned __int16, length
```
2025-03-08 21:20:25,464 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (21, 22)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker24PerformFunctionNegotiateEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionNegotiate(TS7Worker *this)\n{\n  TSnapBase *v1; // r12\n  _WORD *v2; // rbp\n  __int16 v3; // ax\n  __int16 v4; // ax\n  unsigned __int16 v5; // si\n  unsigned __int16 v6; // ax\n  unsigned __int16 v7; // ax\n  char src[2]; // [rsp+10h] [rbp-1028h] BYREF\n  __int16 v10; // [rsp+12h] [rbp-1026h]\n  __int16 v11; // [rsp+14h] [rbp-1024h]\n  __int16 v12; // [rsp+16h] [rbp-1022h]\n  __int16 v13; // [rsp+18h] [rbp-1020h]\n  __int16 v14; // [rsp+1Ah] [rbp-101Eh]\n  char v15; // [rsp+1Ch] [rbp-101Ch]\n  char v16; // [rsp+1Dh] [rbp-101Bh]\n  __int16 v17; // [rsp+1Eh] [rbp-101Ah]\n  __int16 v18; // [rsp+20h] [rbp-1018h]\n  unsigned __int16 v19; // [rsp+22h] [rbp-1016h]\n  unsigned __int64 v20; // [rsp+1018h] [rbp-20h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (_WORD *)*((_QWORD *)this + 564);\n  v20 = __readfsqword(0x28u);\n  src[0] = 50;\n  src[1] = 3;\n  v3 = v2[2];\n  v10 = 0;\n  v11 = v3;\n  v15 = -16;\n  v12 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 8u);\n  v16 = 0;\n  v4 = v2[6];\n  v13 = 0;\n  v14 = 0;\n  v17 = v4;\n  v18 = v2[7];\n  v5 = *(_WORD *)(*((_QWORD *)this + 1084) + 24794LL);\n  if ( v5 )\n  {\n    v7 = TSnapBase::SwapWord(v1, v5);\n    v19 = v7;\n  }\n  else\n  {\n    v6 = TSnapBase::SwapWord(v1, v2[8]);\n    if ( v6 <= 0xEFu )\n    {\n      v7 = TSnapBase::SwapWord(v1, 0xF0u);\n      v19 = v7;\n    }\n    else\n    {\n      if ( v6 > 0x1000u )\n        v7 = TSnapBase::SwapWord(v1, 0x1000u);\n      else\n        v7 = v2[8];\n      v19 = v7;\n    }\n  }\n  *((_DWORD *)this + 2170) = (unsigned __int16)TSnapBase::SwapWord(v1, v7);\n  TIsoTcpSocket::isoSendBuffer(this, src, 20);\n  TS7Worker::DoEvent(this, 0x80000u, 0, *((_WORD *)this + 4340), 0, 0, 0);\n  return 1LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (21, 22) appear to "contaminate" the global variables  and local variables var_1018, v18, v2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (21, 22) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:26,249 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
unsigned short, length
```
2025-03-08 21:20:28,250 - my_text.py:618  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (23, 24)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN16TCustomMsgServer7DoEventEijttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        int __fastcall TCustomMsgServer::DoEvent(\n        TCustomMsgServer *this,\n        int a2,\n        int a3,\n        __int16 a4,\n        __int16 a5,\n        __int16 a6,\n        unsigned __int16 a7,\n        unsigned __int16 a8)\n{\n  bool v9; // zf\n  int v10; // edi\n  int result; // eax\n  bool v12; // bp\n  bool v13; // r14\n  void (__fastcall *v14)(_QWORD, time_t *, __int64); // rax\n  time_t timer; // [rsp+30h] [rbp-48h] BYREF\n  int v20; // [rsp+38h] [rbp-40h]\n  int v21; // [rsp+3Ch] [rbp-3Ch]\n  __int16 v22; // [rsp+40h] [rbp-38h]\n  __int16 v23; // [rsp+42h] [rbp-36h]\n  __int16 v24; // [rsp+44h] [rbp-34h]\n  unsigned __int16 v25; // [rsp+46h] [rbp-32h]\n  unsigned __int16 v26; // [rsp+48h] [rbp-30h]\n\n  v9 = *((_BYTE *)this + 80) == 0;\n  v10 = *((_DWORD *)this + 2074);\n  result = *((_DWORD *)this + 2075);\n  if ( v9 )\n  {\n    v12 = (v10 & a3) != 0;\n    v13 = (result & a3) != 0;\n    if ( (result & a3) != 0 || (v10 & a3) != 0 )\n    {\n      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));\n      time(&timer);\n      v25 = a7;\n      v20 = a2;\n      v21 = a3;\n      v22 = a4;\n      v23 = a5;\n      v24 = a6;\n      v26 = a8;\n      if ( v13 )\n      {\n        v14 = (void (__fastcall *)(_QWORD, time_t *, __int64))*((_QWORD *)this + 8);\n        if ( v14 )\n          v14(*((_QWORD *)this + 9), &timer, 26LL);\n      }\n      if ( v12 )\n        TMsgEventQueue::Insert(*((TMsgEventQueue **)this + 7), &timer);\n      return pthread_mutex_unlock(*((pthread_mutex_t **)this + 11));\n    }\n  }\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker24PerformFunctionNegotiateEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionNegotiate(TS7Worker *this)\n{\n  TSnapBase *v1; // r12\n  _WORD *v2; // rbp\n  __int16 v3; // ax\n  __int16 v4; // ax\n  unsigned __int16 v5; // si\n  unsigned __int16 v6; // ax\n  unsigned __int16 v7; // ax\n  char src[2]; // [rsp+10h] [rbp-1028h] BYREF\n  __int16 v10; // [rsp+12h] [rbp-1026h]\n  __int16 v11; // [rsp+14h] [rbp-1024h]\n  __int16 v12; // [rsp+16h] [rbp-1022h]\n  __int16 v13; // [rsp+18h] [rbp-1020h]\n  __int16 v14; // [rsp+1Ah] [rbp-101Eh]\n  char v15; // [rsp+1Ch] [rbp-101Ch]\n  char v16; // [rsp+1Dh] [rbp-101Bh]\n  __int16 v17; // [rsp+1Eh] [rbp-101Ah]\n  __int16 v18; // [rsp+20h] [rbp-1018h]\n  unsigned __int16 v19; // [rsp+22h] [rbp-1016h]\n  unsigned __int64 v20; // [rsp+1018h] [rbp-20h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (_WORD *)*((_QWORD *)this + 564);\n  v20 = __readfsqword(0x28u);\n  src[0] = 50;\n  src[1] = 3;\n  v3 = v2[2];\n  v10 = 0;\n  v11 = v3;\n  v15 = -16;\n  v12 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 8u);\n  v16 = 0;\n  v4 = v2[6];\n  v13 = 0;\n  v14 = 0;\n  v17 = v4;\n  v18 = v2[7];\n  v5 = *(_WORD *)(*((_QWORD *)this + 1084) + 24794LL);\n  if ( v5 )\n  {\n    v7 = TSnapBase::SwapWord(v1, v5);\n    v19 = v7;\n  }\n  else\n  {\n    v6 = TSnapBase::SwapWord(v1, v2[8]);\n    if ( v6 <= 0xEFu )\n    {\n      v7 = TSnapBase::SwapWord(v1, 0xF0u);\n      v19 = v7;\n    }\n    else\n    {\n      if ( v6 > 0x1000u )\n        v7 = TSnapBase::SwapWord(v1, 0x1000u);\n      else\n        v7 = v2[8];\n      v19 = v7;\n    }\n  }\n  *((_DWORD *)this + 2170) = (unsigned __int16)TSnapBase::SwapWord(v1, v7);\n  TIsoTcpSocket::isoSendBuffer(this, src, 20);\n  TS7Worker::DoEvent(this, 0x80000u, 0, *((_WORD *)this + 4340), 0, 0, 0);\n  return 1LL;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker7DoEventEjttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::DoEvent(\n        TS7Worker *this,\n        unsigned int a2,\n        unsigned __int16 a3,\n        unsigned __int16 a4,\n        unsigned __int16 a5,\n        unsigned __int16 a6,\n        unsigned __int16 a7)\n{\n  return (*(__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD))(**((_QWORD **)this + 1084) + 24LL))(\n           *((_QWORD *)this + 1084),\n           *((unsigned int *)this + 15),\n           a2,\n           a3,\n           a4,\n           a5,\n           a6,\n           a7);\n}\n\n                        \n                        Function Name: _Z11NumToStringiij\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        std::string *__fastcall NumToString(std::string *a1, int a2, int a3, unsigned int a4)\n{\n  unsigned __int64 v4; // r13\n  char *v5; // rcx\n  char *v6; // rax\n  char *i; // rdx\n  char v8; // cl\n  unsigned __int64 j; // rsi\n  __int64 v10; // rbp\n  char v12; // [rsp+Fh] [rbp-79h] BYREF\n  __int64 v13[2]; // [rsp+10h] [rbp-78h] BYREF\n  char v14[56]; // [rsp+20h] [rbp-68h] BYREF\n  unsigned __int64 v15; // [rsp+58h] [rbp-30h]\n\n  v4 = a4;\n  v15 = __readfsqword(0x28u);\n  *(_QWORD *)a1 = (char *)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( (unsigned int)(a3 - 2) > 0x22 )\n  {\n    v14[0] = 0;\n  }\n  else\n  {\n    v5 = v14;\n    while ( 1 )\n    {\n      *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];\n      if ( !(a2 / a3) )\n        break;\n      a2 /= a3;\n    }\n    if ( a2 < 0 )\n      *v5++ = 45;\n    v6 = v5 - 1;\n    *v5 = 0;\n    for ( i = v14; v6 > i; ++i )\n    {\n      v8 = *v6;\n      *v6-- = *i;\n      *i = v8;\n    }\n  }\n  std::string::assign(a1, v14, strlen(v14));\n  if ( (_DWORD)v4 )\n  {\n    for ( j = *(_QWORD *)(*(_QWORD *)a1 - 24LL); j < v4; j = *(_QWORD *)(*(_QWORD *)a1 - 24LL) )\n    {\n      v13[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v13, j + 1);\n      std::string::append((std::string *)v13, "0", 1uLL);\n      std::string::append((std::string *)v13, a1);\n      std::string::assign(a1, (const std::string *)v13);\n      v10 = v13[0] - 24;\n      if ( (_UNKNOWN *)(v13[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v10 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v10, &v12);\n      }\n    }\n  }\n  return a1;\n}\n\n                        \n                        Function Name: _Z10EvtSrvTextR9TSrvEvent\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        std::string *__fastcall EvtSrvText(std::string *a1, __int64 a2)\n{\n  unsigned int v3; // esi\n  __int64 v4; // r13\n  __int64 v5; // r13\n  __int64 v6; // r13\n  __int64 v7; // r13\n  __int64 v8; // r13\n  __int64 v9; // r13\n  __int64 v10; // r13\n  __int64 v11; // r13\n  __int64 v12; // r14\n  __int64 v13; // r14\n  __int64 v14; // r14\n  __int64 v15; // rbp\n  __int64 v16; // rbp\n  unsigned __int16 v17; // ax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r13\n  __int64 v21; // r13\n  __int64 v22; // r13\n  __int64 v23; // r13\n  __int64 v24; // rbp\n  __int64 v26; // r14\n  __int64 v27; // r14\n  __int64 v28; // r14\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r13\n  __int64 v32; // r13\n  __int64 v33; // r13\n  __int64 v34; // r14\n  __int64 v35; // r13\n  __int64 v36; // r13\n  __int64 v37; // r14\n  __int64 v38; // r14\n  __int64 v39; // r13\n  __int16 v40; // ax\n  __int64 v41; // r14\n  __int64 v42; // r13\n  __int64 v43; // r13\n  __int64 v44; // r13\n  __int16 v45; // dx\n  __int64 v46; // r14\n  __int64 v47; // r14\n  __int64 v48; // r14\n  __int64 v49; // r14\n  __int64 v50; // r13\n  __int64 v51; // r13\n  __int64 v52; // r13\n  __int64 v53; // r13\n  __int64 v54; // r13\n  __int64 v55; // r13\n  int v56; // [rsp+0h] [rbp-468h]\n  int v57; // [rsp+0h] [rbp-468h]\n  int v58; // [rsp+0h] [rbp-468h]\n  char v59; // [rsp+5h] [rbp-463h] BYREF\n  char v60; // [rsp+6h] [rbp-462h] BYREF\n  char v61; // [rsp+7h] [rbp-461h] BYREF\n  char v62; // [rsp+8h] [rbp-460h] BYREF\n  char v63; // [rsp+9h] [rbp-45Fh] BYREF\n  char v64; // [rsp+Ah] [rbp-45Eh] BYREF\n  char v65; // [rsp+Bh] [rbp-45Dh] BYREF\n  char v66; // [rsp+Ch] [rbp-45Ch] BYREF\n  char v67; // [rsp+Dh] [rbp-45Bh] BYREF\n  char v68; // [rsp+Eh] [rbp-45Ah] BYREF\n  char v69; // [rsp+Fh] [rbp-459h] BYREF\n  int v70[2]; // [rsp+10h] [rbp-458h] BYREF\n  char v71; // [rsp+18h] [rbp-450h]\n  __int64 v72; // [rsp+20h] [rbp-448h] BYREF\n  char v73; // [rsp+28h] [rbp-440h]\n  __int64 v74; // [rsp+30h] [rbp-438h] BYREF\n  char v75; // [rsp+38h] [rbp-430h]\n  __int64 v76[2]; // [rsp+40h] [rbp-428h] BYREF\n  __int64 v77[2]; // [rsp+50h] [rbp-418h] BYREF\n  __int64 v78[2]; // [rsp+60h] [rbp-408h] BYREF\n  __int64 v79[2]; // [rsp+70h] [rbp-3F8h] BYREF\n  __int64 v80[2]; // [rsp+80h] [rbp-3E8h] BYREF\n  __int64 v81[2]; // [rsp+90h] [rbp-3D8h] BYREF\n  __int64 v82[2]; // [rsp+A0h] [rbp-3C8h] BYREF\n  __int64 v83[2]; // [rsp+B0h] [rbp-3B8h] BYREF\n  __int64 v84[2]; // [rsp+C0h] [rbp-3A8h] BYREF\n  __int64 v85[2]; // [rsp+D0h] [rbp-398h] BYREF\n  __int64 v86[2]; // [rsp+E0h] [rbp-388h] BYREF\n  __int64 v87[2]; // [rsp+F0h] [rbp-378h] BYREF\n  _QWORD v88[2]; // [rsp+100h] [rbp-368h] BYREF\n  __int64 v89[2]; // [rsp+110h] [rbp-358h] BYREF\n  __int64 v90[2]; // [rsp+120h] [rbp-348h] BYREF\n  __int64 v91[2]; // [rsp+130h] [rbp-338h] BYREF\n  __int64 v92[2]; // [rsp+140h] [rbp-328h] BYREF\n  __int64 v93[2]; // [rsp+150h] [rbp-318h] BYREF\n  __int64 v94[2]; // [rsp+160h] [rbp-308h] BYREF\n  __int64 v95[2]; // [rsp+170h] [rbp-2F8h] BYREF\n  __int64 v96[2]; // [rsp+180h] [rbp-2E8h] BYREF\n  __int64 v97[2]; // [rsp+190h] [rbp-2D8h] BYREF\n  _QWORD v98[2]; // [rsp+1A0h] [rbp-2C8h] BYREF\n  __int64 v99[2]; // [rsp+1B0h] [rbp-2B8h] BYREF\n  __int64 v100[2]; // [rsp+1C0h] [rbp-2A8h] BYREF\n  __int64 v101[2]; // [rsp+1D0h] [rbp-298h] BYREF\n  __int64 v102[2]; // [rsp+1E0h] [rbp-288h] BYREF\n  _QWORD v103[2]; // [rsp+1F0h] [rbp-278h] BYREF\n  __int64 v104[2]; // [rsp+200h] [rbp-268h] BYREF\n  _QWORD v105[2]; // [rsp+210h] [rbp-258h] BYREF\n  __int64 v106[2]; // [rsp+220h] [rbp-248h] BYREF\n  _QWORD v107[2]; // [rsp+230h] [rbp-238h] BYREF\n  __int64 v108[2]; // [rsp+240h] [rbp-228h] BYREF\n  _QWORD v109[2]; // [rsp+250h] [rbp-218h] BYREF\n  __int64 v110[2]; // [rsp+260h] [rbp-208h] BYREF\n  __int64 v111[2]; // [rsp+270h] [rbp-1F8h] BYREF\n  _QWORD v112[2]; // [rsp+280h] [rbp-1E8h] BYREF\n  __int64 v113[2]; // [rsp+290h] [rbp-1D8h] BYREF\n  __int64 v114[2]; // [rsp+2A0h] [rbp-1C8h] BYREF\n  __int64 v115[2]; // [rsp+2B0h] [rbp-1B8h] BYREF\n  __int64 v116[2]; // [rsp+2C0h] [rbp-1A8h] BYREF\n  __int64 v117[2]; // [rsp+2D0h] [rbp-198h] BYREF\n  __int64 v118[2]; // [rsp+2E0h] [rbp-188h] BYREF\n  __int64 v119[2]; // [rsp+2F0h] [rbp-178h] BYREF\n  __int64 v120[2]; // [rsp+300h] [rbp-168h] BYREF\n  __int64 v121[2]; // [rsp+310h] [rbp-158h] BYREF\n  __int64 v122[2]; // [rsp+320h] [rbp-148h] BYREF\n  _QWORD v123[2]; // [rsp+330h] [rbp-138h] BYREF\n  __int64 v124[2]; // [rsp+340h] [rbp-128h] BYREF\n  __int64 v125[2]; // [rsp+350h] [rbp-118h] BYREF\n  __int64 v126[2]; // [rsp+360h] [rbp-108h] BYREF\n  __int64 v127[2]; // [rsp+370h] [rbp-F8h] BYREF\n  __int64 v128[2]; // [rsp+380h] [rbp-E8h] BYREF\n  __int64 v129[2]; // [rsp+390h] [rbp-D8h] BYREF\n  __int64 v130[2]; // [rsp+3A0h] [rbp-C8h] BYREF\n  __int64 v131[2]; // [rsp+3B0h] [rbp-B8h] BYREF\n  __int64 v132[2]; // [rsp+3C0h] [rbp-A8h] BYREF\n  _QWORD v133[2]; // [rsp+3D0h] [rbp-98h] BYREF\n  __int64 v134[2]; // [rsp+3E0h] [rbp-88h] BYREF\n  __int64 v135[2]; // [rsp+3F0h] [rbp-78h] BYREF\n  _QWORD v136[2]; // [rsp+400h] [rbp-68h] BYREF\n  __int64 v137[2]; // [rsp+410h] [rbp-58h] BYREF\n  __int64 v138[2]; // [rsp+420h] [rbp-48h] BYREF\n  __int64 v139[2]; // [rsp+430h] [rbp-38h] BYREF\n\n  v3 = *(_DWORD *)(a2 + 12);\n  *(_QWORD *)v70 = (char *)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( v3 > 0x8000 )\n  {\n    if ( v3 == 0x200000 )\n    {\n      if ( *(_WORD *)(a2 + 18) == 1 )\n        std::string::string(v93, "System clock read requested", &v64);\n      else\n        std::string::string(v93, "System clock write requested", &v63);\n      std::string::assign((std::string *)v70, (const std::string *)v93);\n      v6 = v93[0] - 24;\n      if ( (_UNKNOWN *)(v93[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_56;\n      goto LABEL_101;\n    }\n    if ( v3 <= 0x200000 )\n    {\n      if ( v3 == 0x40000 )\n      {\n        TxtDataResult((std::string *)v86, v56, v62, v70[0], v71);\n        TxtStartSize((std::string *)v84, v58, v62, v70[0], v71, v72, v73, v74, v75);\n        TxtArea((std::string *)v82);\n        v83[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v83, *(_QWORD *)(v82[0] - 24) + 15LL);\n        std::string::append((std::string *)v83, "Write request, ", 0xFuLL);\n        std::string::append((std::string *)v83, (const std::string *)v82);\n        std::string::string((std::string *)v85, (const std::string *)v83);\n        std::string::append((std::string *)v85, (const std::string *)v84);\n        std::string::string((std::string *)v87, (const std::string *)v85);\n        std::string::append((std::string *)v87, (const std::string *)v86);\n        std::string::assign((std::string *)v70, (const std::string *)v87);\n        v19 = v87[0] - 24;\n        if ( (_UNKNOWN *)(v87[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v19 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v19, &v69);\n        }\n        v20 = v85[0] - 24;\n        if ( (_UNKNOWN *)(v85[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v20 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v20, &v69);\n        }\n        v21 = v83[0] - 24;\n        if ( (_UNKNOWN *)(v83[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v21 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v21, &v69);\n        }\n        v22 = v82[0] - 24;\n        if ( (_UNKNOWN *)(v82[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v22 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v22, &v69);\n        }\n        v23 = v84[0] - 24;\n        if ( (_UNKNOWN *)(v84[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v23 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v23, &v69);\n        }\n        v6 = v86[0] - 24;\n        if ( (_UNKNOWN *)(v86[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_101;\n        goto LABEL_56;\n      }\n      if ( v3 > 0x40000 )\n      {\n        if ( v3 == 0x80000 )\n        {\n          IntToString((int)v88);\n          v89[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v89, *(_QWORD *)(v88[0] - 24LL) + 34LL);\n          std::string::append((std::string *)v89, "The client requires a PDU size of ", 0x22uLL);\n          std::string::append((std::string *)v89, (const std::string *)v88);\n          std::string::string((std::string *)v90, (const std::string *)v89);\n          std::string::append((std::string *)v90, " bytes", 6uLL);\n          std::string::assign((std::string *)v70, (const std::string *)v90);\n          v35 = v90[0] - 24;\n          if ( (_UNKNOWN *)(v90[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v35 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v35, &v69);\n          }\n          v36 = v89[0] - 24;\n          if ( (_UNKNOWN *)(v89[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v36 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v36, &v69);\n          }\n          v6 = v88[0] - 24LL;\n          if ( (_UNKNOWN *)(v88[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n        if ( v3 == 0x100000 )\n        {\n          NumToString((std::string *)v118, *(unsigned __int16 *)(a2 + 20), 0x10u);\n          NumToString((std::string *)v115, *(unsigned __int16 *)(a2 + 18), 0x10u);\n          v116[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v116, *(_QWORD *)(v115[0] - 24) + 23LL);\n          std::string::append((std::string *)v116, "Read SZL request, ID:0x", 0x17uLL);\n          std::string::append((std::string *)v116, (const std::string *)v115);\n          std::string::string((std::string *)v117, (const std::string *)v116);\n          std::string::append((std::string *)v117, " INDEX:0x", 9uLL);\n          std::string::string((std::string *)v114, (const std::string *)v117);\n          std::string::append((std::string *)v114, (const std::string *)v118);\n          v30 = v117[0] - 24;\n          if ( (_UNKNOWN *)(v117[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v30 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v30, &v69);\n          }\n          v31 = v116[0] - 24;\n          if ( (_UNKNOWN *)(v116[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v31 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v31, &v69);\n          }\n          v32 = v115[0] - 24;\n          if ( (_UNKNOWN *)(v115[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v32 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v32, &v69);\n          }\n          v33 = v118[0] - 24;\n          if ( (_UNKNOWN *)(v118[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v33 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v33, &v69);\n          }\n          if ( *(_WORD *)(a2 + 16) )\n          {\n            std::string::string((std::string *)v92, (const std::string *)v114);\n            std::string::append((std::string *)v92, " --> NOT AVAILABLE", 0x12uLL);\n          }\n          else\n          {\n            std::string::string((std::string *)v92, (const std::string *)v114);\n            std::string::append((std::string *)v92, " --> OK", 7uLL);\n          }\n          v34 = v114[0] - 24;\n          if ( (_UNKNOWN *)(v114[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v34 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v34, &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v92);\n          v6 = v92[0] - 24;\n          if ( (_UNKNOWN *)(v92[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      else\n      {\n        if ( v3 == (_DWORD)&stru_10000 )\n        {\n          switch ( *(_WORD *)(a2 + 16) )\n          {\n            case 1:\n              IntToString((int)v103);\n              v102[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v102, *(_QWORD *)(v103[0] - 24LL) + 12LL);\n              std::string::append((std::string *)v102, "Fragment of ", 0xCuLL);\n              std::string::append((std::string *)v102, (const std::string *)v103);\n              std::string::string((std::string *)&v72, (const std::string *)v102);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v47 = v102[0] - 24;\n              if ( (_UNKNOWN *)(v102[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v47 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v47, &v69);\n              }\n              v38 = v103[0] - 24LL;\n              if ( (_UNKNOWN *)(v103[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 2:\n              IntToString((int)v105);\n              v104[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v104, *(_QWORD *)(v105[0] - 24LL) + 17LL);\n              std::string::append((std::string *)v104, "Malformed PDU of ", 0x11uLL);\n              std::string::append((std::string *)v104, (const std::string *)v105);\n              std::string::string((std::string *)&v72, (const std::string *)v104);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v46 = v104[0] - 24;\n              if ( (_UNKNOWN *)(v104[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v46 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v46, &v69);\n              }\n              v38 = v105[0] - 24LL;\n              if ( (_UNKNOWN *)(v105[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 3:\n              IntToString((int)v107);\n              v106[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v106, *(_QWORD *)(v107[0] - 24LL) + 18LL);\n              std::string::append((std::string *)v106, "Message of sparse ", 0x12uLL);\n              std::string::append((std::string *)v106, (const std::string *)v107);\n              std::string::string((std::string *)&v72, (const std::string *)v106);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v48 = v106[0] - 24;\n              if ( (_UNKNOWN *)(v106[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v48 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v48, &v69);\n              }\n              v38 = v107[0] - 24LL;\n              if ( (_UNKNOWN *)(v107[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 4:\n              std::string::string(&v72, "Cannot handle this PDU", &v59);\n              break;\n            case 5:\n              v45 = *(_WORD *)(a2 + 18);\n              if ( v45 == 65 )\n              {\n                std::string::string(&v72, "Function group programmer not yet implemented", &v61);\n              }\n              else\n              {\n                if ( v45 != 66 )\n                  goto LABEL_86;\n                std::string::string(&v72, "Function group cyclic data not yet implemented", &v60);\n              }\n              break;\n            default:\nLABEL_86:\n              IntToString((int)v109);\n              v108[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v108, *(_QWORD *)(v109[0] - 24LL) + 21LL);\n              std::string::append((std::string *)v108, "Unknown Return code (", 0x15uLL);\n              std::string::append((std::string *)v108, (const std::string *)v109);\n              std::string::string((std::string *)&v72, (const std::string *)v108);\n              std::string::append((std::string *)&v72, ")", 1uLL);\n              v37 = v108[0] - 24;\n              if ( (_UNKNOWN *)(v108[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v37 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v37, &v69);\n              }\n              v38 = v109[0] - 24LL;\n              if ( (_UNKNOWN *)(v109[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n              {\nLABEL_127:\n                if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v38 + 16)) <= 0 )\n                  std::string::_Rep::_M_destroy(v38, &v69);\n              }\n              break;\n          }\n          v74 = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)&v74, *(_QWORD *)(v72 - 24) + 15LL);\n          std::string::append((std::string *)&v74, "PDU incoming : ", 0xFuLL);\n          std::string::append((std::string *)&v74, (const std::string *)&v72);\n          std::string::assign((std::string *)v70, (const std::string *)&v74);\n          v39 = v74 - 24;\n          if ( (_UNKNOWN *)(v74 - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v39 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v39, &v69);\n          }\n          v6 = v72 - 24;\n          if ( (_UNKNOWN *)(v72 - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n        if ( v3 == (_DWORD)&loc_20000 )\n        {\n          TxtDataResult((std::string *)v80, v56, v62, v70[0], v71);\n          TxtStartSize((std::string *)v78, v57, v62, v70[0], v71, v72, v73, v74, v75);\n          TxtArea((std::string *)v76);\n          v77[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v77, *(_QWORD *)(v76[0] - 24) + 14LL);\n          std::string::append((std::string *)v77, "Read request, ", 0xEuLL);\n          std::string::append((std::string *)v77, (const std::string *)v76);\n          std::string::string((std::string *)v79, (const std::string *)v77);\n          std::string::append((std::string *)v79, (const std::string *)v78);\n          std::string::string((std::string *)v81, (const std::string *)v79);\n          std::string::append((std::string *)v81, (const std::string *)v80);\n          std::string::assign((std::string *)v70, (const std::string *)v81);\n          v7 = v81[0] - 24;\n          if ( (_UNKNOWN *)(v81[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v7 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v7, &v69);\n          }\n          v8 = v79[0] - 24;\n          if ( (_UNKNOWN *)(v79[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v8 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v8, &v69);\n          }\n          v9 = v77[0] - 24;\n          if ( (_UNKNOWN *)(v77[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v9 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v9, &v69);\n          }\n          v10 = v76[0] - 24;\n          if ( (_UNKNOWN *)(v76[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v10 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v10, &v69);\n          }\n          v11 = v78[0] - 24;\n          if ( (_UNKNOWN *)(v78[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v11 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v11, &v69);\n          }\n          v6 = v80[0] - 24;\n          if ( (_UNKNOWN *)(v80[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      goto LABEL_8;\n    }\n    if ( v3 != 0x1000000 )\n    {\n      if ( v3 > 0x1000000 )\n      {\n        if ( v3 == 0x2000000 )\n        {\n          v40 = *(_WORD *)(a2 + 18);\n          if ( v40 == 1 )\n          {\n            std::string::string(v97, "Security request : Set session password --> OK", &v67);\n          }\n          else if ( v40 == 2 )\n          {\n            std::string::string(v97, "Security request : Clear session password --> OK", &v68);\n          }\n          else\n          {\n            std::string::string(v97, "Security request : Unknown Subfunction", &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v97);\n          v6 = v97[0] - 24;\n          if ( (_UNKNOWN *)(v97[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n        if ( v3 == 0x4000000 )\n        {\n          std::string::string(v110, "CPU Control request : ", &v62);\n          switch ( (unsigned __int16)v91 )\n          {\n            case 0u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Unknown", 7uLL);\n              break;\n            case 1u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Cold START --> OK", 0x11uLL);\n              break;\n            case 2u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Warm START --> OK", 0x11uLL);\n              break;\n            case 3u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "STOP --> OK", 0xBuLL);\n              break;\n            case 4u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Memory compress --> OK", 0x16uLL);\n              break;\n            case 5u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Copy Ram to Rom --> OK", 0x16uLL);\n              break;\n            case 6u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Block Insert or Delete --> OK", 0x1DuLL);\n              break;\n            default:\n              IntToString((int)v112);\n              std::string::string((std::string *)v111, (const std::string *)v110);\n              std::string::append((std::string *)v111, "Unknown control code (", 0x16uLL);\n              std::string::string((std::string *)v113, (const std::string *)v111);\n              std::string::append((std::string *)v113, (const std::string *)v112);\n              std::string::string((std::string *)v91, (const std::string *)v113);\n              std::string::append((std::string *)v91, ")", 1uLL);\n              v26 = v113[0] - 24;\n              if ( (_UNKNOWN *)(v113[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v26 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v26, &v69);\n              }\n              v27 = v111[0] - 24;\n              if ( (_UNKNOWN *)(v111[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v27 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v27, &v69);\n              }\n              v28 = v112[0] - 24LL;\n              if ( (_UNKNOWN *)(v112[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v28 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v28, &v69);\n              }\n              break;\n          }\n          v29 = v110[0] - 24;\n          if ( (_UNKNOWN *)(v110[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v29 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v29, &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v91);\n          v6 = v91[0] - 24;\n          if ( (_UNKNOWN *)(v91[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      else\n      {\n        if ( v3 == 0x400000 )\n        {\n          std::string::string(v94, "Block upload requested --> NOT PERFORMED (due to invalid security level)", &v65);\n          std::string::assign((std::string *)v70, (const std::string *)v94);\n          v6 = v94[0] - 24;\n          if ( (_UNKNOWN *)(v94[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n        if ( v3 == 0x800000 )\n        {\n          std::string::string(v95, "Block download requested --> NOT PERFORMED (due to invalid security level)", &v66);\n          std::string::assign((std::string *)v70, (const std::string *)v95);\n          v6 = v95[0] - 24;\n          if ( (_UNKNOWN *)(v95[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n      }\nLABEL_8:\n      IntToString((int)v98);\n      v99[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v99, *(_QWORD *)(v98[0] - 24LL) + 15LL);\n      std::string::append((std::string *)v99, "Unknown event (", 0xFuLL);\n      std::string::append((std::string *)v99, (const std::string *)v98);\n      std::string::string((std::string *)v100, (const std::string *)v99);\n      std::string::append((std::string *)v100, ")", 1uLL);\n      std::string::assign((std::string *)v70, (const std::string *)v100);\n      v4 = v100[0] - 24;\n      if ( (_UNKNOWN *)(v100[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v4 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v4, &v69);\n      }\n      v5 = v99[0] - 24;\n      if ( (_UNKNOWN *)(v99[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v5 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v5, &v69);\n      }\n      v6 = v98[0] - 24LL;\n      if ( (_UNKNOWN *)(v98[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n      {\nLABEL_101:\n        if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v6 + 16)) <= 0 )\n          std::string::_Rep::_M_destroy(v6, &v69);\n      }\nLABEL_56:\n      SenderText((std::string *)v101, v56, v62, v70[0], v71, v72, v73);\n      std::string::string(a1, (const std::string *)v101);\n      std::string::append(a1, (const std::string *)v70);\n      v16 = v101[0] - 24;\n      if ( (_UNKNOWN *)(v101[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_57;\n      goto LABEL_34;\n    }\n    v17 = *(_WORD *)(a2 + 18);\n    v119[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    if ( v17 == 2 )\n    {\n      StrBlockType((std::string *)v128);\n      v129[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v129, *(_QWORD *)(v128[0] - 24) + 14LL);\n      std::string::append((std::string *)v129, "Block of type ", 0xEuLL);\n      std::string::append((std::string *)v129, (const std::string *)v128);\n      std::string::string((std::string *)v130, (const std::string *)v129);\n      std::string::append((std::string *)v130, " list requested (start sequence)", 0x20uLL);\n      std::string::assign((std::string *)v119, (const std::string *)v130);\n      v42 = v130[0] - 24;\n      if ( (_UNKNOWN *)(v130[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v42 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v42, &v69);\n      }\n      v43 = v129[0] - 24;\n      if ( (_UNKNOWN *)(v129[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v43 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v43, &v69);\n      }\n      v44 = v128[0] - 24;\n      if ( (_UNKNOWN *)(v128[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_118;\n    }\n    else\n    {\n      if ( v17 <= 2u )\n      {\n        if ( v17 == 1 )\n          std::string::assign((std::string *)v119, "Block list requested", 0x14uLL);\n        goto LABEL_45;\n      }\n      if ( v17 == 3 )\n      {\n        StrBlockType((std::string *)v125);\n        v126[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v126, *(_QWORD *)(v125[0] - 24) + 14LL);\n        std::string::append((std::string *)v126, "Block of type ", 0xEuLL);\n        std::string::append((std::string *)v126, (const std::string *)v125);\n        std::string::string((std::string *)v127, (const std::string *)v126);\n        std::string::append((std::string *)v127, " list requested (next part)", 0x1BuLL);\n        std::string::assign((std::string *)v119, (const std::string *)v127);\n        v54 = v127[0] - 24;\n        if ( (_UNKNOWN *)(v127[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v54 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v54, &v69);\n        }\n        v55 = v126[0] - 24;\n        if ( (_UNKNOWN *)(v126[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v55 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v55, &v69);\n        }\n        v44 = v125[0] - 24;\n        if ( (_UNKNOWN *)(v125[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_118;\n      }\n      else if ( v17 == 4 )\n      {\n        IntToString((int)v123);\n        StrBlockType((std::string *)v120);\n        v121[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v121, *(_QWORD *)(v120[0] - 24) + 21LL);\n        std::string::append((std::string *)v121, "Block info requested ", 0x15uLL);\n        std::string::append((std::string *)v121, (const std::string *)v120);\n        std::string::string((std::string *)v122, (const std::string *)v121);\n        std::string::append((std::string *)v122, " ", 1uLL);\n        std::string::string((std::string *)v124, (const std::string *)v122);\n        std::string::append((std::string *)v124, (const std::string *)v123);\n        std::string::assign((std::string *)v119, (const std::string *)v124);\n        v50 = v124[0] - 24;\n        if ( (_UNKNOWN *)(v124[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v50 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v50, &v69);\n        }\n        v51 = v122[0] - 24;\n        if ( (_UNKNOWN *)(v122[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v51 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v51, &v69);\n        }\n        v52 = v121[0] - 24;\n        if ( (_UNKNOWN *)(v121[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v52 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v52, &v69);\n        }\n        v53 = v120[0] - 24;\n        if ( (_UNKNOWN *)(v120[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v53 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v53, &v69);\n        }\n        v44 = v123[0] - 24LL;\n        if ( (_UNKNOWN *)(v123[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n        {\nLABEL_118:\n          if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v44 + 16)) <= 0 )\n            std::string::_Rep::_M_destroy(v44, &v69);\n        }\n      }\n    }\nLABEL_45:\n    if ( *(_WORD *)(a2 + 16) )\n    {\n      std::string::string((std::string *)v96, (const std::string *)v119);\n      std::string::append((std::string *)v96, " --> NOT AVAILABLE", 0x12uLL);\n    }\n    else\n    {\n      std::string::string((std::string *)v96, (const std::string *)v119);\n      std::string::append((std::string *)v96, " --> OK", 7uLL);\n    }\n    v18 = v119[0] - 24;\n    if ( (_UNKNOWN *)(v119[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v18 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v18, &v69);\n    }\n    std::string::assign((std::string *)v70, (const std::string *)v96);\n    v6 = v96[0] - 24;\n    if ( (_UNKNOWN *)(v96[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n      goto LABEL_101;\n    goto LABEL_56;\n  }\n  v131[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( v3 == 16 )\n  {\n    std::string::assign((std::string *)v131, "Client refused", 0xEuLL);\n    goto LABEL_32;\n  }\n  if ( v3 <= 0x10 )\n  {\n    if ( v3 == 2 )\n    {\n      std::string::assign((std::string *)v131, "stopped", 7uLL);\n      goto LABEL_32;\n    }\n    if ( v3 <= 2 )\n    {\n      if ( v3 == 1 )\n      {\n        std::string::assign((std::string *)v131, "started", 7uLL);\n        goto LABEL_32;\n      }\n    }\n    else\n    {\n      if ( v3 == 4 )\n      {\n        TcpTextOf((std::string *)v138);\n        v139[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v139, *(_QWORD *)(v138[0] - 24) + 39LL);\n        std::string::append((std::string *)v139, "Cannot start listener - Socket Error : ", 0x27uLL);\n        std::string::append((std::string *)v139, (const std::string *)v138);\n        std::string::assign((std::string *)v131, (const std::string *)v139);\n        v49 = v139[0] - 24;\n        if ( (_UNKNOWN *)(v139[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v49 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v49, &v69);\n        }\n        v14 = v138[0] - 24;\n        if ( (_UNKNOWN *)(v138[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_107;\n        goto LABEL_32;\n      }\n      if ( v3 == 8 )\n      {\n        std::string::assign((std::string *)v131, "Client added", 0xCuLL);\n        goto LABEL_32;\n      }\n    }\nLABEL_29:\n    IntToString((int)v133);\n    v134[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    std::string::reserve((std::string *)v134, *(_QWORD *)(v133[0] - 24LL) + 15LL);\n    std::string::append((std::string *)v134, "Unknown event (", 0xFuLL);\n    std::string::append((std::string *)v134, (const std::string *)v133);\n    std::string::string((std::string *)v135, (const std::string *)v134);\n    std::string::append((std::string *)v135, ")", 1uLL);\n    std::string::assign((std::string *)v131, (const std::string *)v135);\n    v12 = v135[0] - 24;\n    if ( (_UNKNOWN *)(v135[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v12 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v12, &v69);\n    }\n    v13 = v134[0] - 24;\n    if ( (_UNKNOWN *)(v134[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v13 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v13, &v69);\n    }\n    v14 = v133[0] - 24LL;\n    if ( (_UNKNOWN *)(v133[0] - 24LL) == &std::string::_Rep::_S_empty_rep_storage )\n      goto LABEL_32;\nLABEL_107:\n    if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v14 + 16)) <= 0 )\n      std::string::_Rep::_M_destroy(v14, &v69);\n    goto LABEL_32;\n  }\n  if ( v3 == 128 )\n  {\n    std::string::assign((std::string *)v131, "Client disconnected by peer", 0x1BuLL);\n    goto LABEL_32;\n  }\n  if ( v3 <= 0x80 )\n  {\n    if ( v3 == 32 )\n    {\n      std::string::assign((std::string *)v131, "A client was refused due to maximum connections number", 0x36uLL);\n      goto LABEL_32;\n    }\n    if ( v3 == 64 )\n    {\n      std::string::assign((std::string *)v131, "Client exception", 0x10uLL);\n      goto LABEL_32;\n    }\n    goto LABEL_29;\n  }\n  if ( v3 == 256 )\n  {\n    std::string::assign((std::string *)v131, "Client terminated", 0x11uLL);\n    goto LABEL_32;\n  }\n  if ( v3 != 512 )\n    goto LABEL_29;\n  IntToString((int)v136);\n  std::string::string((std::string *)v137, (const std::string *)v136);\n  std::string::append((std::string *)v137, " clients have been dropped bacause unresponsive", 0x2FuLL);\n  std::string::assign((std::string *)v131, (const std::string *)v137);\n  v41 = v137[0] - 24;\n  if ( (_UNKNOWN *)(v137[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v41 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v41, &v69);\n  }\n  v14 = v136[0] - 24LL;\n  if ( (_UNKNOWN *)(v136[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n    goto LABEL_107;\nLABEL_32:\n  SenderText((std::string *)v132, v56, v62, v70[0], v71, v72, v73);\n  std::string::string(a1, (const std::string *)v132);\n  std::string::append(a1, (const std::string *)v131);\n  v15 = v132[0] - 24;\n  if ( (_UNKNOWN *)(v132[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v15 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v15, &v69);\n  }\n  v16 = v131[0] - 24;\n  if ( (_UNKNOWN *)(v131[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n  {\nLABEL_34:\n    if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v16 + 16)) <= 0 )\n      std::string::_Rep::_M_destroy(v16, &v69);\n  }\nLABEL_57:\n  v24 = *(_QWORD *)v70 - 24LL;\n  if ( (_UNKNOWN *)(*(_QWORD *)v70 - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v24 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v24, &v69);\n  }\n  return a1;\n}\n\n                        \n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (23, 24) appear to "contaminate" the global variables aZyxwvutsrqponm and local variables a7, var_36, var_68, v25, a5, v23, src, var_1016, v7, v1, v19, v6, v2, a4, a3, a2, v5, v88, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (23, 24) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:31,749 - my_text.py:621  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
int, length
```
2025-03-08 21:20:33,750 - my_text.py:637  - 0:0300001902f08032010000000000080000f0000001000101e0 field_type: {'2,3': ['unsigned int'], '4': ['int'], '5': ['int'], '6': ['int'], '8': ['int'], '11,12': ['unsigned short'], '13,14': ['int'], '15,16': ['int'], '17': ['int'], '19,20': ['unsigned __int16'], '21,22': ['unsigned short'], '23,24': ['int']}
2025-03-08 21:20:33,750 - my_text.py:638  - 0:0300001902f08032010000000000080000f0000001000101e0 field_func: {'2,3': ['length'], '4': ['length'], '5': ['length'], '6': ['length'], '8': ['length'], '11,12': ['length'], '13,14': ['length'], '15,16': ['length'], '17': ['length'], '19,20': ['length'], '21,22': ['length'], '23,24': ['length']}
2025-03-08 21:20:33,750 - my_text.py:688  - 0:0300001902f08032010000000000080000f0000001000101e0 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': '\n            You are provided with a list named [] that contains visible strings. Your task is to analyze these strings. If the strings have specific meanings and can be further divided, please present the division results in a Python code block. Each part of the result should be separated by a comma.\n            The types of granularity for division include static text, command groups, strings, integers, decimals, and binary. The semantic granularity includes commands, lengths, delimiters, checksums, file names, etc.\n            Here is an example: If the input is ["POST /path HTTP/1.1"], the correct output should be\n            ```python\n            POST, command group, command\n            , string, delimiter\n            /path, string, file\n            HTTP/1.1, static text, static text\n            ```\n            If you don\'t think these strings have a specific meaning, just answer ```python ```\n            '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:34,499 - my_text.py:691  - 0:0300001902f08032010000000000080000f0000001000101e0 Response result: ```python
```python
```
2025-03-08 21:20:36,501 - my_text.py:712  - 0:0300001902f08032010000000000080000f0000001000101e0 field_llm_type: {}
2025-03-08 21:20:36,501 - my_text.py:713  - 0:0300001902f08032010000000000080000f0000001000101e0 field_llm_Sem: {}
2025-03-08 21:20:36,501 - my_text.py:715  - 0:0300001902f08032010000000000080000f0000001000101e0 used_fields_llm: ['2,3', '4', '5', '6', '8', '11,12', '13,14', '15,16', '17', '19,20', '21,22', '23,24']
2025-03-08 21:20:36,501 - my_text.py:716  - 0:0300001902f08032010000000000080000f0000001000101e0 field_llm_type_llm: {'2,3': ['unsigned int'], '4': ['int'], '5': ['int'], '6': ['int'], '8': ['int'], '11,12': ['unsigned short'], '13,14': ['int'], '15,16': ['int'], '17': ['int'], '19,20': ['unsigned __int16'], '21,22': ['unsigned short'], '23,24': ['int']}
2025-03-08 21:20:36,501 - my_text.py:717  - 0:0300001902f08032010000000000080000f0000001000101e0 field_llm_Sem_llm: {'2,3': ['length'], '4': ['length'], '5': ['length'], '6': ['length'], '8': ['length'], '11,12': ['length'], '13,14': ['length'], '15,16': ['length'], '17': ['length'], '19,20': ['length'], '21,22': ['length'], '23,24': ['length']}
2025-03-08 21:20:36,501 - my_text.py:432  - {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'  if ( v10 != 0xF0 )', '  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )', '  v10 = *((_BYTE *)this + 393);', '  if ( v10 == 0xE0 )', '  v15 = v10;'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'    || *((_BYTE *)a2 + 5) != a3 )', '  TIsoTcpSocket::ClrIsoError(this);'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'    else if ( (_BYTE)result == 0xF0 )', '    if ( (_BYTE)result == 0xE0 )', '    result = a2[5];'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'  *a5 = *((_BYTE *)this + 394) >> 7;'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'        goto LABEL_8;'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'  return a2[3] + (a2[2] << 8);'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'    return *((unsigned int *)this + 1126);', '  TMsgSocket::RecvPacket(this, buf, v14);', '  *a4 = v14;', '  v14 = v13 - 7;', '  v13 = TIsoTcpSocket::PDUSize(this, v5);'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'  return 0LL;', '  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));'}, '_ZN10TMsgSocket11WaitForDataEii': {'  return result;', '  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )', '    v4 = (int)TMsgSocket::WaitingData(this) < a2;'}, '_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'  v5 = 0;'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'  return a2[3] + (a2[2] << 8);'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'    return *((unsigned int *)this + 1126);', '  TMsgSocket::RecvPacket(this, buf, v14);', '  *a4 = v14;', '  v14 = v13 - 7;', '  v13 = TIsoTcpSocket::PDUSize(this, v5);'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'  return 0LL;', '  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));'}, '_ZN10TMsgSocket11WaitForDataEii': {'  return result;', '  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )', '    v4 = (int)TMsgSocket::WaitingData(this) < a2;'}, '_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'  v5 = 0;'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'    || *((_BYTE *)a2 + 4) <= 1u'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v3 = v2', '     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))', '  result = 0LL;'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v3 = v2', '     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))', '  result = 0LL;'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'  if ( v4 == 1 )', '  v4 = *(_BYTE *)(*((_QWORD *)this + 564) + 1LL);'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {'    switch ( v2 )', '    if ( v2 >= 0x1Du )', '  if ( v2 > 0x1Fu )', '  v2 = *(_BYTE *)(*((_QWORD *)this + 564) + 10LL);'}, '_ZN9TS7Worker19PerformFunctionReadEv': {'  v24 = *(_BYTE *)(v1 + 10);'}}, 23: {'_ZN9TS7Worker19PerformFunctionReadEv': {'  v2 = *(unsigned __int8 *)(v1 + 11);', '  v3 = v1;'}}, 24: {'_ZN9TS7Worker19PerformFunctionReadEv': {'  v2 = *(unsigned __int8 *)(v1 + 11);', '  v3 = v1;'}}, 18: {'_ZN9TS7Worker19PerformFunctionReadEv': {'  v25 = *(_BYTE *)(v1 + 11);', '  v2 = *(unsigned __int8 *)(v1 + 11);', '  if ( v2 == 1 )', '    v12 = v2 - 1;', '    if ( v2 == 1 )', '  if ( (unsigned __int8)v2 > 0x14u )'}, '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': {'      return TS7Worker::RA_NotFound(this, a2, a5);', '  a5[3] = 0;'}, '_ZN13TIsoTcpSocket13isoSendBufferEPvi': {'  return TIsoTcpSocket::SetIsoError(this, v5);', '  TIsoTcpSocket::ClrIsoError(this);'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'  v9 = *((_BYTE *)this + 80) == 0;', '    if ( (result & a3) != 0 || (v10 & a3) != 0 )'}}, 27: {'_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': {'    Area = TS7Worker::GetArea(this, *(_BYTE *)(a3 + 8), v9);', '  if ( *(_BYTE *)(a3 + 8) == 0x84 )', '  a5[1] = *(unsigned __int8 *)(a3 + 8);', '  v9 = 0;'}, '_ZN9TS7Worker7GetAreaEht': {'      if ( a2 < 0x83u )', '  if ( a2 == 0x81 )'}, '_ZN9TS7Worker19PerformFunctionReadEv': {'    TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);'}, '_ZN9TS7Worker7DoEventEjttttt': {'           a4,'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'      v23 = a5;', '      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));', '      v25 = a7;'}}, 11: {'_ZN9TS7Worker19PerformFunctionReadEv': {'  v9 = *(_WORD *)(v3 + 4);', '  v20 = v9;'}}, 12: {'_ZN9TS7Worker19PerformFunctionReadEv': {'  v9 = *(_WORD *)(v3 + 4);', '  v20 = v9;'}}}, '1': {2: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN10TMsgSocket9SckAcceptEv': {'  *((_DWORD *)this + 30) = 0;', '  return v1;'}, '_ZN16TCustomMsgServer8IncomingEi': {'  SockAddr = Msg_GetSockAddr(a2);'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN10TMsgSocket9SckAcceptEv': {'  *((_DWORD *)this + 30) = 0;', '  return v1;'}, '_ZN16TCustomMsgServer8IncomingEi': {'  SockAddr = Msg_GetSockAddr(a2);'}}}}
2025-03-08 21:20:36,501 - my_text.py:443  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Updated c_taint_c_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', '0xF0', 'unsigned', 'TIsoTcpSocket', 'v10', 'if', 'v5', '393', 'v15', 'CheckPDU', '_BYTE', 'this', '0xE0'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'_BYTE', 'ClrIsoError', 'TIsoTcpSocket', '5', 'a3', 'this', 'a2'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'result', '0xF0', 'if', '5', 'else', '_BYTE', '0xE0', 'a2'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'_BYTE', '394', 'a5', '7', 'this'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'goto', 'LABEL_8'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'return', '8', '3', '2', 'a2'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'return', 'int', 'v13', 'PDUSize', 'unsigned', 'a4', 'TIsoTcpSocket', 'v5', 'buf', 'TMsgSocket', 'RecvPacket', '7', '1126', 'this', 'v14'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'return', 'int', 'PDUSize', 'unsigned', 'TIsoTcpSocket', 'if', '0LL', '7', '0xFF9', 'this', 'a2'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'_DWORD', '28', 'TMsgSocket', 'a3', 'WaitForData', 'this'}, '_ZN10TMsgSocket11WaitForDataEii': {'return', 'int', 'WaitingData', 'result', 'unsigned', 'if', 'v4', 'this', 'TMsgSocket', '__int8', '0', 'a2', 'CanRead'}, '_ZN10TMsgSocket7CanReadEi': {'return', '1', '6', 'if', '_DWORD', 'this', '0'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'v5', '0'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'return', '8', '3', '2', 'a2'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'return', 'int', 'v13', 'PDUSize', 'unsigned', 'a4', 'TIsoTcpSocket', 'v5', 'buf', 'TMsgSocket', 'RecvPacket', '7', '1126', 'this', 'v14'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'return', 'int', 'PDUSize', 'unsigned', 'TIsoTcpSocket', 'if', '0LL', '7', '0xFF9', 'this', 'a2'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'_DWORD', '28', 'TMsgSocket', 'a3', 'WaitForData', 'this'}, '_ZN10TMsgSocket11WaitForDataEii': {'return', 'int', 'WaitingData', 'result', 'unsigned', 'if', 'v4', 'this', 'TMsgSocket', '__int8', '0', 'a2', 'CanRead'}, '_ZN10TMsgSocket7CanReadEi': {'return', '1', '6', 'if', '_DWORD', 'this', '0'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'v5', '0'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'1u', '4', 'a2', '_BYTE'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '6LL', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', 'SwapWord', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '6LL', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', 'SwapWord', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '8LL', 'result', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', '0LL', 'SwapWord', 'v3', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '8LL', 'result', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', '0LL', 'SwapWord', 'v3', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'return', '_QWORD', '1', '1LL', 'this', '_BYTE', '564', '7'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'_QWORD', '1', '1LL', '564', 'v4', 'if', '_BYTE', 'this'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {'_QWORD', '564', 'if', '10LL', 'v2', 'this', '0x1Du', '_BYTE', 'switch', '0x1Fu'}, '_ZN9TS7Worker19PerformFunctionReadEv': {'v24', 'v1', '10', '_BYTE'}}, 23: {'_ZN9TS7Worker19PerformFunctionReadEv': {'unsigned', '11', 'v2', 'v3', '__int8', 'v1'}}, 24: {'_ZN9TS7Worker19PerformFunctionReadEv': {'unsigned', '11', 'v2', 'v3', '__int8', 'v1'}}, 18: {'_ZN9TS7Worker19PerformFunctionReadEv': {'unsigned', '1', 'v12', '11', 'if', 'v25', 'v2', '_BYTE', '__int8', '0x14u', 'v1'}, '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': {'return', 'a5', '3', 'TS7Worker', 'this', '0', 'a2', 'RA_NotFound'}, '_ZN13TIsoTcpSocket13isoSendBufferEPvi': {'return', 'ClrIsoError', 'SetIsoError', 'TIsoTcpSocket', 'v5', 'this'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'80', 'result', 'a3', 'v9', 'if', 'v10', '_BYTE', 'this', '0'}}, 27: {'_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': {'Area', '8', 'GetArea', '1', 'unsigned', 'a3', 'v9', 'if', 'a5', '__int8', '_BYTE', 'TS7Worker', 'this', '0', '0x84'}, '_ZN9TS7Worker7GetAreaEht': {'0x81', '0x83u', 'if', 'a2'}, '_ZN9TS7Worker19PerformFunctionReadEv': {'int', 'v13', 'unsigned', 'loc_20000', 'DoEvent', 'v15', 'v16', 'TS7Worker', 'this', 'v14', 'v17'}, '_ZN9TS7Worker7DoEventEjttttt': {'a4'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'pthread_mutex_t', 'v23', '11', 'a5', 'pthread_mutex_lock', 'a7', 'this', 'v25'}}, 11: {'_ZN9TS7Worker19PerformFunctionReadEv': {'_WORD', 'v20', 'v9', '4', 'v3'}}, 12: {'_ZN9TS7Worker19PerformFunctionReadEv': {'_WORD', 'v20', 'v9', '4', 'v3'}}}, '1': {2: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN10TMsgSocket9SckAcceptEv': {'  *((_DWORD *)this + 30) = 0;', '  return v1;'}, '_ZN16TCustomMsgServer8IncomingEi': {'  SockAddr = Msg_GetSockAddr(a2);'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN10TMsgSocket9SckAcceptEv': {'  *((_DWORD *)this + 30) = 0;', '  return v1;'}, '_ZN16TCustomMsgServer8IncomingEi': {'  SockAddr = Msg_GetSockAddr(a2);'}}}}
2025-03-08 21:20:36,502 - my_text.py:460  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 var_flow: {'2': {5: {'_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a3', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v15', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:var_40', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v10', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a5', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_58'}, 2: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 3: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 13: {'_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 14: {'_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 15: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 16: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 8: {'_ZN9TS7Worker17IsoPerformCommandERi:v4'}, 17: {'_ZN9TS7Worker17PerformPDURequestERi:v2', '_ZN9TS7Worker19PerformFunctionReadEv:v1', '_ZN9TS7Worker19PerformFunctionReadEv:v24', '_ZN9TS7Worker19PerformFunctionReadEv:var_103C'}, 23: {'_ZN9TS7Worker19PerformFunctionReadEv:v3', '_ZN9TS7Worker19PerformFunctionReadEv:v2', '_ZN9TS7Worker19PerformFunctionReadEv:v1', '_ZN9TS7Worker19PerformFunctionReadEv:var_1068'}, 24: {'_ZN9TS7Worker19PerformFunctionReadEv:v3', '_ZN9TS7Worker19PerformFunctionReadEv:v2', '_ZN9TS7Worker19PerformFunctionReadEv:v1', '_ZN9TS7Worker19PerformFunctionReadEv:var_1068'}, 18: {'_ZN9TS7Worker19PerformFunctionReadEv:v12', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:var_20', '_ZN9TS7Worker19PerformFunctionReadEv:var_103B', '_ZN16TCustomMsgServer7DoEventEijttttt:v9', '_ZN16TCustomMsgServer7DoEventEijttttt:v10', '_ZN9TS7Worker19PerformFunctionReadEv:v2', '_ZN13TIsoTcpSocket13isoSendBufferEPvi:v5', '_ZN16TCustomMsgServer7DoEventEijttttt:a3', '_ZN16TCustomMsgServer7DoEventEijttttt:var_18', '_ZN9TS7Worker19PerformFunctionReadEv:v25', '_ZN13TIsoTcpSocket13isoSendBufferEPvi:var_10', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:a5', '_ZN9TS7Worker19PerformFunctionReadEv:v1', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:a2'}, 27: {'_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_ZN9TS7Worker19PerformFunctionReadEv:v16', '_ZN16TCustomMsgServer7DoEventEijttttt:a5', '_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_ZN9TS7Worker19PerformFunctionReadEv:v17', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:v9', '_ZN9TS7Worker19PerformFunctionReadEv:v15', '_ZN9TS7Worker19PerformFunctionReadEv:v13', '_ZN9TS7Worker7DoEventEjttttt:a4', '_ZN16TCustomMsgServer7DoEventEijttttt:var_36', '_ZN16TCustomMsgServer7DoEventEijttttt:v23', '_ZN9TS7Worker7GetAreaEht:a2', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:a3', '_ZN16TCustomMsgServer7DoEventEijttttt:var_68', '_ZN9TS7Worker19PerformFunctionReadEv:v14', '_ZN9TS7Worker19PerformFunctionReadEv:var_1056', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:a5'}, 11: {'_ZN9TS7Worker19PerformFunctionReadEv:v3', '_ZN9TS7Worker19PerformFunctionReadEv:v20', '_ZN9TS7Worker19PerformFunctionReadEv:var_1044', '_ZN9TS7Worker19PerformFunctionReadEv:v9'}, 12: {'_ZN9TS7Worker19PerformFunctionReadEv:v3', '_ZN9TS7Worker19PerformFunctionReadEv:v20', '_ZN9TS7Worker19PerformFunctionReadEv:var_1044', '_ZN9TS7Worker19PerformFunctionReadEv:v9'}}, '1': {5: {'_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a3', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v15', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:var_40', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v10', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a5', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_58'}, 2: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 3: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 13: {'_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 14: {'_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 15: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 16: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 8: {'_ZN9TS7Worker17IsoPerformCommandERi:v4'}, 17: {'_ZN9TS7Worker17PerformPDURequestERi:v2', '_ZN9TS7Worker19PerformFunctionReadEv:v1', '_ZN9TS7Worker19PerformFunctionReadEv:v24', '_ZN9TS7Worker19PerformFunctionReadEv:var_103C'}, 23: {'_ZN9TS7Worker19PerformFunctionReadEv:v3', '_ZN9TS7Worker19PerformFunctionReadEv:v2', '_ZN9TS7Worker19PerformFunctionReadEv:v1', '_ZN9TS7Worker19PerformFunctionReadEv:var_1068'}, 24: {'_ZN9TS7Worker19PerformFunctionReadEv:v3', '_ZN9TS7Worker19PerformFunctionReadEv:v2', '_ZN9TS7Worker19PerformFunctionReadEv:v1', '_ZN9TS7Worker19PerformFunctionReadEv:var_1068'}, 18: {'_ZN9TS7Worker19PerformFunctionReadEv:v12', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:var_20', '_ZN9TS7Worker19PerformFunctionReadEv:var_103B', '_ZN16TCustomMsgServer7DoEventEijttttt:v9', '_ZN16TCustomMsgServer7DoEventEijttttt:v10', '_ZN9TS7Worker19PerformFunctionReadEv:v2', '_ZN13TIsoTcpSocket13isoSendBufferEPvi:v5', '_ZN16TCustomMsgServer7DoEventEijttttt:a3', '_ZN16TCustomMsgServer7DoEventEijttttt:var_18', '_ZN9TS7Worker19PerformFunctionReadEv:v25', '_ZN13TIsoTcpSocket13isoSendBufferEPvi:var_10', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:a5', '_ZN9TS7Worker19PerformFunctionReadEv:v1', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:a2'}, 27: {'_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_ZN9TS7Worker19PerformFunctionReadEv:v16', '_ZN16TCustomMsgServer7DoEventEijttttt:a5', '_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_ZN9TS7Worker19PerformFunctionReadEv:v17', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:v9', '_ZN9TS7Worker19PerformFunctionReadEv:v15', '_ZN9TS7Worker19PerformFunctionReadEv:v13', '_ZN9TS7Worker7DoEventEjttttt:a4', '_ZN16TCustomMsgServer7DoEventEijttttt:var_36', '_ZN16TCustomMsgServer7DoEventEijttttt:v23', '_ZN9TS7Worker7GetAreaEht:a2', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:a3', '_ZN16TCustomMsgServer7DoEventEijttttt:var_68', '_ZN9TS7Worker19PerformFunctionReadEv:v14', '_ZN9TS7Worker19PerformFunctionReadEv:var_1056', '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv:a5'}, 11: {'_ZN9TS7Worker19PerformFunctionReadEv:v3', '_ZN9TS7Worker19PerformFunctionReadEv:v20', '_ZN9TS7Worker19PerformFunctionReadEv:var_1044', '_ZN9TS7Worker19PerformFunctionReadEv:v9'}, 12: {'_ZN9TS7Worker19PerformFunctionReadEv:v3', '_ZN9TS7Worker19PerformFunctionReadEv:v20', '_ZN9TS7Worker19PerformFunctionReadEv:var_1044', '_ZN9TS7Worker19PerformFunctionReadEv:v9'}}}
2025-03-08 21:20:36,502 - my_text.py:478  - Key pair (2, 3): Similarity = 1.0
2025-03-08 21:20:36,502 - my_text.py:478  - Key pair (13, 14): Similarity = 1.0
2025-03-08 21:20:36,502 - my_text.py:478  - Key pair (15, 16): Similarity = 1.0
2025-03-08 21:20:36,503 - my_text.py:478  - Key pair (23, 24): Similarity = 1.0
2025-03-08 21:20:36,503 - my_text.py:478  - Key pair (11, 12): Similarity = 1.0
2025-03-08 21:20:36,503 - my_text.py:482  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Similarity matrix: {(5, 6): 0.0, (6, 2): 0.0, (2, 3): 1.0, (3, 4): 0.09090909090909091, (4, 13): 0.0, (13, 14): 1.0, (14, 15): 0.6666666666666666, (15, 16): 1.0, (16, 8): 0.0, (8, 17): 0.0, (17, 23): 0.14285714285714285, (23, 24): 1.0, (24, 18): 0.125, (18, 27): 0.03333333333333333, (27, 11): 0.0, (11, 12): 1.0}
2025-03-08 21:20:36,503 - my_text.py:519  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Merged queue: [(2, 3), (4,), (5,), (6,), (8,), (11, 12), (13, 14), (15, 16), (17,), (18,), (23, 24), (27,)]
2025-03-08 21:20:36,503 - my_text.py:525  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 used_fields: ['2,3', '4', '5', '6', '8', '11,12', '13,14', '15,16', '17', '18', '23,24', '27']
2025-03-08 21:20:36,503 - my_text.py:541  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 data_new: {(2, 3): {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['v5', 'a4', 'v14', 'v13'], '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': ['v5', 'var_48'], '_ZN10TMsgSocket11WaitForDataEii': ['a2', 'v4'], '_ZN13TIsoTcpSocket7PDUSizeEPv': ['a2'], '_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a2'], '_ZN10TMsgSocket10RecvPacketEPvi': ['a3']}, (4,): {'_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a2']}, (5,): {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['v10', 'v5', 'v15', 'var_40'], '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': ['a2'], '_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a3', 'a2']}, (6,): {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['a5'], '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': ['var_58']}, (8,): {'_ZN9TS7Worker17IsoPerformCommandERi': ['v4']}, (11, 12): {'_ZN9TS7Worker19PerformFunctionReadEv': ['v3', 'v20', 'var_1044', 'v9']}, (13, 14): {'_ZN9TSnapBase8SwapWordEt': ['a2'], '_ZN9TS7Worker11CheckPDU_inEi': ['v2']}, (15, 16): {'_ZN9TS7Worker11CheckPDU_inEi': ['v3', 'v2'], '_ZN9TSnapBase8SwapWordEt': ['a2']}, (17,): {'_ZN9TS7Worker17PerformPDURequestERi': ['v2'], '_ZN9TS7Worker19PerformFunctionReadEv': ['v1', 'v24', 'var_103C']}, (18,): {'_ZN9TS7Worker19PerformFunctionReadEv': ['v12', 'var_103B', 'v2', 'v25', 'v1'], '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': ['var_20', 'a5', 'a2'], '_ZN16TCustomMsgServer7DoEventEijttttt': ['v9', 'v10', 'a3', 'var_18'], '_ZN13TIsoTcpSocket13isoSendBufferEPvi': ['v5', 'var_10']}, (23, 24): {'_ZN9TS7Worker19PerformFunctionReadEv': ['v3', 'v2', 'var_1068', 'v1']}, (27,): {'_ZN16TCustomMsgServer7DoEventEijttttt': ['a7', 'var_36', 'var_68', 'v25', 'a5', 'v23'], '_ZN9TS7Worker19PerformFunctionReadEv': ['v15', 'v13', 'v14', 'v16', 'v17', 'var_1056'], '_ZN9TS7Worker7DoEventEjttttt': ['a4'], '_ZN9TS7Worker7GetAreaEht': ['a2'], '_ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv': ['v9', 'a3', 'a5']}}
2025-03-08 21:20:36,503 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (2, 3)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvPDU(TIsoTcpSocket *this, char *a2)\n{\n  int v2; // r14d\n  char *v3; // r15\n  int v4; // ebp\n  unsigned int v5; // ebx\n  int v7; // ebp\n  unsigned int v8; // eax\n  bool v9; // [rsp+10h] [rbp-58h] BYREF\n  int v10[18]; // [rsp+20h] [rbp-48h] BYREF\n\n  v2 = 1;\n  v3 = (char *)this + 395;\n  v4 = 0;\n  v9 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  while ( 1 )\n  {\n    do\n    {\n      v3 += v4;\n      if ( 4096 - v4 <= 0 )\n        break;\n      v5 = TIsoTcpSocket::isoRecvFragment(this, v3, 4096 - v4, v10, &v9);\n      if ( v5 )\n        goto LABEL_4;\n      if ( v9 )\n        goto LABEL_8;\n      ++v2;\n      v4 += v10[0];\n    }\n    while ( v2 <= *((_DWORD *)this + 96) );\n    v8 = TIsoTcpSocket::SetIsoError(this, 458752);\n    v5 = v8;\n    if ( v9 )\n      break;\n    if ( v8 )\n      goto LABEL_4;\n  }\n  if ( v8 )\n  {\nLABEL_4:\n    if ( *((_DWORD *)this + 30) != 104 )\n      TMsgSocket::Purge(this);\n    return v5;\n  }\nLABEL_8:\n  v5 = 0;\n  v7 = v10[0] + v4 + 7;\n  *((_BYTE *)this + 391) = v7;\n  *((_BYTE *)this + 390) = BYTE1(v7);\n  if ( (char *)this + 388 != a2 )\n    memcpy(a2, (char *)this + 388, v7);\n  return v5;\n}\n\n                        \n                        Function Name: _ZN10TMsgSocket11WaitForDataEii\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TMsgSocket::WaitForData(TMsgSocket *this, int a2, unsigned int a3)\n{\n  bool v4; // cc\n  __int64 result; // rax\n  unsigned int v6[10]; // [rsp+0h] [rbp-28h] BYREF\n\n  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )\n  {\n    *((_DWORD *)this + 30) = 104;\n    result = 104LL;\nLABEL_12:\n    *((_BYTE *)this + 124) = 0;\n    return result;\n  }\n  *((_DWORD *)this + 30) = 0;\n  v6[0] = SysGetTick();\n  while ( 1 )\n  {\n    v4 = (int)TMsgSocket::WaitingData(this) < a2;\n    result = *((unsigned int *)this + 30);\n    if ( !v4 || (_DWORD)result )\n      break;\n    if ( (unsigned int)DeltaTime(v6) < a3 )\n      SysSleep(1u);\n    else\n      *((_DWORD *)this + 30) = 110;\n  }\n  if ( (_DWORD)result == 104 )\n    goto LABEL_12;\n  return result;\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket7PDUSizeEPv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::PDUSize(TIsoTcpSocket *this, unsigned __int8 *a2)\n{\n  return a2[3] + (a2[2] << 8);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                        \n                        Function Name: _ZN10TMsgSocket10RecvPacketEPvi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TMsgSocket::RecvPacket(TMsgSocket *this, void *buf, int a3)\n{\n  __int64 result; // rax\n  int v5; // eax\n\n  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));\n  result = *((unsigned int *)this + 30);\n  if ( (_DWORD)result )\n  {\n    if ( (_DWORD)result != 110 )\n      goto LABEL_6;\n    TMsgSocket::Purge(this);\n    goto LABEL_9;\n  }\n  v5 = recv(*((_DWORD *)this + 6), buf, a3, 0x4000);\n  if ( !v5 )\n  {\n    *((_DWORD *)this + 30) = 104;\nLABEL_4:\n    *((_BYTE *)this + 124) = 0;\n    return 104LL;\n  }\n  if ( v5 >= 0 )\n  {\nLABEL_9:\n    result = *((unsigned int *)this + 30);\n    goto LABEL_6;\n  }\n  result = TMsgSocket::GetLastSocketError(this);\n  *((_DWORD *)this + 30) = result;\nLABEL_6:\n  if ( (_DWORD)result == 104 )\n    goto LABEL_4;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (2, 3) appear to "contaminate" the global variables  and local variables v5, a4, v14, v13, v5, var_48, a2, v4, a2, a2, a3. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (2, 3) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:37,430 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
unsigned int, length
```
2025-03-08 21:20:39,431 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (4,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (4,) appear to "contaminate" the global variables  and local variables a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (4,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:40,487 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
unsigned char, length
```
2025-03-08 21:20:42,489 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (5,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::IsoPeek(TIsoTcpSocket *a1, unsigned __int8 *a2, _DWORD *a3)\n{\n  __int64 result; // rax\n\n  result = TIsoTcpSocket::PDUSize(a1, a2);\n  if ( (_DWORD)result == 7 )\n  {\n    *a3 = 2;\n  }\n  else if ( (unsigned int)result <= 6 )\n  {\n    *a3 = 3;\n  }\n  else\n  {\n    result = a2[5];\n    if ( (_BYTE)result == 0xE0 )\n    {\n      *a3 = 0;\n    }\n    else if ( (_BYTE)result == 0xF0 )\n    {\n      *a3 = 5;\n    }\n    else\n    {\n      result = 3 * (unsigned int)((_BYTE)result != 0x80) + 1;\n      *a3 = result;\n    }\n  }\n  return result;\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (5,) appear to "contaminate" the global variables  and local variables v10, v5, v15, var_40, a2, a3, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (5,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:43,352 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
int, length
```
2025-03-08 21:20:45,354 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (6,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvPDU(TIsoTcpSocket *this, char *a2)\n{\n  int v2; // r14d\n  char *v3; // r15\n  int v4; // ebp\n  unsigned int v5; // ebx\n  int v7; // ebp\n  unsigned int v8; // eax\n  bool v9; // [rsp+10h] [rbp-58h] BYREF\n  int v10[18]; // [rsp+20h] [rbp-48h] BYREF\n\n  v2 = 1;\n  v3 = (char *)this + 395;\n  v4 = 0;\n  v9 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  while ( 1 )\n  {\n    do\n    {\n      v3 += v4;\n      if ( 4096 - v4 <= 0 )\n        break;\n      v5 = TIsoTcpSocket::isoRecvFragment(this, v3, 4096 - v4, v10, &v9);\n      if ( v5 )\n        goto LABEL_4;\n      if ( v9 )\n        goto LABEL_8;\n      ++v2;\n      v4 += v10[0];\n    }\n    while ( v2 <= *((_DWORD *)this + 96) );\n    v8 = TIsoTcpSocket::SetIsoError(this, 458752);\n    v5 = v8;\n    if ( v9 )\n      break;\n    if ( v8 )\n      goto LABEL_4;\n  }\n  if ( v8 )\n  {\nLABEL_4:\n    if ( *((_DWORD *)this + 30) != 104 )\n      TMsgSocket::Purge(this);\n    return v5;\n  }\nLABEL_8:\n  v5 = 0;\n  v7 = v10[0] + v4 + 7;\n  *((_BYTE *)this + 391) = v7;\n  *((_BYTE *)this + 390) = BYTE1(v7);\n  if ( (char *)this + 388 != a2 )\n    memcpy(a2, (char *)this + 388, v7);\n  return v5;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (6,) appear to "contaminate" the global variables  and local variables a5, var_58. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (6,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:46,213 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
int, length
```
2025-03-08 21:20:48,215 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (8,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker17IsoPerformCommandERi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::IsoPerformCommand(TS7Worker *this, int *a2)\n{\n  int v3; // esi\n  char v4; // al\n\n  v3 = *a2;\n  if ( !v3 )\n    return TS7Worker::PerformPDUAck(this, a2);\n  if ( !(unsigned __int8)TS7Worker::CheckPDU_in(this, v3) )\n  {\n    TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 2u, *(_WORD *)a2, 0, 0, 0);\n    return 0LL;\n  }\n  v4 = *(_BYTE *)(*((_QWORD *)this + 564) + 1LL);\n  if ( v4 == 1 )\n    return TS7Worker::PerformPDURequest(this, a2);\n  if ( v4 != 7 )\n    return 0LL;\n  return TS7Worker::PerformPDUUsrData(this, a2);\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (8,) appear to "contaminate" the global variables  and local variables v4. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (8,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:49,178 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
int, length
```
2025-03-08 21:20:51,179 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (11, 12)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker19PerformFunctionReadEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionRead(TS7Worker *this)\n{\n  __int64 v1; // r13\n  int v2; // r12d\n  __int64 v3; // rax\n  int v4; // ebx\n  int v5; // r14d\n  unsigned __int16 v6; // ax\n  unsigned __int16 v7; // bx\n  int v8; // r14d\n  __int16 v9; // ax\n  unsigned __int16 Area; // ax\n  int v12; // [rsp+1Ch] [rbp-107Ch]\n  unsigned __int16 v13; // [rsp+40h] [rbp-1058h]\n  unsigned __int16 v14; // [rsp+42h] [rbp-1056h]\n  unsigned __int16 v15; // [rsp+44h] [rbp-1054h]\n  unsigned __int16 v16; // [rsp+46h] [rbp-1052h]\n  unsigned __int16 v17; // [rsp+48h] [rbp-1050h]\n  char v18[2]; // [rsp+50h] [rbp-1048h] BYREF\n  __int16 v19; // [rsp+52h] [rbp-1046h]\n  __int16 v20; // [rsp+54h] [rbp-1044h]\n  __int16 v21; // [rsp+56h] [rbp-1042h]\n  __int16 v22; // [rsp+58h] [rbp-1040h]\n  __int16 v23; // [rsp+5Ah] [rbp-103Eh]\n  char v24; // [rsp+5Ch] [rbp-103Ch]\n  char v25; // [rsp+5Dh] [rbp-103Bh]\n  unsigned __int64 v26; // [rsp+1058h] [rbp-40h]\n\n  v1 = *((_QWORD *)this + 564);\n  v26 = __readfsqword(0x28u);\n  v2 = *(unsigned __int8 *)(v1 + 11);\n  v3 = v1;\n  if ( (unsigned __int8)v2 > 0x14u )\n  {\n    *(_BYTE *)(v1 + 11) = 20;\n    v12 = 19;\n    v2 = 20;\n    goto LABEL_3;\n  }\n  if ( *(_BYTE *)(v1 + 11) )\n  {\n    v12 = v2 - 1;\n    if ( v2 == 1 )\n    {\n      Area = TS7Worker::ReadArea(this);\n      if ( v12 > 0 )\n        Area -= ((Area & 1) == 0) - 1;\n      v5 = Area + 6;\n      goto LABEL_7;\n    }\nLABEL_3:\n    v4 = 0;\n    v5 = 2;\n    do\n    {\n      v6 = TS7Worker::ReadArea(this);\n      if ( v4 < v12 )\n        v6 -= ((v6 & 1) == 0) - 1;\n      v5 += v6 + 4;\n      ++v4;\n      TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n    }\n    while ( v4 < v2 );\nLABEL_7:\n    v7 = v5 - 2;\n    v3 = *((_QWORD *)this + 564);\n    v8 = v5 + 12;\n    goto LABEL_8;\n  }\n  v8 = 14;\n  v7 = 0;\nLABEL_8:\n  v9 = *(_WORD *)(v3 + 4);\n  v18[0] = 50;\n  v18[1] = 3;\n  v19 = 0;\n  v20 = v9;\n  v21 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 2u);\n  v23 = 0;\n  v22 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v7);\n  v24 = *(_BYTE *)(v1 + 10);\n  v25 = *(_BYTE *)(v1 + 11);\n  TIsoTcpSocket::isoSendBuffer(this, v18, v8);\n  if ( v2 == 1 )\n    TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n  return 1LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (11, 12) appear to "contaminate" the global variables  and local variables v3, v20, var_1044, v9. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (11, 12) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:52,033 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
unsigned __int16, length
```
2025-03-08 21:20:54,034 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (13, 14)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker11CheckPDU_inEi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        _BOOL8 __fastcall TS7Worker::CheckPDU_in(TS7Worker *this, int a2)\n{\n  int v2; // r13d\n  int v3; // edx\n  _BOOL8 result; // rax\n\n  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));\n  v3 = v2\n     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))\n     + 10;\n  result = 0LL;\n  if ( v3 == a2 )\n    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (13, 14) appear to "contaminate" the global variables  and local variables a2, v2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (13, 14) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:54,814 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
int, length
```
2025-03-08 21:20:56,816 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (15, 16)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker11CheckPDU_inEi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        _BOOL8 __fastcall TS7Worker::CheckPDU_in(TS7Worker *this, int a2)\n{\n  int v2; // r13d\n  int v3; // edx\n  _BOOL8 result; // rax\n\n  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));\n  v3 = v2\n     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))\n     + 10;\n  result = 0LL;\n  if ( v3 == a2 )\n    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (15, 16) appear to "contaminate" the global variables  and local variables v3, v2, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (15, 16) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:20:57,750 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
unsigned int, length
```
2025-03-08 21:20:59,751 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (17,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker17PerformPDURequestERi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformPDURequest(TS7Worker *this, int *a2)\n{\n  unsigned __int8 v2; // al\n\n  v2 = *(_BYTE *)(*((_QWORD *)this + 564) + 10LL);\n  if ( v2 > 0x1Fu )\n  {\n    if ( v2 < 0x28u )\n      goto LABEL_5;\n    if ( v2 <= 0x29u )\n      return TS7Worker::PerformFunctionControl(this, v2);\n    if ( v2 != 0xF0 )\n      goto LABEL_5;\n    return TS7Worker::PerformFunctionNegotiate(this);\n  }\n  else\n  {\n    if ( v2 >= 0x1Du )\n      return TS7Worker::PerformFunctionUpload(this);\n    switch ( v2 )\n    {\n      case 5u:\n        return TS7Worker::PerformFunctionWrite(this);\n      case 0x1Au:\n        return TS7Worker::PerformFunctionDownload(this);\n      case 4u:\n        return TS7Worker::PerformFunctionRead(this);\n      default:\nLABEL_5:\n        TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 4u, *(_WORD *)a2, 0, 0, 0);\n        return 1LL;\n    }\n  }\n}\n\n                        \n                        Function Name: _ZN9TS7Worker19PerformFunctionReadEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionRead(TS7Worker *this)\n{\n  __int64 v1; // r13\n  int v2; // r12d\n  __int64 v3; // rax\n  int v4; // ebx\n  int v5; // r14d\n  unsigned __int16 v6; // ax\n  unsigned __int16 v7; // bx\n  int v8; // r14d\n  __int16 v9; // ax\n  unsigned __int16 Area; // ax\n  int v12; // [rsp+1Ch] [rbp-107Ch]\n  unsigned __int16 v13; // [rsp+40h] [rbp-1058h]\n  unsigned __int16 v14; // [rsp+42h] [rbp-1056h]\n  unsigned __int16 v15; // [rsp+44h] [rbp-1054h]\n  unsigned __int16 v16; // [rsp+46h] [rbp-1052h]\n  unsigned __int16 v17; // [rsp+48h] [rbp-1050h]\n  char v18[2]; // [rsp+50h] [rbp-1048h] BYREF\n  __int16 v19; // [rsp+52h] [rbp-1046h]\n  __int16 v20; // [rsp+54h] [rbp-1044h]\n  __int16 v21; // [rsp+56h] [rbp-1042h]\n  __int16 v22; // [rsp+58h] [rbp-1040h]\n  __int16 v23; // [rsp+5Ah] [rbp-103Eh]\n  char v24; // [rsp+5Ch] [rbp-103Ch]\n  char v25; // [rsp+5Dh] [rbp-103Bh]\n  unsigned __int64 v26; // [rsp+1058h] [rbp-40h]\n\n  v1 = *((_QWORD *)this + 564);\n  v26 = __readfsqword(0x28u);\n  v2 = *(unsigned __int8 *)(v1 + 11);\n  v3 = v1;\n  if ( (unsigned __int8)v2 > 0x14u )\n  {\n    *(_BYTE *)(v1 + 11) = 20;\n    v12 = 19;\n    v2 = 20;\n    goto LABEL_3;\n  }\n  if ( *(_BYTE *)(v1 + 11) )\n  {\n    v12 = v2 - 1;\n    if ( v2 == 1 )\n    {\n      Area = TS7Worker::ReadArea(this);\n      if ( v12 > 0 )\n        Area -= ((Area & 1) == 0) - 1;\n      v5 = Area + 6;\n      goto LABEL_7;\n    }\nLABEL_3:\n    v4 = 0;\n    v5 = 2;\n    do\n    {\n      v6 = TS7Worker::ReadArea(this);\n      if ( v4 < v12 )\n        v6 -= ((v6 & 1) == 0) - 1;\n      v5 += v6 + 4;\n      ++v4;\n      TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n    }\n    while ( v4 < v2 );\nLABEL_7:\n    v7 = v5 - 2;\n    v3 = *((_QWORD *)this + 564);\n    v8 = v5 + 12;\n    goto LABEL_8;\n  }\n  v8 = 14;\n  v7 = 0;\nLABEL_8:\n  v9 = *(_WORD *)(v3 + 4);\n  v18[0] = 50;\n  v18[1] = 3;\n  v19 = 0;\n  v20 = v9;\n  v21 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 2u);\n  v23 = 0;\n  v22 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v7);\n  v24 = *(_BYTE *)(v1 + 10);\n  v25 = *(_BYTE *)(v1 + 11);\n  TIsoTcpSocket::isoSendBuffer(this, v18, v8);\n  if ( v2 == 1 )\n    TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n  return 1LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (17,) appear to "contaminate" the global variables  and local variables v2, v1, v24, var_103C. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (17,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:00,800 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
unsigned __int8, length
```
2025-03-08 21:21:02,800 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (18,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker19PerformFunctionReadEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionRead(TS7Worker *this)\n{\n  __int64 v1; // r13\n  int v2; // r12d\n  __int64 v3; // rax\n  int v4; // ebx\n  int v5; // r14d\n  unsigned __int16 v6; // ax\n  unsigned __int16 v7; // bx\n  int v8; // r14d\n  __int16 v9; // ax\n  unsigned __int16 Area; // ax\n  int v12; // [rsp+1Ch] [rbp-107Ch]\n  unsigned __int16 v13; // [rsp+40h] [rbp-1058h]\n  unsigned __int16 v14; // [rsp+42h] [rbp-1056h]\n  unsigned __int16 v15; // [rsp+44h] [rbp-1054h]\n  unsigned __int16 v16; // [rsp+46h] [rbp-1052h]\n  unsigned __int16 v17; // [rsp+48h] [rbp-1050h]\n  char v18[2]; // [rsp+50h] [rbp-1048h] BYREF\n  __int16 v19; // [rsp+52h] [rbp-1046h]\n  __int16 v20; // [rsp+54h] [rbp-1044h]\n  __int16 v21; // [rsp+56h] [rbp-1042h]\n  __int16 v22; // [rsp+58h] [rbp-1040h]\n  __int16 v23; // [rsp+5Ah] [rbp-103Eh]\n  char v24; // [rsp+5Ch] [rbp-103Ch]\n  char v25; // [rsp+5Dh] [rbp-103Bh]\n  unsigned __int64 v26; // [rsp+1058h] [rbp-40h]\n\n  v1 = *((_QWORD *)this + 564);\n  v26 = __readfsqword(0x28u);\n  v2 = *(unsigned __int8 *)(v1 + 11);\n  v3 = v1;\n  if ( (unsigned __int8)v2 > 0x14u )\n  {\n    *(_BYTE *)(v1 + 11) = 20;\n    v12 = 19;\n    v2 = 20;\n    goto LABEL_3;\n  }\n  if ( *(_BYTE *)(v1 + 11) )\n  {\n    v12 = v2 - 1;\n    if ( v2 == 1 )\n    {\n      Area = TS7Worker::ReadArea(this);\n      if ( v12 > 0 )\n        Area -= ((Area & 1) == 0) - 1;\n      v5 = Area + 6;\n      goto LABEL_7;\n    }\nLABEL_3:\n    v4 = 0;\n    v5 = 2;\n    do\n    {\n      v6 = TS7Worker::ReadArea(this);\n      if ( v4 < v12 )\n        v6 -= ((v6 & 1) == 0) - 1;\n      v5 += v6 + 4;\n      ++v4;\n      TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n    }\n    while ( v4 < v2 );\nLABEL_7:\n    v7 = v5 - 2;\n    v3 = *((_QWORD *)this + 564);\n    v8 = v5 + 12;\n    goto LABEL_8;\n  }\n  v8 = 14;\n  v7 = 0;\nLABEL_8:\n  v9 = *(_WORD *)(v3 + 4);\n  v18[0] = 50;\n  v18[1] = 3;\n  v19 = 0;\n  v20 = v9;\n  v21 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 2u);\n  v23 = 0;\n  v22 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v7);\n  v24 = *(_BYTE *)(v1 + 10);\n  v25 = *(_BYTE *)(v1 + 11);\n  TIsoTcpSocket::isoSendBuffer(this, v18, v8);\n  if ( v2 == 1 )\n    TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n  return 1LL;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::ReadArea(TS7Worker *this, __int64 a2, __int64 a3, int *a4, _WORD *a5)\n{\n  unsigned __int16 v9; // ax\n  __int64 Area; // r13\n  int v11; // r11d\n  char v12; // dl\n  char v13; // al\n  int v14; // eax\n  unsigned int v15; // r10d\n  unsigned int v16; // esi\n  unsigned int v17; // eax\n  char v18; // dl\n  int v19; // r14d\n  unsigned int v20; // r9d\n  __int64 v21; // rax\n  char v22; // al\n  unsigned int v23; // r10d\n  unsigned __int16 v24; // si\n  pthread_mutex_t *v26; // r13\n  int n; // [rsp+10h] [rbp-58h]\n  unsigned int na; // [rsp+10h] [rbp-58h]\n  unsigned int nb; // [rsp+10h] [rbp-58h]\n  TSnapBase *v30; // [rsp+18h] [rbp-50h]\n  void *src; // [rsp+20h] [rbp-48h]\n  int v32; // [rsp+28h] [rbp-40h]\n  unsigned __int8 v33; // [rsp+2Fh] [rbp-39h]\n\n  a5[3] = 0;\n  a5[4] = 0;\n  *a5 = 0;\n  a5[2] = 0;\n  a5[1] = *(unsigned __int8 *)(a3 + 8);\n  v9 = 0;\n  if ( *(_BYTE *)(a3 + 8) == 0x84 )\n  {\n    v9 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 6));\n    a5[2] = v9;\n  }\n  if ( *(_BYTE *)(*((_QWORD *)this + 1084) + 24792LL) )\n  {\n    Area = 0LL;\n  }\n  else\n  {\n    Area = TS7Worker::GetArea(this, *(_BYTE *)(a3 + 8), v9);\n    if ( !Area )\n      return TS7Worker::RA_NotFound(this, a2, a5);\n  }\n  v11 = TS7Worker::DataSizeByte(this, *(unsigned __int8 *)(a3 + 3));\n  if ( !v11 )\n    return TS7Worker::RA_OutOfRange(this, a2, a5);\n  v12 = *(_BYTE *)(a3 + 3);\n  v13 = *(_BYTE *)(a3 + 8);\n  if ( (v12 == 29) != (v13 == 29) || (v12 == 28) != (v13 == 28) )\n    return TS7Worker::RA_OutOfRange(this, a2, a5);\n  n = v11;\n  v30 = (TS7Worker *)((char *)this + 8);\n  v32 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 4));\n  v14 = *a4;\n  v15 = n * v32;\n  a5[4] = n * v32;\n  if ( v14 == n * v32 )\n    return TS7Worker::RA_SizeOverPDU(this, a2, a5);\n  *a4 = v14 - v15;\n  if ( *(_BYTE *)(a3 + 3) == 1 && v15 > 1 )\n    return TS7Worker::RA_OutOfRange(this, a2, a5);\n  v16 = *(_DWORD *)(a3 + 8);\n  na = n * v32;\n  LOBYTE(v16) = 0;\n  v17 = TSnapBase::SwapDWord(v30, v16);\n  v18 = *(_BYTE *)(a3 + 3);\n  if ( v18 != 29 && v18 != 1 )\n  {\n    if ( v18 == 28 )\n    {\n      v19 = v17;\nLABEL_34:\n      v20 = v17 >> 1;\n      goto LABEL_15;\n    }\n    if ( (v17 & 7) != 0 )\n      return TS7Worker::RA_OutOfRange(this, a2, a5);\n  }\n  v19 = v17;\n  if ( v18 != 1 )\n  {\n    v19 = v17 >> 3;\n    if ( v18 == 29 )\n      v19 = v17;\n  }\n  v20 = v17 >> 3;\n  v33 = v17 & 7;\n  if ( (unsigned __int8)(v18 - 28) <= 1u )\n    goto LABEL_34;\nLABEL_15:\n  v21 = *((_QWORD *)this + 1084);\n  a5[3] = v20;\n  if ( !*(_BYTE *)(v21 + 24792) )\n  {\n    if ( *(unsigned __int16 *)(Area + 2) < v20 + na )\n      return TS7Worker::RA_OutOfRange(this, a2, a5);\n    src = (void *)(*(_QWORD *)(Area + 8) + v20);\n  }\n  TS7Worker::DoReadEvent(this, (unsigned int)&loc_20000, 0, a5[1], a5[2], v20, a5[4]);\n  if ( *(_BYTE *)(*((_QWORD *)this + 1084) + 24792LL) )\n  {\n    memset((void *)(a2 + 4), 0, na);\n    v22 = TSnap7Server::DoReadArea(\n            *((TSnap7Server **)this + 1084),\n            *((_DWORD *)this + 15),\n            (unsigned __int16)a5[1],\n            (unsigned __int16)a5[2],\n            v19,\n            v32,\n            *(unsigned __int8 *)(a3 + 3),\n            (void *)(a2 + 4));\n    v23 = na;\n    if ( v22 )\n      goto LABEL_20;\n    return TS7Worker::RA_NotFound(this, a2, a5);\n  }\n  v26 = *(pthread_mutex_t **)(Area + 16);\n  pthread_mutex_lock(v26);\n  memcpy((void *)(a2 + 4), src, na);\n  pthread_mutex_unlock(v26);\n  v23 = na;\nLABEL_20:\n  *(_BYTE *)a2 = -1;\n  switch ( *(_BYTE *)(a3 + 3) )\n  {\n    case 1:\n      *(_BYTE *)(a2 + 1) = 3;\n      *(_BYTE *)(a2 + 4) = (BitMask[v33] & *(_BYTE *)(a2 + 4)) != 0;\n      v24 = v23;\n      break;\n    case 3:\n    case 0x1C:\n    case 0x1D:\n      *(_BYTE *)(a2 + 1) = 9;\n      v24 = v23;\n      break;\n    case 5:\n    case 7:\n      *(_BYTE *)(a2 + 1) = 5;\n      goto LABEL_22;\n    case 8:\n      *(_BYTE *)(a2 + 1) = 7;\n      v24 = v23;\n      break;\n    default:\n      *(_BYTE *)(a2 + 1) = 4;\nLABEL_22:\n      v24 = 8 * v23;\n      break;\n  }\n  nb = v23;\n  *(_WORD *)(a2 + 2) = TSnapBase::SwapWord(v30, v24);\n  *a5 = 0;\n  return nb;\n}\n\n                        \n                        Function Name: _ZN16TCustomMsgServer7DoEventEijttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        int __fastcall TCustomMsgServer::DoEvent(\n        TCustomMsgServer *this,\n        int a2,\n        int a3,\n        __int16 a4,\n        __int16 a5,\n        __int16 a6,\n        unsigned __int16 a7,\n        unsigned __int16 a8)\n{\n  bool v9; // zf\n  int v10; // edi\n  int result; // eax\n  bool v12; // bp\n  bool v13; // r14\n  void (__fastcall *v14)(_QWORD, time_t *, __int64); // rax\n  time_t timer; // [rsp+30h] [rbp-48h] BYREF\n  int v20; // [rsp+38h] [rbp-40h]\n  int v21; // [rsp+3Ch] [rbp-3Ch]\n  __int16 v22; // [rsp+40h] [rbp-38h]\n  __int16 v23; // [rsp+42h] [rbp-36h]\n  __int16 v24; // [rsp+44h] [rbp-34h]\n  unsigned __int16 v25; // [rsp+46h] [rbp-32h]\n  unsigned __int16 v26; // [rsp+48h] [rbp-30h]\n\n  v9 = *((_BYTE *)this + 80) == 0;\n  v10 = *((_DWORD *)this + 2074);\n  result = *((_DWORD *)this + 2075);\n  if ( v9 )\n  {\n    v12 = (v10 & a3) != 0;\n    v13 = (result & a3) != 0;\n    if ( (result & a3) != 0 || (v10 & a3) != 0 )\n    {\n      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));\n      time(&timer);\n      v25 = a7;\n      v20 = a2;\n      v21 = a3;\n      v22 = a4;\n      v23 = a5;\n      v24 = a6;\n      v26 = a8;\n      if ( v13 )\n      {\n        v14 = (void (__fastcall *)(_QWORD, time_t *, __int64))*((_QWORD *)this + 8);\n        if ( v14 )\n          v14(*((_QWORD *)this + 9), &timer, 26LL);\n      }\n      if ( v12 )\n        TMsgEventQueue::Insert(*((TMsgEventQueue **)this + 7), &timer);\n      return pthread_mutex_unlock(*((pthread_mutex_t **)this + 11));\n    }\n  }\n  return result;\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket13isoSendBufferEPvi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoSendBuffer(TIsoTcpSocket *this, void *src, int a3)\n{\n  int v5; // esi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( (unsigned int)(a3 + 6) > 0x1006 )\n  {\n    v5 = 0x40000;\n  }\n  else\n  {\n    *((_BYTE *)this + 388) = 3;\n    *((_BYTE *)this + 389) = 0;\n    *((_BYTE *)this + 392) = 2;\n    *((_BYTE *)this + 393) = -16;\n    *((_BYTE *)this + 391) = a3 + 7;\n    *((_BYTE *)this + 394) = 0x80;\n    *((_BYTE *)this + 390) = (unsigned __int16)(a3 + 7) >> 8;\n    if ( src )\n      memcpy((char *)this + 395, src, a3);\n    TMsgSocket::SendPacket(this, (char *)this + 388, a3 + 7);\n    if ( !*((_DWORD *)this + 30) )\n      return 0LL;\n    v5 = 589824;\n  }\n  return TIsoTcpSocket::SetIsoError(this, v5);\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (18,) appear to "contaminate" the global variables  and local variables v12, var_103B, v2, v25, v1, var_20, a5, a2, v9, v10, a3, var_18, v5, var_10. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (18,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:06,917 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
int, length
```
2025-03-08 21:21:08,918 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (23, 24)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker19PerformFunctionReadEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionRead(TS7Worker *this)\n{\n  __int64 v1; // r13\n  int v2; // r12d\n  __int64 v3; // rax\n  int v4; // ebx\n  int v5; // r14d\n  unsigned __int16 v6; // ax\n  unsigned __int16 v7; // bx\n  int v8; // r14d\n  __int16 v9; // ax\n  unsigned __int16 Area; // ax\n  int v12; // [rsp+1Ch] [rbp-107Ch]\n  unsigned __int16 v13; // [rsp+40h] [rbp-1058h]\n  unsigned __int16 v14; // [rsp+42h] [rbp-1056h]\n  unsigned __int16 v15; // [rsp+44h] [rbp-1054h]\n  unsigned __int16 v16; // [rsp+46h] [rbp-1052h]\n  unsigned __int16 v17; // [rsp+48h] [rbp-1050h]\n  char v18[2]; // [rsp+50h] [rbp-1048h] BYREF\n  __int16 v19; // [rsp+52h] [rbp-1046h]\n  __int16 v20; // [rsp+54h] [rbp-1044h]\n  __int16 v21; // [rsp+56h] [rbp-1042h]\n  __int16 v22; // [rsp+58h] [rbp-1040h]\n  __int16 v23; // [rsp+5Ah] [rbp-103Eh]\n  char v24; // [rsp+5Ch] [rbp-103Ch]\n  char v25; // [rsp+5Dh] [rbp-103Bh]\n  unsigned __int64 v26; // [rsp+1058h] [rbp-40h]\n\n  v1 = *((_QWORD *)this + 564);\n  v26 = __readfsqword(0x28u);\n  v2 = *(unsigned __int8 *)(v1 + 11);\n  v3 = v1;\n  if ( (unsigned __int8)v2 > 0x14u )\n  {\n    *(_BYTE *)(v1 + 11) = 20;\n    v12 = 19;\n    v2 = 20;\n    goto LABEL_3;\n  }\n  if ( *(_BYTE *)(v1 + 11) )\n  {\n    v12 = v2 - 1;\n    if ( v2 == 1 )\n    {\n      Area = TS7Worker::ReadArea(this);\n      if ( v12 > 0 )\n        Area -= ((Area & 1) == 0) - 1;\n      v5 = Area + 6;\n      goto LABEL_7;\n    }\nLABEL_3:\n    v4 = 0;\n    v5 = 2;\n    do\n    {\n      v6 = TS7Worker::ReadArea(this);\n      if ( v4 < v12 )\n        v6 -= ((v6 & 1) == 0) - 1;\n      v5 += v6 + 4;\n      ++v4;\n      TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n    }\n    while ( v4 < v2 );\nLABEL_7:\n    v7 = v5 - 2;\n    v3 = *((_QWORD *)this + 564);\n    v8 = v5 + 12;\n    goto LABEL_8;\n  }\n  v8 = 14;\n  v7 = 0;\nLABEL_8:\n  v9 = *(_WORD *)(v3 + 4);\n  v18[0] = 50;\n  v18[1] = 3;\n  v19 = 0;\n  v20 = v9;\n  v21 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 2u);\n  v23 = 0;\n  v22 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v7);\n  v24 = *(_BYTE *)(v1 + 10);\n  v25 = *(_BYTE *)(v1 + 11);\n  TIsoTcpSocket::isoSendBuffer(this, v18, v8);\n  if ( v2 == 1 )\n    TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n  return 1LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (23, 24) appear to "contaminate" the global variables  and local variables v3, v2, var_1068, v1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (23, 24) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:09,889 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
unsigned __int16, length
```
2025-03-08 21:21:11,891 - my_text.py:618  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (27,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN16TCustomMsgServer7DoEventEijttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        int __fastcall TCustomMsgServer::DoEvent(\n        TCustomMsgServer *this,\n        int a2,\n        int a3,\n        __int16 a4,\n        __int16 a5,\n        __int16 a6,\n        unsigned __int16 a7,\n        unsigned __int16 a8)\n{\n  bool v9; // zf\n  int v10; // edi\n  int result; // eax\n  bool v12; // bp\n  bool v13; // r14\n  void (__fastcall *v14)(_QWORD, time_t *, __int64); // rax\n  time_t timer; // [rsp+30h] [rbp-48h] BYREF\n  int v20; // [rsp+38h] [rbp-40h]\n  int v21; // [rsp+3Ch] [rbp-3Ch]\n  __int16 v22; // [rsp+40h] [rbp-38h]\n  __int16 v23; // [rsp+42h] [rbp-36h]\n  __int16 v24; // [rsp+44h] [rbp-34h]\n  unsigned __int16 v25; // [rsp+46h] [rbp-32h]\n  unsigned __int16 v26; // [rsp+48h] [rbp-30h]\n\n  v9 = *((_BYTE *)this + 80) == 0;\n  v10 = *((_DWORD *)this + 2074);\n  result = *((_DWORD *)this + 2075);\n  if ( v9 )\n  {\n    v12 = (v10 & a3) != 0;\n    v13 = (result & a3) != 0;\n    if ( (result & a3) != 0 || (v10 & a3) != 0 )\n    {\n      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));\n      time(&timer);\n      v25 = a7;\n      v20 = a2;\n      v21 = a3;\n      v22 = a4;\n      v23 = a5;\n      v24 = a6;\n      v26 = a8;\n      if ( v13 )\n      {\n        v14 = (void (__fastcall *)(_QWORD, time_t *, __int64))*((_QWORD *)this + 8);\n        if ( v14 )\n          v14(*((_QWORD *)this + 9), &timer, 26LL);\n      }\n      if ( v12 )\n        TMsgEventQueue::Insert(*((TMsgEventQueue **)this + 7), &timer);\n      return pthread_mutex_unlock(*((pthread_mutex_t **)this + 11));\n    }\n  }\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker19PerformFunctionReadEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionRead(TS7Worker *this)\n{\n  __int64 v1; // r13\n  int v2; // r12d\n  __int64 v3; // rax\n  int v4; // ebx\n  int v5; // r14d\n  unsigned __int16 v6; // ax\n  unsigned __int16 v7; // bx\n  int v8; // r14d\n  __int16 v9; // ax\n  unsigned __int16 Area; // ax\n  int v12; // [rsp+1Ch] [rbp-107Ch]\n  unsigned __int16 v13; // [rsp+40h] [rbp-1058h]\n  unsigned __int16 v14; // [rsp+42h] [rbp-1056h]\n  unsigned __int16 v15; // [rsp+44h] [rbp-1054h]\n  unsigned __int16 v16; // [rsp+46h] [rbp-1052h]\n  unsigned __int16 v17; // [rsp+48h] [rbp-1050h]\n  char v18[2]; // [rsp+50h] [rbp-1048h] BYREF\n  __int16 v19; // [rsp+52h] [rbp-1046h]\n  __int16 v20; // [rsp+54h] [rbp-1044h]\n  __int16 v21; // [rsp+56h] [rbp-1042h]\n  __int16 v22; // [rsp+58h] [rbp-1040h]\n  __int16 v23; // [rsp+5Ah] [rbp-103Eh]\n  char v24; // [rsp+5Ch] [rbp-103Ch]\n  char v25; // [rsp+5Dh] [rbp-103Bh]\n  unsigned __int64 v26; // [rsp+1058h] [rbp-40h]\n\n  v1 = *((_QWORD *)this + 564);\n  v26 = __readfsqword(0x28u);\n  v2 = *(unsigned __int8 *)(v1 + 11);\n  v3 = v1;\n  if ( (unsigned __int8)v2 > 0x14u )\n  {\n    *(_BYTE *)(v1 + 11) = 20;\n    v12 = 19;\n    v2 = 20;\n    goto LABEL_3;\n  }\n  if ( *(_BYTE *)(v1 + 11) )\n  {\n    v12 = v2 - 1;\n    if ( v2 == 1 )\n    {\n      Area = TS7Worker::ReadArea(this);\n      if ( v12 > 0 )\n        Area -= ((Area & 1) == 0) - 1;\n      v5 = Area + 6;\n      goto LABEL_7;\n    }\nLABEL_3:\n    v4 = 0;\n    v5 = 2;\n    do\n    {\n      v6 = TS7Worker::ReadArea(this);\n      if ( v4 < v12 )\n        v6 -= ((v6 & 1) == 0) - 1;\n      v5 += v6 + 4;\n      ++v4;\n      TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n    }\n    while ( v4 < v2 );\nLABEL_7:\n    v7 = v5 - 2;\n    v3 = *((_QWORD *)this + 564);\n    v8 = v5 + 12;\n    goto LABEL_8;\n  }\n  v8 = 14;\n  v7 = 0;\nLABEL_8:\n  v9 = *(_WORD *)(v3 + 4);\n  v18[0] = 50;\n  v18[1] = 3;\n  v19 = 0;\n  v20 = v9;\n  v21 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 2u);\n  v23 = 0;\n  v22 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v7);\n  v24 = *(_BYTE *)(v1 + 10);\n  v25 = *(_BYTE *)(v1 + 11);\n  TIsoTcpSocket::isoSendBuffer(this, v18, v8);\n  if ( v2 == 1 )\n    TS7Worker::DoEvent(this, (unsigned int)&loc_20000, v13, v14, v15, v16, v17);\n  return 1LL;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker7DoEventEjttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::DoEvent(\n        TS7Worker *this,\n        unsigned int a2,\n        unsigned __int16 a3,\n        unsigned __int16 a4,\n        unsigned __int16 a5,\n        unsigned __int16 a6,\n        unsigned __int16 a7)\n{\n  return (*(__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD))(**((_QWORD **)this + 1084) + 24LL))(\n           *((_QWORD *)this + 1084),\n           *((unsigned int *)this + 15),\n           a2,\n           a3,\n           a4,\n           a5,\n           a6,\n           a7);\n}\n\n                        \n                        Function Name: _ZN9TS7Worker7GetAreaEht\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::GetArea(TS7Worker *this, unsigned __int8 a2, unsigned __int16 a3)\n{\n  if ( a2 == 0x81 )\n    return *(_QWORD *)(*((_QWORD *)this + 1084) + 24752LL);\n  if ( a2 <= 0x81u )\n  {\n    if ( a2 == 28 )\n    {\n      return *(_QWORD *)(*((_QWORD *)this + 1084) + 24776LL);\n    }\n    else\n    {\n      if ( a2 != 29 )\n        return 0LL;\n      return *(_QWORD *)(*((_QWORD *)this + 1084) + 24784LL);\n    }\n  }\n  else\n  {\n    if ( a2 != 0x83 )\n    {\n      if ( a2 < 0x83u )\n        return *(_QWORD *)(*((_QWORD *)this + 1084) + 24760LL);\n      if ( a2 == 0x84 )\n        return TSnap7Server::FindDB(*((TSnap7Server **)this + 1084), a3);\n      return 0LL;\n    }\n    return *(_QWORD *)(*((_QWORD *)this + 1084) + 24768LL);\n  }\n}\n\n                        \n                        Function Name: _ZN9TS7Worker8ReadAreaEP15TResFunReadItemP15TReqFunReadItemRiR3TEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::ReadArea(TS7Worker *this, __int64 a2, __int64 a3, int *a4, _WORD *a5)\n{\n  unsigned __int16 v9; // ax\n  __int64 Area; // r13\n  int v11; // r11d\n  char v12; // dl\n  char v13; // al\n  int v14; // eax\n  unsigned int v15; // r10d\n  unsigned int v16; // esi\n  unsigned int v17; // eax\n  char v18; // dl\n  int v19; // r14d\n  unsigned int v20; // r9d\n  __int64 v21; // rax\n  char v22; // al\n  unsigned int v23; // r10d\n  unsigned __int16 v24; // si\n  pthread_mutex_t *v26; // r13\n  int n; // [rsp+10h] [rbp-58h]\n  unsigned int na; // [rsp+10h] [rbp-58h]\n  unsigned int nb; // [rsp+10h] [rbp-58h]\n  TSnapBase *v30; // [rsp+18h] [rbp-50h]\n  void *src; // [rsp+20h] [rbp-48h]\n  int v32; // [rsp+28h] [rbp-40h]\n  unsigned __int8 v33; // [rsp+2Fh] [rbp-39h]\n\n  a5[3] = 0;\n  a5[4] = 0;\n  *a5 = 0;\n  a5[2] = 0;\n  a5[1] = *(unsigned __int8 *)(a3 + 8);\n  v9 = 0;\n  if ( *(_BYTE *)(a3 + 8) == 0x84 )\n  {\n    v9 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 6));\n    a5[2] = v9;\n  }\n  if ( *(_BYTE *)(*((_QWORD *)this + 1084) + 24792LL) )\n  {\n    Area = 0LL;\n  }\n  else\n  {\n    Area = TS7Worker::GetArea(this, *(_BYTE *)(a3 + 8), v9);\n    if ( !Area )\n      return TS7Worker::RA_NotFound(this, a2, a5);\n  }\n  v11 = TS7Worker::DataSizeByte(this, *(unsigned __int8 *)(a3 + 3));\n  if ( !v11 )\n    return TS7Worker::RA_OutOfRange(this, a2, a5);\n  v12 = *(_BYTE *)(a3 + 3);\n  v13 = *(_BYTE *)(a3 + 8);\n  if ( (v12 == 29) != (v13 == 29) || (v12 == 28) != (v13 == 28) )\n    return TS7Worker::RA_OutOfRange(this, a2, a5);\n  n = v11;\n  v30 = (TS7Worker *)((char *)this + 8);\n  v32 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 4));\n  v14 = *a4;\n  v15 = n * v32;\n  a5[4] = n * v32;\n  if ( v14 == n * v32 )\n    return TS7Worker::RA_SizeOverPDU(this, a2, a5);\n  *a4 = v14 - v15;\n  if ( *(_BYTE *)(a3 + 3) == 1 && v15 > 1 )\n    return TS7Worker::RA_OutOfRange(this, a2, a5);\n  v16 = *(_DWORD *)(a3 + 8);\n  na = n * v32;\n  LOBYTE(v16) = 0;\n  v17 = TSnapBase::SwapDWord(v30, v16);\n  v18 = *(_BYTE *)(a3 + 3);\n  if ( v18 != 29 && v18 != 1 )\n  {\n    if ( v18 == 28 )\n    {\n      v19 = v17;\nLABEL_34:\n      v20 = v17 >> 1;\n      goto LABEL_15;\n    }\n    if ( (v17 & 7) != 0 )\n      return TS7Worker::RA_OutOfRange(this, a2, a5);\n  }\n  v19 = v17;\n  if ( v18 != 1 )\n  {\n    v19 = v17 >> 3;\n    if ( v18 == 29 )\n      v19 = v17;\n  }\n  v20 = v17 >> 3;\n  v33 = v17 & 7;\n  if ( (unsigned __int8)(v18 - 28) <= 1u )\n    goto LABEL_34;\nLABEL_15:\n  v21 = *((_QWORD *)this + 1084);\n  a5[3] = v20;\n  if ( !*(_BYTE *)(v21 + 24792) )\n  {\n    if ( *(unsigned __int16 *)(Area + 2) < v20 + na )\n      return TS7Worker::RA_OutOfRange(this, a2, a5);\n    src = (void *)(*(_QWORD *)(Area + 8) + v20);\n  }\n  TS7Worker::DoReadEvent(this, (unsigned int)&loc_20000, 0, a5[1], a5[2], v20, a5[4]);\n  if ( *(_BYTE *)(*((_QWORD *)this + 1084) + 24792LL) )\n  {\n    memset((void *)(a2 + 4), 0, na);\n    v22 = TSnap7Server::DoReadArea(\n            *((TSnap7Server **)this + 1084),\n            *((_DWORD *)this + 15),\n            (unsigned __int16)a5[1],\n            (unsigned __int16)a5[2],\n            v19,\n            v32,\n            *(unsigned __int8 *)(a3 + 3),\n            (void *)(a2 + 4));\n    v23 = na;\n    if ( v22 )\n      goto LABEL_20;\n    return TS7Worker::RA_NotFound(this, a2, a5);\n  }\n  v26 = *(pthread_mutex_t **)(Area + 16);\n  pthread_mutex_lock(v26);\n  memcpy((void *)(a2 + 4), src, na);\n  pthread_mutex_unlock(v26);\n  v23 = na;\nLABEL_20:\n  *(_BYTE *)a2 = -1;\n  switch ( *(_BYTE *)(a3 + 3) )\n  {\n    case 1:\n      *(_BYTE *)(a2 + 1) = 3;\n      *(_BYTE *)(a2 + 4) = (BitMask[v33] & *(_BYTE *)(a2 + 4)) != 0;\n      v24 = v23;\n      break;\n    case 3:\n    case 0x1C:\n    case 0x1D:\n      *(_BYTE *)(a2 + 1) = 9;\n      v24 = v23;\n      break;\n    case 5:\n    case 7:\n      *(_BYTE *)(a2 + 1) = 5;\n      goto LABEL_22;\n    case 8:\n      *(_BYTE *)(a2 + 1) = 7;\n      v24 = v23;\n      break;\n    default:\n      *(_BYTE *)(a2 + 1) = 4;\nLABEL_22:\n      v24 = 8 * v23;\n      break;\n  }\n  nb = v23;\n  *(_WORD *)(a2 + 2) = TSnapBase::SwapWord(v30, v24);\n  *a5 = 0;\n  return nb;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (27,) appear to "contaminate" the global variables  and local variables a7, var_36, var_68, v25, a5, v23, v15, v13, v14, v16, v17, var_1056, a4, a2, v9, a3, a5. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (27,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:12,959 - my_text.py:621  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
int, length
```
2025-03-08 21:21:14,960 - my_text.py:637  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 field_type: {'2,3': ['unsigned int'], '4': ['unsigned char'], '5': ['int'], '6': ['int'], '8': ['int'], '11,12': ['unsigned __int16'], '13,14': ['int'], '15,16': ['unsigned int'], '17': ['unsigned __int8'], '18': ['int'], '23,24': ['unsigned __int16'], '27': ['int']}
2025-03-08 21:21:14,960 - my_text.py:638  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 field_func: {'2,3': ['length'], '4': ['length'], '5': ['length'], '6': ['length'], '8': ['length'], '11,12': ['length'], '13,14': ['length'], '15,16': ['length'], '17': ['length'], '18': ['length'], '23,24': ['length'], '27': ['length']}
2025-03-08 21:21:14,960 - my_text.py:688  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': '\n            You are provided with a list named [] that contains visible strings. Your task is to analyze these strings. If the strings have specific meanings and can be further divided, please present the division results in a Python code block. Each part of the result should be separated by a comma.\n            The types of granularity for division include static text, command groups, strings, integers, decimals, and binary. The semantic granularity includes commands, lengths, delimiters, checksums, file names, etc.\n            Here is an example: If the input is ["POST /path HTTP/1.1"], the correct output should be\n            ```python\n            POST, command group, command\n            , string, delimiter\n            /path, string, file\n            HTTP/1.1, static text, static text\n            ```\n            If you don\'t think these strings have a specific meaning, just answer ```python ```\n            '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:15,615 - my_text.py:691  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 Response result: ```python
```python
```
2025-03-08 21:21:17,616 - my_text.py:712  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 field_llm_type: {}
2025-03-08 21:21:17,616 - my_text.py:713  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 field_llm_Sem: {}
2025-03-08 21:21:17,616 - my_text.py:715  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 used_fields_llm: ['2,3', '4', '5', '6', '8', '11,12', '13,14', '15,16', '17', '18', '23,24', '27']
2025-03-08 21:21:17,616 - my_text.py:716  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 field_llm_type_llm: {'2,3': ['unsigned int'], '4': ['unsigned char'], '5': ['int'], '6': ['int'], '8': ['int'], '11,12': ['unsigned __int16'], '13,14': ['int'], '15,16': ['unsigned int'], '17': ['unsigned __int8'], '18': ['int'], '23,24': ['unsigned __int16'], '27': ['int']}
2025-03-08 21:21:17,616 - my_text.py:717  - 1:0300001f02f080320100000100000e00000401120a10020004000083000000 field_llm_Sem_llm: {'2,3': ['length'], '4': ['length'], '5': ['length'], '6': ['length'], '8': ['length'], '11,12': ['length'], '13,14': ['length'], '15,16': ['length'], '17': ['length'], '18': ['length'], '23,24': ['length'], '27': ['length']}
2025-03-08 21:21:17,616 - my_text.py:432  - {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'  if ( v10 != 0xF0 )', '  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )', '  v10 = *((_BYTE *)this + 393);', '  if ( v10 == 0xE0 )', '  v15 = v10;'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'    || *((_BYTE *)a2 + 5) != a3 )', '  TIsoTcpSocket::ClrIsoError(this);'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'    else if ( (_BYTE)result == 0xF0 )', '    if ( (_BYTE)result == 0xE0 )', '    result = a2[5];'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'  *a5 = *((_BYTE *)this + 394) >> 7;'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'        goto LABEL_8;'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'  return a2[3] + (a2[2] << 8);'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'    return *((unsigned int *)this + 1126);', '  TMsgSocket::RecvPacket(this, buf, v14);', '  *a4 = v14;', '  v14 = v13 - 7;', '  v13 = TIsoTcpSocket::PDUSize(this, v5);'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'  return 0LL;', '  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));'}, '_ZN10TMsgSocket11WaitForDataEii': {'  return result;', '  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )', '    v4 = (int)TMsgSocket::WaitingData(this) < a2;'}, '_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'  v5 = 0;'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'  return a2[3] + (a2[2] << 8);'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'    return *((unsigned int *)this + 1126);', '  TMsgSocket::RecvPacket(this, buf, v14);', '  *a4 = v14;', '  v14 = v13 - 7;', '  v13 = TIsoTcpSocket::PDUSize(this, v5);'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'  return 0LL;', '  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));'}, '_ZN10TMsgSocket11WaitForDataEii': {'  return result;', '  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )', '    v4 = (int)TMsgSocket::WaitingData(this) < a2;'}, '_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'  v5 = 0;'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'    || *((_BYTE *)a2 + 4) <= 1u'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'  v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;', '      v9 = v3 + *((_QWORD *)this + 564);', '      v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'  v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;', '      v9 = v3 + *((_QWORD *)this + 564);', '      v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v3 = v2', '     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))', '  result = 0LL;'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v3 = v2', '     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))', '  result = 0LL;'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'  if ( v4 == 1 )', '  v4 = *(_BYTE *)(*((_QWORD *)this + 564) + 1LL);'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {'    switch ( v2 )', '    if ( v2 >= 0x1Du )', '  if ( v2 > 0x1Fu )', '  v2 = *(_BYTE *)(*((_QWORD *)this + 564) + 10LL);'}}, 18: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);', '    v19 = (TSnapBase *)(unsigned int)(v17 - 1);', '    v37 = *((_BYTE *)src + 11);', '  v17 = *((unsigned __int8 *)src + 11);', '  v21 = v17 + 14;', '      v14 = 0LL;', '    v4 = &v27;', '      while ( v14 != (TSnapBase *)((char *)v19 + 1) );', '    if ( v17 == 1 )'}, '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': {'  a4[3] = 0;', '      return TS7Worker::WA_NotFound(this, a4);'}, '_ZN13TIsoTcpSocket13isoSendBufferEPvi': {'  return TIsoTcpSocket::SetIsoError(this, v5);', '  TIsoTcpSocket::ClrIsoError(this);'}, '_ZN10TMsgSocket10SendPacketEPvi': {'  v4 = *((_DWORD *)this + 29);', '    return 110LL;', '    v7 = send(*((_DWORD *)this + 6), buf, v5, 0x4000);', '    result = 0LL;'}, '_ZN10TMsgSocket8CanWriteEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'  v9 = *((_BYTE *)this + 80) == 0;', '    if ( (result & a3) != 0 || (v10 & a3) != 0 )'}}, 22: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'      if ( (unsigned __int8)(v8 - 28) <= 1u || v8 == 1 )', '      v8 = *v6;'}}, 33: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'      v10 = *(_WORD *)(v9 + 2);', '        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10) >> 3;', '      v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 34: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'      v10 = *(_WORD *)(v9 + 2);', '        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10) >> 3;', '      v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 27: {'_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': {'  a4[1] = *(unsigned __int8 *)(a3 + 8);', '    Area = TS7Worker::GetArea(this, *(_BYTE *)(a3 + 8), v7);', '  v7 = 0;', '  if ( *(_BYTE *)(a3 + 8) == 0x84 )'}, '_ZN9TS7Worker7GetAreaEht': {'      if ( a2 < 0x83u )', '  if ( a2 == 0x81 )'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'      TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);'}, '_ZN9TS7Worker7DoEventEjttttt': {'           a4,'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'      v23 = a5;', '      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));', '      v25 = a7;'}, '_Z10EvtSrvTextR9TSrvEvent': {'        TxtStartSize((std::string *)v84, v58, v62, v70[0], v71, v72, v73, v74, v75);'}, '_ZL7TxtAreaR9TSrvEvent.isra.10': {'  if ( a2 == 129 )', '  if ( a2 == 131 )'}}, 11: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'      v32 = *(_WORD *)(v15 + 4);'}}, 12: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'      v32 = *(_WORD *)(v15 + 4);'}}}, '1': {18: {'_ZN10TMsgSocket7CanReadEi': {'  if ( v5 != -1LL )'}}, 2: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN10TMsgSocket9SckAcceptEv': {'  *((_DWORD *)this + 30) = 0;', '  return v1;'}, '_ZN16TCustomMsgServer8IncomingEi': {'  SockAddr = Msg_GetSockAddr(a2);'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN10TMsgSocket9SckAcceptEv': {'  *((_DWORD *)this + 30) = 0;', '  return v1;'}, '_ZN16TCustomMsgServer8IncomingEi': {'  SockAddr = Msg_GetSockAddr(a2);'}}, 22: {'_ZN10TMsgSocket7CanReadEi': {'  readfds.fds_bits[v3] |= 1LL << (*((_DWORD *)this + 6) % 64);'}}}}
2025-03-08 21:21:17,617 - my_text.py:443  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Updated c_taint_c_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', '0xF0', 'unsigned', 'TIsoTcpSocket', 'v10', 'if', 'v5', '393', 'v15', 'CheckPDU', '_BYTE', 'this', '0xE0'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'_BYTE', 'ClrIsoError', 'TIsoTcpSocket', '5', 'a3', 'this', 'a2'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'result', '0xF0', 'if', '5', 'else', '_BYTE', '0xE0', 'a2'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'_BYTE', '394', 'a5', '7', 'this'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'goto', 'LABEL_8'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'return', '8', '3', '2', 'a2'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'return', 'int', 'v13', 'PDUSize', 'unsigned', 'a4', 'TIsoTcpSocket', 'v5', 'buf', 'TMsgSocket', 'RecvPacket', '7', '1126', 'this', 'v14'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'return', 'int', 'PDUSize', 'unsigned', 'TIsoTcpSocket', 'if', '0LL', '7', '0xFF9', 'this', 'a2'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'_DWORD', '28', 'TMsgSocket', 'a3', 'WaitForData', 'this'}, '_ZN10TMsgSocket11WaitForDataEii': {'return', 'int', 'WaitingData', 'result', 'unsigned', 'if', 'v4', 'this', 'TMsgSocket', '__int8', '0', 'a2', 'CanRead'}, '_ZN10TMsgSocket7CanReadEi': {'return', '1', '6', 'if', '_DWORD', 'this', '0'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'v5', '0'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'return', '8', '3', '2', 'a2'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'return', 'int', 'v13', 'PDUSize', 'unsigned', 'a4', 'TIsoTcpSocket', 'v5', 'buf', 'TMsgSocket', 'RecvPacket', '7', '1126', 'this', 'v14'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'return', 'int', 'PDUSize', 'unsigned', 'TIsoTcpSocket', 'if', '0LL', '7', '0xFF9', 'this', 'a2'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'_DWORD', '28', 'TMsgSocket', 'a3', 'WaitForData', 'this'}, '_ZN10TMsgSocket11WaitForDataEii': {'return', 'int', 'WaitingData', 'result', 'unsigned', 'if', 'v4', 'this', 'TMsgSocket', '__int8', '0', 'a2', 'CanRead'}, '_ZN10TMsgSocket7CanReadEi': {'return', '1', '6', 'if', '_DWORD', 'this', '0'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'v5', '0'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'1u', '4', 'a2', '_BYTE'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '6LL', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', 'SwapWord', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'unsigned', 'v9', '3', '_QWORD', '4', 'TSnapBase', '__int16', '564', '8', '1', '1LL', '10LL', 'v2', 'this', 'char', 'v7', 'SwapWord', 'v3', 'TS7Worker', '0'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '6LL', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', 'SwapWord', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'unsigned', 'v9', '3', '_QWORD', '4', 'TSnapBase', '__int16', '564', '8', '1', '1LL', '10LL', 'v2', 'this', 'char', 'v7', 'SwapWord', 'v3', 'TS7Worker', '0'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '8LL', 'result', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', '0LL', 'SwapWord', 'v3', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '8LL', 'result', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', '0LL', 'SwapWord', 'v3', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'return', '_QWORD', '1', '1LL', 'this', '_BYTE', '564', '7'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'_QWORD', '1', '1LL', '564', 'v4', 'if', '_BYTE', 'this'}}, 17: {'_ZN9TS7Worker17PerformPDURequestERi': {'_QWORD', '564', 'if', '10LL', 'v2', 'this', '0x1Du', '_BYTE', 'switch', '0x1Fu'}}, 18: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'int', 'unsigned', 'if', 'v37', '_BYTE', 'v14', 'v29', 'v4', 'TSnapBase', 'v17', '1', 'src', 'TIsoTcpSocket', 'v27', 'while', '0LL', 'this', 'char', 'v19', '14', '11', 'isoSendBuffer', 'v21', '__int8'}, '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': {'return', 'a4', 'WA_NotFound', '3', 'TS7Worker', 'this', '0'}, '_ZN13TIsoTcpSocket13isoSendBufferEPvi': {'return', 'ClrIsoError', 'SetIsoError', 'TIsoTcpSocket', 'v5', 'this'}, '_ZN10TMsgSocket10SendPacketEPvi': {'return', 'result', 'v7', '110LL', '6', 'v4', '_DWORD', 'v5', 'buf', '29', 'send', '0LL', 'this', '0x4000'}, '_ZN10TMsgSocket8CanWriteEi': {'return', '1', '6', 'if', '_DWORD', 'this', '0'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'80', 'result', 'a3', 'v9', 'if', 'v10', '_BYTE', 'this', '0'}}, 22: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'v8', 'unsigned', '1', 'v6', 'if', '28', '1u', '__int8'}}, 33: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'_WORD', 'v7', 'unsigned', '1', '1LL', 'v10', 'v9', 'SwapWord', 'TSnapBase', '3', '__int16', '4', '2', 'v3', '0', 'v1'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 34: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'_WORD', 'v7', 'unsigned', '1', '1LL', 'v10', 'v9', 'SwapWord', 'TSnapBase', '3', '__int16', '4', '2', 'v3', '0', 'v1'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 27: {'_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': {'_BYTE', 'Area', '8', 'v7', 'unsigned', '1', 'a4', 'GetArea', 'if', 'this', 'a3', 'TS7Worker', '__int8', '0', '0x84'}, '_ZN9TS7Worker7GetAreaEht': {'0x81', '0x83u', 'if', 'a2'}, '_ZN9TS7Worker20PerformFunctionWriteEv': {'v24', 'v23', 'v26', 'DoEvent', 'v22', 'TS7Worker', '0x40000u', 'this', 'v25'}, '_ZN9TS7Worker7DoEventEjttttt': {'a4'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'pthread_mutex_t', 'v23', '11', 'a5', 'pthread_mutex_lock', 'a7', 'this', 'v25'}, '_Z10EvtSrvTextR9TSrvEvent': {'v70', 'TxtStartSize', 'v75', 'v74', 'v73', 'std', 'v71', 'v84', 'v62', 'v58', 'v72', 'string', '0'}, '_ZL7TxtAreaR9TSrvEvent.isra.10': {'129', '131', 'if', 'a2'}}, 11: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'_WORD', 'v15', 'v32', '4'}}, 12: {'_ZN9TS7Worker20PerformFunctionWriteEv': {'_WORD', 'v15', 'v32', '4'}}}, '1': {18: {'_ZN10TMsgSocket7CanReadEi': {'  if ( v5 != -1LL )'}}, 2: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN10TMsgSocket9SckAcceptEv': {'  *((_DWORD *)this + 30) = 0;', '  return v1;'}, '_ZN16TCustomMsgServer8IncomingEi': {'  SockAddr = Msg_GetSockAddr(a2);'}}, 3: {'_ZN10TMsgSocket7CanReadEi': {'  if ( *((_DWORD *)this + 6) == -1 )', '  return 0;'}, '_ZN10TMsgSocket9SckAcceptEv': {'  *((_DWORD *)this + 30) = 0;', '  return v1;'}, '_ZN16TCustomMsgServer8IncomingEi': {'  SockAddr = Msg_GetSockAddr(a2);'}}, 22: {'_ZN10TMsgSocket7CanReadEi': {'  readfds.fds_bits[v3] |= 1LL << (*((_DWORD *)this + 6) % 64);'}}}}
2025-03-08 21:21:17,618 - my_text.py:460  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 var_flow: {'2': {5: {'_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a3', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v15', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:var_40', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v10', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a5', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_58'}, 2: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 3: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 13: {'_ZN9TS7Worker20PerformFunctionWriteEv:v9', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker20PerformFunctionWriteEv:v7', '_ZN9TS7Worker11CheckPDU_inEi:v2', '_ZN9TS7Worker20PerformFunctionWriteEv:v2', '_ZN9TS7Worker20PerformFunctionWriteEv:v3'}, 14: {'_ZN9TS7Worker20PerformFunctionWriteEv:v9', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker20PerformFunctionWriteEv:v7', '_ZN9TS7Worker11CheckPDU_inEi:v2', '_ZN9TS7Worker20PerformFunctionWriteEv:v2', '_ZN9TS7Worker20PerformFunctionWriteEv:v3'}, 15: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 16: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 8: {'_ZN9TS7Worker17IsoPerformCommandERi:v4'}, 17: {'_ZN9TS7Worker17PerformPDURequestERi:v2'}, 18: {'_ZN9TS7Worker20PerformFunctionWriteEv:var_1108', '_ZN9TS7Worker20PerformFunctionWriteEv:v29', '_ZN16TCustomMsgServer7DoEventEijttttt:v10', '_ZN9TS7Worker20PerformFunctionWriteEv:var_10FC', '_ZN16TCustomMsgServer7DoEventEijttttt:var_18', '_ZN9TS7Worker20PerformFunctionWriteEv:var_1110', '_ZN10TMsgSocket10SendPacketEPvi:v7', '_ZN10TMsgSocket10SendPacketEPvi:v5', '_ZN16TCustomMsgServer7DoEventEijttttt:v9', '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv:a4', '_ZN10TMsgSocket10SendPacketEPvi:var_10', '_ZN13TIsoTcpSocket13isoSendBufferEPvi:var_10', '_ZN9TS7Worker20PerformFunctionWriteEv:src', '_ZN9TS7Worker20PerformFunctionWriteEv:v17', '_ZN9TS7Worker20PerformFunctionWriteEv:v14', '_ZN9TS7Worker20PerformFunctionWriteEv:var_103B', '_ZN10TMsgSocket10SendPacketEPvi:v4', '_ZN16TCustomMsgServer7DoEventEijttttt:a3', '_ZN9TS7Worker20PerformFunctionWriteEv:v27', '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv:var_20', '_ZN9TS7Worker20PerformFunctionWriteEv:v4', '_ZN9TS7Worker20PerformFunctionWriteEv:v19', '_ZN13TIsoTcpSocket13isoSendBufferEPvi:v5', '_ZN9TS7Worker20PerformFunctionWriteEv:v37', '_ZN9TS7Worker20PerformFunctionWriteEv:v21'}, 22: {'_ZN9TS7Worker20PerformFunctionWriteEv:v6', '_ZN9TS7Worker20PerformFunctionWriteEv:v8'}, 33: {'_ZN9TS7Worker20PerformFunctionWriteEv:v1', '_ZN9TS7Worker20PerformFunctionWriteEv:v9', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker20PerformFunctionWriteEv:v7', '_ZN9TS7Worker20PerformFunctionWriteEv:v10', '_ZN9TS7Worker20PerformFunctionWriteEv:v3'}, 34: {'_ZN9TS7Worker20PerformFunctionWriteEv:v1', '_ZN9TS7Worker20PerformFunctionWriteEv:v9', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker20PerformFunctionWriteEv:v7', '_ZN9TS7Worker20PerformFunctionWriteEv:v10', '_ZN9TS7Worker20PerformFunctionWriteEv:v3'}, 27: {'_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_ZN9TS7Worker20PerformFunctionWriteEv:v25', '_ZN9TS7Worker7DoEventEjttttt:a4', '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv:v7', '_Z10EvtSrvTextR9TSrvEvent:v84', '_Z10EvtSrvTextR9TSrvEvent:v72', '_Z10EvtSrvTextR9TSrvEvent:v73', '_Z10EvtSrvTextR9TSrvEvent:v62', '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv:a4', '_ZN9TS7Worker20PerformFunctionWriteEv:v24', '_Z10EvtSrvTextR9TSrvEvent:v75', '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv:a3', '_ZN9TS7Worker20PerformFunctionWriteEv:v23', '_ZN9TS7Worker20PerformFunctionWriteEv:v22', '_Z10EvtSrvTextR9TSrvEvent:v71', '_Z10EvtSrvTextR9TSrvEvent:v74', '_ZN16TCustomMsgServer7DoEventEijttttt:var_36', '_ZN9TS7Worker7GetAreaEht:a2', '_ZN9TS7Worker20PerformFunctionWriteEv:v26', '_ZN16TCustomMsgServer7DoEventEijttttt:var_68', '_ZN9TS7Worker20PerformFunctionWriteEv:var_10F6', '_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_Z10EvtSrvTextR9TSrvEvent:v58', '_ZN16TCustomMsgServer7DoEventEijttttt:a5', '_Z10EvtSrvTextR9TSrvEvent:v70', '_ZL7TxtAreaR9TSrvEvent.isra.10:a2', '_ZN16TCustomMsgServer7DoEventEijttttt:v23'}, 11: {'_ZN9TS7Worker20PerformFunctionWriteEv:v15', '_ZN9TS7Worker20PerformFunctionWriteEv:v32', '_ZN9TS7Worker20PerformFunctionWriteEv:var_1044'}, 12: {'_ZN9TS7Worker20PerformFunctionWriteEv:v15', '_ZN9TS7Worker20PerformFunctionWriteEv:v32', '_ZN9TS7Worker20PerformFunctionWriteEv:var_1044'}}, '1': {5: {'_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a3', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v15', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:var_40', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v10', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a5', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_58'}, 2: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 3: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN10TMsgSocket11WaitForDataEii:v4', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN10TMsgSocket11WaitForDataEii:a2', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 13: {'_ZN9TS7Worker20PerformFunctionWriteEv:v9', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker20PerformFunctionWriteEv:v7', '_ZN9TS7Worker11CheckPDU_inEi:v2', '_ZN9TS7Worker20PerformFunctionWriteEv:v2', '_ZN9TS7Worker20PerformFunctionWriteEv:v3'}, 14: {'_ZN9TS7Worker20PerformFunctionWriteEv:v9', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker20PerformFunctionWriteEv:v7', '_ZN9TS7Worker11CheckPDU_inEi:v2', '_ZN9TS7Worker20PerformFunctionWriteEv:v2', '_ZN9TS7Worker20PerformFunctionWriteEv:v3'}, 15: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 16: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 8: {'_ZN9TS7Worker17IsoPerformCommandERi:v4'}, 17: {'_ZN9TS7Worker17PerformPDURequestERi:v2'}, 18: {'_ZN9TS7Worker20PerformFunctionWriteEv:var_1108', '_ZN9TS7Worker20PerformFunctionWriteEv:v29', '_ZN16TCustomMsgServer7DoEventEijttttt:v10', '_ZN9TS7Worker20PerformFunctionWriteEv:var_10FC', '_ZN16TCustomMsgServer7DoEventEijttttt:var_18', '_ZN9TS7Worker20PerformFunctionWriteEv:var_1110', '_ZN10TMsgSocket10SendPacketEPvi:v7', '_ZN10TMsgSocket10SendPacketEPvi:v5', '_ZN16TCustomMsgServer7DoEventEijttttt:v9', '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv:a4', '_ZN10TMsgSocket10SendPacketEPvi:var_10', '_ZN13TIsoTcpSocket13isoSendBufferEPvi:var_10', '_ZN9TS7Worker20PerformFunctionWriteEv:src', '_ZN9TS7Worker20PerformFunctionWriteEv:v17', '_ZN9TS7Worker20PerformFunctionWriteEv:v14', '_ZN9TS7Worker20PerformFunctionWriteEv:var_103B', '_ZN10TMsgSocket10SendPacketEPvi:v4', '_ZN16TCustomMsgServer7DoEventEijttttt:a3', '_ZN9TS7Worker20PerformFunctionWriteEv:v27', '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv:var_20', '_ZN9TS7Worker20PerformFunctionWriteEv:v4', '_ZN9TS7Worker20PerformFunctionWriteEv:v19', '_ZN13TIsoTcpSocket13isoSendBufferEPvi:v5', '_ZN9TS7Worker20PerformFunctionWriteEv:v37', '_ZN9TS7Worker20PerformFunctionWriteEv:v21'}, 22: {'_ZN9TS7Worker20PerformFunctionWriteEv:v6', '_ZN9TS7Worker20PerformFunctionWriteEv:v8'}, 33: {'_ZN9TS7Worker20PerformFunctionWriteEv:v1', '_ZN9TS7Worker20PerformFunctionWriteEv:v9', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker20PerformFunctionWriteEv:v7', '_ZN9TS7Worker20PerformFunctionWriteEv:v10', '_ZN9TS7Worker20PerformFunctionWriteEv:v3'}, 34: {'_ZN9TS7Worker20PerformFunctionWriteEv:v1', '_ZN9TS7Worker20PerformFunctionWriteEv:v9', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker20PerformFunctionWriteEv:v7', '_ZN9TS7Worker20PerformFunctionWriteEv:v10', '_ZN9TS7Worker20PerformFunctionWriteEv:v3'}, 27: {'_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_ZN9TS7Worker20PerformFunctionWriteEv:v25', '_ZN9TS7Worker7DoEventEjttttt:a4', '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv:v7', '_Z10EvtSrvTextR9TSrvEvent:v84', '_Z10EvtSrvTextR9TSrvEvent:v72', '_Z10EvtSrvTextR9TSrvEvent:v73', '_Z10EvtSrvTextR9TSrvEvent:v62', '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv:a4', '_ZN9TS7Worker20PerformFunctionWriteEv:v24', '_Z10EvtSrvTextR9TSrvEvent:v75', '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv:a3', '_ZN9TS7Worker20PerformFunctionWriteEv:v23', '_ZN9TS7Worker20PerformFunctionWriteEv:v22', '_Z10EvtSrvTextR9TSrvEvent:v71', '_Z10EvtSrvTextR9TSrvEvent:v74', '_ZN16TCustomMsgServer7DoEventEijttttt:var_36', '_ZN9TS7Worker7GetAreaEht:a2', '_ZN9TS7Worker20PerformFunctionWriteEv:v26', '_ZN16TCustomMsgServer7DoEventEijttttt:var_68', '_ZN9TS7Worker20PerformFunctionWriteEv:var_10F6', '_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_Z10EvtSrvTextR9TSrvEvent:v58', '_ZN16TCustomMsgServer7DoEventEijttttt:a5', '_Z10EvtSrvTextR9TSrvEvent:v70', '_ZL7TxtAreaR9TSrvEvent.isra.10:a2', '_ZN16TCustomMsgServer7DoEventEijttttt:v23'}, 11: {'_ZN9TS7Worker20PerformFunctionWriteEv:v15', '_ZN9TS7Worker20PerformFunctionWriteEv:v32', '_ZN9TS7Worker20PerformFunctionWriteEv:var_1044'}, 12: {'_ZN9TS7Worker20PerformFunctionWriteEv:v15', '_ZN9TS7Worker20PerformFunctionWriteEv:v32', '_ZN9TS7Worker20PerformFunctionWriteEv:var_1044'}}}
2025-03-08 21:21:17,618 - my_text.py:478  - Key pair (2, 3): Similarity = 1.0
2025-03-08 21:21:17,619 - my_text.py:478  - Key pair (13, 14): Similarity = 1.0
2025-03-08 21:21:17,619 - my_text.py:478  - Key pair (15, 16): Similarity = 1.0
2025-03-08 21:21:17,619 - my_text.py:478  - Key pair (33, 34): Similarity = 1.0
2025-03-08 21:21:17,619 - my_text.py:478  - Key pair (11, 12): Similarity = 1.0
2025-03-08 21:21:17,619 - my_text.py:482  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Similarity matrix: {(5, 6): 0.0, (6, 2): 0.0, (2, 3): 1.0, (3, 4): 0.09090909090909091, (4, 13): 0.0, (13, 14): 1.0, (14, 15): 0.2857142857142857, (15, 16): 1.0, (16, 8): 0.0, (8, 17): 0.0, (17, 18): 0.0, (18, 22): 0.0, (22, 33): 0.0, (33, 34): 1.0, (34, 27): 0.0, (27, 11): 0.0, (11, 12): 1.0}
2025-03-08 21:21:17,619 - my_text.py:519  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Merged queue: [(2, 3), (4,), (5,), (6,), (8,), (11, 12), (13, 14), (15, 16), (17,), (18,), (22,), (27,), (33, 34)]
2025-03-08 21:21:17,619 - my_text.py:525  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 used_fields: ['2,3', '4', '5', '6', '8', '11,12', '13,14', '15,16', '17', '18', '22', '27', '33,34']
2025-03-08 21:21:17,619 - my_text.py:541  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 data_new: {(2, 3): {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['v5', 'a4', 'v14', 'v13'], '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': ['v5', 'var_48'], '_ZN10TMsgSocket11WaitForDataEii': ['a2', 'v4'], '_ZN13TIsoTcpSocket7PDUSizeEPv': ['a2'], '_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a2'], '_ZN10TMsgSocket10RecvPacketEPvi': ['a3']}, (4,): {'_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a2']}, (5,): {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['v10', 'v5', 'v15', 'var_40'], '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': ['a2'], '_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a3', 'a2']}, (6,): {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['a5'], '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': ['var_58']}, (8,): {'_ZN9TS7Worker17IsoPerformCommandERi': ['v4']}, (11, 12): {'_ZN9TS7Worker20PerformFunctionWriteEv': ['v32', 'v15', 'var_1044']}, (13, 14): {'_ZN9TS7Worker20PerformFunctionWriteEv': ['v9', 'v7', 'v2', 'v3'], '_ZN9TSnapBase8SwapWordEt': ['a2'], '_ZN9TS7Worker11CheckPDU_inEi': ['v2']}, (15, 16): {'_ZN9TS7Worker11CheckPDU_inEi': ['v3', 'v2'], '_ZN9TSnapBase8SwapWordEt': ['a2']}, (17,): {'_ZN9TS7Worker17PerformPDURequestERi': ['v2']}, (18,): {'_ZN9TS7Worker20PerformFunctionWriteEv': ['var_1108', 'src', 'v17', 'v29', 'v14', 'var_103B', 'var_10FC', 'var_1110', 'v27', 'v4', 'v19', 'v37', 'v21'], '_ZN16TCustomMsgServer7DoEventEijttttt': ['v10', 'var_18', 'a3', 'v9'], '_ZN10TMsgSocket10SendPacketEPvi': ['v4', 'v7', 'v5', 'var_10'], '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': ['var_20', 'a4'], '_ZN13TIsoTcpSocket13isoSendBufferEPvi': ['v5', 'var_10']}, (22,): {'_ZN9TS7Worker20PerformFunctionWriteEv': ['v6', 'v8']}, (27,): {'_Z10EvtSrvTextR9TSrvEvent': ['v74', 'v84', 'v72', 'v58', 'v73', 'v62', 'v70', 'v75', 'v71'], '_ZN16TCustomMsgServer7DoEventEijttttt': ['a7', 'var_36', 'var_68', 'v25', 'a5', 'v23'], '_ZN9TS7Worker20PerformFunctionWriteEv': ['v25', 'v26', 'var_10F6', 'v24', 'v23', 'v22'], '_ZN9TS7Worker7DoEventEjttttt': ['a4'], '_ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv': ['v7', 'a4', 'a3'], '_ZN9TS7Worker7GetAreaEht': ['a2'], '_ZL7TxtAreaR9TSrvEvent.isra.10': ['a2']}, (33, 34): {'_ZN9TS7Worker20PerformFunctionWriteEv': ['v1', 'v9', 'v7', 'v10', 'v3'], '_ZN9TSnapBase8SwapWordEt': ['a2']}}
2025-03-08 21:21:17,619 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (2, 3)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvPDU(TIsoTcpSocket *this, char *a2)\n{\n  int v2; // r14d\n  char *v3; // r15\n  int v4; // ebp\n  unsigned int v5; // ebx\n  int v7; // ebp\n  unsigned int v8; // eax\n  bool v9; // [rsp+10h] [rbp-58h] BYREF\n  int v10[18]; // [rsp+20h] [rbp-48h] BYREF\n\n  v2 = 1;\n  v3 = (char *)this + 395;\n  v4 = 0;\n  v9 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  while ( 1 )\n  {\n    do\n    {\n      v3 += v4;\n      if ( 4096 - v4 <= 0 )\n        break;\n      v5 = TIsoTcpSocket::isoRecvFragment(this, v3, 4096 - v4, v10, &v9);\n      if ( v5 )\n        goto LABEL_4;\n      if ( v9 )\n        goto LABEL_8;\n      ++v2;\n      v4 += v10[0];\n    }\n    while ( v2 <= *((_DWORD *)this + 96) );\n    v8 = TIsoTcpSocket::SetIsoError(this, 458752);\n    v5 = v8;\n    if ( v9 )\n      break;\n    if ( v8 )\n      goto LABEL_4;\n  }\n  if ( v8 )\n  {\nLABEL_4:\n    if ( *((_DWORD *)this + 30) != 104 )\n      TMsgSocket::Purge(this);\n    return v5;\n  }\nLABEL_8:\n  v5 = 0;\n  v7 = v10[0] + v4 + 7;\n  *((_BYTE *)this + 391) = v7;\n  *((_BYTE *)this + 390) = BYTE1(v7);\n  if ( (char *)this + 388 != a2 )\n    memcpy(a2, (char *)this + 388, v7);\n  return v5;\n}\n\n                        \n                        Function Name: _ZN10TMsgSocket11WaitForDataEii\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TMsgSocket::WaitForData(TMsgSocket *this, int a2, unsigned int a3)\n{\n  bool v4; // cc\n  __int64 result; // rax\n  unsigned int v6[10]; // [rsp+0h] [rbp-28h] BYREF\n\n  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )\n  {\n    *((_DWORD *)this + 30) = 104;\n    result = 104LL;\nLABEL_12:\n    *((_BYTE *)this + 124) = 0;\n    return result;\n  }\n  *((_DWORD *)this + 30) = 0;\n  v6[0] = SysGetTick();\n  while ( 1 )\n  {\n    v4 = (int)TMsgSocket::WaitingData(this) < a2;\n    result = *((unsigned int *)this + 30);\n    if ( !v4 || (_DWORD)result )\n      break;\n    if ( (unsigned int)DeltaTime(v6) < a3 )\n      SysSleep(1u);\n    else\n      *((_DWORD *)this + 30) = 110;\n  }\n  if ( (_DWORD)result == 104 )\n    goto LABEL_12;\n  return result;\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket7PDUSizeEPv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::PDUSize(TIsoTcpSocket *this, unsigned __int8 *a2)\n{\n  return a2[3] + (a2[2] << 8);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                        \n                        Function Name: _ZN10TMsgSocket10RecvPacketEPvi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TMsgSocket::RecvPacket(TMsgSocket *this, void *buf, int a3)\n{\n  __int64 result; // rax\n  int v5; // eax\n\n  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));\n  result = *((unsigned int *)this + 30);\n  if ( (_DWORD)result )\n  {\n    if ( (_DWORD)result != 110 )\n      goto LABEL_6;\n    TMsgSocket::Purge(this);\n    goto LABEL_9;\n  }\n  v5 = recv(*((_DWORD *)this + 6), buf, a3, 0x4000);\n  if ( !v5 )\n  {\n    *((_DWORD *)this + 30) = 104;\nLABEL_4:\n    *((_BYTE *)this + 124) = 0;\n    return 104LL;\n  }\n  if ( v5 >= 0 )\n  {\nLABEL_9:\n    result = *((unsigned int *)this + 30);\n    goto LABEL_6;\n  }\n  result = TMsgSocket::GetLastSocketError(this);\n  *((_DWORD *)this + 30) = result;\nLABEL_6:\n  if ( (_DWORD)result == 104 )\n    goto LABEL_4;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (2, 3) appear to "contaminate" the global variables  and local variables v5, a4, v14, v13, v5, var_48, a2, v4, a2, a2, a3. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (2, 3) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:18,463 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
int, length
```
2025-03-08 21:21:20,465 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (4,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (4,) appear to "contaminate" the global variables  and local variables a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (4,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:21,272 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
unsigned char, length
```
2025-03-08 21:21:23,273 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (5,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::IsoPeek(TIsoTcpSocket *a1, unsigned __int8 *a2, _DWORD *a3)\n{\n  __int64 result; // rax\n\n  result = TIsoTcpSocket::PDUSize(a1, a2);\n  if ( (_DWORD)result == 7 )\n  {\n    *a3 = 2;\n  }\n  else if ( (unsigned int)result <= 6 )\n  {\n    *a3 = 3;\n  }\n  else\n  {\n    result = a2[5];\n    if ( (_BYTE)result == 0xE0 )\n    {\n      *a3 = 0;\n    }\n    else if ( (_BYTE)result == 0xF0 )\n    {\n      *a3 = 5;\n    }\n    else\n    {\n      result = 3 * (unsigned int)((_BYTE)result != 0x80) + 1;\n      *a3 = result;\n    }\n  }\n  return result;\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (5,) appear to "contaminate" the global variables  and local variables v10, v5, v15, var_40, a2, a3, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (5,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:24,202 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
int, length
```
2025-03-08 21:21:26,203 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (6,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvPDU(TIsoTcpSocket *this, char *a2)\n{\n  int v2; // r14d\n  char *v3; // r15\n  int v4; // ebp\n  unsigned int v5; // ebx\n  int v7; // ebp\n  unsigned int v8; // eax\n  bool v9; // [rsp+10h] [rbp-58h] BYREF\n  int v10[18]; // [rsp+20h] [rbp-48h] BYREF\n\n  v2 = 1;\n  v3 = (char *)this + 395;\n  v4 = 0;\n  v9 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  while ( 1 )\n  {\n    do\n    {\n      v3 += v4;\n      if ( 4096 - v4 <= 0 )\n        break;\n      v5 = TIsoTcpSocket::isoRecvFragment(this, v3, 4096 - v4, v10, &v9);\n      if ( v5 )\n        goto LABEL_4;\n      if ( v9 )\n        goto LABEL_8;\n      ++v2;\n      v4 += v10[0];\n    }\n    while ( v2 <= *((_DWORD *)this + 96) );\n    v8 = TIsoTcpSocket::SetIsoError(this, 458752);\n    v5 = v8;\n    if ( v9 )\n      break;\n    if ( v8 )\n      goto LABEL_4;\n  }\n  if ( v8 )\n  {\nLABEL_4:\n    if ( *((_DWORD *)this + 30) != 104 )\n      TMsgSocket::Purge(this);\n    return v5;\n  }\nLABEL_8:\n  v5 = 0;\n  v7 = v10[0] + v4 + 7;\n  *((_BYTE *)this + 391) = v7;\n  *((_BYTE *)this + 390) = BYTE1(v7);\n  if ( (char *)this + 388 != a2 )\n    memcpy(a2, (char *)this + 388, v7);\n  return v5;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (6,) appear to "contaminate" the global variables  and local variables a5, var_58. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (6,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:27,062 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
int, length
```
2025-03-08 21:21:29,063 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (8,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker17IsoPerformCommandERi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::IsoPerformCommand(TS7Worker *this, int *a2)\n{\n  int v3; // esi\n  char v4; // al\n\n  v3 = *a2;\n  if ( !v3 )\n    return TS7Worker::PerformPDUAck(this, a2);\n  if ( !(unsigned __int8)TS7Worker::CheckPDU_in(this, v3) )\n  {\n    TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 2u, *(_WORD *)a2, 0, 0, 0);\n    return 0LL;\n  }\n  v4 = *(_BYTE *)(*((_QWORD *)this + 564) + 1LL);\n  if ( v4 == 1 )\n    return TS7Worker::PerformPDURequest(this, a2);\n  if ( v4 != 7 )\n    return 0LL;\n  return TS7Worker::PerformPDUUsrData(this, a2);\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (8,) appear to "contaminate" the global variables  and local variables v4. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (8,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:29,864 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
int, length
```
2025-03-08 21:21:31,865 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (11, 12)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker20PerformFunctionWriteEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionWrite(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  unsigned __int16 *v2; // rdx\n  __int64 v3; // r14\n  __int64 *v4; // rsi\n  __int64 *v5; // r15\n  char *v6; // r12\n  int v7; // eax\n  char v8; // dl\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  __int64 v11; // rbp\n  __int64 v12; // rax\n  TSnapBase *v14; // rbp\n  __int64 v15; // rax\n  unsigned __int16 *src; // [rsp+10h] [rbp-1118h]\n  int v17; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v18; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v19; // [rsp+20h] [rbp-1108h]\n  TSnapBase *v20; // [rsp+20h] [rbp-1108h]\n  int v21; // [rsp+2Ch] [rbp-10FCh]\n  unsigned __int16 v22; // [rsp+30h] [rbp-10F8h]\n  unsigned __int16 v23; // [rsp+32h] [rbp-10F6h]\n  unsigned __int16 v24; // [rsp+34h] [rbp-10F4h]\n  unsigned __int16 v25; // [rsp+36h] [rbp-10F2h]\n  unsigned __int16 v26; // [rsp+38h] [rbp-10F0h]\n  __int64 v27; // [rsp+40h] [rbp-10E8h] BYREF\n  _QWORD v28[19]; // [rsp+48h] [rbp-10E0h] BYREF\n  char v29; // [rsp+E0h] [rbp-1048h] BYREF\n  char v30; // [rsp+E1h] [rbp-1047h]\n  __int16 v31; // [rsp+E2h] [rbp-1046h]\n  __int16 v32; // [rsp+E4h] [rbp-1044h]\n  __int16 v33; // [rsp+E6h] [rbp-1042h]\n  __int16 v34; // [rsp+E8h] [rbp-1040h]\n  __int16 v35; // [rsp+EAh] [rbp-103Eh]\n  char v36; // [rsp+ECh] [rbp-103Ch]\n  unsigned __int8 v37; // [rsp+EDh] [rbp-103Bh]\n  _BYTE v38[4090]; // [rsp+EEh] [rbp-103Ah]\n  unsigned __int64 v39; // [rsp+10E8h] [rbp-40h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (unsigned __int16 *)*((_QWORD *)this + 564);\n  v39 = __readfsqword(0x28u);\n  src = v2;\n  v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;\n  v17 = *((unsigned __int8 *)src + 11);\n  v21 = v17 + 14;\n  if ( *((_BYTE *)src + 11) )\n  {\n    v4 = &v27;\n    v5 = v28;\n    v6 = (char *)src + 15;\n    v19 = (TSnapBase *)(unsigned int)(v17 - 1);\n    while ( 1 )\n    {\n      v8 = *v6;\n      v9 = v3 + *((_QWORD *)this + 564);\n      *v4 = v9;\n      v10 = *(_WORD *)(v9 + 2);\n      if ( (unsigned __int8)(v8 - 28) <= 1u || v8 == 1 )\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n      else\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10) >> 3;\n      v4 = v5;\n      v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);\n      v6 += 12;\n      if ( v5 == &v28[(_QWORD)v19] )\n        break;\n      ++v5;\n    }\n    v36 = 5;\n    v37 = *((_BYTE *)src + 11);\n    if ( v17 == 1 )\n    {\n      v18 = (TS7Worker *)((char *)this + 8);\n      v14 = 0LL;\n      do\n      {\n        v38[(_QWORD)v14] = TS7Worker::WriteArea(this);\n        v14 = (TSnapBase *)((char *)v14 + 1);\n      }\n      while ( v14 != (TSnapBase *)((char *)v19 + 1) );\n      v15 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v15 + 4);\n      v33 = TSnapBase::SwapWord(v18, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v18, 1u);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n      TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n    }\n    else\n    {\n      v20 = (TS7Worker *)((char *)this + 8);\n      v11 = 0LL;\n      do\n      {\n        v38[v11++] = TS7Worker::WriteArea(this);\n        TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n      }\n      while ( v11 != (unsigned int)(v17 - 1) + 1LL );\n      v12 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v12 + 4);\n      v33 = TSnapBase::SwapWord(v20, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v20, v17);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n    }\n  }\n  else\n  {\n    v36 = 5;\n    v29 = 50;\n    v30 = 3;\n    v31 = 0;\n    v37 = *((_BYTE *)src + 11);\n    v32 = *(_WORD *)(*((_QWORD *)this + 564) + 4LL);\n    v33 = TSnapBase::SwapWord(v1, 2u);\n    v35 = 0;\n    v34 = TSnapBase::SwapWord(v1, 0);\n    TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n  }\n  return 1LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (11, 12) appear to "contaminate" the global variables  and local variables v32, v15, var_1044. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (11, 12) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:37,368 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
unsigned__int16, length
```
2025-03-08 21:21:39,369 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (13, 14)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker20PerformFunctionWriteEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionWrite(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  unsigned __int16 *v2; // rdx\n  __int64 v3; // r14\n  __int64 *v4; // rsi\n  __int64 *v5; // r15\n  char *v6; // r12\n  int v7; // eax\n  char v8; // dl\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  __int64 v11; // rbp\n  __int64 v12; // rax\n  TSnapBase *v14; // rbp\n  __int64 v15; // rax\n  unsigned __int16 *src; // [rsp+10h] [rbp-1118h]\n  int v17; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v18; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v19; // [rsp+20h] [rbp-1108h]\n  TSnapBase *v20; // [rsp+20h] [rbp-1108h]\n  int v21; // [rsp+2Ch] [rbp-10FCh]\n  unsigned __int16 v22; // [rsp+30h] [rbp-10F8h]\n  unsigned __int16 v23; // [rsp+32h] [rbp-10F6h]\n  unsigned __int16 v24; // [rsp+34h] [rbp-10F4h]\n  unsigned __int16 v25; // [rsp+36h] [rbp-10F2h]\n  unsigned __int16 v26; // [rsp+38h] [rbp-10F0h]\n  __int64 v27; // [rsp+40h] [rbp-10E8h] BYREF\n  _QWORD v28[19]; // [rsp+48h] [rbp-10E0h] BYREF\n  char v29; // [rsp+E0h] [rbp-1048h] BYREF\n  char v30; // [rsp+E1h] [rbp-1047h]\n  __int16 v31; // [rsp+E2h] [rbp-1046h]\n  __int16 v32; // [rsp+E4h] [rbp-1044h]\n  __int16 v33; // [rsp+E6h] [rbp-1042h]\n  __int16 v34; // [rsp+E8h] [rbp-1040h]\n  __int16 v35; // [rsp+EAh] [rbp-103Eh]\n  char v36; // [rsp+ECh] [rbp-103Ch]\n  unsigned __int8 v37; // [rsp+EDh] [rbp-103Bh]\n  _BYTE v38[4090]; // [rsp+EEh] [rbp-103Ah]\n  unsigned __int64 v39; // [rsp+10E8h] [rbp-40h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (unsigned __int16 *)*((_QWORD *)this + 564);\n  v39 = __readfsqword(0x28u);\n  src = v2;\n  v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;\n  v17 = *((unsigned __int8 *)src + 11);\n  v21 = v17 + 14;\n  if ( *((_BYTE *)src + 11) )\n  {\n    v4 = &v27;\n    v5 = v28;\n    v6 = (char *)src + 15;\n    v19 = (TSnapBase *)(unsigned int)(v17 - 1);\n    while ( 1 )\n    {\n      v8 = *v6;\n      v9 = v3 + *((_QWORD *)this + 564);\n      *v4 = v9;\n      v10 = *(_WORD *)(v9 + 2);\n      if ( (unsigned __int8)(v8 - 28) <= 1u || v8 == 1 )\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n      else\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10) >> 3;\n      v4 = v5;\n      v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);\n      v6 += 12;\n      if ( v5 == &v28[(_QWORD)v19] )\n        break;\n      ++v5;\n    }\n    v36 = 5;\n    v37 = *((_BYTE *)src + 11);\n    if ( v17 == 1 )\n    {\n      v18 = (TS7Worker *)((char *)this + 8);\n      v14 = 0LL;\n      do\n      {\n        v38[(_QWORD)v14] = TS7Worker::WriteArea(this);\n        v14 = (TSnapBase *)((char *)v14 + 1);\n      }\n      while ( v14 != (TSnapBase *)((char *)v19 + 1) );\n      v15 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v15 + 4);\n      v33 = TSnapBase::SwapWord(v18, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v18, 1u);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n      TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n    }\n    else\n    {\n      v20 = (TS7Worker *)((char *)this + 8);\n      v11 = 0LL;\n      do\n      {\n        v38[v11++] = TS7Worker::WriteArea(this);\n        TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n      }\n      while ( v11 != (unsigned int)(v17 - 1) + 1LL );\n      v12 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v12 + 4);\n      v33 = TSnapBase::SwapWord(v20, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v20, v17);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n    }\n  }\n  else\n  {\n    v36 = 5;\n    v29 = 50;\n    v30 = 3;\n    v31 = 0;\n    v37 = *((_BYTE *)src + 11);\n    v32 = *(_WORD *)(*((_QWORD *)this + 564) + 4LL);\n    v33 = TSnapBase::SwapWord(v1, 2u);\n    v35 = 0;\n    v34 = TSnapBase::SwapWord(v1, 0);\n    TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n  }\n  return 1LL;\n}\n\n                        \n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker11CheckPDU_inEi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        _BOOL8 __fastcall TS7Worker::CheckPDU_in(TS7Worker *this, int a2)\n{\n  int v2; // r13d\n  int v3; // edx\n  _BOOL8 result; // rax\n\n  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));\n  v3 = v2\n     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))\n     + 10;\n  result = 0LL;\n  if ( v3 == a2 )\n    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (13, 14) appear to "contaminate" the global variables  and local variables v9, v7, v2, v3, a2, v2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (13, 14) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:40,484 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
unsigned __int16, length
```
2025-03-08 21:21:42,484 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (15, 16)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker11CheckPDU_inEi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        _BOOL8 __fastcall TS7Worker::CheckPDU_in(TS7Worker *this, int a2)\n{\n  int v2; // r13d\n  int v3; // edx\n  _BOOL8 result; // rax\n\n  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));\n  v3 = v2\n     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))\n     + 10;\n  result = 0LL;\n  if ( v3 == a2 )\n    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (15, 16) appear to "contaminate" the global variables  and local variables v3, v2, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (15, 16) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:43,219 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
int, length
```
2025-03-08 21:21:45,220 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (17,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker17PerformPDURequestERi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformPDURequest(TS7Worker *this, int *a2)\n{\n  unsigned __int8 v2; // al\n\n  v2 = *(_BYTE *)(*((_QWORD *)this + 564) + 10LL);\n  if ( v2 > 0x1Fu )\n  {\n    if ( v2 < 0x28u )\n      goto LABEL_5;\n    if ( v2 <= 0x29u )\n      return TS7Worker::PerformFunctionControl(this, v2);\n    if ( v2 != 0xF0 )\n      goto LABEL_5;\n    return TS7Worker::PerformFunctionNegotiate(this);\n  }\n  else\n  {\n    if ( v2 >= 0x1Du )\n      return TS7Worker::PerformFunctionUpload(this);\n    switch ( v2 )\n    {\n      case 5u:\n        return TS7Worker::PerformFunctionWrite(this);\n      case 0x1Au:\n        return TS7Worker::PerformFunctionDownload(this);\n      case 4u:\n        return TS7Worker::PerformFunctionRead(this);\n      default:\nLABEL_5:\n        TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 4u, *(_WORD *)a2, 0, 0, 0);\n        return 1LL;\n    }\n  }\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (17,) appear to "contaminate" the global variables  and local variables v2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (17,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:46,014 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
unsigned __int8, length
```
2025-03-08 21:21:48,015 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (18,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker20PerformFunctionWriteEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionWrite(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  unsigned __int16 *v2; // rdx\n  __int64 v3; // r14\n  __int64 *v4; // rsi\n  __int64 *v5; // r15\n  char *v6; // r12\n  int v7; // eax\n  char v8; // dl\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  __int64 v11; // rbp\n  __int64 v12; // rax\n  TSnapBase *v14; // rbp\n  __int64 v15; // rax\n  unsigned __int16 *src; // [rsp+10h] [rbp-1118h]\n  int v17; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v18; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v19; // [rsp+20h] [rbp-1108h]\n  TSnapBase *v20; // [rsp+20h] [rbp-1108h]\n  int v21; // [rsp+2Ch] [rbp-10FCh]\n  unsigned __int16 v22; // [rsp+30h] [rbp-10F8h]\n  unsigned __int16 v23; // [rsp+32h] [rbp-10F6h]\n  unsigned __int16 v24; // [rsp+34h] [rbp-10F4h]\n  unsigned __int16 v25; // [rsp+36h] [rbp-10F2h]\n  unsigned __int16 v26; // [rsp+38h] [rbp-10F0h]\n  __int64 v27; // [rsp+40h] [rbp-10E8h] BYREF\n  _QWORD v28[19]; // [rsp+48h] [rbp-10E0h] BYREF\n  char v29; // [rsp+E0h] [rbp-1048h] BYREF\n  char v30; // [rsp+E1h] [rbp-1047h]\n  __int16 v31; // [rsp+E2h] [rbp-1046h]\n  __int16 v32; // [rsp+E4h] [rbp-1044h]\n  __int16 v33; // [rsp+E6h] [rbp-1042h]\n  __int16 v34; // [rsp+E8h] [rbp-1040h]\n  __int16 v35; // [rsp+EAh] [rbp-103Eh]\n  char v36; // [rsp+ECh] [rbp-103Ch]\n  unsigned __int8 v37; // [rsp+EDh] [rbp-103Bh]\n  _BYTE v38[4090]; // [rsp+EEh] [rbp-103Ah]\n  unsigned __int64 v39; // [rsp+10E8h] [rbp-40h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (unsigned __int16 *)*((_QWORD *)this + 564);\n  v39 = __readfsqword(0x28u);\n  src = v2;\n  v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;\n  v17 = *((unsigned __int8 *)src + 11);\n  v21 = v17 + 14;\n  if ( *((_BYTE *)src + 11) )\n  {\n    v4 = &v27;\n    v5 = v28;\n    v6 = (char *)src + 15;\n    v19 = (TSnapBase *)(unsigned int)(v17 - 1);\n    while ( 1 )\n    {\n      v8 = *v6;\n      v9 = v3 + *((_QWORD *)this + 564);\n      *v4 = v9;\n      v10 = *(_WORD *)(v9 + 2);\n      if ( (unsigned __int8)(v8 - 28) <= 1u || v8 == 1 )\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n      else\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10) >> 3;\n      v4 = v5;\n      v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);\n      v6 += 12;\n      if ( v5 == &v28[(_QWORD)v19] )\n        break;\n      ++v5;\n    }\n    v36 = 5;\n    v37 = *((_BYTE *)src + 11);\n    if ( v17 == 1 )\n    {\n      v18 = (TS7Worker *)((char *)this + 8);\n      v14 = 0LL;\n      do\n      {\n        v38[(_QWORD)v14] = TS7Worker::WriteArea(this);\n        v14 = (TSnapBase *)((char *)v14 + 1);\n      }\n      while ( v14 != (TSnapBase *)((char *)v19 + 1) );\n      v15 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v15 + 4);\n      v33 = TSnapBase::SwapWord(v18, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v18, 1u);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n      TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n    }\n    else\n    {\n      v20 = (TS7Worker *)((char *)this + 8);\n      v11 = 0LL;\n      do\n      {\n        v38[v11++] = TS7Worker::WriteArea(this);\n        TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n      }\n      while ( v11 != (unsigned int)(v17 - 1) + 1LL );\n      v12 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v12 + 4);\n      v33 = TSnapBase::SwapWord(v20, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v20, v17);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n    }\n  }\n  else\n  {\n    v36 = 5;\n    v29 = 50;\n    v30 = 3;\n    v31 = 0;\n    v37 = *((_BYTE *)src + 11);\n    v32 = *(_WORD *)(*((_QWORD *)this + 564) + 4LL);\n    v33 = TSnapBase::SwapWord(v1, 2u);\n    v35 = 0;\n    v34 = TSnapBase::SwapWord(v1, 0);\n    TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n  }\n  return 1LL;\n}\n\n                        \n                        Function Name: _ZN16TCustomMsgServer7DoEventEijttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        int __fastcall TCustomMsgServer::DoEvent(\n        TCustomMsgServer *this,\n        int a2,\n        int a3,\n        __int16 a4,\n        __int16 a5,\n        __int16 a6,\n        unsigned __int16 a7,\n        unsigned __int16 a8)\n{\n  bool v9; // zf\n  int v10; // edi\n  int result; // eax\n  bool v12; // bp\n  bool v13; // r14\n  void (__fastcall *v14)(_QWORD, time_t *, __int64); // rax\n  time_t timer; // [rsp+30h] [rbp-48h] BYREF\n  int v20; // [rsp+38h] [rbp-40h]\n  int v21; // [rsp+3Ch] [rbp-3Ch]\n  __int16 v22; // [rsp+40h] [rbp-38h]\n  __int16 v23; // [rsp+42h] [rbp-36h]\n  __int16 v24; // [rsp+44h] [rbp-34h]\n  unsigned __int16 v25; // [rsp+46h] [rbp-32h]\n  unsigned __int16 v26; // [rsp+48h] [rbp-30h]\n\n  v9 = *((_BYTE *)this + 80) == 0;\n  v10 = *((_DWORD *)this + 2074);\n  result = *((_DWORD *)this + 2075);\n  if ( v9 )\n  {\n    v12 = (v10 & a3) != 0;\n    v13 = (result & a3) != 0;\n    if ( (result & a3) != 0 || (v10 & a3) != 0 )\n    {\n      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));\n      time(&timer);\n      v25 = a7;\n      v20 = a2;\n      v21 = a3;\n      v22 = a4;\n      v23 = a5;\n      v24 = a6;\n      v26 = a8;\n      if ( v13 )\n      {\n        v14 = (void (__fastcall *)(_QWORD, time_t *, __int64))*((_QWORD *)this + 8);\n        if ( v14 )\n          v14(*((_QWORD *)this + 9), &timer, 26LL);\n      }\n      if ( v12 )\n        TMsgEventQueue::Insert(*((TMsgEventQueue **)this + 7), &timer);\n      return pthread_mutex_unlock(*((pthread_mutex_t **)this + 11));\n    }\n  }\n  return result;\n}\n\n                        \n                        Function Name: _ZN10TMsgSocket10SendPacketEPvi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TMsgSocket::SendPacket(TMsgSocket *this, void *buf, int a3)\n{\n  int v4; // esi\n  size_t v5; // rbp\n  __int64 result; // rax\n  ssize_t v7; // rdx\n\n  v4 = *((_DWORD *)this + 29);\n  v5 = a3;\n  *((_DWORD *)this + 30) = 0;\n  if ( v4 <= 0 || (unsigned __int8)TMsgSocket::CanWrite(this, v4) )\n  {\n    v7 = send(*((_DWORD *)this + 6), buf, v5, 0x4000);\n    result = 0LL;\n    if ( v7 != v5 )\n    {\n      TMsgSocket::SockCheck(this, -1);\n      return 0xFFFFFFFFLL;\n    }\n  }\n  else\n  {\n    *((_DWORD *)this + 30) = 110;\n    return 110LL;\n  }\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::WriteArea(TS7Worker *this, __int64 a2, __int64 a3, _WORD *a4)\n{\n  unsigned __int16 v7; // ax\n  __int64 Area; // rbx\n  int v9; // r15d\n  char v10; // dl\n  char v11; // al\n  unsigned __int16 v12; // ax\n  unsigned int v13; // r15d\n  unsigned int v14; // esi\n  unsigned int v15; // eax\n  char v16; // dl\n  int v18; // ecx\n  __int64 v19; // rsi\n  __int64 v20; // rax\n  unsigned int v21; // r12d\n  char v22; // al\n  TSnap7Server *v23; // rdi\n  pthread_mutex_t *v24; // rbx\n  char v25; // al\n  int v27; // [rsp+1Ch] [rbp-4Ch]\n  _BYTE *dest; // [rsp+20h] [rbp-48h]\n  int v29; // [rsp+28h] [rbp-40h]\n  unsigned __int8 v30; // [rsp+2Fh] [rbp-39h]\n\n  a4[3] = 0;\n  a4[4] = 0;\n  *a4 = 0;\n  a4[2] = 0;\n  a4[1] = *(unsigned __int8 *)(a3 + 8);\n  v7 = 0;\n  if ( *(_BYTE *)(a3 + 8) == 0x84 )\n  {\n    v7 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 6));\n    a4[2] = v7;\n  }\n  if ( *(_BYTE *)(*((_QWORD *)this + 1084) + 24792LL) )\n  {\n    Area = 0LL;\n  }\n  else\n  {\n    Area = TS7Worker::GetArea(this, *(_BYTE *)(a3 + 8), v7);\n    if ( !Area )\n      return TS7Worker::WA_NotFound(this, a4);\n  }\n  v9 = TS7Worker::DataSizeByte(this, *(unsigned __int8 *)(a3 + 3));\n  if ( !v9 )\n    return TS7Worker::WA_InvalidTransportSize(this, a4);\n  v10 = *(_BYTE *)(a3 + 3);\n  v11 = *(_BYTE *)(a3 + 8);\n  if ( (v10 == 29) != (v11 == 29) )\n    return TS7Worker::WA_OutOfRange(this, a4);\n  if ( (v10 == 28) != (v11 == 28) )\n    return TS7Worker::WA_OutOfRange(this, a4);\n  v12 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 4));\n  v13 = v12 * v9;\n  v27 = v12;\n  a4[4] = v13;\n  if ( *(_BYTE *)(a3 + 3) == 1 && v13 > 1 )\n    return TS7Worker::WA_OutOfRange(this, a4);\n  v14 = *(_DWORD *)(a3 + 8);\n  LOBYTE(v14) = 0;\n  v15 = TSnapBase::SwapDWord((TS7Worker *)((char *)this + 8), v14);\n  v16 = *(_BYTE *)(a3 + 3);\n  if ( v16 == 29 || v16 == 1 )\n  {\nLABEL_15:\n    if ( v16 == 1 )\n    {\n      v29 = v15;\n    }\n    else\n    {\n      v18 = v15 >> 3;\n      if ( v16 == 29 )\n        v18 = v15;\n      v29 = v18;\n    }\n    v19 = v15 >> 3;\n    v30 = v15 & 7;\n    if ( (unsigned __int8)(v16 - 28) > 1u )\n      goto LABEL_20;\n    goto LABEL_38;\n  }\n  if ( v16 != 28 )\n  {\n    if ( (v15 & 7) != 0 )\n      return TS7Worker::WA_OutOfRange(this, a4);\n    goto LABEL_15;\n  }\n  v29 = v15;\nLABEL_38:\n  v19 = v15 >> 1;\nLABEL_20:\n  v20 = *((_QWORD *)this + 1084);\n  a4[3] = v19;\n  if ( !*(_BYTE *)(v20 + 24792) )\n  {\n    if ( *(unsigned __int16 *)(Area + 2) < (unsigned int)v19 + v13 )\n      return TS7Worker::WA_OutOfRange(this, a4);\n    dest = (_BYTE *)(*(_QWORD *)(Area + 8) + v19);\n  }\n  v21 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a2 + 2));\n  v22 = *(_BYTE *)(a2 + 1);\n  if ( v22 != 7 && v22 != 9 && v22 != 3 )\n    v21 >>= 3;\n  if ( v21 != v13 )\n    return TS7Worker::WA_DataSizeMismatch(this, a4);\n  v23 = (TSnap7Server *)*((_QWORD *)this + 1084);\n  if ( !*((_BYTE *)v23 + 24792) )\n  {\n    if ( *(_BYTE *)(a3 + 3) == 1 )\n    {\n      v25 = BitMask[v30];\n      if ( (*(_BYTE *)(a2 + 4) & 1) != 0 )\n        *dest |= v25;\n      else\n        *dest &= ~v25;\n    }\n    else\n    {\n      v24 = *(pthread_mutex_t **)(Area + 16);\n      pthread_mutex_lock(v24);\n      memcpy(dest, (const void *)(a2 + 4), v21);\n      pthread_mutex_unlock(v24);\n    }\n    return 0xFFFFFFFFLL;\n  }\n  if ( (unsigned __int8)TSnap7Server::DoWriteArea(\n                          v23,\n                          *((_DWORD *)this + 15),\n                          (unsigned __int16)a4[1],\n                          (unsigned __int16)a4[2],\n                          v29,\n                          v27,\n                          *(unsigned __int8 *)(a3 + 3),\n                          (void *)(a2 + 4)) )\n    return 0xFFFFFFFFLL;\n  return TS7Worker::WA_NotFound(this, a4);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket13isoSendBufferEPvi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoSendBuffer(TIsoTcpSocket *this, void *src, int a3)\n{\n  int v5; // esi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( (unsigned int)(a3 + 6) > 0x1006 )\n  {\n    v5 = 0x40000;\n  }\n  else\n  {\n    *((_BYTE *)this + 388) = 3;\n    *((_BYTE *)this + 389) = 0;\n    *((_BYTE *)this + 392) = 2;\n    *((_BYTE *)this + 393) = -16;\n    *((_BYTE *)this + 391) = a3 + 7;\n    *((_BYTE *)this + 394) = 0x80;\n    *((_BYTE *)this + 390) = (unsigned __int16)(a3 + 7) >> 8;\n    if ( src )\n      memcpy((char *)this + 395, src, a3);\n    TMsgSocket::SendPacket(this, (char *)this + 388, a3 + 7);\n    if ( !*((_DWORD *)this + 30) )\n      return 0LL;\n    v5 = 589824;\n  }\n  return TIsoTcpSocket::SetIsoError(this, v5);\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (18,) appear to "contaminate" the global variables  and local variables var_1108, src, v17, v29, v14, var_103B, var_10FC, var_1110, v27, v4, v19, v37, v21, v10, var_18, a3, v9, v4, v7, v5, var_10, var_20, a4, v5, var_10. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (18,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:49,241 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
int, length
```
2025-03-08 21:21:51,241 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (22,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker20PerformFunctionWriteEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionWrite(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  unsigned __int16 *v2; // rdx\n  __int64 v3; // r14\n  __int64 *v4; // rsi\n  __int64 *v5; // r15\n  char *v6; // r12\n  int v7; // eax\n  char v8; // dl\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  __int64 v11; // rbp\n  __int64 v12; // rax\n  TSnapBase *v14; // rbp\n  __int64 v15; // rax\n  unsigned __int16 *src; // [rsp+10h] [rbp-1118h]\n  int v17; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v18; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v19; // [rsp+20h] [rbp-1108h]\n  TSnapBase *v20; // [rsp+20h] [rbp-1108h]\n  int v21; // [rsp+2Ch] [rbp-10FCh]\n  unsigned __int16 v22; // [rsp+30h] [rbp-10F8h]\n  unsigned __int16 v23; // [rsp+32h] [rbp-10F6h]\n  unsigned __int16 v24; // [rsp+34h] [rbp-10F4h]\n  unsigned __int16 v25; // [rsp+36h] [rbp-10F2h]\n  unsigned __int16 v26; // [rsp+38h] [rbp-10F0h]\n  __int64 v27; // [rsp+40h] [rbp-10E8h] BYREF\n  _QWORD v28[19]; // [rsp+48h] [rbp-10E0h] BYREF\n  char v29; // [rsp+E0h] [rbp-1048h] BYREF\n  char v30; // [rsp+E1h] [rbp-1047h]\n  __int16 v31; // [rsp+E2h] [rbp-1046h]\n  __int16 v32; // [rsp+E4h] [rbp-1044h]\n  __int16 v33; // [rsp+E6h] [rbp-1042h]\n  __int16 v34; // [rsp+E8h] [rbp-1040h]\n  __int16 v35; // [rsp+EAh] [rbp-103Eh]\n  char v36; // [rsp+ECh] [rbp-103Ch]\n  unsigned __int8 v37; // [rsp+EDh] [rbp-103Bh]\n  _BYTE v38[4090]; // [rsp+EEh] [rbp-103Ah]\n  unsigned __int64 v39; // [rsp+10E8h] [rbp-40h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (unsigned __int16 *)*((_QWORD *)this + 564);\n  v39 = __readfsqword(0x28u);\n  src = v2;\n  v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;\n  v17 = *((unsigned __int8 *)src + 11);\n  v21 = v17 + 14;\n  if ( *((_BYTE *)src + 11) )\n  {\n    v4 = &v27;\n    v5 = v28;\n    v6 = (char *)src + 15;\n    v19 = (TSnapBase *)(unsigned int)(v17 - 1);\n    while ( 1 )\n    {\n      v8 = *v6;\n      v9 = v3 + *((_QWORD *)this + 564);\n      *v4 = v9;\n      v10 = *(_WORD *)(v9 + 2);\n      if ( (unsigned __int8)(v8 - 28) <= 1u || v8 == 1 )\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n      else\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10) >> 3;\n      v4 = v5;\n      v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);\n      v6 += 12;\n      if ( v5 == &v28[(_QWORD)v19] )\n        break;\n      ++v5;\n    }\n    v36 = 5;\n    v37 = *((_BYTE *)src + 11);\n    if ( v17 == 1 )\n    {\n      v18 = (TS7Worker *)((char *)this + 8);\n      v14 = 0LL;\n      do\n      {\n        v38[(_QWORD)v14] = TS7Worker::WriteArea(this);\n        v14 = (TSnapBase *)((char *)v14 + 1);\n      }\n      while ( v14 != (TSnapBase *)((char *)v19 + 1) );\n      v15 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v15 + 4);\n      v33 = TSnapBase::SwapWord(v18, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v18, 1u);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n      TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n    }\n    else\n    {\n      v20 = (TS7Worker *)((char *)this + 8);\n      v11 = 0LL;\n      do\n      {\n        v38[v11++] = TS7Worker::WriteArea(this);\n        TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n      }\n      while ( v11 != (unsigned int)(v17 - 1) + 1LL );\n      v12 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v12 + 4);\n      v33 = TSnapBase::SwapWord(v20, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v20, v17);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n    }\n  }\n  else\n  {\n    v36 = 5;\n    v29 = 50;\n    v30 = 3;\n    v31 = 0;\n    v37 = *((_BYTE *)src + 11);\n    v32 = *(_WORD *)(*((_QWORD *)this + 564) + 4LL);\n    v33 = TSnapBase::SwapWord(v1, 2u);\n    v35 = 0;\n    v34 = TSnapBase::SwapWord(v1, 0);\n    TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n  }\n  return 1LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (22,) appear to "contaminate" the global variables  and local variables v6, v8. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (22,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:52,364 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
int, length
```
2025-03-08 21:21:54,364 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (27,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _Z10EvtSrvTextR9TSrvEvent\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        std::string *__fastcall EvtSrvText(std::string *a1, __int64 a2)\n{\n  unsigned int v3; // esi\n  __int64 v4; // r13\n  __int64 v5; // r13\n  __int64 v6; // r13\n  __int64 v7; // r13\n  __int64 v8; // r13\n  __int64 v9; // r13\n  __int64 v10; // r13\n  __int64 v11; // r13\n  __int64 v12; // r14\n  __int64 v13; // r14\n  __int64 v14; // r14\n  __int64 v15; // rbp\n  __int64 v16; // rbp\n  unsigned __int16 v17; // ax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r13\n  __int64 v21; // r13\n  __int64 v22; // r13\n  __int64 v23; // r13\n  __int64 v24; // rbp\n  __int64 v26; // r14\n  __int64 v27; // r14\n  __int64 v28; // r14\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r13\n  __int64 v32; // r13\n  __int64 v33; // r13\n  __int64 v34; // r14\n  __int64 v35; // r13\n  __int64 v36; // r13\n  __int64 v37; // r14\n  __int64 v38; // r14\n  __int64 v39; // r13\n  __int16 v40; // ax\n  __int64 v41; // r14\n  __int64 v42; // r13\n  __int64 v43; // r13\n  __int64 v44; // r13\n  __int16 v45; // dx\n  __int64 v46; // r14\n  __int64 v47; // r14\n  __int64 v48; // r14\n  __int64 v49; // r14\n  __int64 v50; // r13\n  __int64 v51; // r13\n  __int64 v52; // r13\n  __int64 v53; // r13\n  __int64 v54; // r13\n  __int64 v55; // r13\n  int v56; // [rsp+0h] [rbp-468h]\n  int v57; // [rsp+0h] [rbp-468h]\n  int v58; // [rsp+0h] [rbp-468h]\n  char v59; // [rsp+5h] [rbp-463h] BYREF\n  char v60; // [rsp+6h] [rbp-462h] BYREF\n  char v61; // [rsp+7h] [rbp-461h] BYREF\n  char v62; // [rsp+8h] [rbp-460h] BYREF\n  char v63; // [rsp+9h] [rbp-45Fh] BYREF\n  char v64; // [rsp+Ah] [rbp-45Eh] BYREF\n  char v65; // [rsp+Bh] [rbp-45Dh] BYREF\n  char v66; // [rsp+Ch] [rbp-45Ch] BYREF\n  char v67; // [rsp+Dh] [rbp-45Bh] BYREF\n  char v68; // [rsp+Eh] [rbp-45Ah] BYREF\n  char v69; // [rsp+Fh] [rbp-459h] BYREF\n  int v70[2]; // [rsp+10h] [rbp-458h] BYREF\n  char v71; // [rsp+18h] [rbp-450h]\n  __int64 v72; // [rsp+20h] [rbp-448h] BYREF\n  char v73; // [rsp+28h] [rbp-440h]\n  __int64 v74; // [rsp+30h] [rbp-438h] BYREF\n  char v75; // [rsp+38h] [rbp-430h]\n  __int64 v76[2]; // [rsp+40h] [rbp-428h] BYREF\n  __int64 v77[2]; // [rsp+50h] [rbp-418h] BYREF\n  __int64 v78[2]; // [rsp+60h] [rbp-408h] BYREF\n  __int64 v79[2]; // [rsp+70h] [rbp-3F8h] BYREF\n  __int64 v80[2]; // [rsp+80h] [rbp-3E8h] BYREF\n  __int64 v81[2]; // [rsp+90h] [rbp-3D8h] BYREF\n  __int64 v82[2]; // [rsp+A0h] [rbp-3C8h] BYREF\n  __int64 v83[2]; // [rsp+B0h] [rbp-3B8h] BYREF\n  __int64 v84[2]; // [rsp+C0h] [rbp-3A8h] BYREF\n  __int64 v85[2]; // [rsp+D0h] [rbp-398h] BYREF\n  __int64 v86[2]; // [rsp+E0h] [rbp-388h] BYREF\n  __int64 v87[2]; // [rsp+F0h] [rbp-378h] BYREF\n  _QWORD v88[2]; // [rsp+100h] [rbp-368h] BYREF\n  __int64 v89[2]; // [rsp+110h] [rbp-358h] BYREF\n  __int64 v90[2]; // [rsp+120h] [rbp-348h] BYREF\n  __int64 v91[2]; // [rsp+130h] [rbp-338h] BYREF\n  __int64 v92[2]; // [rsp+140h] [rbp-328h] BYREF\n  __int64 v93[2]; // [rsp+150h] [rbp-318h] BYREF\n  __int64 v94[2]; // [rsp+160h] [rbp-308h] BYREF\n  __int64 v95[2]; // [rsp+170h] [rbp-2F8h] BYREF\n  __int64 v96[2]; // [rsp+180h] [rbp-2E8h] BYREF\n  __int64 v97[2]; // [rsp+190h] [rbp-2D8h] BYREF\n  _QWORD v98[2]; // [rsp+1A0h] [rbp-2C8h] BYREF\n  __int64 v99[2]; // [rsp+1B0h] [rbp-2B8h] BYREF\n  __int64 v100[2]; // [rsp+1C0h] [rbp-2A8h] BYREF\n  __int64 v101[2]; // [rsp+1D0h] [rbp-298h] BYREF\n  __int64 v102[2]; // [rsp+1E0h] [rbp-288h] BYREF\n  _QWORD v103[2]; // [rsp+1F0h] [rbp-278h] BYREF\n  __int64 v104[2]; // [rsp+200h] [rbp-268h] BYREF\n  _QWORD v105[2]; // [rsp+210h] [rbp-258h] BYREF\n  __int64 v106[2]; // [rsp+220h] [rbp-248h] BYREF\n  _QWORD v107[2]; // [rsp+230h] [rbp-238h] BYREF\n  __int64 v108[2]; // [rsp+240h] [rbp-228h] BYREF\n  _QWORD v109[2]; // [rsp+250h] [rbp-218h] BYREF\n  __int64 v110[2]; // [rsp+260h] [rbp-208h] BYREF\n  __int64 v111[2]; // [rsp+270h] [rbp-1F8h] BYREF\n  _QWORD v112[2]; // [rsp+280h] [rbp-1E8h] BYREF\n  __int64 v113[2]; // [rsp+290h] [rbp-1D8h] BYREF\n  __int64 v114[2]; // [rsp+2A0h] [rbp-1C8h] BYREF\n  __int64 v115[2]; // [rsp+2B0h] [rbp-1B8h] BYREF\n  __int64 v116[2]; // [rsp+2C0h] [rbp-1A8h] BYREF\n  __int64 v117[2]; // [rsp+2D0h] [rbp-198h] BYREF\n  __int64 v118[2]; // [rsp+2E0h] [rbp-188h] BYREF\n  __int64 v119[2]; // [rsp+2F0h] [rbp-178h] BYREF\n  __int64 v120[2]; // [rsp+300h] [rbp-168h] BYREF\n  __int64 v121[2]; // [rsp+310h] [rbp-158h] BYREF\n  __int64 v122[2]; // [rsp+320h] [rbp-148h] BYREF\n  _QWORD v123[2]; // [rsp+330h] [rbp-138h] BYREF\n  __int64 v124[2]; // [rsp+340h] [rbp-128h] BYREF\n  __int64 v125[2]; // [rsp+350h] [rbp-118h] BYREF\n  __int64 v126[2]; // [rsp+360h] [rbp-108h] BYREF\n  __int64 v127[2]; // [rsp+370h] [rbp-F8h] BYREF\n  __int64 v128[2]; // [rsp+380h] [rbp-E8h] BYREF\n  __int64 v129[2]; // [rsp+390h] [rbp-D8h] BYREF\n  __int64 v130[2]; // [rsp+3A0h] [rbp-C8h] BYREF\n  __int64 v131[2]; // [rsp+3B0h] [rbp-B8h] BYREF\n  __int64 v132[2]; // [rsp+3C0h] [rbp-A8h] BYREF\n  _QWORD v133[2]; // [rsp+3D0h] [rbp-98h] BYREF\n  __int64 v134[2]; // [rsp+3E0h] [rbp-88h] BYREF\n  __int64 v135[2]; // [rsp+3F0h] [rbp-78h] BYREF\n  _QWORD v136[2]; // [rsp+400h] [rbp-68h] BYREF\n  __int64 v137[2]; // [rsp+410h] [rbp-58h] BYREF\n  __int64 v138[2]; // [rsp+420h] [rbp-48h] BYREF\n  __int64 v139[2]; // [rsp+430h] [rbp-38h] BYREF\n\n  v3 = *(_DWORD *)(a2 + 12);\n  *(_QWORD *)v70 = (char *)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( v3 > 0x8000 )\n  {\n    if ( v3 == 0x200000 )\n    {\n      if ( *(_WORD *)(a2 + 18) == 1 )\n        std::string::string(v93, "System clock read requested", &v64);\n      else\n        std::string::string(v93, "System clock write requested", &v63);\n      std::string::assign((std::string *)v70, (const std::string *)v93);\n      v6 = v93[0] - 24;\n      if ( (_UNKNOWN *)(v93[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_56;\n      goto LABEL_101;\n    }\n    if ( v3 <= 0x200000 )\n    {\n      if ( v3 == 0x40000 )\n      {\n        TxtDataResult((std::string *)v86, v56, v62, v70[0], v71);\n        TxtStartSize((std::string *)v84, v58, v62, v70[0], v71, v72, v73, v74, v75);\n        TxtArea((std::string *)v82);\n        v83[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v83, *(_QWORD *)(v82[0] - 24) + 15LL);\n        std::string::append((std::string *)v83, "Write request, ", 0xFuLL);\n        std::string::append((std::string *)v83, (const std::string *)v82);\n        std::string::string((std::string *)v85, (const std::string *)v83);\n        std::string::append((std::string *)v85, (const std::string *)v84);\n        std::string::string((std::string *)v87, (const std::string *)v85);\n        std::string::append((std::string *)v87, (const std::string *)v86);\n        std::string::assign((std::string *)v70, (const std::string *)v87);\n        v19 = v87[0] - 24;\n        if ( (_UNKNOWN *)(v87[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v19 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v19, &v69);\n        }\n        v20 = v85[0] - 24;\n        if ( (_UNKNOWN *)(v85[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v20 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v20, &v69);\n        }\n        v21 = v83[0] - 24;\n        if ( (_UNKNOWN *)(v83[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v21 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v21, &v69);\n        }\n        v22 = v82[0] - 24;\n        if ( (_UNKNOWN *)(v82[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v22 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v22, &v69);\n        }\n        v23 = v84[0] - 24;\n        if ( (_UNKNOWN *)(v84[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v23 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v23, &v69);\n        }\n        v6 = v86[0] - 24;\n        if ( (_UNKNOWN *)(v86[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_101;\n        goto LABEL_56;\n      }\n      if ( v3 > 0x40000 )\n      {\n        if ( v3 == 0x80000 )\n        {\n          IntToString((int)v88);\n          v89[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v89, *(_QWORD *)(v88[0] - 24LL) + 34LL);\n          std::string::append((std::string *)v89, "The client requires a PDU size of ", 0x22uLL);\n          std::string::append((std::string *)v89, (const std::string *)v88);\n          std::string::string((std::string *)v90, (const std::string *)v89);\n          std::string::append((std::string *)v90, " bytes", 6uLL);\n          std::string::assign((std::string *)v70, (const std::string *)v90);\n          v35 = v90[0] - 24;\n          if ( (_UNKNOWN *)(v90[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v35 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v35, &v69);\n          }\n          v36 = v89[0] - 24;\n          if ( (_UNKNOWN *)(v89[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v36 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v36, &v69);\n          }\n          v6 = v88[0] - 24LL;\n          if ( (_UNKNOWN *)(v88[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n        if ( v3 == 0x100000 )\n        {\n          NumToString((std::string *)v118, *(unsigned __int16 *)(a2 + 20), 0x10u);\n          NumToString((std::string *)v115, *(unsigned __int16 *)(a2 + 18), 0x10u);\n          v116[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v116, *(_QWORD *)(v115[0] - 24) + 23LL);\n          std::string::append((std::string *)v116, "Read SZL request, ID:0x", 0x17uLL);\n          std::string::append((std::string *)v116, (const std::string *)v115);\n          std::string::string((std::string *)v117, (const std::string *)v116);\n          std::string::append((std::string *)v117, " INDEX:0x", 9uLL);\n          std::string::string((std::string *)v114, (const std::string *)v117);\n          std::string::append((std::string *)v114, (const std::string *)v118);\n          v30 = v117[0] - 24;\n          if ( (_UNKNOWN *)(v117[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v30 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v30, &v69);\n          }\n          v31 = v116[0] - 24;\n          if ( (_UNKNOWN *)(v116[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v31 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v31, &v69);\n          }\n          v32 = v115[0] - 24;\n          if ( (_UNKNOWN *)(v115[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v32 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v32, &v69);\n          }\n          v33 = v118[0] - 24;\n          if ( (_UNKNOWN *)(v118[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v33 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v33, &v69);\n          }\n          if ( *(_WORD *)(a2 + 16) )\n          {\n            std::string::string((std::string *)v92, (const std::string *)v114);\n            std::string::append((std::string *)v92, " --> NOT AVAILABLE", 0x12uLL);\n          }\n          else\n          {\n            std::string::string((std::string *)v92, (const std::string *)v114);\n            std::string::append((std::string *)v92, " --> OK", 7uLL);\n          }\n          v34 = v114[0] - 24;\n          if ( (_UNKNOWN *)(v114[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v34 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v34, &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v92);\n          v6 = v92[0] - 24;\n          if ( (_UNKNOWN *)(v92[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      else\n      {\n        if ( v3 == (_DWORD)&stru_10000 )\n        {\n          switch ( *(_WORD *)(a2 + 16) )\n          {\n            case 1:\n              IntToString((int)v103);\n              v102[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v102, *(_QWORD *)(v103[0] - 24LL) + 12LL);\n              std::string::append((std::string *)v102, "Fragment of ", 0xCuLL);\n              std::string::append((std::string *)v102, (const std::string *)v103);\n              std::string::string((std::string *)&v72, (const std::string *)v102);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v47 = v102[0] - 24;\n              if ( (_UNKNOWN *)(v102[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v47 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v47, &v69);\n              }\n              v38 = v103[0] - 24LL;\n              if ( (_UNKNOWN *)(v103[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 2:\n              IntToString((int)v105);\n              v104[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v104, *(_QWORD *)(v105[0] - 24LL) + 17LL);\n              std::string::append((std::string *)v104, "Malformed PDU of ", 0x11uLL);\n              std::string::append((std::string *)v104, (const std::string *)v105);\n              std::string::string((std::string *)&v72, (const std::string *)v104);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v46 = v104[0] - 24;\n              if ( (_UNKNOWN *)(v104[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v46 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v46, &v69);\n              }\n              v38 = v105[0] - 24LL;\n              if ( (_UNKNOWN *)(v105[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 3:\n              IntToString((int)v107);\n              v106[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v106, *(_QWORD *)(v107[0] - 24LL) + 18LL);\n              std::string::append((std::string *)v106, "Message of sparse ", 0x12uLL);\n              std::string::append((std::string *)v106, (const std::string *)v107);\n              std::string::string((std::string *)&v72, (const std::string *)v106);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v48 = v106[0] - 24;\n              if ( (_UNKNOWN *)(v106[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v48 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v48, &v69);\n              }\n              v38 = v107[0] - 24LL;\n              if ( (_UNKNOWN *)(v107[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 4:\n              std::string::string(&v72, "Cannot handle this PDU", &v59);\n              break;\n            case 5:\n              v45 = *(_WORD *)(a2 + 18);\n              if ( v45 == 65 )\n              {\n                std::string::string(&v72, "Function group programmer not yet implemented", &v61);\n              }\n              else\n              {\n                if ( v45 != 66 )\n                  goto LABEL_86;\n                std::string::string(&v72, "Function group cyclic data not yet implemented", &v60);\n              }\n              break;\n            default:\nLABEL_86:\n              IntToString((int)v109);\n              v108[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v108, *(_QWORD *)(v109[0] - 24LL) + 21LL);\n              std::string::append((std::string *)v108, "Unknown Return code (", 0x15uLL);\n              std::string::append((std::string *)v108, (const std::string *)v109);\n              std::string::string((std::string *)&v72, (const std::string *)v108);\n              std::string::append((std::string *)&v72, ")", 1uLL);\n              v37 = v108[0] - 24;\n              if ( (_UNKNOWN *)(v108[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v37 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v37, &v69);\n              }\n              v38 = v109[0] - 24LL;\n              if ( (_UNKNOWN *)(v109[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n              {\nLABEL_127:\n                if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v38 + 16)) <= 0 )\n                  std::string::_Rep::_M_destroy(v38, &v69);\n              }\n              break;\n          }\n          v74 = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)&v74, *(_QWORD *)(v72 - 24) + 15LL);\n          std::string::append((std::string *)&v74, "PDU incoming : ", 0xFuLL);\n          std::string::append((std::string *)&v74, (const std::string *)&v72);\n          std::string::assign((std::string *)v70, (const std::string *)&v74);\n          v39 = v74 - 24;\n          if ( (_UNKNOWN *)(v74 - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v39 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v39, &v69);\n          }\n          v6 = v72 - 24;\n          if ( (_UNKNOWN *)(v72 - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n        if ( v3 == (_DWORD)&loc_20000 )\n        {\n          TxtDataResult((std::string *)v80, v56, v62, v70[0], v71);\n          TxtStartSize((std::string *)v78, v57, v62, v70[0], v71, v72, v73, v74, v75);\n          TxtArea((std::string *)v76);\n          v77[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v77, *(_QWORD *)(v76[0] - 24) + 14LL);\n          std::string::append((std::string *)v77, "Read request, ", 0xEuLL);\n          std::string::append((std::string *)v77, (const std::string *)v76);\n          std::string::string((std::string *)v79, (const std::string *)v77);\n          std::string::append((std::string *)v79, (const std::string *)v78);\n          std::string::string((std::string *)v81, (const std::string *)v79);\n          std::string::append((std::string *)v81, (const std::string *)v80);\n          std::string::assign((std::string *)v70, (const std::string *)v81);\n          v7 = v81[0] - 24;\n          if ( (_UNKNOWN *)(v81[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v7 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v7, &v69);\n          }\n          v8 = v79[0] - 24;\n          if ( (_UNKNOWN *)(v79[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v8 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v8, &v69);\n          }\n          v9 = v77[0] - 24;\n          if ( (_UNKNOWN *)(v77[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v9 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v9, &v69);\n          }\n          v10 = v76[0] - 24;\n          if ( (_UNKNOWN *)(v76[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v10 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v10, &v69);\n          }\n          v11 = v78[0] - 24;\n          if ( (_UNKNOWN *)(v78[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v11 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v11, &v69);\n          }\n          v6 = v80[0] - 24;\n          if ( (_UNKNOWN *)(v80[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      goto LABEL_8;\n    }\n    if ( v3 != 0x1000000 )\n    {\n      if ( v3 > 0x1000000 )\n      {\n        if ( v3 == 0x2000000 )\n        {\n          v40 = *(_WORD *)(a2 + 18);\n          if ( v40 == 1 )\n          {\n            std::string::string(v97, "Security request : Set session password --> OK", &v67);\n          }\n          else if ( v40 == 2 )\n          {\n            std::string::string(v97, "Security request : Clear session password --> OK", &v68);\n          }\n          else\n          {\n            std::string::string(v97, "Security request : Unknown Subfunction", &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v97);\n          v6 = v97[0] - 24;\n          if ( (_UNKNOWN *)(v97[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n        if ( v3 == 0x4000000 )\n        {\n          std::string::string(v110, "CPU Control request : ", &v62);\n          switch ( (unsigned __int16)v91 )\n          {\n            case 0u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Unknown", 7uLL);\n              break;\n            case 1u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Cold START --> OK", 0x11uLL);\n              break;\n            case 2u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Warm START --> OK", 0x11uLL);\n              break;\n            case 3u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "STOP --> OK", 0xBuLL);\n              break;\n            case 4u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Memory compress --> OK", 0x16uLL);\n              break;\n            case 5u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Copy Ram to Rom --> OK", 0x16uLL);\n              break;\n            case 6u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Block Insert or Delete --> OK", 0x1DuLL);\n              break;\n            default:\n              IntToString((int)v112);\n              std::string::string((std::string *)v111, (const std::string *)v110);\n              std::string::append((std::string *)v111, "Unknown control code (", 0x16uLL);\n              std::string::string((std::string *)v113, (const std::string *)v111);\n              std::string::append((std::string *)v113, (const std::string *)v112);\n              std::string::string((std::string *)v91, (const std::string *)v113);\n              std::string::append((std::string *)v91, ")", 1uLL);\n              v26 = v113[0] - 24;\n              if ( (_UNKNOWN *)(v113[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v26 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v26, &v69);\n              }\n              v27 = v111[0] - 24;\n              if ( (_UNKNOWN *)(v111[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v27 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v27, &v69);\n              }\n              v28 = v112[0] - 24LL;\n              if ( (_UNKNOWN *)(v112[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v28 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v28, &v69);\n              }\n              break;\n          }\n          v29 = v110[0] - 24;\n          if ( (_UNKNOWN *)(v110[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v29 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v29, &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v91);\n          v6 = v91[0] - 24;\n          if ( (_UNKNOWN *)(v91[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      else\n      {\n        if ( v3 == 0x400000 )\n        {\n          std::string::string(v94, "Block upload requested --> NOT PERFORMED (due to invalid security level)", &v65);\n          std::string::assign((std::string *)v70, (const std::string *)v94);\n          v6 = v94[0] - 24;\n          if ( (_UNKNOWN *)(v94[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n        if ( v3 == 0x800000 )\n        {\n          std::string::string(v95, "Block download requested --> NOT PERFORMED (due to invalid security level)", &v66);\n          std::string::assign((std::string *)v70, (const std::string *)v95);\n          v6 = v95[0] - 24;\n          if ( (_UNKNOWN *)(v95[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n      }\nLABEL_8:\n      IntToString((int)v98);\n      v99[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v99, *(_QWORD *)(v98[0] - 24LL) + 15LL);\n      std::string::append((std::string *)v99, "Unknown event (", 0xFuLL);\n      std::string::append((std::string *)v99, (const std::string *)v98);\n      std::string::string((std::string *)v100, (const std::string *)v99);\n      std::string::append((std::string *)v100, ")", 1uLL);\n      std::string::assign((std::string *)v70, (const std::string *)v100);\n      v4 = v100[0] - 24;\n      if ( (_UNKNOWN *)(v100[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v4 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v4, &v69);\n      }\n      v5 = v99[0] - 24;\n      if ( (_UNKNOWN *)(v99[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v5 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v5, &v69);\n      }\n      v6 = v98[0] - 24LL;\n      if ( (_UNKNOWN *)(v98[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n      {\nLABEL_101:\n        if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v6 + 16)) <= 0 )\n          std::string::_Rep::_M_destroy(v6, &v69);\n      }\nLABEL_56:\n      SenderText((std::string *)v101, v56, v62, v70[0], v71, v72, v73);\n      std::string::string(a1, (const std::string *)v101);\n      std::string::append(a1, (const std::string *)v70);\n      v16 = v101[0] - 24;\n      if ( (_UNKNOWN *)(v101[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_57;\n      goto LABEL_34;\n    }\n    v17 = *(_WORD *)(a2 + 18);\n    v119[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    if ( v17 == 2 )\n    {\n      StrBlockType((std::string *)v128);\n      v129[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v129, *(_QWORD *)(v128[0] - 24) + 14LL);\n      std::string::append((std::string *)v129, "Block of type ", 0xEuLL);\n      std::string::append((std::string *)v129, (const std::string *)v128);\n      std::string::string((std::string *)v130, (const std::string *)v129);\n      std::string::append((std::string *)v130, " list requested (start sequence)", 0x20uLL);\n      std::string::assign((std::string *)v119, (const std::string *)v130);\n      v42 = v130[0] - 24;\n      if ( (_UNKNOWN *)(v130[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v42 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v42, &v69);\n      }\n      v43 = v129[0] - 24;\n      if ( (_UNKNOWN *)(v129[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v43 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v43, &v69);\n      }\n      v44 = v128[0] - 24;\n      if ( (_UNKNOWN *)(v128[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_118;\n    }\n    else\n    {\n      if ( v17 <= 2u )\n      {\n        if ( v17 == 1 )\n          std::string::assign((std::string *)v119, "Block list requested", 0x14uLL);\n        goto LABEL_45;\n      }\n      if ( v17 == 3 )\n      {\n        StrBlockType((std::string *)v125);\n        v126[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v126, *(_QWORD *)(v125[0] - 24) + 14LL);\n        std::string::append((std::string *)v126, "Block of type ", 0xEuLL);\n        std::string::append((std::string *)v126, (const std::string *)v125);\n        std::string::string((std::string *)v127, (const std::string *)v126);\n        std::string::append((std::string *)v127, " list requested (next part)", 0x1BuLL);\n        std::string::assign((std::string *)v119, (const std::string *)v127);\n        v54 = v127[0] - 24;\n        if ( (_UNKNOWN *)(v127[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v54 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v54, &v69);\n        }\n        v55 = v126[0] - 24;\n        if ( (_UNKNOWN *)(v126[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v55 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v55, &v69);\n        }\n        v44 = v125[0] - 24;\n        if ( (_UNKNOWN *)(v125[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_118;\n      }\n      else if ( v17 == 4 )\n      {\n        IntToString((int)v123);\n        StrBlockType((std::string *)v120);\n        v121[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v121, *(_QWORD *)(v120[0] - 24) + 21LL);\n        std::string::append((std::string *)v121, "Block info requested ", 0x15uLL);\n        std::string::append((std::string *)v121, (const std::string *)v120);\n        std::string::string((std::string *)v122, (const std::string *)v121);\n        std::string::append((std::string *)v122, " ", 1uLL);\n        std::string::string((std::string *)v124, (const std::string *)v122);\n        std::string::append((std::string *)v124, (const std::string *)v123);\n        std::string::assign((std::string *)v119, (const std::string *)v124);\n        v50 = v124[0] - 24;\n        if ( (_UNKNOWN *)(v124[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v50 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v50, &v69);\n        }\n        v51 = v122[0] - 24;\n        if ( (_UNKNOWN *)(v122[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v51 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v51, &v69);\n        }\n        v52 = v121[0] - 24;\n        if ( (_UNKNOWN *)(v121[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v52 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v52, &v69);\n        }\n        v53 = v120[0] - 24;\n        if ( (_UNKNOWN *)(v120[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v53 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v53, &v69);\n        }\n        v44 = v123[0] - 24LL;\n        if ( (_UNKNOWN *)(v123[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n        {\nLABEL_118:\n          if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v44 + 16)) <= 0 )\n            std::string::_Rep::_M_destroy(v44, &v69);\n        }\n      }\n    }\nLABEL_45:\n    if ( *(_WORD *)(a2 + 16) )\n    {\n      std::string::string((std::string *)v96, (const std::string *)v119);\n      std::string::append((std::string *)v96, " --> NOT AVAILABLE", 0x12uLL);\n    }\n    else\n    {\n      std::string::string((std::string *)v96, (const std::string *)v119);\n      std::string::append((std::string *)v96, " --> OK", 7uLL);\n    }\n    v18 = v119[0] - 24;\n    if ( (_UNKNOWN *)(v119[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v18 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v18, &v69);\n    }\n    std::string::assign((std::string *)v70, (const std::string *)v96);\n    v6 = v96[0] - 24;\n    if ( (_UNKNOWN *)(v96[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n      goto LABEL_101;\n    goto LABEL_56;\n  }\n  v131[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( v3 == 16 )\n  {\n    std::string::assign((std::string *)v131, "Client refused", 0xEuLL);\n    goto LABEL_32;\n  }\n  if ( v3 <= 0x10 )\n  {\n    if ( v3 == 2 )\n    {\n      std::string::assign((std::string *)v131, "stopped", 7uLL);\n      goto LABEL_32;\n    }\n    if ( v3 <= 2 )\n    {\n      if ( v3 == 1 )\n      {\n        std::string::assign((std::string *)v131, "started", 7uLL);\n        goto LABEL_32;\n      }\n    }\n    else\n    {\n      if ( v3 == 4 )\n      {\n        TcpTextOf((std::string *)v138);\n        v139[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v139, *(_QWORD *)(v138[0] - 24) + 39LL);\n        std::string::append((std::string *)v139, "Cannot start listener - Socket Error : ", 0x27uLL);\n        std::string::append((std::string *)v139, (const std::string *)v138);\n        std::string::assign((std::string *)v131, (const std::string *)v139);\n        v49 = v139[0] - 24;\n        if ( (_UNKNOWN *)(v139[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v49 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v49, &v69);\n        }\n        v14 = v138[0] - 24;\n        if ( (_UNKNOWN *)(v138[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_107;\n        goto LABEL_32;\n      }\n      if ( v3 == 8 )\n      {\n        std::string::assign((std::string *)v131, "Client added", 0xCuLL);\n        goto LABEL_32;\n      }\n    }\nLABEL_29:\n    IntToString((int)v133);\n    v134[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    std::string::reserve((std::string *)v134, *(_QWORD *)(v133[0] - 24LL) + 15LL);\n    std::string::append((std::string *)v134, "Unknown event (", 0xFuLL);\n    std::string::append((std::string *)v134, (const std::string *)v133);\n    std::string::string((std::string *)v135, (const std::string *)v134);\n    std::string::append((std::string *)v135, ")", 1uLL);\n    std::string::assign((std::string *)v131, (const std::string *)v135);\n    v12 = v135[0] - 24;\n    if ( (_UNKNOWN *)(v135[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v12 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v12, &v69);\n    }\n    v13 = v134[0] - 24;\n    if ( (_UNKNOWN *)(v134[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v13 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v13, &v69);\n    }\n    v14 = v133[0] - 24LL;\n    if ( (_UNKNOWN *)(v133[0] - 24LL) == &std::string::_Rep::_S_empty_rep_storage )\n      goto LABEL_32;\nLABEL_107:\n    if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v14 + 16)) <= 0 )\n      std::string::_Rep::_M_destroy(v14, &v69);\n    goto LABEL_32;\n  }\n  if ( v3 == 128 )\n  {\n    std::string::assign((std::string *)v131, "Client disconnected by peer", 0x1BuLL);\n    goto LABEL_32;\n  }\n  if ( v3 <= 0x80 )\n  {\n    if ( v3 == 32 )\n    {\n      std::string::assign((std::string *)v131, "A client was refused due to maximum connections number", 0x36uLL);\n      goto LABEL_32;\n    }\n    if ( v3 == 64 )\n    {\n      std::string::assign((std::string *)v131, "Client exception", 0x10uLL);\n      goto LABEL_32;\n    }\n    goto LABEL_29;\n  }\n  if ( v3 == 256 )\n  {\n    std::string::assign((std::string *)v131, "Client terminated", 0x11uLL);\n    goto LABEL_32;\n  }\n  if ( v3 != 512 )\n    goto LABEL_29;\n  IntToString((int)v136);\n  std::string::string((std::string *)v137, (const std::string *)v136);\n  std::string::append((std::string *)v137, " clients have been dropped bacause unresponsive", 0x2FuLL);\n  std::string::assign((std::string *)v131, (const std::string *)v137);\n  v41 = v137[0] - 24;\n  if ( (_UNKNOWN *)(v137[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v41 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v41, &v69);\n  }\n  v14 = v136[0] - 24LL;\n  if ( (_UNKNOWN *)(v136[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n    goto LABEL_107;\nLABEL_32:\n  SenderText((std::string *)v132, v56, v62, v70[0], v71, v72, v73);\n  std::string::string(a1, (const std::string *)v132);\n  std::string::append(a1, (const std::string *)v131);\n  v15 = v132[0] - 24;\n  if ( (_UNKNOWN *)(v132[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v15 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v15, &v69);\n  }\n  v16 = v131[0] - 24;\n  if ( (_UNKNOWN *)(v131[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n  {\nLABEL_34:\n    if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v16 + 16)) <= 0 )\n      std::string::_Rep::_M_destroy(v16, &v69);\n  }\nLABEL_57:\n  v24 = *(_QWORD *)v70 - 24LL;\n  if ( (_UNKNOWN *)(*(_QWORD *)v70 - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v24 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v24, &v69);\n  }\n  return a1;\n}\n\n                        \n                        Function Name: _ZN16TCustomMsgServer7DoEventEijttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        int __fastcall TCustomMsgServer::DoEvent(\n        TCustomMsgServer *this,\n        int a2,\n        int a3,\n        __int16 a4,\n        __int16 a5,\n        __int16 a6,\n        unsigned __int16 a7,\n        unsigned __int16 a8)\n{\n  bool v9; // zf\n  int v10; // edi\n  int result; // eax\n  bool v12; // bp\n  bool v13; // r14\n  void (__fastcall *v14)(_QWORD, time_t *, __int64); // rax\n  time_t timer; // [rsp+30h] [rbp-48h] BYREF\n  int v20; // [rsp+38h] [rbp-40h]\n  int v21; // [rsp+3Ch] [rbp-3Ch]\n  __int16 v22; // [rsp+40h] [rbp-38h]\n  __int16 v23; // [rsp+42h] [rbp-36h]\n  __int16 v24; // [rsp+44h] [rbp-34h]\n  unsigned __int16 v25; // [rsp+46h] [rbp-32h]\n  unsigned __int16 v26; // [rsp+48h] [rbp-30h]\n\n  v9 = *((_BYTE *)this + 80) == 0;\n  v10 = *((_DWORD *)this + 2074);\n  result = *((_DWORD *)this + 2075);\n  if ( v9 )\n  {\n    v12 = (v10 & a3) != 0;\n    v13 = (result & a3) != 0;\n    if ( (result & a3) != 0 || (v10 & a3) != 0 )\n    {\n      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));\n      time(&timer);\n      v25 = a7;\n      v20 = a2;\n      v21 = a3;\n      v22 = a4;\n      v23 = a5;\n      v24 = a6;\n      v26 = a8;\n      if ( v13 )\n      {\n        v14 = (void (__fastcall *)(_QWORD, time_t *, __int64))*((_QWORD *)this + 8);\n        if ( v14 )\n          v14(*((_QWORD *)this + 9), &timer, 26LL);\n      }\n      if ( v12 )\n        TMsgEventQueue::Insert(*((TMsgEventQueue **)this + 7), &timer);\n      return pthread_mutex_unlock(*((pthread_mutex_t **)this + 11));\n    }\n  }\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker20PerformFunctionWriteEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionWrite(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  unsigned __int16 *v2; // rdx\n  __int64 v3; // r14\n  __int64 *v4; // rsi\n  __int64 *v5; // r15\n  char *v6; // r12\n  int v7; // eax\n  char v8; // dl\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  __int64 v11; // rbp\n  __int64 v12; // rax\n  TSnapBase *v14; // rbp\n  __int64 v15; // rax\n  unsigned __int16 *src; // [rsp+10h] [rbp-1118h]\n  int v17; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v18; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v19; // [rsp+20h] [rbp-1108h]\n  TSnapBase *v20; // [rsp+20h] [rbp-1108h]\n  int v21; // [rsp+2Ch] [rbp-10FCh]\n  unsigned __int16 v22; // [rsp+30h] [rbp-10F8h]\n  unsigned __int16 v23; // [rsp+32h] [rbp-10F6h]\n  unsigned __int16 v24; // [rsp+34h] [rbp-10F4h]\n  unsigned __int16 v25; // [rsp+36h] [rbp-10F2h]\n  unsigned __int16 v26; // [rsp+38h] [rbp-10F0h]\n  __int64 v27; // [rsp+40h] [rbp-10E8h] BYREF\n  _QWORD v28[19]; // [rsp+48h] [rbp-10E0h] BYREF\n  char v29; // [rsp+E0h] [rbp-1048h] BYREF\n  char v30; // [rsp+E1h] [rbp-1047h]\n  __int16 v31; // [rsp+E2h] [rbp-1046h]\n  __int16 v32; // [rsp+E4h] [rbp-1044h]\n  __int16 v33; // [rsp+E6h] [rbp-1042h]\n  __int16 v34; // [rsp+E8h] [rbp-1040h]\n  __int16 v35; // [rsp+EAh] [rbp-103Eh]\n  char v36; // [rsp+ECh] [rbp-103Ch]\n  unsigned __int8 v37; // [rsp+EDh] [rbp-103Bh]\n  _BYTE v38[4090]; // [rsp+EEh] [rbp-103Ah]\n  unsigned __int64 v39; // [rsp+10E8h] [rbp-40h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (unsigned __int16 *)*((_QWORD *)this + 564);\n  v39 = __readfsqword(0x28u);\n  src = v2;\n  v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;\n  v17 = *((unsigned __int8 *)src + 11);\n  v21 = v17 + 14;\n  if ( *((_BYTE *)src + 11) )\n  {\n    v4 = &v27;\n    v5 = v28;\n    v6 = (char *)src + 15;\n    v19 = (TSnapBase *)(unsigned int)(v17 - 1);\n    while ( 1 )\n    {\n      v8 = *v6;\n      v9 = v3 + *((_QWORD *)this + 564);\n      *v4 = v9;\n      v10 = *(_WORD *)(v9 + 2);\n      if ( (unsigned __int8)(v8 - 28) <= 1u || v8 == 1 )\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n      else\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10) >> 3;\n      v4 = v5;\n      v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);\n      v6 += 12;\n      if ( v5 == &v28[(_QWORD)v19] )\n        break;\n      ++v5;\n    }\n    v36 = 5;\n    v37 = *((_BYTE *)src + 11);\n    if ( v17 == 1 )\n    {\n      v18 = (TS7Worker *)((char *)this + 8);\n      v14 = 0LL;\n      do\n      {\n        v38[(_QWORD)v14] = TS7Worker::WriteArea(this);\n        v14 = (TSnapBase *)((char *)v14 + 1);\n      }\n      while ( v14 != (TSnapBase *)((char *)v19 + 1) );\n      v15 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v15 + 4);\n      v33 = TSnapBase::SwapWord(v18, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v18, 1u);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n      TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n    }\n    else\n    {\n      v20 = (TS7Worker *)((char *)this + 8);\n      v11 = 0LL;\n      do\n      {\n        v38[v11++] = TS7Worker::WriteArea(this);\n        TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n      }\n      while ( v11 != (unsigned int)(v17 - 1) + 1LL );\n      v12 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v12 + 4);\n      v33 = TSnapBase::SwapWord(v20, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v20, v17);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n    }\n  }\n  else\n  {\n    v36 = 5;\n    v29 = 50;\n    v30 = 3;\n    v31 = 0;\n    v37 = *((_BYTE *)src + 11);\n    v32 = *(_WORD *)(*((_QWORD *)this + 564) + 4LL);\n    v33 = TSnapBase::SwapWord(v1, 2u);\n    v35 = 0;\n    v34 = TSnapBase::SwapWord(v1, 0);\n    TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n  }\n  return 1LL;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker7DoEventEjttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::DoEvent(\n        TS7Worker *this,\n        unsigned int a2,\n        unsigned __int16 a3,\n        unsigned __int16 a4,\n        unsigned __int16 a5,\n        unsigned __int16 a6,\n        unsigned __int16 a7)\n{\n  return (*(__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD))(**((_QWORD **)this + 1084) + 24LL))(\n           *((_QWORD *)this + 1084),\n           *((unsigned int *)this + 15),\n           a2,\n           a3,\n           a4,\n           a5,\n           a6,\n           a7);\n}\n\n                        \n                        Function Name: _ZN9TS7Worker9WriteAreaEP20TReqFunWriteDataItemP16TReqFunWriteItemR3TEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::WriteArea(TS7Worker *this, __int64 a2, __int64 a3, _WORD *a4)\n{\n  unsigned __int16 v7; // ax\n  __int64 Area; // rbx\n  int v9; // r15d\n  char v10; // dl\n  char v11; // al\n  unsigned __int16 v12; // ax\n  unsigned int v13; // r15d\n  unsigned int v14; // esi\n  unsigned int v15; // eax\n  char v16; // dl\n  int v18; // ecx\n  __int64 v19; // rsi\n  __int64 v20; // rax\n  unsigned int v21; // r12d\n  char v22; // al\n  TSnap7Server *v23; // rdi\n  pthread_mutex_t *v24; // rbx\n  char v25; // al\n  int v27; // [rsp+1Ch] [rbp-4Ch]\n  _BYTE *dest; // [rsp+20h] [rbp-48h]\n  int v29; // [rsp+28h] [rbp-40h]\n  unsigned __int8 v30; // [rsp+2Fh] [rbp-39h]\n\n  a4[3] = 0;\n  a4[4] = 0;\n  *a4 = 0;\n  a4[2] = 0;\n  a4[1] = *(unsigned __int8 *)(a3 + 8);\n  v7 = 0;\n  if ( *(_BYTE *)(a3 + 8) == 0x84 )\n  {\n    v7 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 6));\n    a4[2] = v7;\n  }\n  if ( *(_BYTE *)(*((_QWORD *)this + 1084) + 24792LL) )\n  {\n    Area = 0LL;\n  }\n  else\n  {\n    Area = TS7Worker::GetArea(this, *(_BYTE *)(a3 + 8), v7);\n    if ( !Area )\n      return TS7Worker::WA_NotFound(this, a4);\n  }\n  v9 = TS7Worker::DataSizeByte(this, *(unsigned __int8 *)(a3 + 3));\n  if ( !v9 )\n    return TS7Worker::WA_InvalidTransportSize(this, a4);\n  v10 = *(_BYTE *)(a3 + 3);\n  v11 = *(_BYTE *)(a3 + 8);\n  if ( (v10 == 29) != (v11 == 29) )\n    return TS7Worker::WA_OutOfRange(this, a4);\n  if ( (v10 == 28) != (v11 == 28) )\n    return TS7Worker::WA_OutOfRange(this, a4);\n  v12 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a3 + 4));\n  v13 = v12 * v9;\n  v27 = v12;\n  a4[4] = v13;\n  if ( *(_BYTE *)(a3 + 3) == 1 && v13 > 1 )\n    return TS7Worker::WA_OutOfRange(this, a4);\n  v14 = *(_DWORD *)(a3 + 8);\n  LOBYTE(v14) = 0;\n  v15 = TSnapBase::SwapDWord((TS7Worker *)((char *)this + 8), v14);\n  v16 = *(_BYTE *)(a3 + 3);\n  if ( v16 == 29 || v16 == 1 )\n  {\nLABEL_15:\n    if ( v16 == 1 )\n    {\n      v29 = v15;\n    }\n    else\n    {\n      v18 = v15 >> 3;\n      if ( v16 == 29 )\n        v18 = v15;\n      v29 = v18;\n    }\n    v19 = v15 >> 3;\n    v30 = v15 & 7;\n    if ( (unsigned __int8)(v16 - 28) > 1u )\n      goto LABEL_20;\n    goto LABEL_38;\n  }\n  if ( v16 != 28 )\n  {\n    if ( (v15 & 7) != 0 )\n      return TS7Worker::WA_OutOfRange(this, a4);\n    goto LABEL_15;\n  }\n  v29 = v15;\nLABEL_38:\n  v19 = v15 >> 1;\nLABEL_20:\n  v20 = *((_QWORD *)this + 1084);\n  a4[3] = v19;\n  if ( !*(_BYTE *)(v20 + 24792) )\n  {\n    if ( *(unsigned __int16 *)(Area + 2) < (unsigned int)v19 + v13 )\n      return TS7Worker::WA_OutOfRange(this, a4);\n    dest = (_BYTE *)(*(_QWORD *)(Area + 8) + v19);\n  }\n  v21 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(a2 + 2));\n  v22 = *(_BYTE *)(a2 + 1);\n  if ( v22 != 7 && v22 != 9 && v22 != 3 )\n    v21 >>= 3;\n  if ( v21 != v13 )\n    return TS7Worker::WA_DataSizeMismatch(this, a4);\n  v23 = (TSnap7Server *)*((_QWORD *)this + 1084);\n  if ( !*((_BYTE *)v23 + 24792) )\n  {\n    if ( *(_BYTE *)(a3 + 3) == 1 )\n    {\n      v25 = BitMask[v30];\n      if ( (*(_BYTE *)(a2 + 4) & 1) != 0 )\n        *dest |= v25;\n      else\n        *dest &= ~v25;\n    }\n    else\n    {\n      v24 = *(pthread_mutex_t **)(Area + 16);\n      pthread_mutex_lock(v24);\n      memcpy(dest, (const void *)(a2 + 4), v21);\n      pthread_mutex_unlock(v24);\n    }\n    return 0xFFFFFFFFLL;\n  }\n  if ( (unsigned __int8)TSnap7Server::DoWriteArea(\n                          v23,\n                          *((_DWORD *)this + 15),\n                          (unsigned __int16)a4[1],\n                          (unsigned __int16)a4[2],\n                          v29,\n                          v27,\n                          *(unsigned __int8 *)(a3 + 3),\n                          (void *)(a2 + 4)) )\n    return 0xFFFFFFFFLL;\n  return TS7Worker::WA_NotFound(this, a4);\n}\n\n                        \n                        Function Name: _ZN9TS7Worker7GetAreaEht\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::GetArea(TS7Worker *this, unsigned __int8 a2, unsigned __int16 a3)\n{\n  if ( a2 == 0x81 )\n    return *(_QWORD *)(*((_QWORD *)this + 1084) + 24752LL);\n  if ( a2 <= 0x81u )\n  {\n    if ( a2 == 28 )\n    {\n      return *(_QWORD *)(*((_QWORD *)this + 1084) + 24776LL);\n    }\n    else\n    {\n      if ( a2 != 29 )\n        return 0LL;\n      return *(_QWORD *)(*((_QWORD *)this + 1084) + 24784LL);\n    }\n  }\n  else\n  {\n    if ( a2 != 0x83 )\n    {\n      if ( a2 < 0x83u )\n        return *(_QWORD *)(*((_QWORD *)this + 1084) + 24760LL);\n      if ( a2 == 0x84 )\n        return TSnap7Server::FindDB(*((TSnap7Server **)this + 1084), a3);\n      return 0LL;\n    }\n    return *(_QWORD *)(*((_QWORD *)this + 1084) + 24768LL);\n  }\n}\n\n                        \n                        Function Name: _ZL7TxtAreaR9TSrvEvent.isra.10\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        std::string *__fastcall TxtArea(std::string *this, unsigned __int16 a2)\n{\n  __int64 v2; // rbp\n  __int64 v3; // rbp\n  char v5; // [rsp+Fh] [rbp-49h] BYREF\n  _QWORD v6[2]; // [rsp+10h] [rbp-48h] BYREF\n  __int64 v7[3]; // [rsp+20h] [rbp-38h] BYREF\n\n  if ( a2 == 129 )\n  {\n    std::string::string(this, "Area : PE, ", &v5);\n    return this;\n  }\n  if ( a2 <= 0x81u )\n  {\n    if ( a2 == 28 )\n    {\n      std::string::string(this, "Area : CT, ", &v5);\n      return this;\n    }\n    if ( a2 == 29 )\n    {\n      std::string::string(this, "Area : TM, ", &v5);\n      return this;\n    }\nLABEL_8:\n    IntToString((int)v6);\n    v7[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    std::string::reserve((std::string *)v7, *(_QWORD *)(v6[0] - 24LL) + 14LL);\n    std::string::append((std::string *)v7, "Unknown area (", 0xEuLL);\n    std::string::append((std::string *)v7, (const std::string *)v6);\n    std::string::string(this, (const std::string *)v7);\n    std::string::append(this, ")", 1uLL);\n    goto LABEL_9;\n  }\n  if ( a2 == 131 )\n  {\n    std::string::string(this, "Area : MK, ", &v5);\n    return this;\n  }\n  if ( a2 < 0x83u )\n  {\n    std::string::string(this, "Area : PA, ", &v5);\n    return this;\n  }\n  if ( a2 != 132 )\n    goto LABEL_8;\n  IntToString((int)v6);\n  v7[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n  std::string::reserve((std::string *)v7, *(_QWORD *)(v6[0] - 24LL) + 9LL);\n  std::string::append((std::string *)v7, "Area : DB", 9uLL);\n  std::string::append((std::string *)v7, (const std::string *)v6);\n  std::string::string(this, (const std::string *)v7);\n  std::string::append(this, ", ", 2uLL);\nLABEL_9:\n  v2 = v7[0] - 24;\n  if ( (_UNKNOWN *)(v7[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v2 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v2, &v5);\n  }\n  v3 = v6[0] - 24LL;\n  if ( (_UNKNOWN *)(v6[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v3 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v3, &v5);\n  }\n  return this;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (27,) appear to "contaminate" the global variables  and local variables v74, v84, v72, v58, v73, v62, v70, v75, v71, a7, var_36, var_68, v25, a5, v23, v25, v26, var_10F6, v24, v23, v22, a4, v7, a4, a3, a2, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (27,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:21:58,527 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
int, length
```
2025-03-08 21:22:00,529 - my_text.py:618  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (33, 34)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker20PerformFunctionWriteEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformFunctionWrite(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  unsigned __int16 *v2; // rdx\n  __int64 v3; // r14\n  __int64 *v4; // rsi\n  __int64 *v5; // r15\n  char *v6; // r12\n  int v7; // eax\n  char v8; // dl\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  __int64 v11; // rbp\n  __int64 v12; // rax\n  TSnapBase *v14; // rbp\n  __int64 v15; // rax\n  unsigned __int16 *src; // [rsp+10h] [rbp-1118h]\n  int v17; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v18; // [rsp+18h] [rbp-1110h]\n  TSnapBase *v19; // [rsp+20h] [rbp-1108h]\n  TSnapBase *v20; // [rsp+20h] [rbp-1108h]\n  int v21; // [rsp+2Ch] [rbp-10FCh]\n  unsigned __int16 v22; // [rsp+30h] [rbp-10F8h]\n  unsigned __int16 v23; // [rsp+32h] [rbp-10F6h]\n  unsigned __int16 v24; // [rsp+34h] [rbp-10F4h]\n  unsigned __int16 v25; // [rsp+36h] [rbp-10F2h]\n  unsigned __int16 v26; // [rsp+38h] [rbp-10F0h]\n  __int64 v27; // [rsp+40h] [rbp-10E8h] BYREF\n  _QWORD v28[19]; // [rsp+48h] [rbp-10E0h] BYREF\n  char v29; // [rsp+E0h] [rbp-1048h] BYREF\n  char v30; // [rsp+E1h] [rbp-1047h]\n  __int16 v31; // [rsp+E2h] [rbp-1046h]\n  __int16 v32; // [rsp+E4h] [rbp-1044h]\n  __int16 v33; // [rsp+E6h] [rbp-1042h]\n  __int16 v34; // [rsp+E8h] [rbp-1040h]\n  __int16 v35; // [rsp+EAh] [rbp-103Eh]\n  char v36; // [rsp+ECh] [rbp-103Ch]\n  unsigned __int8 v37; // [rsp+EDh] [rbp-103Bh]\n  _BYTE v38[4090]; // [rsp+EEh] [rbp-103Ah]\n  unsigned __int64 v39; // [rsp+10E8h] [rbp-40h]\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = (unsigned __int16 *)*((_QWORD *)this + 564);\n  v39 = __readfsqword(0x28u);\n  src = v2;\n  v3 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), v2[3]) + 10LL;\n  v17 = *((unsigned __int8 *)src + 11);\n  v21 = v17 + 14;\n  if ( *((_BYTE *)src + 11) )\n  {\n    v4 = &v27;\n    v5 = v28;\n    v6 = (char *)src + 15;\n    v19 = (TSnapBase *)(unsigned int)(v17 - 1);\n    while ( 1 )\n    {\n      v8 = *v6;\n      v9 = v3 + *((_QWORD *)this + 564);\n      *v4 = v9;\n      v10 = *(_WORD *)(v9 + 2);\n      if ( (unsigned __int8)(v8 - 28) <= 1u || v8 == 1 )\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n      else\n        v7 = (unsigned __int16)TSnapBase::SwapWord(v1, v10) >> 3;\n      v4 = v5;\n      v3 = v7 + 4 + v3 - (((v7 & 1) == 0) - 1LL);\n      v6 += 12;\n      if ( v5 == &v28[(_QWORD)v19] )\n        break;\n      ++v5;\n    }\n    v36 = 5;\n    v37 = *((_BYTE *)src + 11);\n    if ( v17 == 1 )\n    {\n      v18 = (TS7Worker *)((char *)this + 8);\n      v14 = 0LL;\n      do\n      {\n        v38[(_QWORD)v14] = TS7Worker::WriteArea(this);\n        v14 = (TSnapBase *)((char *)v14 + 1);\n      }\n      while ( v14 != (TSnapBase *)((char *)v19 + 1) );\n      v15 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v15 + 4);\n      v33 = TSnapBase::SwapWord(v18, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v18, 1u);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n      TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n    }\n    else\n    {\n      v20 = (TS7Worker *)((char *)this + 8);\n      v11 = 0LL;\n      do\n      {\n        v38[v11++] = TS7Worker::WriteArea(this);\n        TS7Worker::DoEvent(this, 0x40000u, v22, v23, v24, v25, v26);\n      }\n      while ( v11 != (unsigned int)(v17 - 1) + 1LL );\n      v12 = *((_QWORD *)this + 564);\n      v29 = 50;\n      v30 = 3;\n      v31 = 0;\n      v32 = *(_WORD *)(v12 + 4);\n      v33 = TSnapBase::SwapWord(v20, 2u);\n      v35 = 0;\n      v34 = TSnapBase::SwapWord(v20, v17);\n      TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n    }\n  }\n  else\n  {\n    v36 = 5;\n    v29 = 50;\n    v30 = 3;\n    v31 = 0;\n    v37 = *((_BYTE *)src + 11);\n    v32 = *(_WORD *)(*((_QWORD *)this + 564) + 4LL);\n    v33 = TSnapBase::SwapWord(v1, 2u);\n    v35 = 0;\n    v34 = TSnapBase::SwapWord(v1, 0);\n    TIsoTcpSocket::isoSendBuffer(this, &v29, v21);\n  }\n  return 1LL;\n}\n\n                        \n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (33, 34) appear to "contaminate" the global variables  and local variables v1, v9, v7, v10, v3, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (33, 34) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:01,408 - my_text.py:621  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
unsigned_short, length
```
2025-03-08 21:22:03,409 - my_text.py:637  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 field_type: {'2,3': ['int'], '4': ['unsigned char'], '5': ['int'], '6': ['int'], '8': ['int'], '11,12': ['unsigned__int16'], '13,14': ['unsigned __int16'], '15,16': ['int'], '17': ['unsigned __int8'], '18': ['int'], '22': ['int'], '27': ['int'], '33,34': ['unsigned_short']}
2025-03-08 21:22:03,409 - my_text.py:638  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 field_func: {'2,3': ['length'], '4': ['length'], '5': ['length'], '6': ['length'], '8': ['length'], '11,12': ['length'], '13,14': ['length'], '15,16': ['length'], '17': ['length'], '18': ['length'], '22': ['length'], '27': ['length'], '33,34': ['length']}
2025-03-08 21:22:03,409 - my_text.py:688  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': '\n            You are provided with a list named [] that contains visible strings. Your task is to analyze these strings. If the strings have specific meanings and can be further divided, please present the division results in a Python code block. Each part of the result should be separated by a comma.\n            The types of granularity for division include static text, command groups, strings, integers, decimals, and binary. The semantic granularity includes commands, lengths, delimiters, checksums, file names, etc.\n            Here is an example: If the input is ["POST /path HTTP/1.1"], the correct output should be\n            ```python\n            POST, command group, command\n            , string, delimiter\n            /path, string, file\n            HTTP/1.1, static text, static text\n            ```\n            If you don\'t think these strings have a specific meaning, just answer ```python ```\n            '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:04,104 - my_text.py:691  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 Response result: ```python
```python
```
2025-03-08 21:22:06,105 - my_text.py:712  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 field_llm_type: {}
2025-03-08 21:22:06,105 - my_text.py:713  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 field_llm_Sem: {}
2025-03-08 21:22:06,105 - my_text.py:715  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 used_fields_llm: ['2,3', '4', '5', '6', '8', '11,12', '13,14', '15,16', '17', '18', '22', '27', '33,34']
2025-03-08 21:22:06,105 - my_text.py:716  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 field_llm_type_llm: {'2,3': ['int'], '4': ['unsigned char'], '5': ['int'], '6': ['int'], '8': ['int'], '11,12': ['unsigned__int16'], '13,14': ['unsigned __int16'], '15,16': ['int'], '17': ['unsigned __int8'], '18': ['int'], '22': ['int'], '27': ['int'], '33,34': ['unsigned_short']}
2025-03-08 21:22:06,105 - my_text.py:717  - 2:0300002702f080320100000100000e00080501120a100200040000830000000004002004d20000 field_llm_Sem_llm: {'2,3': ['length'], '4': ['length'], '5': ['length'], '6': ['length'], '8': ['length'], '11,12': ['length'], '13,14': ['length'], '15,16': ['length'], '17': ['length'], '18': ['length'], '22': ['length'], '27': ['length'], '33,34': ['length']}
2025-03-08 21:22:06,105 - my_text.py:432  - {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'  if ( v10 != 0xF0 )', '  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )', '  v10 = *((_BYTE *)this + 393);', '  if ( v10 == 0xE0 )', '  v15 = v10;'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'    || *((_BYTE *)a2 + 5) != a3 )', '  TIsoTcpSocket::ClrIsoError(this);'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'    else if ( (_BYTE)result == 0xF0 )', '    if ( (_BYTE)result == 0xE0 )', '    result = a2[5];'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'  *a5 = *((_BYTE *)this + 394) >> 7;'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'        goto LABEL_8;'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'  return a2[3] + (a2[2] << 8);'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'    return *((unsigned int *)this + 1126);', '  TMsgSocket::RecvPacket(this, buf, v14);', '  *a4 = v14;', '  v14 = v13 - 7;', '  v13 = TIsoTcpSocket::PDUSize(this, v5);'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'  return 0LL;', '  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));'}, '_ZN10TMsgSocket11WaitForDataEii': {'  return result;', '  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'  v5 = 0;'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'  return a2[3] + (a2[2] << 8);'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'    return *((unsigned int *)this + 1126);', '  TMsgSocket::RecvPacket(this, buf, v14);', '  *a4 = v14;', '  v14 = v13 - 7;', '  v13 = TIsoTcpSocket::PDUSize(this, v5);'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'  return 0LL;', '  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));'}, '_ZN10TMsgSocket11WaitForDataEii': {'  return result;', '  if ( (unsigned __int8)TMsgSocket::CanRead(this, 0) && !(unsigned int)TMsgSocket::WaitingData(this) )'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'  v5 = 0;'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'    || *((_BYTE *)a2 + 4) <= 1u'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v3 = v2', '     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))', '  result = 0LL;'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'  v3 = v2', '     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))', '  result = 0LL;'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'  if ( v4 != 7 )', '  if ( v4 == 1 )', '  v4 = *(_BYTE *)(*((_QWORD *)this + 564) + 1LL);'}}, 22: {'_ZN9TS7Worker17PerformPDUUsrDataERi': {'  v3 = *(unsigned __int8 *)(v2 + 15);'}}, 23: {'_ZN9TS7Worker17PerformPDUUsrDataERi': {'  v4 = *(_BYTE *)(v2 + 16);'}, '_ZN9TS7Worker15PerformGroupSZLEv': {'  if ( v7 != 1 )', '  v7 = *(_BYTE *)(v6 + 6);', '  if ( v7 == 2 )', '  *(_BYTE *)(*((_QWORD *)this + 1080) + 6LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 6LL);'}}, 11: {'_ZN9TS7Worker15PerformGroupSZLEv': {'  *((_WORD *)this + 2266) = v2;', '  LOWORD(v2) = *(_WORD *)(v2 + 4);'}}, 12: {'_ZN9TS7Worker15PerformGroupSZLEv': {'  *((_WORD *)this + 2266) = v2;', '  LOWORD(v2) = *(_WORD *)(v2 + 4);'}}, 17: {'_ZN9TS7Worker15PerformGroupSZLEv': {'  **((_BYTE **)this + 1080) = *v5;'}}, 18: {'_ZN9TS7Worker15PerformGroupSZLEv': {'  *(_BYTE *)(*((_QWORD *)this + 1080) + 1LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 1LL);'}}, 19: {'_ZN9TS7Worker15PerformGroupSZLEv': {'  *(_BYTE *)(*((_QWORD *)this + 1080) + 2LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 2LL);'}}, 24: {'_ZN9TS7Worker15PerformGroupSZLEv': {'  *(_BYTE *)(*((_QWORD *)this + 1080) + 7LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 7LL);'}}, 29: {'_ZN9TS7Worker15PerformGroupSZLEv': {'      if ( v12 == 1060 )', '    else if ( v12 > 1684 )', '  v10 = *(_WORD *)(v9 + 22);', '  if ( v12 == 404 )', '  v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));', '    else if ( v12 > 658 )', '  v14 = *((_WORD *)this + 4328);', '  if ( v12 == 3860 )', '  v12 = *((_DWORD *)this + 2164);', '  *((_DWORD *)this + 2164) = (unsigned __int16)TSnapBase::SwapWord(v1, v10);'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}, '_ZN9TS7Worker7DoEventEjttttt': {'           a4,'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'      v23 = a5;', '      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));', '      v25 = a7;'}, '_Z10EvtSrvTextR9TSrvEvent': {'          NumToString((std::string *)v115, *(unsigned __int16 *)(a2 + 18), 0x10u);'}, '_Z11NumToStringiij': {'      *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];', '    if ( a2 < 0 )', '      a2 /= a3;', '        break;'}}, 30: {'_ZN9TS7Worker15PerformGroupSZLEv': {'      if ( v12 == 1060 )', '    else if ( v12 > 1684 )', '  v10 = *(_WORD *)(v9 + 22);', '  if ( v12 == 404 )', '  v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));', '    else if ( v12 > 658 )', '  v14 = *((_WORD *)this + 4328);', '  if ( v12 == 3860 )', '  v12 = *((_DWORD *)this + 2164);', '  *((_DWORD *)this + 2164) = (unsigned __int16)TSnapBase::SwapWord(v1, v10);'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}, '_ZN9TS7Worker7DoEventEjttttt': {'           a4,'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'      v23 = a5;', '      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));', '      v25 = a7;'}, '_Z10EvtSrvTextR9TSrvEvent': {'          NumToString((std::string *)v115, *(unsigned __int16 *)(a2 + 18), 0x10u);'}, '_Z11NumToStringiij': {'      *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];', '    if ( a2 < 0 )', '      a2 /= a3;', '        break;'}}, 31: {'_ZN9TS7Worker15PerformGroupSZLEv': {'  *((_DWORD *)this + 2165) = v11;', '  v13 = *((_WORD *)this + 4330);', '  v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}, '_ZN9TS7Worker7DoEventEjttttt': {'           a5,'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));', '      v25 = a7;', '      v24 = a6;'}, '_Z10EvtSrvTextR9TSrvEvent': {'          NumToString((std::string *)v118, *(unsigned __int16 *)(a2 + 20), 0x10u);'}, '_Z11NumToStringiij': {'      *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];', '    if ( a2 < 0 )', '      a2 /= a3;', '        break;'}}, 32: {'_ZN9TS7Worker15PerformGroupSZLEv': {'  *((_DWORD *)this + 2165) = v11;', '  v13 = *((_WORD *)this + 4330);', '  v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));'}, '_ZN9TSnapBase8SwapWordEt': {'  result = __ROL2__(a2, 8);'}, '_ZN9TS7Worker7DoEventEjttttt': {'           a5,'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));', '      v25 = a7;', '      v24 = a6;'}, '_Z10EvtSrvTextR9TSrvEvent': {'          NumToString((std::string *)v118, *(unsigned __int16 *)(a2 + 20), 0x10u);'}, '_Z11NumToStringiij': {'      *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];', '    if ( a2 < 0 )', '      a2 /= a3;', '        break;'}}}}
2025-03-08 21:22:06,107 - my_text.py:443  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Updated c_taint_c_dict: {'2': {5: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'int', '0xF0', 'unsigned', 'TIsoTcpSocket', 'v10', 'if', 'v5', '393', 'v15', 'CheckPDU', '_BYTE', 'this', '0xE0'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'_BYTE', 'ClrIsoError', 'TIsoTcpSocket', '5', 'a3', 'this', 'a2'}, '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': {'result', '0xF0', 'if', '5', 'else', '_BYTE', '0xE0', 'a2'}}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'_BYTE', '394', 'a5', '7', 'this'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'goto', 'LABEL_8'}}, 2: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'return', '8', '3', '2', 'a2'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'return', 'int', 'v13', 'PDUSize', 'unsigned', 'a4', 'TIsoTcpSocket', 'v5', 'buf', 'TMsgSocket', 'RecvPacket', '7', '1126', 'this', 'v14'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'return', 'int', 'PDUSize', 'unsigned', 'TIsoTcpSocket', 'if', '0LL', '7', '0xFF9', 'this', 'a2'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'_DWORD', '28', 'TMsgSocket', 'a3', 'WaitForData', 'this'}, '_ZN10TMsgSocket11WaitForDataEii': {'return', 'int', 'WaitingData', 'result', 'unsigned', 'if', 'this', 'TMsgSocket', '__int8', '0', 'CanRead'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'v5', '0'}}, 3: {'_ZN13TIsoTcpSocket7PDUSizeEPv': {'return', '8', '3', '2', 'a2'}, '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': {'return', 'int', 'v13', 'PDUSize', 'unsigned', 'a4', 'TIsoTcpSocket', 'v5', 'buf', 'TMsgSocket', 'RecvPacket', '7', '1126', 'this', 'v14'}, '_ZN13TIsoTcpSocket8CheckPDUEPvh': {'return', 'int', 'PDUSize', 'unsigned', 'TIsoTcpSocket', 'if', '0LL', '7', '0xFF9', 'this', 'a2'}, '_ZN10TMsgSocket10RecvPacketEPvi': {'_DWORD', '28', 'TMsgSocket', 'a3', 'WaitForData', 'this'}, '_ZN10TMsgSocket11WaitForDataEii': {'return', 'int', 'WaitingData', 'result', 'unsigned', 'if', 'this', 'TMsgSocket', '__int8', '0', 'CanRead'}, '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': {'v5', '0'}}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh': {'1u', '4', 'a2', '_BYTE'}}, 13: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '6LL', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', 'SwapWord', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 14: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '6LL', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', 'SwapWord', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 15: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '8LL', 'result', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', '0LL', 'SwapWord', 'v3', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 16: {'_ZN9TS7Worker11CheckPDU_inEi': {'_WORD', '_QWORD', '8', '8LL', 'result', 'unsigned', '564', 'v2', 'TSnapBase', '__int16', '0LL', 'SwapWord', 'v3', 'TS7Worker', 'this', 'char'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}}, 8: {'_ZN9TS7Worker11CheckPDU_inEi': {'return', '_QWORD', '1', '1LL', 'this', '_BYTE', '564', '7'}, '_ZN9TS7Worker17IsoPerformCommandERi': {'_QWORD', '1', '1LL', '564', 'v4', 'if', '_BYTE', 'this', '7'}}, 22: {'_ZN9TS7Worker17PerformPDUUsrDataERi': {'15', 'unsigned', 'v2', 'v3', '__int8'}}, 23: {'_ZN9TS7Worker17PerformPDUUsrDataERi': {'16', 'v4', 'v2', '_BYTE'}, '_ZN9TS7Worker15PerformGroupSZLEv': {'_QWORD', '1080', '6LL', 'v7', '1', '6', '1078', '2', 'if', '_BYTE', 'v6', 'this'}}, 11: {'_ZN9TS7Worker15PerformGroupSZLEv': {'2266', '_WORD', 'LOWORD', 'v2', '4', 'this'}}, 12: {'_ZN9TS7Worker15PerformGroupSZLEv': {'2266', '_WORD', 'LOWORD', 'v2', '4', 'this'}}, 17: {'_ZN9TS7Worker15PerformGroupSZLEv': {'v5', '1080', 'this', '_BYTE'}}, 18: {'_ZN9TS7Worker15PerformGroupSZLEv': {'1080', '_QWORD', '1LL', '1078', '_BYTE', 'this'}}, 19: {'_ZN9TS7Worker15PerformGroupSZLEv': {'1080', '_QWORD', '1078', '2LL', '_BYTE', 'this'}}, 24: {'_ZN9TS7Worker15PerformGroupSZLEv': {'1080', '_QWORD', '1078', '_BYTE', '7LL', 'this'}}, 29: {'_ZN9TS7Worker15PerformGroupSZLEv': {'_WORD', '6LL', 'unsigned', 'if', 'v9', 'else', 'v14', '_QWORD', 'v12', 'TSnapBase', '__int16', '1684', '4328', '1060', '1079', 'v11', 'v10', '22', '3860', '658', 'this', '2164', '_DWORD', 'SwapWord', '404', 'v1'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}, '_ZN9TS7Worker7DoEventEjttttt': {'a4'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'pthread_mutex_t', 'v23', '11', 'a5', 'pthread_mutex_lock', 'a7', 'this', 'v25'}, '_Z10EvtSrvTextR9TSrvEvent': {'unsigned', 'NumToString', 'v115', 'std', '18', '__int16', '0x10u', 'string', 'a2'}, '_Z11NumToStringiij': {'break', '35', 'aZyxwvutsrqponm', 'if', 'v5', 'a3', '0', 'a2'}}, 30: {'_ZN9TS7Worker15PerformGroupSZLEv': {'_WORD', '6LL', 'unsigned', 'if', 'v9', 'else', 'v14', '_QWORD', 'v12', 'TSnapBase', '__int16', '1684', '4328', '1060', '1079', 'v11', 'v10', '22', '3860', '658', 'this', '2164', '_DWORD', 'SwapWord', '404', 'v1'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}, '_ZN9TS7Worker7DoEventEjttttt': {'a4'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'pthread_mutex_t', 'v23', '11', 'a5', 'pthread_mutex_lock', 'a7', 'this', 'v25'}, '_Z10EvtSrvTextR9TSrvEvent': {'unsigned', 'NumToString', 'v115', 'std', '18', '__int16', '0x10u', 'string', 'a2'}, '_Z11NumToStringiij': {'break', '35', 'aZyxwvutsrqponm', 'if', 'v5', 'a3', '0', 'a2'}}, 31: {'_ZN9TS7Worker15PerformGroupSZLEv': {'2165', 'v13', '_WORD', '_QWORD', '6LL', 'v11', '_DWORD', 'TSnapBase', '4330', '1079', 'SwapWord', 'this', 'v1'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}, '_ZN9TS7Worker7DoEventEjttttt': {'a5'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'v24', 'pthread_mutex_t', '11', 'a6', 'pthread_mutex_lock', 'a7', 'this', 'v25'}, '_Z10EvtSrvTextR9TSrvEvent': {'v118', 'unsigned', 'NumToString', 'std', '__int16', '20', '0x10u', 'string', 'a2'}, '_Z11NumToStringiij': {'break', '35', 'aZyxwvutsrqponm', 'if', 'v5', 'a3', '0', 'a2'}}, 32: {'_ZN9TS7Worker15PerformGroupSZLEv': {'2165', 'v13', '_WORD', '_QWORD', '6LL', 'v11', '_DWORD', 'TSnapBase', '4330', '1079', 'SwapWord', 'this', 'v1'}, '_ZN9TSnapBase8SwapWordEt': {'result', '__ROL2__', 'a2', '8'}, '_ZN9TS7Worker7DoEventEjttttt': {'a5'}, '_ZN16TCustomMsgServer7DoEventEijttttt': {'v24', 'pthread_mutex_t', '11', 'a6', 'pthread_mutex_lock', 'a7', 'this', 'v25'}, '_Z10EvtSrvTextR9TSrvEvent': {'v118', 'unsigned', 'NumToString', 'std', '__int16', '20', '0x10u', 'string', 'a2'}, '_Z11NumToStringiij': {'break', '35', 'aZyxwvutsrqponm', 'if', 'v5', 'a3', '0', 'a2'}}}}
2025-03-08 21:22:06,108 - my_text.py:460  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 var_flow: {'2': {5: {'_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a3', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v15', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:var_40', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v10', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 6: {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a5', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_58'}, 2: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 3: {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:var_48', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v13', '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU:v5', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:a4', '_ZN10TMsgSocket10RecvPacketEPvi:a3', '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb:v14', '_ZN13TIsoTcpSocket7PDUSizeEPv:a2', '_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 4: {'_ZN13TIsoTcpSocket8CheckPDUEPvh:a2'}, 13: {'_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 14: {'_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 15: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 16: {'_ZN9TS7Worker11CheckPDU_inEi:v3', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker11CheckPDU_inEi:v2'}, 8: {'_ZN9TS7Worker17IsoPerformCommandERi:v4'}, 22: {'_ZN9TS7Worker17PerformPDUUsrDataERi:v2', '_ZN9TS7Worker17PerformPDUUsrDataERi:v3'}, 23: {'_ZN9TS7Worker17PerformPDUUsrDataERi:v2', '_ZN9TS7Worker15PerformGroupSZLEv:v7', '_ZN9TS7Worker15PerformGroupSZLEv:v6', '_ZN9TS7Worker17PerformPDUUsrDataERi:v4'}, 11: {'_ZN9TS7Worker15PerformGroupSZLEv:v2'}, 12: {'_ZN9TS7Worker15PerformGroupSZLEv:v2'}, 17: {'_ZN9TS7Worker15PerformGroupSZLEv:v5'}, 18: set(), 19: set(), 24: set(), 29: {'_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_Z10EvtSrvTextR9TSrvEvent:v115', '_ZN9TS7Worker7DoEventEjttttt:a4', '_Z11NumToStringiij:a3', '_Z11NumToStringiij:a2', '_ZN9TS7Worker15PerformGroupSZLEv:v12', '_ZN9TS7Worker15PerformGroupSZLEv:v14', '_ZN16TCustomMsgServer7DoEventEijttttt:var_36', '_ZN9TS7Worker15PerformGroupSZLEv:v10', '_ZN16TCustomMsgServer7DoEventEijttttt:var_68', '_ZN9TS7Worker15PerformGroupSZLEv:v1', '_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_Z10EvtSrvTextR9TSrvEvent:a2', '_ZN16TCustomMsgServer7DoEventEijttttt:a5', '_Z11NumToStringiij:v5', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker15PerformGroupSZLEv:v9', '_ZN16TCustomMsgServer7DoEventEijttttt:v23', 'global:aZyxwvutsrqponm', '_ZN9TS7Worker15PerformGroupSZLEv:v11'}, 30: {'_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_Z10EvtSrvTextR9TSrvEvent:v115', '_ZN9TS7Worker7DoEventEjttttt:a4', '_Z11NumToStringiij:a3', '_Z11NumToStringiij:a2', '_ZN9TS7Worker15PerformGroupSZLEv:v12', '_ZN9TS7Worker15PerformGroupSZLEv:v14', '_ZN16TCustomMsgServer7DoEventEijttttt:var_36', '_ZN9TS7Worker15PerformGroupSZLEv:v10', '_ZN16TCustomMsgServer7DoEventEijttttt:var_68', '_ZN9TS7Worker15PerformGroupSZLEv:v1', '_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_Z10EvtSrvTextR9TSrvEvent:a2', '_ZN16TCustomMsgServer7DoEventEijttttt:a5', '_Z11NumToStringiij:v5', '_ZN9TSnapBase8SwapWordEt:a2', '_ZN9TS7Worker15PerformGroupSZLEv:v9', '_ZN16TCustomMsgServer7DoEventEijttttt:v23', 'global:aZyxwvutsrqponm', '_ZN9TS7Worker15PerformGroupSZLEv:v11'}, 31: {'_ZN16TCustomMsgServer7DoEventEijttttt:var_34', '_ZN16TCustomMsgServer7DoEventEijttttt:a6', '_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_Z10EvtSrvTextR9TSrvEvent:a2', '_ZN16TCustomMsgServer7DoEventEijttttt:v24', '_ZN9TS7Worker15PerformGroupSZLEv:v13', '_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_Z11NumToStringiij:v5', '_ZN16TCustomMsgServer7DoEventEijttttt:var_70', '_ZN9TSnapBase8SwapWordEt:a2', '_Z10EvtSrvTextR9TSrvEvent:v118', 'global:aZyxwvutsrqponm', '_Z11NumToStringiij:a3', '_Z11NumToStringiij:a2', '_ZN9TS7Worker15PerformGroupSZLEv:v11', '_ZN9TS7Worker15PerformGroupSZLEv:v1', '_ZN9TS7Worker7DoEventEjttttt:a5'}, 32: {'_ZN16TCustomMsgServer7DoEventEijttttt:var_34', '_ZN16TCustomMsgServer7DoEventEijttttt:a6', '_ZN16TCustomMsgServer7DoEventEijttttt:v25', '_Z10EvtSrvTextR9TSrvEvent:a2', '_ZN16TCustomMsgServer7DoEventEijttttt:v24', '_ZN9TS7Worker15PerformGroupSZLEv:v13', '_ZN16TCustomMsgServer7DoEventEijttttt:a7', '_Z11NumToStringiij:v5', '_ZN16TCustomMsgServer7DoEventEijttttt:var_70', '_ZN9TSnapBase8SwapWordEt:a2', '_Z10EvtSrvTextR9TSrvEvent:v118', 'global:aZyxwvutsrqponm', '_Z11NumToStringiij:a3', '_Z11NumToStringiij:a2', '_ZN9TS7Worker15PerformGroupSZLEv:v11', '_ZN9TS7Worker15PerformGroupSZLEv:v1', '_ZN9TS7Worker7DoEventEjttttt:a5'}}}
2025-03-08 21:22:06,108 - my_text.py:478  - Key pair (2, 3): Similarity = 1.0
2025-03-08 21:22:06,108 - my_text.py:478  - Key pair (13, 14): Similarity = 1.0
2025-03-08 21:22:06,108 - my_text.py:478  - Key pair (15, 16): Similarity = 1.0
2025-03-08 21:22:06,108 - my_text.py:478  - Key pair (11, 12): Similarity = 1.0
2025-03-08 21:22:06,108 - my_text.py:478  - Key pair (29, 30): Similarity = 1.0
2025-03-08 21:22:06,108 - my_text.py:478  - Key pair (31, 32): Similarity = 1.0
2025-03-08 21:22:06,108 - my_text.py:482  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Similarity matrix: {(5, 6): 0.0, (6, 2): 0.0, (2, 3): 1.0, (3, 4): 0.1111111111111111, (4, 13): 0.0, (13, 14): 1.0, (14, 15): 0.6666666666666666, (15, 16): 1.0, (16, 8): 0.0, (8, 22): 0.0, (22, 23): 0.2, (23, 11): 0.0, (11, 12): 1.0, (12, 17): 0.0, (17, 18): 0.0, (18, 19): 0, (19, 24): 0, (24, 29): 0.0, (29, 30): 1.0, (30, 31): 0.37037037037037035, (31, 32): 1.0}
2025-03-08 21:22:06,108 - my_text.py:519  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Merged queue: [(2, 3), (4,), (5,), (6,), (8,), (11, 12), (13, 14), (15, 16), (17,), (18,), (19,), (22,), (23,), (24,), (29, 30), (31, 32)]
2025-03-08 21:22:06,108 - my_text.py:525  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 used_fields: ['2,3', '4', '5', '6', '8', '11,12', '13,14', '15,16', '17', '18', '19', '22', '23', '24', '29,30', '31,32']
2025-03-08 21:22:06,109 - my_text.py:541  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 data_new: {(2, 3): {'_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': ['var_48', 'v5'], '_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['v5', 'v13', 'a4', 'v14'], '_ZN10TMsgSocket10RecvPacketEPvi': ['a3'], '_ZN13TIsoTcpSocket7PDUSizeEPv': ['a2'], '_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a2']}, (4,): {'_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a2']}, (5,): {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['v10', 'v5', 'v15', 'var_40'], '_ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind': ['a2'], '_ZN13TIsoTcpSocket8CheckPDUEPvh': ['a3', 'a2']}, (6,): {'_ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb': ['a5'], '_ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU': ['var_58']}, (8,): {'_ZN9TS7Worker17IsoPerformCommandERi': ['v4']}, (11, 12): {'_ZN9TS7Worker15PerformGroupSZLEv': ['v2']}, (13, 14): {'_ZN9TSnapBase8SwapWordEt': ['a2'], '_ZN9TS7Worker11CheckPDU_inEi': ['v2']}, (15, 16): {'_ZN9TS7Worker11CheckPDU_inEi': ['v3', 'v2'], '_ZN9TSnapBase8SwapWordEt': ['a2']}, (17,): {'_ZN9TS7Worker15PerformGroupSZLEv': ['v5']}, (18,): {}, (19,): {}, (22,): {'_ZN9TS7Worker17PerformPDUUsrDataERi': ['v2', 'v3']}, (23,): {'_ZN9TS7Worker17PerformPDUUsrDataERi': ['v2', 'v4'], '_ZN9TS7Worker15PerformGroupSZLEv': ['v7', 'v6']}, (24,): {}, (29, 30): {'_ZN16TCustomMsgServer7DoEventEijttttt': ['a7', 'var_36', 'var_68', 'v25', 'a5', 'v23'], '_Z10EvtSrvTextR9TSrvEvent': ['v115', 'a2'], '_ZN9TS7Worker7DoEventEjttttt': ['a4'], '_Z11NumToStringiij': ['a3', 'a2', 'v5'], '_ZN9TS7Worker15PerformGroupSZLEv': ['v12', 'v14', 'v10', 'v1', 'v9', 'v11'], '_ZN9TSnapBase8SwapWordEt': ['a2'], 'global': ['aZyxwvutsrqponm']}, (31, 32): {'_ZN16TCustomMsgServer7DoEventEijttttt': ['var_34', 'a7', 'var_70', 'v25', 'v24', 'a6'], '_Z10EvtSrvTextR9TSrvEvent': ['v118', 'a2'], '_Z11NumToStringiij': ['a3', 'a2', 'v5'], '_ZN9TS7Worker15PerformGroupSZLEv': ['v1', 'v13', 'v11'], '_ZN9TS7Worker7DoEventEjttttt': ['a5'], '_ZN9TSnapBase8SwapWordEt': ['a2'], 'global': ['aZyxwvutsrqponm']}}
2025-03-08 21:22:06,109 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (2, 3)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvPDU(TIsoTcpSocket *this, char *a2)\n{\n  int v2; // r14d\n  char *v3; // r15\n  int v4; // ebp\n  unsigned int v5; // ebx\n  int v7; // ebp\n  unsigned int v8; // eax\n  bool v9; // [rsp+10h] [rbp-58h] BYREF\n  int v10[18]; // [rsp+20h] [rbp-48h] BYREF\n\n  v2 = 1;\n  v3 = (char *)this + 395;\n  v4 = 0;\n  v9 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  while ( 1 )\n  {\n    do\n    {\n      v3 += v4;\n      if ( 4096 - v4 <= 0 )\n        break;\n      v5 = TIsoTcpSocket::isoRecvFragment(this, v3, 4096 - v4, v10, &v9);\n      if ( v5 )\n        goto LABEL_4;\n      if ( v9 )\n        goto LABEL_8;\n      ++v2;\n      v4 += v10[0];\n    }\n    while ( v2 <= *((_DWORD *)this + 96) );\n    v8 = TIsoTcpSocket::SetIsoError(this, 458752);\n    v5 = v8;\n    if ( v9 )\n      break;\n    if ( v8 )\n      goto LABEL_4;\n  }\n  if ( v8 )\n  {\nLABEL_4:\n    if ( *((_DWORD *)this + 30) != 104 )\n      TMsgSocket::Purge(this);\n    return v5;\n  }\nLABEL_8:\n  v5 = 0;\n  v7 = v10[0] + v4 + 7;\n  *((_BYTE *)this + 391) = v7;\n  *((_BYTE *)this + 390) = BYTE1(v7);\n  if ( (char *)this + 388 != a2 )\n    memcpy(a2, (char *)this + 388, v7);\n  return v5;\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN10TMsgSocket10RecvPacketEPvi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TMsgSocket::RecvPacket(TMsgSocket *this, void *buf, int a3)\n{\n  __int64 result; // rax\n  int v5; // eax\n\n  TMsgSocket::WaitForData(this, a3, *((_DWORD *)this + 28));\n  result = *((unsigned int *)this + 30);\n  if ( (_DWORD)result )\n  {\n    if ( (_DWORD)result != 110 )\n      goto LABEL_6;\n    TMsgSocket::Purge(this);\n    goto LABEL_9;\n  }\n  v5 = recv(*((_DWORD *)this + 6), buf, a3, 0x4000);\n  if ( !v5 )\n  {\n    *((_DWORD *)this + 30) = 104;\nLABEL_4:\n    *((_BYTE *)this + 124) = 0;\n    return 104LL;\n  }\n  if ( v5 >= 0 )\n  {\nLABEL_9:\n    result = *((unsigned int *)this + 30);\n    goto LABEL_6;\n  }\n  result = TMsgSocket::GetLastSocketError(this);\n  *((_DWORD *)this + 30) = result;\nLABEL_6:\n  if ( (_DWORD)result == 104 )\n    goto LABEL_4;\n  return result;\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket7PDUSizeEPv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::PDUSize(TIsoTcpSocket *this, unsigned __int8 *a2)\n{\n  return a2[3] + (a2[2] << 8);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (2, 3) appear to "contaminate" the global variables  and local variables var_48, v5, v5, v13, a4, v14, a3, a2, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (2, 3) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:07,202 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
int, length
```
2025-03-08 21:22:09,203 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (4,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (4,) appear to "contaminate" the global variables  and local variables a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (4,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:10,191 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
unsigned char, length
```
2025-03-08 21:22:12,192 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (5,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket7IsoPeekEPvR8TPDUKind\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::IsoPeek(TIsoTcpSocket *a1, unsigned __int8 *a2, _DWORD *a3)\n{\n  __int64 result; // rax\n\n  result = TIsoTcpSocket::PDUSize(a1, a2);\n  if ( (_DWORD)result == 7 )\n  {\n    *a3 = 2;\n  }\n  else if ( (unsigned int)result <= 6 )\n  {\n    *a3 = 3;\n  }\n  else\n  {\n    result = a2[5];\n    if ( (_BYTE)result == 0xE0 )\n    {\n      *a3 = 0;\n    }\n    else if ( (_BYTE)result == 0xF0 )\n    {\n      *a3 = 5;\n    }\n    else\n    {\n      result = 3 * (unsigned int)((_BYTE)result != 0x80) + 1;\n      *a3 = result;\n    }\n  }\n  return result;\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket8CheckPDUEPvh\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::CheckPDU(TIsoTcpSocket *this, void *a2, char a3)\n{\n  void *v4; // rsi\n\n  TIsoTcpSocket::ClrIsoError(this);\n  if ( !a2 )\n  {\n    LODWORD(v4) = 327680;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  if ( (unsigned int)TIsoTcpSocket::PDUSize(this, a2) - 7 > 0xFF9\n    || *((_BYTE *)a2 + 4) <= 1u\n    || *((_BYTE *)a2 + 5) != a3 )\n  {\n    v4 = &unk_30000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v4);\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (5,) appear to "contaminate" the global variables  and local variables v10, v5, v15, var_40, a2, a3, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (5,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:13,396 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
int, length
```
2025-03-08 21:22:15,397 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (6,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN13TIsoTcpSocket15isoRecvFragmentEPviRiRb\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvFragment(TIsoTcpSocket *this, void *buf, int a3, int *a4, bool *a5)\n{\n  char *v5; // rbp\n  unsigned __int8 v10; // dl\n  void *v11; // rsi\n  int v13; // r15d\n  int v14; // r15d\n  unsigned __int8 v15; // [rsp+8h] [rbp-40h]\n\n  v5 = (char *)this + 388;\n  *a4 = 0;\n  *a5 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  TMsgSocket::RecvPacket(this, (char *)this + 388, 7);\n  if ( *((_DWORD *)this + 30) )\n    goto LABEL_14;\n  v10 = *((_BYTE *)this + 393);\n  if ( v10 == 0xE0 )\n    goto LABEL_13;\n  if ( v10 != 0xF0 )\n  {\n    v11 = &unk_30000;\n    if ( v10 != 0x80 )\n      return TIsoTcpSocket::SetIsoError(this, (int)v11);\nLABEL_13:\n    *a5 = 1;\n    goto LABEL_7;\n  }\n  *a5 = *((_BYTE *)this + 394) >> 7;\nLABEL_7:\n  v15 = v10;\n  v13 = TIsoTcpSocket::PDUSize(this, v5);\n  if ( (unsigned int)TIsoTcpSocket::CheckPDU(this, v5, v15) )\n    return *((unsigned int *)this + 1126);\n  v14 = v13 - 7;\n  if ( v14 <= 0 )\n    return *((unsigned int *)this + 1126);\n  if ( v14 > a3 )\n  {\n    LODWORD(v11) = 0x80000;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  TMsgSocket::RecvPacket(this, buf, v14);\n  if ( *((_DWORD *)this + 30) )\n  {\nLABEL_14:\n    LODWORD(v11) = 655360;\n    return TIsoTcpSocket::SetIsoError(this, (int)v11);\n  }\n  *a4 = v14;\n  return *((unsigned int *)this + 1126);\n}\n\n                        \n                        Function Name: _ZN13TIsoTcpSocket10isoRecvPDUEP11TIsoDataPDU\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TIsoTcpSocket::isoRecvPDU(TIsoTcpSocket *this, char *a2)\n{\n  int v2; // r14d\n  char *v3; // r15\n  int v4; // ebp\n  unsigned int v5; // ebx\n  int v7; // ebp\n  unsigned int v8; // eax\n  bool v9; // [rsp+10h] [rbp-58h] BYREF\n  int v10[18]; // [rsp+20h] [rbp-48h] BYREF\n\n  v2 = 1;\n  v3 = (char *)this + 395;\n  v4 = 0;\n  v9 = 0;\n  TIsoTcpSocket::ClrIsoError(this);\n  while ( 1 )\n  {\n    do\n    {\n      v3 += v4;\n      if ( 4096 - v4 <= 0 )\n        break;\n      v5 = TIsoTcpSocket::isoRecvFragment(this, v3, 4096 - v4, v10, &v9);\n      if ( v5 )\n        goto LABEL_4;\n      if ( v9 )\n        goto LABEL_8;\n      ++v2;\n      v4 += v10[0];\n    }\n    while ( v2 <= *((_DWORD *)this + 96) );\n    v8 = TIsoTcpSocket::SetIsoError(this, 458752);\n    v5 = v8;\n    if ( v9 )\n      break;\n    if ( v8 )\n      goto LABEL_4;\n  }\n  if ( v8 )\n  {\nLABEL_4:\n    if ( *((_DWORD *)this + 30) != 104 )\n      TMsgSocket::Purge(this);\n    return v5;\n  }\nLABEL_8:\n  v5 = 0;\n  v7 = v10[0] + v4 + 7;\n  *((_BYTE *)this + 391) = v7;\n  *((_BYTE *)this + 390) = BYTE1(v7);\n  if ( (char *)this + 388 != a2 )\n    memcpy(a2, (char *)this + 388, v7);\n  return v5;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (6,) appear to "contaminate" the global variables  and local variables a5, var_58. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (6,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:16,416 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
unsigned __int8, flag
```
2025-03-08 21:22:18,417 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (8,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker17IsoPerformCommandERi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::IsoPerformCommand(TS7Worker *this, int *a2)\n{\n  int v3; // esi\n  char v4; // al\n\n  v3 = *a2;\n  if ( !v3 )\n    return TS7Worker::PerformPDUAck(this, a2);\n  if ( !(unsigned __int8)TS7Worker::CheckPDU_in(this, v3) )\n  {\n    TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 2u, *(_WORD *)a2, 0, 0, 0);\n    return 0LL;\n  }\n  v4 = *(_BYTE *)(*((_QWORD *)this + 564) + 1LL);\n  if ( v4 == 1 )\n    return TS7Worker::PerformPDURequest(this, a2);\n  if ( v4 != 7 )\n    return 0LL;\n  return TS7Worker::PerformPDUUsrData(this, a2);\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (8,) appear to "contaminate" the global variables  and local variables v4. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (8,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:19,706 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
int, length
```
2025-03-08 21:22:21,707 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (11, 12)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker15PerformGroupSZLEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformGroupSZL(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  __int64 v2; // rax\n  __int64 v3; // rdx\n  __int16 v4; // ax\n  _BYTE *v5; // rdx\n  __int64 v6; // rax\n  char v7; // al\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  unsigned __int16 v11; // ax\n  int v12; // edx\n  unsigned __int16 v13; // r8\n  unsigned __int16 v14; // cx\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = *((_QWORD *)this + 564);\n  *((_BYTE *)this + 4528) = 50;\n  *((_BYTE *)this + 4529) = 7;\n  *((_BYTE *)this + 8664) = 0;\n  *((_WORD *)this + 2265) = 0;\n  v3 = v2 + 10;\n  LOWORD(v2) = *(_WORD *)(v2 + 4);\n  *((_QWORD *)this + 1078) = v3;\n  *((_QWORD *)this + 1080) = (char *)this + 4538;\n  *((_WORD *)this + 2266) = v2;\n  *((_QWORD *)this + 1081) = (char *)this + 4550;\n  v4 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 0xCu);\n  v5 = (_BYTE *)*((_QWORD *)this + 1078);\n  *((_WORD *)this + 2267) = v4;\n  **((_BYTE **)this + 1080) = *v5;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 1LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 1LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 2LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 2LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 3LL) = 8;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 4LL) = 18;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 5LL) = -124;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 6LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 6LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 7LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 7LL);\n  v6 = *((_QWORD *)this + 1080);\n  *(_WORD *)(v6 + 8) = 0;\n  v7 = *(_BYTE *)(v6 + 6);\n  if ( v7 == 2 )\n  {\n    TS7Worker::SZLSystemState(this);\n    return 1LL;\n  }\n  if ( v7 != 1 )\n  {\n    TS7Worker::SZLNotAvailable(this);\n    return 1LL;\n  }\n  v9 = *((_QWORD *)this + 564);\n  v10 = *(_WORD *)(v9 + 22);\n  *((_QWORD *)this + 1079) = v9 + 18;\n  *((_DWORD *)this + 2164) = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n  v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));\n  *((_DWORD *)this + 2165) = v11;\n  v12 = *((_DWORD *)this + 2164);\n  if ( v12 == 404 )\n  {\n    if ( v11 == 100 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0194_IDX_0064, 270);\n      goto LABEL_17;\n    }\nLABEL_16:\n    TS7Worker::SZLNotAvailable(this);\n    goto LABEL_17;\n  }\n  if ( v12 <= 404 )\n  {\n    if ( v12 == 56 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0038_IDX_XXXX, 78);\n      goto LABEL_17;\n    }\n    if ( v12 <= 56 )\n    {\n      if ( v12 == 25 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0019_IDX_XXXX, 40);\n        goto LABEL_17;\n      }\n      if ( v12 > 25 )\n      {\n        if ( v12 == 35 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0023_IDX_XXXX, 228);\n          goto LABEL_17;\n        }\n        if ( v12 > 35 )\n        {\n          if ( v12 == 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0025_IDX_XXXX, 16);\n            goto LABEL_17;\n          }\n          if ( v12 < 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0024_IDX_XXXX, 92);\n            goto LABEL_17;\n          }\n          if ( v12 == 54 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0036_IDX_XXXX, 12);\n            goto LABEL_17;\n          }\n          if ( v12 == 55 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0037_IDX_XXXX, 60);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001B_IDX_XXXX, 132);\n            goto LABEL_17;\n          }\n          if ( v12 < 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001A_IDX_XXXX, 48);\n            goto LABEL_17;\n          }\n          if ( v12 == 28 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001C_IDX_XXXX, 352);\n            goto LABEL_17;\n          }\n          if ( v12 == 33 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0021_IDX_XXXX, 100);\n            goto LABEL_17;\n          }\n        }\n      }\n      else\n      {\n        if ( v12 == 19 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0013_IDX_XXXX, 192);\n          goto LABEL_17;\n        }\n        if ( v12 > 19 )\n        {\n          if ( v12 == 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0015_IDX_XXXX, 62);\n            goto LABEL_17;\n          }\n          if ( v12 < 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0014_IDX_XXXX, 84);\n            goto LABEL_17;\n          }\n          if ( v12 == 23 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0017_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 == 24 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0018_IDX_XXXX, 28);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 2 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0002_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 > 2 )\n          {\n            if ( v12 == 17 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0011_IDX_XXXX, 124);\n              goto LABEL_17;\n            }\n            if ( v12 == 18 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0012_IDX_XXXX, 58);\n              goto LABEL_17;\n            }\n          }\n          else if ( !v12 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0000_IDX_XXXX, 236);\n            goto LABEL_17;\n          }\n        }\n      }\n    }\n    else if ( v12 == 277 )\n    {\n      if ( v11 == 2048 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0115_IDX_0800, 22);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 277 )\n    {\n      if ( v12 == 293 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0000, 16);\n          goto LABEL_17;\n        }\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 293 )\n      {\n        if ( v12 == 306 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0003, 52);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0009, 52);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000A, 52);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000B, 52);\n              break;\n            case 0xCu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000C, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 > 306 )\n        {\n          if ( v12 == 311 )\n          {\n            if ( v11 == 2046 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0137_IDX_07FE, 60);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 372 )\n          {\n            switch ( v11 )\n            {\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0001, 16);\n                break;\n              case 4u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0004, 16);\n                break;\n              case 5u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0005, 16);\n                break;\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0006, 16);\n                break;\n              case 0xBu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000B, 16);\n                break;\n              case 0xCu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000C, 16);\n                break;\n              default:\n                goto LABEL_16;\n            }\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 305 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZL_ID131_IDX003(this);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0009, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 280 )\n      {\n        switch ( v11 )\n        {\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0001, 16);\n            goto LABEL_17;\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0000, 16);\n            goto LABEL_17;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0002, 16);\n            goto LABEL_17;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0003, 16);\n            goto LABEL_17;\n        }\n      }\n      else if ( v12 > 280 )\n      {\n        if ( v12 == 284 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0001, 46);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0002, 46);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0003, 46);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0004, 46);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0005, 46);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0007, 46);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0008, 46);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0009, 46);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000A, 46);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000B, 46);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 == 292 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0124_IDX_XXXX, 32);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 279 )\n      {\n        switch ( v11 )\n        {\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0000, 16);\n            break;\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0001, 16);\n            break;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0002, 16);\n            break;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0003, 16);\n            break;\n          case 4u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0004, 16);\n            break;\n          default:\n            goto LABEL_16;\n        }\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 149 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0095_IDX_XXXX, 52);\n        goto LABEL_17;\n      }\n      if ( v12 > 149 )\n      {\n        if ( v12 == 273 )\n        {\n          switch ( v11 )\n          {\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0006, 40);\n              goto LABEL_17;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0007, 40);\n              goto LABEL_17;\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0001, 40);\n              goto LABEL_17;\n          }\n        }\n        else if ( v12 > 273 )\n        {\n          if ( v12 == 274 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0100, 16);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0000, 14);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 275 && v11 == 1 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0113_IDX_0001, 48);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 160 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_00A0_IDX_XXXX, 212);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 116 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0074_IDX_XXXX, 40);\n          goto LABEL_17;\n        }\n        if ( v12 > 116 )\n        {\n          if ( v12 == 146 )\n          {\n            if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0092_IDX_0000, 28);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 148 && !v11 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0094_IDX_0000, 270);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 58 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_003A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3860 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F14_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3860 )\n  {\n    if ( v12 == 1684 )\n    {\n      if ( v11 == 100 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0694_IDX_0064, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 1684 )\n    {\n      if ( v12 == 3473 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D91_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 3473 )\n      {\n        if ( v12 == 3840 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F00_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 > 3840 )\n        {\n          if ( v12 == 3857 )\n          {\n            switch ( v11 )\n            {\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0006, 12);\n                goto LABEL_17;\n              case 7u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0007, 12);\n                goto LABEL_17;\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0001, 12);\n                goto LABEL_17;\n            }\n          }\n          else if ( v12 == 3858 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0100, 12);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0000, 12);\n              goto LABEL_17;\n            }\n          }\n        }\n        else if ( v12 == 3479 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D97_IDX_0000, 60);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 2593 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0A21_IDX_XXXX, 16);\n          goto LABEL_17;\n        }\n        if ( v12 > 2593 )\n        {\n          if ( v12 == 2705 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0A91_IDX_XXXX, 44);\n            goto LABEL_17;\n          }\n          if ( v12 == 3217 && v11 == 2046 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0C91_IDX_07FE, 28);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 1940 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0794_IDX_XXXX, 270);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 658 )\n    {\n      if ( !v11 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0292_IDX_0000, 28);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 658 )\n    {\n      if ( v12 == 1060 )\n      {\n        TS7Worker::SZL_ID424(this);\n        goto LABEL_17;\n      }\n      if ( v12 > 1060 )\n      {\n        if ( v12 == 1425 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0591_IDX_XXXX, 76);\n          goto LABEL_17;\n        }\n        if ( v12 == 1682 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0692_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 660 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0294_IDX_XXXX, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 546 )\n    {\n      if ( v11 == 20 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0014, 40);\n        goto LABEL_17;\n      }\n      if ( v11 > 0x14u )\n      {\n        switch ( v11 )\n        {\n          case \'P\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0050, 40);\n            goto LABEL_17;\n          case \'d\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0064, 40);\n            goto LABEL_17;\n          case \'(\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0028, 40);\n            goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0001, 40);\n          goto LABEL_17;\n        }\n        if ( v11 == 10 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_000A, 40);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 > 546 )\n    {\n      if ( v12 == 549 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0225_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 562 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0001, 52);\n          goto LABEL_17;\n        }\n        if ( v11 == 4 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0004, 52);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 416 )\n    {\n      switch ( v11 )\n      {\n        case 0u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0000, 12);\n          break;\n        case 1u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0001, 32);\n          break;\n        case 2u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0002, 52);\n          break;\n        case 3u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0003, 72);\n          break;\n        case 4u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0004, 92);\n          break;\n        case 5u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0005, 112);\n          break;\n        case 6u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0006, 132);\n          break;\n        case 7u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0007, 152);\n          break;\n        case 8u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0008, 172);\n          break;\n        case 9u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0009, 192);\n          break;\n        case 0xAu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000A, 212);\n          break;\n        case 0xBu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000B, 232);\n          break;\n        case 0xCu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000C, 252);\n          break;\n        case 0xDu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000D, 272);\n          break;\n        case 0xEu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000E, 292);\n          break;\n        case 0xFu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000F, 312);\n          break;\n        case 0x10u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0010, 332);\n          break;\n        case 0x11u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0011, 352);\n          break;\n        case 0x12u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0012, 372);\n          break;\n        case 0x13u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0013, 392);\n          break;\n        case 0x14u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0014, 412);\n          break;\n        case 0x15u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0015, 432);\n          break;\n        default:\n          goto LABEL_16;\n      }\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3894 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F36_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3894 )\n  {\n    if ( v12 == 3986 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F92_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3986 )\n    {\n      if ( v12 == 3989 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F95_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 > 3989 )\n      {\n        if ( v12 == 3994 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F9A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 == 4000 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0FA0_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 3988 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F94_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F38_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 < 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F37_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3898 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F3A_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3956 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F74_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3867 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F1B_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3867 )\n  {\n    if ( v12 == 3873 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F21_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3873 )\n    {\n      if ( v12 == 3875 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F23_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3877 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F25_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 3868 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F1C_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3864 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F18_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3864 )\n  {\n    if ( v12 == 3863 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F17_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3865 )\n    TS7Worker::SZLData(this, &SZL_ID_0F19_IDX_XXXX, 12);\n  else\n    TS7Worker::SZLData(this, &SZL_ID_0F1A_IDX_XXXX, 12);\nLABEL_17:\n  v13 = *((_WORD *)this + 4330);\n  v14 = *((_WORD *)this + 4328);\n  if ( *((_BYTE *)this + 8664) )\n    TS7Worker::DoEvent(this, 0x100000u, 0, v14, v13, 0, 0);\n  else\n    TS7Worker::DoEvent(this, 0x100000u, 0xCu, v14, v13, 0, 0);\n  return 1LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (11, 12) appear to "contaminate" the global variables  and local variables v2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (11, 12) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:24,939 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
int, length
```
2025-03-08 21:22:26,941 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (13, 14)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker11CheckPDU_inEi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        _BOOL8 __fastcall TS7Worker::CheckPDU_in(TS7Worker *this, int a2)\n{\n  int v2; // r13d\n  int v3; // edx\n  _BOOL8 result; // rax\n\n  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));\n  v3 = v2\n     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))\n     + 10;\n  result = 0LL;\n  if ( v3 == a2 )\n    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (13, 14) appear to "contaminate" the global variables  and local variables a2, v2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (13, 14) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:27,634 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
int, length
```
2025-03-08 21:22:29,636 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (15, 16)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker11CheckPDU_inEi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        _BOOL8 __fastcall TS7Worker::CheckPDU_in(TS7Worker *this, int a2)\n{\n  int v2; // r13d\n  int v3; // edx\n  _BOOL8 result; // rax\n\n  v2 = (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 6LL));\n  v3 = v2\n     + (unsigned __int16)TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), *(_WORD *)(*((_QWORD *)this + 564) + 8LL))\n     + 10;\n  result = 0LL;\n  if ( v3 == a2 )\n    return *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 1 || *(_BYTE *)(*((_QWORD *)this + 564) + 1LL) == 7;\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (15, 16) appear to "contaminate" the global variables  and local variables v3, v2, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (15, 16) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:30,350 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
unsigned short, length
```
2025-03-08 21:22:32,352 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (17,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker15PerformGroupSZLEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformGroupSZL(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  __int64 v2; // rax\n  __int64 v3; // rdx\n  __int16 v4; // ax\n  _BYTE *v5; // rdx\n  __int64 v6; // rax\n  char v7; // al\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  unsigned __int16 v11; // ax\n  int v12; // edx\n  unsigned __int16 v13; // r8\n  unsigned __int16 v14; // cx\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = *((_QWORD *)this + 564);\n  *((_BYTE *)this + 4528) = 50;\n  *((_BYTE *)this + 4529) = 7;\n  *((_BYTE *)this + 8664) = 0;\n  *((_WORD *)this + 2265) = 0;\n  v3 = v2 + 10;\n  LOWORD(v2) = *(_WORD *)(v2 + 4);\n  *((_QWORD *)this + 1078) = v3;\n  *((_QWORD *)this + 1080) = (char *)this + 4538;\n  *((_WORD *)this + 2266) = v2;\n  *((_QWORD *)this + 1081) = (char *)this + 4550;\n  v4 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 0xCu);\n  v5 = (_BYTE *)*((_QWORD *)this + 1078);\n  *((_WORD *)this + 2267) = v4;\n  **((_BYTE **)this + 1080) = *v5;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 1LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 1LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 2LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 2LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 3LL) = 8;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 4LL) = 18;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 5LL) = -124;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 6LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 6LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 7LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 7LL);\n  v6 = *((_QWORD *)this + 1080);\n  *(_WORD *)(v6 + 8) = 0;\n  v7 = *(_BYTE *)(v6 + 6);\n  if ( v7 == 2 )\n  {\n    TS7Worker::SZLSystemState(this);\n    return 1LL;\n  }\n  if ( v7 != 1 )\n  {\n    TS7Worker::SZLNotAvailable(this);\n    return 1LL;\n  }\n  v9 = *((_QWORD *)this + 564);\n  v10 = *(_WORD *)(v9 + 22);\n  *((_QWORD *)this + 1079) = v9 + 18;\n  *((_DWORD *)this + 2164) = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n  v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));\n  *((_DWORD *)this + 2165) = v11;\n  v12 = *((_DWORD *)this + 2164);\n  if ( v12 == 404 )\n  {\n    if ( v11 == 100 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0194_IDX_0064, 270);\n      goto LABEL_17;\n    }\nLABEL_16:\n    TS7Worker::SZLNotAvailable(this);\n    goto LABEL_17;\n  }\n  if ( v12 <= 404 )\n  {\n    if ( v12 == 56 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0038_IDX_XXXX, 78);\n      goto LABEL_17;\n    }\n    if ( v12 <= 56 )\n    {\n      if ( v12 == 25 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0019_IDX_XXXX, 40);\n        goto LABEL_17;\n      }\n      if ( v12 > 25 )\n      {\n        if ( v12 == 35 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0023_IDX_XXXX, 228);\n          goto LABEL_17;\n        }\n        if ( v12 > 35 )\n        {\n          if ( v12 == 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0025_IDX_XXXX, 16);\n            goto LABEL_17;\n          }\n          if ( v12 < 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0024_IDX_XXXX, 92);\n            goto LABEL_17;\n          }\n          if ( v12 == 54 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0036_IDX_XXXX, 12);\n            goto LABEL_17;\n          }\n          if ( v12 == 55 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0037_IDX_XXXX, 60);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001B_IDX_XXXX, 132);\n            goto LABEL_17;\n          }\n          if ( v12 < 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001A_IDX_XXXX, 48);\n            goto LABEL_17;\n          }\n          if ( v12 == 28 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001C_IDX_XXXX, 352);\n            goto LABEL_17;\n          }\n          if ( v12 == 33 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0021_IDX_XXXX, 100);\n            goto LABEL_17;\n          }\n        }\n      }\n      else\n      {\n        if ( v12 == 19 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0013_IDX_XXXX, 192);\n          goto LABEL_17;\n        }\n        if ( v12 > 19 )\n        {\n          if ( v12 == 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0015_IDX_XXXX, 62);\n            goto LABEL_17;\n          }\n          if ( v12 < 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0014_IDX_XXXX, 84);\n            goto LABEL_17;\n          }\n          if ( v12 == 23 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0017_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 == 24 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0018_IDX_XXXX, 28);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 2 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0002_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 > 2 )\n          {\n            if ( v12 == 17 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0011_IDX_XXXX, 124);\n              goto LABEL_17;\n            }\n            if ( v12 == 18 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0012_IDX_XXXX, 58);\n              goto LABEL_17;\n            }\n          }\n          else if ( !v12 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0000_IDX_XXXX, 236);\n            goto LABEL_17;\n          }\n        }\n      }\n    }\n    else if ( v12 == 277 )\n    {\n      if ( v11 == 2048 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0115_IDX_0800, 22);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 277 )\n    {\n      if ( v12 == 293 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0000, 16);\n          goto LABEL_17;\n        }\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 293 )\n      {\n        if ( v12 == 306 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0003, 52);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0009, 52);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000A, 52);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000B, 52);\n              break;\n            case 0xCu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000C, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 > 306 )\n        {\n          if ( v12 == 311 )\n          {\n            if ( v11 == 2046 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0137_IDX_07FE, 60);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 372 )\n          {\n            switch ( v11 )\n            {\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0001, 16);\n                break;\n              case 4u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0004, 16);\n                break;\n              case 5u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0005, 16);\n                break;\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0006, 16);\n                break;\n              case 0xBu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000B, 16);\n                break;\n              case 0xCu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000C, 16);\n                break;\n              default:\n                goto LABEL_16;\n            }\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 305 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZL_ID131_IDX003(this);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0009, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 280 )\n      {\n        switch ( v11 )\n        {\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0001, 16);\n            goto LABEL_17;\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0000, 16);\n            goto LABEL_17;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0002, 16);\n            goto LABEL_17;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0003, 16);\n            goto LABEL_17;\n        }\n      }\n      else if ( v12 > 280 )\n      {\n        if ( v12 == 284 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0001, 46);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0002, 46);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0003, 46);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0004, 46);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0005, 46);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0007, 46);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0008, 46);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0009, 46);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000A, 46);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000B, 46);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 == 292 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0124_IDX_XXXX, 32);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 279 )\n      {\n        switch ( v11 )\n        {\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0000, 16);\n            break;\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0001, 16);\n            break;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0002, 16);\n            break;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0003, 16);\n            break;\n          case 4u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0004, 16);\n            break;\n          default:\n            goto LABEL_16;\n        }\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 149 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0095_IDX_XXXX, 52);\n        goto LABEL_17;\n      }\n      if ( v12 > 149 )\n      {\n        if ( v12 == 273 )\n        {\n          switch ( v11 )\n          {\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0006, 40);\n              goto LABEL_17;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0007, 40);\n              goto LABEL_17;\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0001, 40);\n              goto LABEL_17;\n          }\n        }\n        else if ( v12 > 273 )\n        {\n          if ( v12 == 274 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0100, 16);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0000, 14);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 275 && v11 == 1 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0113_IDX_0001, 48);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 160 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_00A0_IDX_XXXX, 212);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 116 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0074_IDX_XXXX, 40);\n          goto LABEL_17;\n        }\n        if ( v12 > 116 )\n        {\n          if ( v12 == 146 )\n          {\n            if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0092_IDX_0000, 28);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 148 && !v11 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0094_IDX_0000, 270);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 58 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_003A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3860 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F14_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3860 )\n  {\n    if ( v12 == 1684 )\n    {\n      if ( v11 == 100 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0694_IDX_0064, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 1684 )\n    {\n      if ( v12 == 3473 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D91_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 3473 )\n      {\n        if ( v12 == 3840 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F00_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 > 3840 )\n        {\n          if ( v12 == 3857 )\n          {\n            switch ( v11 )\n            {\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0006, 12);\n                goto LABEL_17;\n              case 7u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0007, 12);\n                goto LABEL_17;\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0001, 12);\n                goto LABEL_17;\n            }\n          }\n          else if ( v12 == 3858 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0100, 12);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0000, 12);\n              goto LABEL_17;\n            }\n          }\n        }\n        else if ( v12 == 3479 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D97_IDX_0000, 60);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 2593 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0A21_IDX_XXXX, 16);\n          goto LABEL_17;\n        }\n        if ( v12 > 2593 )\n        {\n          if ( v12 == 2705 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0A91_IDX_XXXX, 44);\n            goto LABEL_17;\n          }\n          if ( v12 == 3217 && v11 == 2046 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0C91_IDX_07FE, 28);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 1940 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0794_IDX_XXXX, 270);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 658 )\n    {\n      if ( !v11 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0292_IDX_0000, 28);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 658 )\n    {\n      if ( v12 == 1060 )\n      {\n        TS7Worker::SZL_ID424(this);\n        goto LABEL_17;\n      }\n      if ( v12 > 1060 )\n      {\n        if ( v12 == 1425 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0591_IDX_XXXX, 76);\n          goto LABEL_17;\n        }\n        if ( v12 == 1682 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0692_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 660 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0294_IDX_XXXX, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 546 )\n    {\n      if ( v11 == 20 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0014, 40);\n        goto LABEL_17;\n      }\n      if ( v11 > 0x14u )\n      {\n        switch ( v11 )\n        {\n          case \'P\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0050, 40);\n            goto LABEL_17;\n          case \'d\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0064, 40);\n            goto LABEL_17;\n          case \'(\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0028, 40);\n            goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0001, 40);\n          goto LABEL_17;\n        }\n        if ( v11 == 10 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_000A, 40);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 > 546 )\n    {\n      if ( v12 == 549 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0225_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 562 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0001, 52);\n          goto LABEL_17;\n        }\n        if ( v11 == 4 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0004, 52);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 416 )\n    {\n      switch ( v11 )\n      {\n        case 0u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0000, 12);\n          break;\n        case 1u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0001, 32);\n          break;\n        case 2u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0002, 52);\n          break;\n        case 3u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0003, 72);\n          break;\n        case 4u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0004, 92);\n          break;\n        case 5u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0005, 112);\n          break;\n        case 6u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0006, 132);\n          break;\n        case 7u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0007, 152);\n          break;\n        case 8u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0008, 172);\n          break;\n        case 9u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0009, 192);\n          break;\n        case 0xAu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000A, 212);\n          break;\n        case 0xBu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000B, 232);\n          break;\n        case 0xCu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000C, 252);\n          break;\n        case 0xDu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000D, 272);\n          break;\n        case 0xEu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000E, 292);\n          break;\n        case 0xFu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000F, 312);\n          break;\n        case 0x10u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0010, 332);\n          break;\n        case 0x11u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0011, 352);\n          break;\n        case 0x12u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0012, 372);\n          break;\n        case 0x13u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0013, 392);\n          break;\n        case 0x14u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0014, 412);\n          break;\n        case 0x15u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0015, 432);\n          break;\n        default:\n          goto LABEL_16;\n      }\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3894 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F36_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3894 )\n  {\n    if ( v12 == 3986 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F92_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3986 )\n    {\n      if ( v12 == 3989 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F95_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 > 3989 )\n      {\n        if ( v12 == 3994 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F9A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 == 4000 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0FA0_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 3988 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F94_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F38_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 < 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F37_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3898 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F3A_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3956 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F74_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3867 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F1B_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3867 )\n  {\n    if ( v12 == 3873 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F21_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3873 )\n    {\n      if ( v12 == 3875 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F23_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3877 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F25_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 3868 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F1C_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3864 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F18_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3864 )\n  {\n    if ( v12 == 3863 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F17_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3865 )\n    TS7Worker::SZLData(this, &SZL_ID_0F19_IDX_XXXX, 12);\n  else\n    TS7Worker::SZLData(this, &SZL_ID_0F1A_IDX_XXXX, 12);\nLABEL_17:\n  v13 = *((_WORD *)this + 4330);\n  v14 = *((_WORD *)this + 4328);\n  if ( *((_BYTE *)this + 8664) )\n    TS7Worker::DoEvent(this, 0x100000u, 0, v14, v13, 0, 0);\n  else\n    TS7Worker::DoEvent(this, 0x100000u, 0xCu, v14, v13, 0, 0);\n  return 1LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (17,) appear to "contaminate" the global variables  and local variables v5. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (17,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:34,049 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
unsigned short, length
```
2025-03-08 21:22:36,050 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (22,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker17PerformPDUUsrDataERi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformPDUUsrData(TS7Worker *this, int *a2)\n{\n  __int64 v2; // rax\n  unsigned __int16 v3; // cx\n  char v4; // si\n  __int64 result; // rax\n\n  v2 = *((_QWORD *)this + 564);\n  v3 = *(unsigned __int8 *)(v2 + 15);\n  v4 = *(_BYTE *)(v2 + 16);\n  switch ( (char)v3 )\n  {\n    case \'A\':\n      result = TS7Worker::PerformGroupProgrammer(this);\n      break;\n    case \'B\':\n      result = TS7Worker::PerformGroupCyclicData(this);\n      break;\n    case \'C\':\n      result = TS7Worker::PerformGroupBlockInfo(this);\n      break;\n    case \'D\':\n      result = TS7Worker::PerformGroupSZL(this);\n      break;\n    case \'E\':\n      result = TS7Worker::PerformGroupSecurity(this);\n      break;\n    case \'G\':\n      if ( v4 == 1 )\n      {\n        result = TS7Worker::PerformGetClock(this);\n      }\n      else\n      {\n        if ( v4 != 2 )\n          goto LABEL_3;\n        result = TS7Worker::PerformSetClock(this);\n      }\n      break;\n    default:\n      TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 0xBu, v3, 0, 0, 0);\nLABEL_3:\n      result = 1LL;\n      break;\n  }\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (22,) appear to "contaminate" the global variables  and local variables v2, v3. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (22,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:36,820 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
int, length
```
2025-03-08 21:22:38,821 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (23,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN9TS7Worker17PerformPDUUsrDataERi\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformPDUUsrData(TS7Worker *this, int *a2)\n{\n  __int64 v2; // rax\n  unsigned __int16 v3; // cx\n  char v4; // si\n  __int64 result; // rax\n\n  v2 = *((_QWORD *)this + 564);\n  v3 = *(unsigned __int8 *)(v2 + 15);\n  v4 = *(_BYTE *)(v2 + 16);\n  switch ( (char)v3 )\n  {\n    case \'A\':\n      result = TS7Worker::PerformGroupProgrammer(this);\n      break;\n    case \'B\':\n      result = TS7Worker::PerformGroupCyclicData(this);\n      break;\n    case \'C\':\n      result = TS7Worker::PerformGroupBlockInfo(this);\n      break;\n    case \'D\':\n      result = TS7Worker::PerformGroupSZL(this);\n      break;\n    case \'E\':\n      result = TS7Worker::PerformGroupSecurity(this);\n      break;\n    case \'G\':\n      if ( v4 == 1 )\n      {\n        result = TS7Worker::PerformGetClock(this);\n      }\n      else\n      {\n        if ( v4 != 2 )\n          goto LABEL_3;\n        result = TS7Worker::PerformSetClock(this);\n      }\n      break;\n    default:\n      TS7Worker::DoEvent(this, (unsigned int)&stru_10000, 0xBu, v3, 0, 0, 0);\nLABEL_3:\n      result = 1LL;\n      break;\n  }\n  return result;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker15PerformGroupSZLEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformGroupSZL(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  __int64 v2; // rax\n  __int64 v3; // rdx\n  __int16 v4; // ax\n  _BYTE *v5; // rdx\n  __int64 v6; // rax\n  char v7; // al\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  unsigned __int16 v11; // ax\n  int v12; // edx\n  unsigned __int16 v13; // r8\n  unsigned __int16 v14; // cx\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = *((_QWORD *)this + 564);\n  *((_BYTE *)this + 4528) = 50;\n  *((_BYTE *)this + 4529) = 7;\n  *((_BYTE *)this + 8664) = 0;\n  *((_WORD *)this + 2265) = 0;\n  v3 = v2 + 10;\n  LOWORD(v2) = *(_WORD *)(v2 + 4);\n  *((_QWORD *)this + 1078) = v3;\n  *((_QWORD *)this + 1080) = (char *)this + 4538;\n  *((_WORD *)this + 2266) = v2;\n  *((_QWORD *)this + 1081) = (char *)this + 4550;\n  v4 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 0xCu);\n  v5 = (_BYTE *)*((_QWORD *)this + 1078);\n  *((_WORD *)this + 2267) = v4;\n  **((_BYTE **)this + 1080) = *v5;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 1LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 1LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 2LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 2LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 3LL) = 8;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 4LL) = 18;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 5LL) = -124;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 6LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 6LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 7LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 7LL);\n  v6 = *((_QWORD *)this + 1080);\n  *(_WORD *)(v6 + 8) = 0;\n  v7 = *(_BYTE *)(v6 + 6);\n  if ( v7 == 2 )\n  {\n    TS7Worker::SZLSystemState(this);\n    return 1LL;\n  }\n  if ( v7 != 1 )\n  {\n    TS7Worker::SZLNotAvailable(this);\n    return 1LL;\n  }\n  v9 = *((_QWORD *)this + 564);\n  v10 = *(_WORD *)(v9 + 22);\n  *((_QWORD *)this + 1079) = v9 + 18;\n  *((_DWORD *)this + 2164) = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n  v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));\n  *((_DWORD *)this + 2165) = v11;\n  v12 = *((_DWORD *)this + 2164);\n  if ( v12 == 404 )\n  {\n    if ( v11 == 100 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0194_IDX_0064, 270);\n      goto LABEL_17;\n    }\nLABEL_16:\n    TS7Worker::SZLNotAvailable(this);\n    goto LABEL_17;\n  }\n  if ( v12 <= 404 )\n  {\n    if ( v12 == 56 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0038_IDX_XXXX, 78);\n      goto LABEL_17;\n    }\n    if ( v12 <= 56 )\n    {\n      if ( v12 == 25 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0019_IDX_XXXX, 40);\n        goto LABEL_17;\n      }\n      if ( v12 > 25 )\n      {\n        if ( v12 == 35 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0023_IDX_XXXX, 228);\n          goto LABEL_17;\n        }\n        if ( v12 > 35 )\n        {\n          if ( v12 == 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0025_IDX_XXXX, 16);\n            goto LABEL_17;\n          }\n          if ( v12 < 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0024_IDX_XXXX, 92);\n            goto LABEL_17;\n          }\n          if ( v12 == 54 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0036_IDX_XXXX, 12);\n            goto LABEL_17;\n          }\n          if ( v12 == 55 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0037_IDX_XXXX, 60);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001B_IDX_XXXX, 132);\n            goto LABEL_17;\n          }\n          if ( v12 < 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001A_IDX_XXXX, 48);\n            goto LABEL_17;\n          }\n          if ( v12 == 28 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001C_IDX_XXXX, 352);\n            goto LABEL_17;\n          }\n          if ( v12 == 33 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0021_IDX_XXXX, 100);\n            goto LABEL_17;\n          }\n        }\n      }\n      else\n      {\n        if ( v12 == 19 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0013_IDX_XXXX, 192);\n          goto LABEL_17;\n        }\n        if ( v12 > 19 )\n        {\n          if ( v12 == 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0015_IDX_XXXX, 62);\n            goto LABEL_17;\n          }\n          if ( v12 < 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0014_IDX_XXXX, 84);\n            goto LABEL_17;\n          }\n          if ( v12 == 23 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0017_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 == 24 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0018_IDX_XXXX, 28);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 2 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0002_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 > 2 )\n          {\n            if ( v12 == 17 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0011_IDX_XXXX, 124);\n              goto LABEL_17;\n            }\n            if ( v12 == 18 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0012_IDX_XXXX, 58);\n              goto LABEL_17;\n            }\n          }\n          else if ( !v12 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0000_IDX_XXXX, 236);\n            goto LABEL_17;\n          }\n        }\n      }\n    }\n    else if ( v12 == 277 )\n    {\n      if ( v11 == 2048 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0115_IDX_0800, 22);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 277 )\n    {\n      if ( v12 == 293 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0000, 16);\n          goto LABEL_17;\n        }\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 293 )\n      {\n        if ( v12 == 306 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0003, 52);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0009, 52);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000A, 52);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000B, 52);\n              break;\n            case 0xCu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000C, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 > 306 )\n        {\n          if ( v12 == 311 )\n          {\n            if ( v11 == 2046 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0137_IDX_07FE, 60);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 372 )\n          {\n            switch ( v11 )\n            {\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0001, 16);\n                break;\n              case 4u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0004, 16);\n                break;\n              case 5u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0005, 16);\n                break;\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0006, 16);\n                break;\n              case 0xBu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000B, 16);\n                break;\n              case 0xCu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000C, 16);\n                break;\n              default:\n                goto LABEL_16;\n            }\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 305 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZL_ID131_IDX003(this);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0009, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 280 )\n      {\n        switch ( v11 )\n        {\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0001, 16);\n            goto LABEL_17;\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0000, 16);\n            goto LABEL_17;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0002, 16);\n            goto LABEL_17;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0003, 16);\n            goto LABEL_17;\n        }\n      }\n      else if ( v12 > 280 )\n      {\n        if ( v12 == 284 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0001, 46);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0002, 46);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0003, 46);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0004, 46);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0005, 46);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0007, 46);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0008, 46);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0009, 46);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000A, 46);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000B, 46);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 == 292 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0124_IDX_XXXX, 32);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 279 )\n      {\n        switch ( v11 )\n        {\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0000, 16);\n            break;\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0001, 16);\n            break;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0002, 16);\n            break;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0003, 16);\n            break;\n          case 4u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0004, 16);\n            break;\n          default:\n            goto LABEL_16;\n        }\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 149 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0095_IDX_XXXX, 52);\n        goto LABEL_17;\n      }\n      if ( v12 > 149 )\n      {\n        if ( v12 == 273 )\n        {\n          switch ( v11 )\n          {\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0006, 40);\n              goto LABEL_17;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0007, 40);\n              goto LABEL_17;\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0001, 40);\n              goto LABEL_17;\n          }\n        }\n        else if ( v12 > 273 )\n        {\n          if ( v12 == 274 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0100, 16);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0000, 14);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 275 && v11 == 1 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0113_IDX_0001, 48);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 160 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_00A0_IDX_XXXX, 212);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 116 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0074_IDX_XXXX, 40);\n          goto LABEL_17;\n        }\n        if ( v12 > 116 )\n        {\n          if ( v12 == 146 )\n          {\n            if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0092_IDX_0000, 28);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 148 && !v11 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0094_IDX_0000, 270);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 58 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_003A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3860 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F14_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3860 )\n  {\n    if ( v12 == 1684 )\n    {\n      if ( v11 == 100 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0694_IDX_0064, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 1684 )\n    {\n      if ( v12 == 3473 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D91_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 3473 )\n      {\n        if ( v12 == 3840 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F00_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 > 3840 )\n        {\n          if ( v12 == 3857 )\n          {\n            switch ( v11 )\n            {\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0006, 12);\n                goto LABEL_17;\n              case 7u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0007, 12);\n                goto LABEL_17;\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0001, 12);\n                goto LABEL_17;\n            }\n          }\n          else if ( v12 == 3858 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0100, 12);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0000, 12);\n              goto LABEL_17;\n            }\n          }\n        }\n        else if ( v12 == 3479 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D97_IDX_0000, 60);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 2593 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0A21_IDX_XXXX, 16);\n          goto LABEL_17;\n        }\n        if ( v12 > 2593 )\n        {\n          if ( v12 == 2705 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0A91_IDX_XXXX, 44);\n            goto LABEL_17;\n          }\n          if ( v12 == 3217 && v11 == 2046 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0C91_IDX_07FE, 28);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 1940 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0794_IDX_XXXX, 270);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 658 )\n    {\n      if ( !v11 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0292_IDX_0000, 28);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 658 )\n    {\n      if ( v12 == 1060 )\n      {\n        TS7Worker::SZL_ID424(this);\n        goto LABEL_17;\n      }\n      if ( v12 > 1060 )\n      {\n        if ( v12 == 1425 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0591_IDX_XXXX, 76);\n          goto LABEL_17;\n        }\n        if ( v12 == 1682 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0692_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 660 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0294_IDX_XXXX, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 546 )\n    {\n      if ( v11 == 20 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0014, 40);\n        goto LABEL_17;\n      }\n      if ( v11 > 0x14u )\n      {\n        switch ( v11 )\n        {\n          case \'P\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0050, 40);\n            goto LABEL_17;\n          case \'d\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0064, 40);\n            goto LABEL_17;\n          case \'(\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0028, 40);\n            goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0001, 40);\n          goto LABEL_17;\n        }\n        if ( v11 == 10 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_000A, 40);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 > 546 )\n    {\n      if ( v12 == 549 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0225_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 562 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0001, 52);\n          goto LABEL_17;\n        }\n        if ( v11 == 4 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0004, 52);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 416 )\n    {\n      switch ( v11 )\n      {\n        case 0u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0000, 12);\n          break;\n        case 1u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0001, 32);\n          break;\n        case 2u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0002, 52);\n          break;\n        case 3u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0003, 72);\n          break;\n        case 4u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0004, 92);\n          break;\n        case 5u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0005, 112);\n          break;\n        case 6u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0006, 132);\n          break;\n        case 7u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0007, 152);\n          break;\n        case 8u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0008, 172);\n          break;\n        case 9u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0009, 192);\n          break;\n        case 0xAu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000A, 212);\n          break;\n        case 0xBu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000B, 232);\n          break;\n        case 0xCu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000C, 252);\n          break;\n        case 0xDu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000D, 272);\n          break;\n        case 0xEu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000E, 292);\n          break;\n        case 0xFu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000F, 312);\n          break;\n        case 0x10u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0010, 332);\n          break;\n        case 0x11u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0011, 352);\n          break;\n        case 0x12u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0012, 372);\n          break;\n        case 0x13u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0013, 392);\n          break;\n        case 0x14u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0014, 412);\n          break;\n        case 0x15u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0015, 432);\n          break;\n        default:\n          goto LABEL_16;\n      }\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3894 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F36_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3894 )\n  {\n    if ( v12 == 3986 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F92_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3986 )\n    {\n      if ( v12 == 3989 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F95_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 > 3989 )\n      {\n        if ( v12 == 3994 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F9A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 == 4000 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0FA0_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 3988 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F94_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F38_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 < 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F37_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3898 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F3A_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3956 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F74_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3867 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F1B_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3867 )\n  {\n    if ( v12 == 3873 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F21_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3873 )\n    {\n      if ( v12 == 3875 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F23_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3877 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F25_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 3868 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F1C_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3864 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F18_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3864 )\n  {\n    if ( v12 == 3863 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F17_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3865 )\n    TS7Worker::SZLData(this, &SZL_ID_0F19_IDX_XXXX, 12);\n  else\n    TS7Worker::SZLData(this, &SZL_ID_0F1A_IDX_XXXX, 12);\nLABEL_17:\n  v13 = *((_WORD *)this + 4330);\n  v14 = *((_WORD *)this + 4328);\n  if ( *((_BYTE *)this + 8664) )\n    TS7Worker::DoEvent(this, 0x100000u, 0, v14, v13, 0, 0);\n  else\n    TS7Worker::DoEvent(this, 0x100000u, 0xCu, v14, v13, 0, 0);\n  return 1LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (23,) appear to "contaminate" the global variables  and local variables v2, v4, v7, v6. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (23,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:40,857 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
unsigned_short, length
```
2025-03-08 21:22:42,859 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (29, 30)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN16TCustomMsgServer7DoEventEijttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        int __fastcall TCustomMsgServer::DoEvent(\n        TCustomMsgServer *this,\n        int a2,\n        int a3,\n        __int16 a4,\n        __int16 a5,\n        __int16 a6,\n        unsigned __int16 a7,\n        unsigned __int16 a8)\n{\n  bool v9; // zf\n  int v10; // edi\n  int result; // eax\n  bool v12; // bp\n  bool v13; // r14\n  void (__fastcall *v14)(_QWORD, time_t *, __int64); // rax\n  time_t timer; // [rsp+30h] [rbp-48h] BYREF\n  int v20; // [rsp+38h] [rbp-40h]\n  int v21; // [rsp+3Ch] [rbp-3Ch]\n  __int16 v22; // [rsp+40h] [rbp-38h]\n  __int16 v23; // [rsp+42h] [rbp-36h]\n  __int16 v24; // [rsp+44h] [rbp-34h]\n  unsigned __int16 v25; // [rsp+46h] [rbp-32h]\n  unsigned __int16 v26; // [rsp+48h] [rbp-30h]\n\n  v9 = *((_BYTE *)this + 80) == 0;\n  v10 = *((_DWORD *)this + 2074);\n  result = *((_DWORD *)this + 2075);\n  if ( v9 )\n  {\n    v12 = (v10 & a3) != 0;\n    v13 = (result & a3) != 0;\n    if ( (result & a3) != 0 || (v10 & a3) != 0 )\n    {\n      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));\n      time(&timer);\n      v25 = a7;\n      v20 = a2;\n      v21 = a3;\n      v22 = a4;\n      v23 = a5;\n      v24 = a6;\n      v26 = a8;\n      if ( v13 )\n      {\n        v14 = (void (__fastcall *)(_QWORD, time_t *, __int64))*((_QWORD *)this + 8);\n        if ( v14 )\n          v14(*((_QWORD *)this + 9), &timer, 26LL);\n      }\n      if ( v12 )\n        TMsgEventQueue::Insert(*((TMsgEventQueue **)this + 7), &timer);\n      return pthread_mutex_unlock(*((pthread_mutex_t **)this + 11));\n    }\n  }\n  return result;\n}\n\n                        \n                        Function Name: _Z10EvtSrvTextR9TSrvEvent\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        std::string *__fastcall EvtSrvText(std::string *a1, __int64 a2)\n{\n  unsigned int v3; // esi\n  __int64 v4; // r13\n  __int64 v5; // r13\n  __int64 v6; // r13\n  __int64 v7; // r13\n  __int64 v8; // r13\n  __int64 v9; // r13\n  __int64 v10; // r13\n  __int64 v11; // r13\n  __int64 v12; // r14\n  __int64 v13; // r14\n  __int64 v14; // r14\n  __int64 v15; // rbp\n  __int64 v16; // rbp\n  unsigned __int16 v17; // ax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r13\n  __int64 v21; // r13\n  __int64 v22; // r13\n  __int64 v23; // r13\n  __int64 v24; // rbp\n  __int64 v26; // r14\n  __int64 v27; // r14\n  __int64 v28; // r14\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r13\n  __int64 v32; // r13\n  __int64 v33; // r13\n  __int64 v34; // r14\n  __int64 v35; // r13\n  __int64 v36; // r13\n  __int64 v37; // r14\n  __int64 v38; // r14\n  __int64 v39; // r13\n  __int16 v40; // ax\n  __int64 v41; // r14\n  __int64 v42; // r13\n  __int64 v43; // r13\n  __int64 v44; // r13\n  __int16 v45; // dx\n  __int64 v46; // r14\n  __int64 v47; // r14\n  __int64 v48; // r14\n  __int64 v49; // r14\n  __int64 v50; // r13\n  __int64 v51; // r13\n  __int64 v52; // r13\n  __int64 v53; // r13\n  __int64 v54; // r13\n  __int64 v55; // r13\n  int v56; // [rsp+0h] [rbp-468h]\n  int v57; // [rsp+0h] [rbp-468h]\n  int v58; // [rsp+0h] [rbp-468h]\n  char v59; // [rsp+5h] [rbp-463h] BYREF\n  char v60; // [rsp+6h] [rbp-462h] BYREF\n  char v61; // [rsp+7h] [rbp-461h] BYREF\n  char v62; // [rsp+8h] [rbp-460h] BYREF\n  char v63; // [rsp+9h] [rbp-45Fh] BYREF\n  char v64; // [rsp+Ah] [rbp-45Eh] BYREF\n  char v65; // [rsp+Bh] [rbp-45Dh] BYREF\n  char v66; // [rsp+Ch] [rbp-45Ch] BYREF\n  char v67; // [rsp+Dh] [rbp-45Bh] BYREF\n  char v68; // [rsp+Eh] [rbp-45Ah] BYREF\n  char v69; // [rsp+Fh] [rbp-459h] BYREF\n  int v70[2]; // [rsp+10h] [rbp-458h] BYREF\n  char v71; // [rsp+18h] [rbp-450h]\n  __int64 v72; // [rsp+20h] [rbp-448h] BYREF\n  char v73; // [rsp+28h] [rbp-440h]\n  __int64 v74; // [rsp+30h] [rbp-438h] BYREF\n  char v75; // [rsp+38h] [rbp-430h]\n  __int64 v76[2]; // [rsp+40h] [rbp-428h] BYREF\n  __int64 v77[2]; // [rsp+50h] [rbp-418h] BYREF\n  __int64 v78[2]; // [rsp+60h] [rbp-408h] BYREF\n  __int64 v79[2]; // [rsp+70h] [rbp-3F8h] BYREF\n  __int64 v80[2]; // [rsp+80h] [rbp-3E8h] BYREF\n  __int64 v81[2]; // [rsp+90h] [rbp-3D8h] BYREF\n  __int64 v82[2]; // [rsp+A0h] [rbp-3C8h] BYREF\n  __int64 v83[2]; // [rsp+B0h] [rbp-3B8h] BYREF\n  __int64 v84[2]; // [rsp+C0h] [rbp-3A8h] BYREF\n  __int64 v85[2]; // [rsp+D0h] [rbp-398h] BYREF\n  __int64 v86[2]; // [rsp+E0h] [rbp-388h] BYREF\n  __int64 v87[2]; // [rsp+F0h] [rbp-378h] BYREF\n  _QWORD v88[2]; // [rsp+100h] [rbp-368h] BYREF\n  __int64 v89[2]; // [rsp+110h] [rbp-358h] BYREF\n  __int64 v90[2]; // [rsp+120h] [rbp-348h] BYREF\n  __int64 v91[2]; // [rsp+130h] [rbp-338h] BYREF\n  __int64 v92[2]; // [rsp+140h] [rbp-328h] BYREF\n  __int64 v93[2]; // [rsp+150h] [rbp-318h] BYREF\n  __int64 v94[2]; // [rsp+160h] [rbp-308h] BYREF\n  __int64 v95[2]; // [rsp+170h] [rbp-2F8h] BYREF\n  __int64 v96[2]; // [rsp+180h] [rbp-2E8h] BYREF\n  __int64 v97[2]; // [rsp+190h] [rbp-2D8h] BYREF\n  _QWORD v98[2]; // [rsp+1A0h] [rbp-2C8h] BYREF\n  __int64 v99[2]; // [rsp+1B0h] [rbp-2B8h] BYREF\n  __int64 v100[2]; // [rsp+1C0h] [rbp-2A8h] BYREF\n  __int64 v101[2]; // [rsp+1D0h] [rbp-298h] BYREF\n  __int64 v102[2]; // [rsp+1E0h] [rbp-288h] BYREF\n  _QWORD v103[2]; // [rsp+1F0h] [rbp-278h] BYREF\n  __int64 v104[2]; // [rsp+200h] [rbp-268h] BYREF\n  _QWORD v105[2]; // [rsp+210h] [rbp-258h] BYREF\n  __int64 v106[2]; // [rsp+220h] [rbp-248h] BYREF\n  _QWORD v107[2]; // [rsp+230h] [rbp-238h] BYREF\n  __int64 v108[2]; // [rsp+240h] [rbp-228h] BYREF\n  _QWORD v109[2]; // [rsp+250h] [rbp-218h] BYREF\n  __int64 v110[2]; // [rsp+260h] [rbp-208h] BYREF\n  __int64 v111[2]; // [rsp+270h] [rbp-1F8h] BYREF\n  _QWORD v112[2]; // [rsp+280h] [rbp-1E8h] BYREF\n  __int64 v113[2]; // [rsp+290h] [rbp-1D8h] BYREF\n  __int64 v114[2]; // [rsp+2A0h] [rbp-1C8h] BYREF\n  __int64 v115[2]; // [rsp+2B0h] [rbp-1B8h] BYREF\n  __int64 v116[2]; // [rsp+2C0h] [rbp-1A8h] BYREF\n  __int64 v117[2]; // [rsp+2D0h] [rbp-198h] BYREF\n  __int64 v118[2]; // [rsp+2E0h] [rbp-188h] BYREF\n  __int64 v119[2]; // [rsp+2F0h] [rbp-178h] BYREF\n  __int64 v120[2]; // [rsp+300h] [rbp-168h] BYREF\n  __int64 v121[2]; // [rsp+310h] [rbp-158h] BYREF\n  __int64 v122[2]; // [rsp+320h] [rbp-148h] BYREF\n  _QWORD v123[2]; // [rsp+330h] [rbp-138h] BYREF\n  __int64 v124[2]; // [rsp+340h] [rbp-128h] BYREF\n  __int64 v125[2]; // [rsp+350h] [rbp-118h] BYREF\n  __int64 v126[2]; // [rsp+360h] [rbp-108h] BYREF\n  __int64 v127[2]; // [rsp+370h] [rbp-F8h] BYREF\n  __int64 v128[2]; // [rsp+380h] [rbp-E8h] BYREF\n  __int64 v129[2]; // [rsp+390h] [rbp-D8h] BYREF\n  __int64 v130[2]; // [rsp+3A0h] [rbp-C8h] BYREF\n  __int64 v131[2]; // [rsp+3B0h] [rbp-B8h] BYREF\n  __int64 v132[2]; // [rsp+3C0h] [rbp-A8h] BYREF\n  _QWORD v133[2]; // [rsp+3D0h] [rbp-98h] BYREF\n  __int64 v134[2]; // [rsp+3E0h] [rbp-88h] BYREF\n  __int64 v135[2]; // [rsp+3F0h] [rbp-78h] BYREF\n  _QWORD v136[2]; // [rsp+400h] [rbp-68h] BYREF\n  __int64 v137[2]; // [rsp+410h] [rbp-58h] BYREF\n  __int64 v138[2]; // [rsp+420h] [rbp-48h] BYREF\n  __int64 v139[2]; // [rsp+430h] [rbp-38h] BYREF\n\n  v3 = *(_DWORD *)(a2 + 12);\n  *(_QWORD *)v70 = (char *)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( v3 > 0x8000 )\n  {\n    if ( v3 == 0x200000 )\n    {\n      if ( *(_WORD *)(a2 + 18) == 1 )\n        std::string::string(v93, "System clock read requested", &v64);\n      else\n        std::string::string(v93, "System clock write requested", &v63);\n      std::string::assign((std::string *)v70, (const std::string *)v93);\n      v6 = v93[0] - 24;\n      if ( (_UNKNOWN *)(v93[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_56;\n      goto LABEL_101;\n    }\n    if ( v3 <= 0x200000 )\n    {\n      if ( v3 == 0x40000 )\n      {\n        TxtDataResult((std::string *)v86, v56, v62, v70[0], v71);\n        TxtStartSize((std::string *)v84, v58, v62, v70[0], v71, v72, v73, v74, v75);\n        TxtArea((std::string *)v82);\n        v83[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v83, *(_QWORD *)(v82[0] - 24) + 15LL);\n        std::string::append((std::string *)v83, "Write request, ", 0xFuLL);\n        std::string::append((std::string *)v83, (const std::string *)v82);\n        std::string::string((std::string *)v85, (const std::string *)v83);\n        std::string::append((std::string *)v85, (const std::string *)v84);\n        std::string::string((std::string *)v87, (const std::string *)v85);\n        std::string::append((std::string *)v87, (const std::string *)v86);\n        std::string::assign((std::string *)v70, (const std::string *)v87);\n        v19 = v87[0] - 24;\n        if ( (_UNKNOWN *)(v87[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v19 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v19, &v69);\n        }\n        v20 = v85[0] - 24;\n        if ( (_UNKNOWN *)(v85[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v20 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v20, &v69);\n        }\n        v21 = v83[0] - 24;\n        if ( (_UNKNOWN *)(v83[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v21 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v21, &v69);\n        }\n        v22 = v82[0] - 24;\n        if ( (_UNKNOWN *)(v82[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v22 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v22, &v69);\n        }\n        v23 = v84[0] - 24;\n        if ( (_UNKNOWN *)(v84[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v23 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v23, &v69);\n        }\n        v6 = v86[0] - 24;\n        if ( (_UNKNOWN *)(v86[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_101;\n        goto LABEL_56;\n      }\n      if ( v3 > 0x40000 )\n      {\n        if ( v3 == 0x80000 )\n        {\n          IntToString((int)v88);\n          v89[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v89, *(_QWORD *)(v88[0] - 24LL) + 34LL);\n          std::string::append((std::string *)v89, "The client requires a PDU size of ", 0x22uLL);\n          std::string::append((std::string *)v89, (const std::string *)v88);\n          std::string::string((std::string *)v90, (const std::string *)v89);\n          std::string::append((std::string *)v90, " bytes", 6uLL);\n          std::string::assign((std::string *)v70, (const std::string *)v90);\n          v35 = v90[0] - 24;\n          if ( (_UNKNOWN *)(v90[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v35 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v35, &v69);\n          }\n          v36 = v89[0] - 24;\n          if ( (_UNKNOWN *)(v89[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v36 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v36, &v69);\n          }\n          v6 = v88[0] - 24LL;\n          if ( (_UNKNOWN *)(v88[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n        if ( v3 == 0x100000 )\n        {\n          NumToString((std::string *)v118, *(unsigned __int16 *)(a2 + 20), 0x10u);\n          NumToString((std::string *)v115, *(unsigned __int16 *)(a2 + 18), 0x10u);\n          v116[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v116, *(_QWORD *)(v115[0] - 24) + 23LL);\n          std::string::append((std::string *)v116, "Read SZL request, ID:0x", 0x17uLL);\n          std::string::append((std::string *)v116, (const std::string *)v115);\n          std::string::string((std::string *)v117, (const std::string *)v116);\n          std::string::append((std::string *)v117, " INDEX:0x", 9uLL);\n          std::string::string((std::string *)v114, (const std::string *)v117);\n          std::string::append((std::string *)v114, (const std::string *)v118);\n          v30 = v117[0] - 24;\n          if ( (_UNKNOWN *)(v117[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v30 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v30, &v69);\n          }\n          v31 = v116[0] - 24;\n          if ( (_UNKNOWN *)(v116[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v31 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v31, &v69);\n          }\n          v32 = v115[0] - 24;\n          if ( (_UNKNOWN *)(v115[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v32 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v32, &v69);\n          }\n          v33 = v118[0] - 24;\n          if ( (_UNKNOWN *)(v118[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v33 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v33, &v69);\n          }\n          if ( *(_WORD *)(a2 + 16) )\n          {\n            std::string::string((std::string *)v92, (const std::string *)v114);\n            std::string::append((std::string *)v92, " --> NOT AVAILABLE", 0x12uLL);\n          }\n          else\n          {\n            std::string::string((std::string *)v92, (const std::string *)v114);\n            std::string::append((std::string *)v92, " --> OK", 7uLL);\n          }\n          v34 = v114[0] - 24;\n          if ( (_UNKNOWN *)(v114[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v34 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v34, &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v92);\n          v6 = v92[0] - 24;\n          if ( (_UNKNOWN *)(v92[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      else\n      {\n        if ( v3 == (_DWORD)&stru_10000 )\n        {\n          switch ( *(_WORD *)(a2 + 16) )\n          {\n            case 1:\n              IntToString((int)v103);\n              v102[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v102, *(_QWORD *)(v103[0] - 24LL) + 12LL);\n              std::string::append((std::string *)v102, "Fragment of ", 0xCuLL);\n              std::string::append((std::string *)v102, (const std::string *)v103);\n              std::string::string((std::string *)&v72, (const std::string *)v102);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v47 = v102[0] - 24;\n              if ( (_UNKNOWN *)(v102[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v47 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v47, &v69);\n              }\n              v38 = v103[0] - 24LL;\n              if ( (_UNKNOWN *)(v103[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 2:\n              IntToString((int)v105);\n              v104[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v104, *(_QWORD *)(v105[0] - 24LL) + 17LL);\n              std::string::append((std::string *)v104, "Malformed PDU of ", 0x11uLL);\n              std::string::append((std::string *)v104, (const std::string *)v105);\n              std::string::string((std::string *)&v72, (const std::string *)v104);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v46 = v104[0] - 24;\n              if ( (_UNKNOWN *)(v104[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v46 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v46, &v69);\n              }\n              v38 = v105[0] - 24LL;\n              if ( (_UNKNOWN *)(v105[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 3:\n              IntToString((int)v107);\n              v106[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v106, *(_QWORD *)(v107[0] - 24LL) + 18LL);\n              std::string::append((std::string *)v106, "Message of sparse ", 0x12uLL);\n              std::string::append((std::string *)v106, (const std::string *)v107);\n              std::string::string((std::string *)&v72, (const std::string *)v106);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v48 = v106[0] - 24;\n              if ( (_UNKNOWN *)(v106[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v48 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v48, &v69);\n              }\n              v38 = v107[0] - 24LL;\n              if ( (_UNKNOWN *)(v107[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 4:\n              std::string::string(&v72, "Cannot handle this PDU", &v59);\n              break;\n            case 5:\n              v45 = *(_WORD *)(a2 + 18);\n              if ( v45 == 65 )\n              {\n                std::string::string(&v72, "Function group programmer not yet implemented", &v61);\n              }\n              else\n              {\n                if ( v45 != 66 )\n                  goto LABEL_86;\n                std::string::string(&v72, "Function group cyclic data not yet implemented", &v60);\n              }\n              break;\n            default:\nLABEL_86:\n              IntToString((int)v109);\n              v108[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v108, *(_QWORD *)(v109[0] - 24LL) + 21LL);\n              std::string::append((std::string *)v108, "Unknown Return code (", 0x15uLL);\n              std::string::append((std::string *)v108, (const std::string *)v109);\n              std::string::string((std::string *)&v72, (const std::string *)v108);\n              std::string::append((std::string *)&v72, ")", 1uLL);\n              v37 = v108[0] - 24;\n              if ( (_UNKNOWN *)(v108[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v37 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v37, &v69);\n              }\n              v38 = v109[0] - 24LL;\n              if ( (_UNKNOWN *)(v109[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n              {\nLABEL_127:\n                if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v38 + 16)) <= 0 )\n                  std::string::_Rep::_M_destroy(v38, &v69);\n              }\n              break;\n          }\n          v74 = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)&v74, *(_QWORD *)(v72 - 24) + 15LL);\n          std::string::append((std::string *)&v74, "PDU incoming : ", 0xFuLL);\n          std::string::append((std::string *)&v74, (const std::string *)&v72);\n          std::string::assign((std::string *)v70, (const std::string *)&v74);\n          v39 = v74 - 24;\n          if ( (_UNKNOWN *)(v74 - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v39 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v39, &v69);\n          }\n          v6 = v72 - 24;\n          if ( (_UNKNOWN *)(v72 - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n        if ( v3 == (_DWORD)&loc_20000 )\n        {\n          TxtDataResult((std::string *)v80, v56, v62, v70[0], v71);\n          TxtStartSize((std::string *)v78, v57, v62, v70[0], v71, v72, v73, v74, v75);\n          TxtArea((std::string *)v76);\n          v77[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v77, *(_QWORD *)(v76[0] - 24) + 14LL);\n          std::string::append((std::string *)v77, "Read request, ", 0xEuLL);\n          std::string::append((std::string *)v77, (const std::string *)v76);\n          std::string::string((std::string *)v79, (const std::string *)v77);\n          std::string::append((std::string *)v79, (const std::string *)v78);\n          std::string::string((std::string *)v81, (const std::string *)v79);\n          std::string::append((std::string *)v81, (const std::string *)v80);\n          std::string::assign((std::string *)v70, (const std::string *)v81);\n          v7 = v81[0] - 24;\n          if ( (_UNKNOWN *)(v81[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v7 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v7, &v69);\n          }\n          v8 = v79[0] - 24;\n          if ( (_UNKNOWN *)(v79[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v8 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v8, &v69);\n          }\n          v9 = v77[0] - 24;\n          if ( (_UNKNOWN *)(v77[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v9 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v9, &v69);\n          }\n          v10 = v76[0] - 24;\n          if ( (_UNKNOWN *)(v76[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v10 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v10, &v69);\n          }\n          v11 = v78[0] - 24;\n          if ( (_UNKNOWN *)(v78[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v11 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v11, &v69);\n          }\n          v6 = v80[0] - 24;\n          if ( (_UNKNOWN *)(v80[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      goto LABEL_8;\n    }\n    if ( v3 != 0x1000000 )\n    {\n      if ( v3 > 0x1000000 )\n      {\n        if ( v3 == 0x2000000 )\n        {\n          v40 = *(_WORD *)(a2 + 18);\n          if ( v40 == 1 )\n          {\n            std::string::string(v97, "Security request : Set session password --> OK", &v67);\n          }\n          else if ( v40 == 2 )\n          {\n            std::string::string(v97, "Security request : Clear session password --> OK", &v68);\n          }\n          else\n          {\n            std::string::string(v97, "Security request : Unknown Subfunction", &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v97);\n          v6 = v97[0] - 24;\n          if ( (_UNKNOWN *)(v97[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n        if ( v3 == 0x4000000 )\n        {\n          std::string::string(v110, "CPU Control request : ", &v62);\n          switch ( (unsigned __int16)v91 )\n          {\n            case 0u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Unknown", 7uLL);\n              break;\n            case 1u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Cold START --> OK", 0x11uLL);\n              break;\n            case 2u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Warm START --> OK", 0x11uLL);\n              break;\n            case 3u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "STOP --> OK", 0xBuLL);\n              break;\n            case 4u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Memory compress --> OK", 0x16uLL);\n              break;\n            case 5u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Copy Ram to Rom --> OK", 0x16uLL);\n              break;\n            case 6u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Block Insert or Delete --> OK", 0x1DuLL);\n              break;\n            default:\n              IntToString((int)v112);\n              std::string::string((std::string *)v111, (const std::string *)v110);\n              std::string::append((std::string *)v111, "Unknown control code (", 0x16uLL);\n              std::string::string((std::string *)v113, (const std::string *)v111);\n              std::string::append((std::string *)v113, (const std::string *)v112);\n              std::string::string((std::string *)v91, (const std::string *)v113);\n              std::string::append((std::string *)v91, ")", 1uLL);\n              v26 = v113[0] - 24;\n              if ( (_UNKNOWN *)(v113[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v26 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v26, &v69);\n              }\n              v27 = v111[0] - 24;\n              if ( (_UNKNOWN *)(v111[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v27 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v27, &v69);\n              }\n              v28 = v112[0] - 24LL;\n              if ( (_UNKNOWN *)(v112[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v28 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v28, &v69);\n              }\n              break;\n          }\n          v29 = v110[0] - 24;\n          if ( (_UNKNOWN *)(v110[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v29 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v29, &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v91);\n          v6 = v91[0] - 24;\n          if ( (_UNKNOWN *)(v91[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      else\n      {\n        if ( v3 == 0x400000 )\n        {\n          std::string::string(v94, "Block upload requested --> NOT PERFORMED (due to invalid security level)", &v65);\n          std::string::assign((std::string *)v70, (const std::string *)v94);\n          v6 = v94[0] - 24;\n          if ( (_UNKNOWN *)(v94[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n        if ( v3 == 0x800000 )\n        {\n          std::string::string(v95, "Block download requested --> NOT PERFORMED (due to invalid security level)", &v66);\n          std::string::assign((std::string *)v70, (const std::string *)v95);\n          v6 = v95[0] - 24;\n          if ( (_UNKNOWN *)(v95[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n      }\nLABEL_8:\n      IntToString((int)v98);\n      v99[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v99, *(_QWORD *)(v98[0] - 24LL) + 15LL);\n      std::string::append((std::string *)v99, "Unknown event (", 0xFuLL);\n      std::string::append((std::string *)v99, (const std::string *)v98);\n      std::string::string((std::string *)v100, (const std::string *)v99);\n      std::string::append((std::string *)v100, ")", 1uLL);\n      std::string::assign((std::string *)v70, (const std::string *)v100);\n      v4 = v100[0] - 24;\n      if ( (_UNKNOWN *)(v100[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v4 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v4, &v69);\n      }\n      v5 = v99[0] - 24;\n      if ( (_UNKNOWN *)(v99[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v5 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v5, &v69);\n      }\n      v6 = v98[0] - 24LL;\n      if ( (_UNKNOWN *)(v98[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n      {\nLABEL_101:\n        if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v6 + 16)) <= 0 )\n          std::string::_Rep::_M_destroy(v6, &v69);\n      }\nLABEL_56:\n      SenderText((std::string *)v101, v56, v62, v70[0], v71, v72, v73);\n      std::string::string(a1, (const std::string *)v101);\n      std::string::append(a1, (const std::string *)v70);\n      v16 = v101[0] - 24;\n      if ( (_UNKNOWN *)(v101[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_57;\n      goto LABEL_34;\n    }\n    v17 = *(_WORD *)(a2 + 18);\n    v119[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    if ( v17 == 2 )\n    {\n      StrBlockType((std::string *)v128);\n      v129[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v129, *(_QWORD *)(v128[0] - 24) + 14LL);\n      std::string::append((std::string *)v129, "Block of type ", 0xEuLL);\n      std::string::append((std::string *)v129, (const std::string *)v128);\n      std::string::string((std::string *)v130, (const std::string *)v129);\n      std::string::append((std::string *)v130, " list requested (start sequence)", 0x20uLL);\n      std::string::assign((std::string *)v119, (const std::string *)v130);\n      v42 = v130[0] - 24;\n      if ( (_UNKNOWN *)(v130[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v42 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v42, &v69);\n      }\n      v43 = v129[0] - 24;\n      if ( (_UNKNOWN *)(v129[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v43 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v43, &v69);\n      }\n      v44 = v128[0] - 24;\n      if ( (_UNKNOWN *)(v128[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_118;\n    }\n    else\n    {\n      if ( v17 <= 2u )\n      {\n        if ( v17 == 1 )\n          std::string::assign((std::string *)v119, "Block list requested", 0x14uLL);\n        goto LABEL_45;\n      }\n      if ( v17 == 3 )\n      {\n        StrBlockType((std::string *)v125);\n        v126[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v126, *(_QWORD *)(v125[0] - 24) + 14LL);\n        std::string::append((std::string *)v126, "Block of type ", 0xEuLL);\n        std::string::append((std::string *)v126, (const std::string *)v125);\n        std::string::string((std::string *)v127, (const std::string *)v126);\n        std::string::append((std::string *)v127, " list requested (next part)", 0x1BuLL);\n        std::string::assign((std::string *)v119, (const std::string *)v127);\n        v54 = v127[0] - 24;\n        if ( (_UNKNOWN *)(v127[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v54 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v54, &v69);\n        }\n        v55 = v126[0] - 24;\n        if ( (_UNKNOWN *)(v126[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v55 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v55, &v69);\n        }\n        v44 = v125[0] - 24;\n        if ( (_UNKNOWN *)(v125[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_118;\n      }\n      else if ( v17 == 4 )\n      {\n        IntToString((int)v123);\n        StrBlockType((std::string *)v120);\n        v121[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v121, *(_QWORD *)(v120[0] - 24) + 21LL);\n        std::string::append((std::string *)v121, "Block info requested ", 0x15uLL);\n        std::string::append((std::string *)v121, (const std::string *)v120);\n        std::string::string((std::string *)v122, (const std::string *)v121);\n        std::string::append((std::string *)v122, " ", 1uLL);\n        std::string::string((std::string *)v124, (const std::string *)v122);\n        std::string::append((std::string *)v124, (const std::string *)v123);\n        std::string::assign((std::string *)v119, (const std::string *)v124);\n        v50 = v124[0] - 24;\n        if ( (_UNKNOWN *)(v124[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v50 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v50, &v69);\n        }\n        v51 = v122[0] - 24;\n        if ( (_UNKNOWN *)(v122[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v51 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v51, &v69);\n        }\n        v52 = v121[0] - 24;\n        if ( (_UNKNOWN *)(v121[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v52 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v52, &v69);\n        }\n        v53 = v120[0] - 24;\n        if ( (_UNKNOWN *)(v120[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v53 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v53, &v69);\n        }\n        v44 = v123[0] - 24LL;\n        if ( (_UNKNOWN *)(v123[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n        {\nLABEL_118:\n          if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v44 + 16)) <= 0 )\n            std::string::_Rep::_M_destroy(v44, &v69);\n        }\n      }\n    }\nLABEL_45:\n    if ( *(_WORD *)(a2 + 16) )\n    {\n      std::string::string((std::string *)v96, (const std::string *)v119);\n      std::string::append((std::string *)v96, " --> NOT AVAILABLE", 0x12uLL);\n    }\n    else\n    {\n      std::string::string((std::string *)v96, (const std::string *)v119);\n      std::string::append((std::string *)v96, " --> OK", 7uLL);\n    }\n    v18 = v119[0] - 24;\n    if ( (_UNKNOWN *)(v119[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v18 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v18, &v69);\n    }\n    std::string::assign((std::string *)v70, (const std::string *)v96);\n    v6 = v96[0] - 24;\n    if ( (_UNKNOWN *)(v96[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n      goto LABEL_101;\n    goto LABEL_56;\n  }\n  v131[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( v3 == 16 )\n  {\n    std::string::assign((std::string *)v131, "Client refused", 0xEuLL);\n    goto LABEL_32;\n  }\n  if ( v3 <= 0x10 )\n  {\n    if ( v3 == 2 )\n    {\n      std::string::assign((std::string *)v131, "stopped", 7uLL);\n      goto LABEL_32;\n    }\n    if ( v3 <= 2 )\n    {\n      if ( v3 == 1 )\n      {\n        std::string::assign((std::string *)v131, "started", 7uLL);\n        goto LABEL_32;\n      }\n    }\n    else\n    {\n      if ( v3 == 4 )\n      {\n        TcpTextOf((std::string *)v138);\n        v139[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v139, *(_QWORD *)(v138[0] - 24) + 39LL);\n        std::string::append((std::string *)v139, "Cannot start listener - Socket Error : ", 0x27uLL);\n        std::string::append((std::string *)v139, (const std::string *)v138);\n        std::string::assign((std::string *)v131, (const std::string *)v139);\n        v49 = v139[0] - 24;\n        if ( (_UNKNOWN *)(v139[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v49 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v49, &v69);\n        }\n        v14 = v138[0] - 24;\n        if ( (_UNKNOWN *)(v138[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_107;\n        goto LABEL_32;\n      }\n      if ( v3 == 8 )\n      {\n        std::string::assign((std::string *)v131, "Client added", 0xCuLL);\n        goto LABEL_32;\n      }\n    }\nLABEL_29:\n    IntToString((int)v133);\n    v134[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    std::string::reserve((std::string *)v134, *(_QWORD *)(v133[0] - 24LL) + 15LL);\n    std::string::append((std::string *)v134, "Unknown event (", 0xFuLL);\n    std::string::append((std::string *)v134, (const std::string *)v133);\n    std::string::string((std::string *)v135, (const std::string *)v134);\n    std::string::append((std::string *)v135, ")", 1uLL);\n    std::string::assign((std::string *)v131, (const std::string *)v135);\n    v12 = v135[0] - 24;\n    if ( (_UNKNOWN *)(v135[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v12 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v12, &v69);\n    }\n    v13 = v134[0] - 24;\n    if ( (_UNKNOWN *)(v134[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v13 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v13, &v69);\n    }\n    v14 = v133[0] - 24LL;\n    if ( (_UNKNOWN *)(v133[0] - 24LL) == &std::string::_Rep::_S_empty_rep_storage )\n      goto LABEL_32;\nLABEL_107:\n    if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v14 + 16)) <= 0 )\n      std::string::_Rep::_M_destroy(v14, &v69);\n    goto LABEL_32;\n  }\n  if ( v3 == 128 )\n  {\n    std::string::assign((std::string *)v131, "Client disconnected by peer", 0x1BuLL);\n    goto LABEL_32;\n  }\n  if ( v3 <= 0x80 )\n  {\n    if ( v3 == 32 )\n    {\n      std::string::assign((std::string *)v131, "A client was refused due to maximum connections number", 0x36uLL);\n      goto LABEL_32;\n    }\n    if ( v3 == 64 )\n    {\n      std::string::assign((std::string *)v131, "Client exception", 0x10uLL);\n      goto LABEL_32;\n    }\n    goto LABEL_29;\n  }\n  if ( v3 == 256 )\n  {\n    std::string::assign((std::string *)v131, "Client terminated", 0x11uLL);\n    goto LABEL_32;\n  }\n  if ( v3 != 512 )\n    goto LABEL_29;\n  IntToString((int)v136);\n  std::string::string((std::string *)v137, (const std::string *)v136);\n  std::string::append((std::string *)v137, " clients have been dropped bacause unresponsive", 0x2FuLL);\n  std::string::assign((std::string *)v131, (const std::string *)v137);\n  v41 = v137[0] - 24;\n  if ( (_UNKNOWN *)(v137[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v41 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v41, &v69);\n  }\n  v14 = v136[0] - 24LL;\n  if ( (_UNKNOWN *)(v136[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n    goto LABEL_107;\nLABEL_32:\n  SenderText((std::string *)v132, v56, v62, v70[0], v71, v72, v73);\n  std::string::string(a1, (const std::string *)v132);\n  std::string::append(a1, (const std::string *)v131);\n  v15 = v132[0] - 24;\n  if ( (_UNKNOWN *)(v132[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v15 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v15, &v69);\n  }\n  v16 = v131[0] - 24;\n  if ( (_UNKNOWN *)(v131[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n  {\nLABEL_34:\n    if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v16 + 16)) <= 0 )\n      std::string::_Rep::_M_destroy(v16, &v69);\n  }\nLABEL_57:\n  v24 = *(_QWORD *)v70 - 24LL;\n  if ( (_UNKNOWN *)(*(_QWORD *)v70 - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v24 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v24, &v69);\n  }\n  return a1;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker7DoEventEjttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::DoEvent(\n        TS7Worker *this,\n        unsigned int a2,\n        unsigned __int16 a3,\n        unsigned __int16 a4,\n        unsigned __int16 a5,\n        unsigned __int16 a6,\n        unsigned __int16 a7)\n{\n  return (*(__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD))(**((_QWORD **)this + 1084) + 24LL))(\n           *((_QWORD *)this + 1084),\n           *((unsigned int *)this + 15),\n           a2,\n           a3,\n           a4,\n           a5,\n           a6,\n           a7);\n}\n\n                        \n                        Function Name: _Z11NumToStringiij\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        std::string *__fastcall NumToString(std::string *a1, int a2, int a3, unsigned int a4)\n{\n  unsigned __int64 v4; // r13\n  char *v5; // rcx\n  char *v6; // rax\n  char *i; // rdx\n  char v8; // cl\n  unsigned __int64 j; // rsi\n  __int64 v10; // rbp\n  char v12; // [rsp+Fh] [rbp-79h] BYREF\n  __int64 v13[2]; // [rsp+10h] [rbp-78h] BYREF\n  char v14[56]; // [rsp+20h] [rbp-68h] BYREF\n  unsigned __int64 v15; // [rsp+58h] [rbp-30h]\n\n  v4 = a4;\n  v15 = __readfsqword(0x28u);\n  *(_QWORD *)a1 = (char *)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( (unsigned int)(a3 - 2) > 0x22 )\n  {\n    v14[0] = 0;\n  }\n  else\n  {\n    v5 = v14;\n    while ( 1 )\n    {\n      *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];\n      if ( !(a2 / a3) )\n        break;\n      a2 /= a3;\n    }\n    if ( a2 < 0 )\n      *v5++ = 45;\n    v6 = v5 - 1;\n    *v5 = 0;\n    for ( i = v14; v6 > i; ++i )\n    {\n      v8 = *v6;\n      *v6-- = *i;\n      *i = v8;\n    }\n  }\n  std::string::assign(a1, v14, strlen(v14));\n  if ( (_DWORD)v4 )\n  {\n    for ( j = *(_QWORD *)(*(_QWORD *)a1 - 24LL); j < v4; j = *(_QWORD *)(*(_QWORD *)a1 - 24LL) )\n    {\n      v13[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v13, j + 1);\n      std::string::append((std::string *)v13, "0", 1uLL);\n      std::string::append((std::string *)v13, a1);\n      std::string::assign(a1, (const std::string *)v13);\n      v10 = v13[0] - 24;\n      if ( (_UNKNOWN *)(v13[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v10 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v10, &v12);\n      }\n    }\n  }\n  return a1;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker15PerformGroupSZLEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformGroupSZL(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  __int64 v2; // rax\n  __int64 v3; // rdx\n  __int16 v4; // ax\n  _BYTE *v5; // rdx\n  __int64 v6; // rax\n  char v7; // al\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  unsigned __int16 v11; // ax\n  int v12; // edx\n  unsigned __int16 v13; // r8\n  unsigned __int16 v14; // cx\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = *((_QWORD *)this + 564);\n  *((_BYTE *)this + 4528) = 50;\n  *((_BYTE *)this + 4529) = 7;\n  *((_BYTE *)this + 8664) = 0;\n  *((_WORD *)this + 2265) = 0;\n  v3 = v2 + 10;\n  LOWORD(v2) = *(_WORD *)(v2 + 4);\n  *((_QWORD *)this + 1078) = v3;\n  *((_QWORD *)this + 1080) = (char *)this + 4538;\n  *((_WORD *)this + 2266) = v2;\n  *((_QWORD *)this + 1081) = (char *)this + 4550;\n  v4 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 0xCu);\n  v5 = (_BYTE *)*((_QWORD *)this + 1078);\n  *((_WORD *)this + 2267) = v4;\n  **((_BYTE **)this + 1080) = *v5;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 1LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 1LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 2LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 2LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 3LL) = 8;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 4LL) = 18;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 5LL) = -124;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 6LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 6LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 7LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 7LL);\n  v6 = *((_QWORD *)this + 1080);\n  *(_WORD *)(v6 + 8) = 0;\n  v7 = *(_BYTE *)(v6 + 6);\n  if ( v7 == 2 )\n  {\n    TS7Worker::SZLSystemState(this);\n    return 1LL;\n  }\n  if ( v7 != 1 )\n  {\n    TS7Worker::SZLNotAvailable(this);\n    return 1LL;\n  }\n  v9 = *((_QWORD *)this + 564);\n  v10 = *(_WORD *)(v9 + 22);\n  *((_QWORD *)this + 1079) = v9 + 18;\n  *((_DWORD *)this + 2164) = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n  v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));\n  *((_DWORD *)this + 2165) = v11;\n  v12 = *((_DWORD *)this + 2164);\n  if ( v12 == 404 )\n  {\n    if ( v11 == 100 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0194_IDX_0064, 270);\n      goto LABEL_17;\n    }\nLABEL_16:\n    TS7Worker::SZLNotAvailable(this);\n    goto LABEL_17;\n  }\n  if ( v12 <= 404 )\n  {\n    if ( v12 == 56 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0038_IDX_XXXX, 78);\n      goto LABEL_17;\n    }\n    if ( v12 <= 56 )\n    {\n      if ( v12 == 25 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0019_IDX_XXXX, 40);\n        goto LABEL_17;\n      }\n      if ( v12 > 25 )\n      {\n        if ( v12 == 35 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0023_IDX_XXXX, 228);\n          goto LABEL_17;\n        }\n        if ( v12 > 35 )\n        {\n          if ( v12 == 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0025_IDX_XXXX, 16);\n            goto LABEL_17;\n          }\n          if ( v12 < 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0024_IDX_XXXX, 92);\n            goto LABEL_17;\n          }\n          if ( v12 == 54 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0036_IDX_XXXX, 12);\n            goto LABEL_17;\n          }\n          if ( v12 == 55 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0037_IDX_XXXX, 60);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001B_IDX_XXXX, 132);\n            goto LABEL_17;\n          }\n          if ( v12 < 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001A_IDX_XXXX, 48);\n            goto LABEL_17;\n          }\n          if ( v12 == 28 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001C_IDX_XXXX, 352);\n            goto LABEL_17;\n          }\n          if ( v12 == 33 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0021_IDX_XXXX, 100);\n            goto LABEL_17;\n          }\n        }\n      }\n      else\n      {\n        if ( v12 == 19 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0013_IDX_XXXX, 192);\n          goto LABEL_17;\n        }\n        if ( v12 > 19 )\n        {\n          if ( v12 == 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0015_IDX_XXXX, 62);\n            goto LABEL_17;\n          }\n          if ( v12 < 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0014_IDX_XXXX, 84);\n            goto LABEL_17;\n          }\n          if ( v12 == 23 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0017_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 == 24 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0018_IDX_XXXX, 28);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 2 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0002_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 > 2 )\n          {\n            if ( v12 == 17 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0011_IDX_XXXX, 124);\n              goto LABEL_17;\n            }\n            if ( v12 == 18 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0012_IDX_XXXX, 58);\n              goto LABEL_17;\n            }\n          }\n          else if ( !v12 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0000_IDX_XXXX, 236);\n            goto LABEL_17;\n          }\n        }\n      }\n    }\n    else if ( v12 == 277 )\n    {\n      if ( v11 == 2048 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0115_IDX_0800, 22);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 277 )\n    {\n      if ( v12 == 293 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0000, 16);\n          goto LABEL_17;\n        }\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 293 )\n      {\n        if ( v12 == 306 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0003, 52);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0009, 52);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000A, 52);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000B, 52);\n              break;\n            case 0xCu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000C, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 > 306 )\n        {\n          if ( v12 == 311 )\n          {\n            if ( v11 == 2046 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0137_IDX_07FE, 60);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 372 )\n          {\n            switch ( v11 )\n            {\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0001, 16);\n                break;\n              case 4u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0004, 16);\n                break;\n              case 5u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0005, 16);\n                break;\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0006, 16);\n                break;\n              case 0xBu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000B, 16);\n                break;\n              case 0xCu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000C, 16);\n                break;\n              default:\n                goto LABEL_16;\n            }\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 305 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZL_ID131_IDX003(this);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0009, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 280 )\n      {\n        switch ( v11 )\n        {\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0001, 16);\n            goto LABEL_17;\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0000, 16);\n            goto LABEL_17;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0002, 16);\n            goto LABEL_17;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0003, 16);\n            goto LABEL_17;\n        }\n      }\n      else if ( v12 > 280 )\n      {\n        if ( v12 == 284 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0001, 46);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0002, 46);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0003, 46);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0004, 46);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0005, 46);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0007, 46);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0008, 46);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0009, 46);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000A, 46);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000B, 46);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 == 292 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0124_IDX_XXXX, 32);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 279 )\n      {\n        switch ( v11 )\n        {\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0000, 16);\n            break;\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0001, 16);\n            break;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0002, 16);\n            break;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0003, 16);\n            break;\n          case 4u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0004, 16);\n            break;\n          default:\n            goto LABEL_16;\n        }\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 149 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0095_IDX_XXXX, 52);\n        goto LABEL_17;\n      }\n      if ( v12 > 149 )\n      {\n        if ( v12 == 273 )\n        {\n          switch ( v11 )\n          {\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0006, 40);\n              goto LABEL_17;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0007, 40);\n              goto LABEL_17;\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0001, 40);\n              goto LABEL_17;\n          }\n        }\n        else if ( v12 > 273 )\n        {\n          if ( v12 == 274 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0100, 16);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0000, 14);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 275 && v11 == 1 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0113_IDX_0001, 48);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 160 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_00A0_IDX_XXXX, 212);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 116 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0074_IDX_XXXX, 40);\n          goto LABEL_17;\n        }\n        if ( v12 > 116 )\n        {\n          if ( v12 == 146 )\n          {\n            if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0092_IDX_0000, 28);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 148 && !v11 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0094_IDX_0000, 270);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 58 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_003A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3860 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F14_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3860 )\n  {\n    if ( v12 == 1684 )\n    {\n      if ( v11 == 100 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0694_IDX_0064, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 1684 )\n    {\n      if ( v12 == 3473 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D91_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 3473 )\n      {\n        if ( v12 == 3840 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F00_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 > 3840 )\n        {\n          if ( v12 == 3857 )\n          {\n            switch ( v11 )\n            {\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0006, 12);\n                goto LABEL_17;\n              case 7u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0007, 12);\n                goto LABEL_17;\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0001, 12);\n                goto LABEL_17;\n            }\n          }\n          else if ( v12 == 3858 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0100, 12);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0000, 12);\n              goto LABEL_17;\n            }\n          }\n        }\n        else if ( v12 == 3479 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D97_IDX_0000, 60);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 2593 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0A21_IDX_XXXX, 16);\n          goto LABEL_17;\n        }\n        if ( v12 > 2593 )\n        {\n          if ( v12 == 2705 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0A91_IDX_XXXX, 44);\n            goto LABEL_17;\n          }\n          if ( v12 == 3217 && v11 == 2046 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0C91_IDX_07FE, 28);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 1940 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0794_IDX_XXXX, 270);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 658 )\n    {\n      if ( !v11 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0292_IDX_0000, 28);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 658 )\n    {\n      if ( v12 == 1060 )\n      {\n        TS7Worker::SZL_ID424(this);\n        goto LABEL_17;\n      }\n      if ( v12 > 1060 )\n      {\n        if ( v12 == 1425 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0591_IDX_XXXX, 76);\n          goto LABEL_17;\n        }\n        if ( v12 == 1682 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0692_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 660 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0294_IDX_XXXX, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 546 )\n    {\n      if ( v11 == 20 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0014, 40);\n        goto LABEL_17;\n      }\n      if ( v11 > 0x14u )\n      {\n        switch ( v11 )\n        {\n          case \'P\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0050, 40);\n            goto LABEL_17;\n          case \'d\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0064, 40);\n            goto LABEL_17;\n          case \'(\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0028, 40);\n            goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0001, 40);\n          goto LABEL_17;\n        }\n        if ( v11 == 10 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_000A, 40);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 > 546 )\n    {\n      if ( v12 == 549 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0225_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 562 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0001, 52);\n          goto LABEL_17;\n        }\n        if ( v11 == 4 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0004, 52);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 416 )\n    {\n      switch ( v11 )\n      {\n        case 0u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0000, 12);\n          break;\n        case 1u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0001, 32);\n          break;\n        case 2u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0002, 52);\n          break;\n        case 3u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0003, 72);\n          break;\n        case 4u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0004, 92);\n          break;\n        case 5u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0005, 112);\n          break;\n        case 6u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0006, 132);\n          break;\n        case 7u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0007, 152);\n          break;\n        case 8u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0008, 172);\n          break;\n        case 9u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0009, 192);\n          break;\n        case 0xAu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000A, 212);\n          break;\n        case 0xBu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000B, 232);\n          break;\n        case 0xCu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000C, 252);\n          break;\n        case 0xDu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000D, 272);\n          break;\n        case 0xEu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000E, 292);\n          break;\n        case 0xFu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000F, 312);\n          break;\n        case 0x10u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0010, 332);\n          break;\n        case 0x11u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0011, 352);\n          break;\n        case 0x12u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0012, 372);\n          break;\n        case 0x13u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0013, 392);\n          break;\n        case 0x14u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0014, 412);\n          break;\n        case 0x15u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0015, 432);\n          break;\n        default:\n          goto LABEL_16;\n      }\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3894 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F36_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3894 )\n  {\n    if ( v12 == 3986 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F92_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3986 )\n    {\n      if ( v12 == 3989 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F95_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 > 3989 )\n      {\n        if ( v12 == 3994 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F9A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 == 4000 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0FA0_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 3988 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F94_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F38_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 < 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F37_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3898 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F3A_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3956 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F74_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3867 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F1B_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3867 )\n  {\n    if ( v12 == 3873 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F21_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3873 )\n    {\n      if ( v12 == 3875 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F23_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3877 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F25_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 3868 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F1C_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3864 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F18_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3864 )\n  {\n    if ( v12 == 3863 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F17_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3865 )\n    TS7Worker::SZLData(this, &SZL_ID_0F19_IDX_XXXX, 12);\n  else\n    TS7Worker::SZLData(this, &SZL_ID_0F1A_IDX_XXXX, 12);\nLABEL_17:\n  v13 = *((_WORD *)this + 4330);\n  v14 = *((_WORD *)this + 4328);\n  if ( *((_BYTE *)this + 8664) )\n    TS7Worker::DoEvent(this, 0x100000u, 0, v14, v13, 0, 0);\n  else\n    TS7Worker::DoEvent(this, 0x100000u, 0xCu, v14, v13, 0, 0);\n  return 1LL;\n}\n\n                        \n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (29, 30) appear to "contaminate" the global variables aZyxwvutsrqponm and local variables a7, var_36, var_68, v25, a5, v23, v115, a2, a4, a3, a2, v5, v12, v14, v10, v1, v9, v11, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (29, 30) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:48,320 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
int, length
```
2025-03-08 21:22:50,321 - my_text.py:618  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (31, 32)  has some situations that affect the operation of the relevant code\n\n                        Function Name: _ZN16TCustomMsgServer7DoEventEijttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        int __fastcall TCustomMsgServer::DoEvent(\n        TCustomMsgServer *this,\n        int a2,\n        int a3,\n        __int16 a4,\n        __int16 a5,\n        __int16 a6,\n        unsigned __int16 a7,\n        unsigned __int16 a8)\n{\n  bool v9; // zf\n  int v10; // edi\n  int result; // eax\n  bool v12; // bp\n  bool v13; // r14\n  void (__fastcall *v14)(_QWORD, time_t *, __int64); // rax\n  time_t timer; // [rsp+30h] [rbp-48h] BYREF\n  int v20; // [rsp+38h] [rbp-40h]\n  int v21; // [rsp+3Ch] [rbp-3Ch]\n  __int16 v22; // [rsp+40h] [rbp-38h]\n  __int16 v23; // [rsp+42h] [rbp-36h]\n  __int16 v24; // [rsp+44h] [rbp-34h]\n  unsigned __int16 v25; // [rsp+46h] [rbp-32h]\n  unsigned __int16 v26; // [rsp+48h] [rbp-30h]\n\n  v9 = *((_BYTE *)this + 80) == 0;\n  v10 = *((_DWORD *)this + 2074);\n  result = *((_DWORD *)this + 2075);\n  if ( v9 )\n  {\n    v12 = (v10 & a3) != 0;\n    v13 = (result & a3) != 0;\n    if ( (result & a3) != 0 || (v10 & a3) != 0 )\n    {\n      pthread_mutex_lock(*((pthread_mutex_t **)this + 11));\n      time(&timer);\n      v25 = a7;\n      v20 = a2;\n      v21 = a3;\n      v22 = a4;\n      v23 = a5;\n      v24 = a6;\n      v26 = a8;\n      if ( v13 )\n      {\n        v14 = (void (__fastcall *)(_QWORD, time_t *, __int64))*((_QWORD *)this + 8);\n        if ( v14 )\n          v14(*((_QWORD *)this + 9), &timer, 26LL);\n      }\n      if ( v12 )\n        TMsgEventQueue::Insert(*((TMsgEventQueue **)this + 7), &timer);\n      return pthread_mutex_unlock(*((pthread_mutex_t **)this + 11));\n    }\n  }\n  return result;\n}\n\n                        \n                        Function Name: _Z10EvtSrvTextR9TSrvEvent\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        std::string *__fastcall EvtSrvText(std::string *a1, __int64 a2)\n{\n  unsigned int v3; // esi\n  __int64 v4; // r13\n  __int64 v5; // r13\n  __int64 v6; // r13\n  __int64 v7; // r13\n  __int64 v8; // r13\n  __int64 v9; // r13\n  __int64 v10; // r13\n  __int64 v11; // r13\n  __int64 v12; // r14\n  __int64 v13; // r14\n  __int64 v14; // r14\n  __int64 v15; // rbp\n  __int64 v16; // rbp\n  unsigned __int16 v17; // ax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r13\n  __int64 v21; // r13\n  __int64 v22; // r13\n  __int64 v23; // r13\n  __int64 v24; // rbp\n  __int64 v26; // r14\n  __int64 v27; // r14\n  __int64 v28; // r14\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r13\n  __int64 v32; // r13\n  __int64 v33; // r13\n  __int64 v34; // r14\n  __int64 v35; // r13\n  __int64 v36; // r13\n  __int64 v37; // r14\n  __int64 v38; // r14\n  __int64 v39; // r13\n  __int16 v40; // ax\n  __int64 v41; // r14\n  __int64 v42; // r13\n  __int64 v43; // r13\n  __int64 v44; // r13\n  __int16 v45; // dx\n  __int64 v46; // r14\n  __int64 v47; // r14\n  __int64 v48; // r14\n  __int64 v49; // r14\n  __int64 v50; // r13\n  __int64 v51; // r13\n  __int64 v52; // r13\n  __int64 v53; // r13\n  __int64 v54; // r13\n  __int64 v55; // r13\n  int v56; // [rsp+0h] [rbp-468h]\n  int v57; // [rsp+0h] [rbp-468h]\n  int v58; // [rsp+0h] [rbp-468h]\n  char v59; // [rsp+5h] [rbp-463h] BYREF\n  char v60; // [rsp+6h] [rbp-462h] BYREF\n  char v61; // [rsp+7h] [rbp-461h] BYREF\n  char v62; // [rsp+8h] [rbp-460h] BYREF\n  char v63; // [rsp+9h] [rbp-45Fh] BYREF\n  char v64; // [rsp+Ah] [rbp-45Eh] BYREF\n  char v65; // [rsp+Bh] [rbp-45Dh] BYREF\n  char v66; // [rsp+Ch] [rbp-45Ch] BYREF\n  char v67; // [rsp+Dh] [rbp-45Bh] BYREF\n  char v68; // [rsp+Eh] [rbp-45Ah] BYREF\n  char v69; // [rsp+Fh] [rbp-459h] BYREF\n  int v70[2]; // [rsp+10h] [rbp-458h] BYREF\n  char v71; // [rsp+18h] [rbp-450h]\n  __int64 v72; // [rsp+20h] [rbp-448h] BYREF\n  char v73; // [rsp+28h] [rbp-440h]\n  __int64 v74; // [rsp+30h] [rbp-438h] BYREF\n  char v75; // [rsp+38h] [rbp-430h]\n  __int64 v76[2]; // [rsp+40h] [rbp-428h] BYREF\n  __int64 v77[2]; // [rsp+50h] [rbp-418h] BYREF\n  __int64 v78[2]; // [rsp+60h] [rbp-408h] BYREF\n  __int64 v79[2]; // [rsp+70h] [rbp-3F8h] BYREF\n  __int64 v80[2]; // [rsp+80h] [rbp-3E8h] BYREF\n  __int64 v81[2]; // [rsp+90h] [rbp-3D8h] BYREF\n  __int64 v82[2]; // [rsp+A0h] [rbp-3C8h] BYREF\n  __int64 v83[2]; // [rsp+B0h] [rbp-3B8h] BYREF\n  __int64 v84[2]; // [rsp+C0h] [rbp-3A8h] BYREF\n  __int64 v85[2]; // [rsp+D0h] [rbp-398h] BYREF\n  __int64 v86[2]; // [rsp+E0h] [rbp-388h] BYREF\n  __int64 v87[2]; // [rsp+F0h] [rbp-378h] BYREF\n  _QWORD v88[2]; // [rsp+100h] [rbp-368h] BYREF\n  __int64 v89[2]; // [rsp+110h] [rbp-358h] BYREF\n  __int64 v90[2]; // [rsp+120h] [rbp-348h] BYREF\n  __int64 v91[2]; // [rsp+130h] [rbp-338h] BYREF\n  __int64 v92[2]; // [rsp+140h] [rbp-328h] BYREF\n  __int64 v93[2]; // [rsp+150h] [rbp-318h] BYREF\n  __int64 v94[2]; // [rsp+160h] [rbp-308h] BYREF\n  __int64 v95[2]; // [rsp+170h] [rbp-2F8h] BYREF\n  __int64 v96[2]; // [rsp+180h] [rbp-2E8h] BYREF\n  __int64 v97[2]; // [rsp+190h] [rbp-2D8h] BYREF\n  _QWORD v98[2]; // [rsp+1A0h] [rbp-2C8h] BYREF\n  __int64 v99[2]; // [rsp+1B0h] [rbp-2B8h] BYREF\n  __int64 v100[2]; // [rsp+1C0h] [rbp-2A8h] BYREF\n  __int64 v101[2]; // [rsp+1D0h] [rbp-298h] BYREF\n  __int64 v102[2]; // [rsp+1E0h] [rbp-288h] BYREF\n  _QWORD v103[2]; // [rsp+1F0h] [rbp-278h] BYREF\n  __int64 v104[2]; // [rsp+200h] [rbp-268h] BYREF\n  _QWORD v105[2]; // [rsp+210h] [rbp-258h] BYREF\n  __int64 v106[2]; // [rsp+220h] [rbp-248h] BYREF\n  _QWORD v107[2]; // [rsp+230h] [rbp-238h] BYREF\n  __int64 v108[2]; // [rsp+240h] [rbp-228h] BYREF\n  _QWORD v109[2]; // [rsp+250h] [rbp-218h] BYREF\n  __int64 v110[2]; // [rsp+260h] [rbp-208h] BYREF\n  __int64 v111[2]; // [rsp+270h] [rbp-1F8h] BYREF\n  _QWORD v112[2]; // [rsp+280h] [rbp-1E8h] BYREF\n  __int64 v113[2]; // [rsp+290h] [rbp-1D8h] BYREF\n  __int64 v114[2]; // [rsp+2A0h] [rbp-1C8h] BYREF\n  __int64 v115[2]; // [rsp+2B0h] [rbp-1B8h] BYREF\n  __int64 v116[2]; // [rsp+2C0h] [rbp-1A8h] BYREF\n  __int64 v117[2]; // [rsp+2D0h] [rbp-198h] BYREF\n  __int64 v118[2]; // [rsp+2E0h] [rbp-188h] BYREF\n  __int64 v119[2]; // [rsp+2F0h] [rbp-178h] BYREF\n  __int64 v120[2]; // [rsp+300h] [rbp-168h] BYREF\n  __int64 v121[2]; // [rsp+310h] [rbp-158h] BYREF\n  __int64 v122[2]; // [rsp+320h] [rbp-148h] BYREF\n  _QWORD v123[2]; // [rsp+330h] [rbp-138h] BYREF\n  __int64 v124[2]; // [rsp+340h] [rbp-128h] BYREF\n  __int64 v125[2]; // [rsp+350h] [rbp-118h] BYREF\n  __int64 v126[2]; // [rsp+360h] [rbp-108h] BYREF\n  __int64 v127[2]; // [rsp+370h] [rbp-F8h] BYREF\n  __int64 v128[2]; // [rsp+380h] [rbp-E8h] BYREF\n  __int64 v129[2]; // [rsp+390h] [rbp-D8h] BYREF\n  __int64 v130[2]; // [rsp+3A0h] [rbp-C8h] BYREF\n  __int64 v131[2]; // [rsp+3B0h] [rbp-B8h] BYREF\n  __int64 v132[2]; // [rsp+3C0h] [rbp-A8h] BYREF\n  _QWORD v133[2]; // [rsp+3D0h] [rbp-98h] BYREF\n  __int64 v134[2]; // [rsp+3E0h] [rbp-88h] BYREF\n  __int64 v135[2]; // [rsp+3F0h] [rbp-78h] BYREF\n  _QWORD v136[2]; // [rsp+400h] [rbp-68h] BYREF\n  __int64 v137[2]; // [rsp+410h] [rbp-58h] BYREF\n  __int64 v138[2]; // [rsp+420h] [rbp-48h] BYREF\n  __int64 v139[2]; // [rsp+430h] [rbp-38h] BYREF\n\n  v3 = *(_DWORD *)(a2 + 12);\n  *(_QWORD *)v70 = (char *)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( v3 > 0x8000 )\n  {\n    if ( v3 == 0x200000 )\n    {\n      if ( *(_WORD *)(a2 + 18) == 1 )\n        std::string::string(v93, "System clock read requested", &v64);\n      else\n        std::string::string(v93, "System clock write requested", &v63);\n      std::string::assign((std::string *)v70, (const std::string *)v93);\n      v6 = v93[0] - 24;\n      if ( (_UNKNOWN *)(v93[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_56;\n      goto LABEL_101;\n    }\n    if ( v3 <= 0x200000 )\n    {\n      if ( v3 == 0x40000 )\n      {\n        TxtDataResult((std::string *)v86, v56, v62, v70[0], v71);\n        TxtStartSize((std::string *)v84, v58, v62, v70[0], v71, v72, v73, v74, v75);\n        TxtArea((std::string *)v82);\n        v83[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v83, *(_QWORD *)(v82[0] - 24) + 15LL);\n        std::string::append((std::string *)v83, "Write request, ", 0xFuLL);\n        std::string::append((std::string *)v83, (const std::string *)v82);\n        std::string::string((std::string *)v85, (const std::string *)v83);\n        std::string::append((std::string *)v85, (const std::string *)v84);\n        std::string::string((std::string *)v87, (const std::string *)v85);\n        std::string::append((std::string *)v87, (const std::string *)v86);\n        std::string::assign((std::string *)v70, (const std::string *)v87);\n        v19 = v87[0] - 24;\n        if ( (_UNKNOWN *)(v87[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v19 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v19, &v69);\n        }\n        v20 = v85[0] - 24;\n        if ( (_UNKNOWN *)(v85[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v20 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v20, &v69);\n        }\n        v21 = v83[0] - 24;\n        if ( (_UNKNOWN *)(v83[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v21 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v21, &v69);\n        }\n        v22 = v82[0] - 24;\n        if ( (_UNKNOWN *)(v82[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v22 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v22, &v69);\n        }\n        v23 = v84[0] - 24;\n        if ( (_UNKNOWN *)(v84[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v23 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v23, &v69);\n        }\n        v6 = v86[0] - 24;\n        if ( (_UNKNOWN *)(v86[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_101;\n        goto LABEL_56;\n      }\n      if ( v3 > 0x40000 )\n      {\n        if ( v3 == 0x80000 )\n        {\n          IntToString((int)v88);\n          v89[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v89, *(_QWORD *)(v88[0] - 24LL) + 34LL);\n          std::string::append((std::string *)v89, "The client requires a PDU size of ", 0x22uLL);\n          std::string::append((std::string *)v89, (const std::string *)v88);\n          std::string::string((std::string *)v90, (const std::string *)v89);\n          std::string::append((std::string *)v90, " bytes", 6uLL);\n          std::string::assign((std::string *)v70, (const std::string *)v90);\n          v35 = v90[0] - 24;\n          if ( (_UNKNOWN *)(v90[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v35 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v35, &v69);\n          }\n          v36 = v89[0] - 24;\n          if ( (_UNKNOWN *)(v89[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v36 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v36, &v69);\n          }\n          v6 = v88[0] - 24LL;\n          if ( (_UNKNOWN *)(v88[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n        if ( v3 == 0x100000 )\n        {\n          NumToString((std::string *)v118, *(unsigned __int16 *)(a2 + 20), 0x10u);\n          NumToString((std::string *)v115, *(unsigned __int16 *)(a2 + 18), 0x10u);\n          v116[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v116, *(_QWORD *)(v115[0] - 24) + 23LL);\n          std::string::append((std::string *)v116, "Read SZL request, ID:0x", 0x17uLL);\n          std::string::append((std::string *)v116, (const std::string *)v115);\n          std::string::string((std::string *)v117, (const std::string *)v116);\n          std::string::append((std::string *)v117, " INDEX:0x", 9uLL);\n          std::string::string((std::string *)v114, (const std::string *)v117);\n          std::string::append((std::string *)v114, (const std::string *)v118);\n          v30 = v117[0] - 24;\n          if ( (_UNKNOWN *)(v117[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v30 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v30, &v69);\n          }\n          v31 = v116[0] - 24;\n          if ( (_UNKNOWN *)(v116[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v31 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v31, &v69);\n          }\n          v32 = v115[0] - 24;\n          if ( (_UNKNOWN *)(v115[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v32 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v32, &v69);\n          }\n          v33 = v118[0] - 24;\n          if ( (_UNKNOWN *)(v118[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v33 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v33, &v69);\n          }\n          if ( *(_WORD *)(a2 + 16) )\n          {\n            std::string::string((std::string *)v92, (const std::string *)v114);\n            std::string::append((std::string *)v92, " --> NOT AVAILABLE", 0x12uLL);\n          }\n          else\n          {\n            std::string::string((std::string *)v92, (const std::string *)v114);\n            std::string::append((std::string *)v92, " --> OK", 7uLL);\n          }\n          v34 = v114[0] - 24;\n          if ( (_UNKNOWN *)(v114[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v34 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v34, &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v92);\n          v6 = v92[0] - 24;\n          if ( (_UNKNOWN *)(v92[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      else\n      {\n        if ( v3 == (_DWORD)&stru_10000 )\n        {\n          switch ( *(_WORD *)(a2 + 16) )\n          {\n            case 1:\n              IntToString((int)v103);\n              v102[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v102, *(_QWORD *)(v103[0] - 24LL) + 12LL);\n              std::string::append((std::string *)v102, "Fragment of ", 0xCuLL);\n              std::string::append((std::string *)v102, (const std::string *)v103);\n              std::string::string((std::string *)&v72, (const std::string *)v102);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v47 = v102[0] - 24;\n              if ( (_UNKNOWN *)(v102[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v47 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v47, &v69);\n              }\n              v38 = v103[0] - 24LL;\n              if ( (_UNKNOWN *)(v103[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 2:\n              IntToString((int)v105);\n              v104[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v104, *(_QWORD *)(v105[0] - 24LL) + 17LL);\n              std::string::append((std::string *)v104, "Malformed PDU of ", 0x11uLL);\n              std::string::append((std::string *)v104, (const std::string *)v105);\n              std::string::string((std::string *)&v72, (const std::string *)v104);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v46 = v104[0] - 24;\n              if ( (_UNKNOWN *)(v104[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v46 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v46, &v69);\n              }\n              v38 = v105[0] - 24LL;\n              if ( (_UNKNOWN *)(v105[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 3:\n              IntToString((int)v107);\n              v106[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v106, *(_QWORD *)(v107[0] - 24LL) + 18LL);\n              std::string::append((std::string *)v106, "Message of sparse ", 0x12uLL);\n              std::string::append((std::string *)v106, (const std::string *)v107);\n              std::string::string((std::string *)&v72, (const std::string *)v106);\n              std::string::append((std::string *)&v72, " bytes rejected", 0xFuLL);\n              v48 = v106[0] - 24;\n              if ( (_UNKNOWN *)(v106[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v48 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v48, &v69);\n              }\n              v38 = v107[0] - 24LL;\n              if ( (_UNKNOWN *)(v107[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n                goto LABEL_127;\n              break;\n            case 4:\n              std::string::string(&v72, "Cannot handle this PDU", &v59);\n              break;\n            case 5:\n              v45 = *(_WORD *)(a2 + 18);\n              if ( v45 == 65 )\n              {\n                std::string::string(&v72, "Function group programmer not yet implemented", &v61);\n              }\n              else\n              {\n                if ( v45 != 66 )\n                  goto LABEL_86;\n                std::string::string(&v72, "Function group cyclic data not yet implemented", &v60);\n              }\n              break;\n            default:\nLABEL_86:\n              IntToString((int)v109);\n              v108[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n              std::string::reserve((std::string *)v108, *(_QWORD *)(v109[0] - 24LL) + 21LL);\n              std::string::append((std::string *)v108, "Unknown Return code (", 0x15uLL);\n              std::string::append((std::string *)v108, (const std::string *)v109);\n              std::string::string((std::string *)&v72, (const std::string *)v108);\n              std::string::append((std::string *)&v72, ")", 1uLL);\n              v37 = v108[0] - 24;\n              if ( (_UNKNOWN *)(v108[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v37 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v37, &v69);\n              }\n              v38 = v109[0] - 24LL;\n              if ( (_UNKNOWN *)(v109[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n              {\nLABEL_127:\n                if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v38 + 16)) <= 0 )\n                  std::string::_Rep::_M_destroy(v38, &v69);\n              }\n              break;\n          }\n          v74 = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)&v74, *(_QWORD *)(v72 - 24) + 15LL);\n          std::string::append((std::string *)&v74, "PDU incoming : ", 0xFuLL);\n          std::string::append((std::string *)&v74, (const std::string *)&v72);\n          std::string::assign((std::string *)v70, (const std::string *)&v74);\n          v39 = v74 - 24;\n          if ( (_UNKNOWN *)(v74 - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v39 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v39, &v69);\n          }\n          v6 = v72 - 24;\n          if ( (_UNKNOWN *)(v72 - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n        if ( v3 == (_DWORD)&loc_20000 )\n        {\n          TxtDataResult((std::string *)v80, v56, v62, v70[0], v71);\n          TxtStartSize((std::string *)v78, v57, v62, v70[0], v71, v72, v73, v74, v75);\n          TxtArea((std::string *)v76);\n          v77[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n          std::string::reserve((std::string *)v77, *(_QWORD *)(v76[0] - 24) + 14LL);\n          std::string::append((std::string *)v77, "Read request, ", 0xEuLL);\n          std::string::append((std::string *)v77, (const std::string *)v76);\n          std::string::string((std::string *)v79, (const std::string *)v77);\n          std::string::append((std::string *)v79, (const std::string *)v78);\n          std::string::string((std::string *)v81, (const std::string *)v79);\n          std::string::append((std::string *)v81, (const std::string *)v80);\n          std::string::assign((std::string *)v70, (const std::string *)v81);\n          v7 = v81[0] - 24;\n          if ( (_UNKNOWN *)(v81[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v7 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v7, &v69);\n          }\n          v8 = v79[0] - 24;\n          if ( (_UNKNOWN *)(v79[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v8 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v8, &v69);\n          }\n          v9 = v77[0] - 24;\n          if ( (_UNKNOWN *)(v77[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v9 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v9, &v69);\n          }\n          v10 = v76[0] - 24;\n          if ( (_UNKNOWN *)(v76[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v10 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v10, &v69);\n          }\n          v11 = v78[0] - 24;\n          if ( (_UNKNOWN *)(v78[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v11 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v11, &v69);\n          }\n          v6 = v80[0] - 24;\n          if ( (_UNKNOWN *)(v80[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      goto LABEL_8;\n    }\n    if ( v3 != 0x1000000 )\n    {\n      if ( v3 > 0x1000000 )\n      {\n        if ( v3 == 0x2000000 )\n        {\n          v40 = *(_WORD *)(a2 + 18);\n          if ( v40 == 1 )\n          {\n            std::string::string(v97, "Security request : Set session password --> OK", &v67);\n          }\n          else if ( v40 == 2 )\n          {\n            std::string::string(v97, "Security request : Clear session password --> OK", &v68);\n          }\n          else\n          {\n            std::string::string(v97, "Security request : Unknown Subfunction", &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v97);\n          v6 = v97[0] - 24;\n          if ( (_UNKNOWN *)(v97[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n        if ( v3 == 0x4000000 )\n        {\n          std::string::string(v110, "CPU Control request : ", &v62);\n          switch ( (unsigned __int16)v91 )\n          {\n            case 0u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Unknown", 7uLL);\n              break;\n            case 1u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Cold START --> OK", 0x11uLL);\n              break;\n            case 2u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Warm START --> OK", 0x11uLL);\n              break;\n            case 3u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "STOP --> OK", 0xBuLL);\n              break;\n            case 4u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Memory compress --> OK", 0x16uLL);\n              break;\n            case 5u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Copy Ram to Rom --> OK", 0x16uLL);\n              break;\n            case 6u:\n              std::string::string((std::string *)v91, (const std::string *)v110);\n              std::string::append((std::string *)v91, "Block Insert or Delete --> OK", 0x1DuLL);\n              break;\n            default:\n              IntToString((int)v112);\n              std::string::string((std::string *)v111, (const std::string *)v110);\n              std::string::append((std::string *)v111, "Unknown control code (", 0x16uLL);\n              std::string::string((std::string *)v113, (const std::string *)v111);\n              std::string::append((std::string *)v113, (const std::string *)v112);\n              std::string::string((std::string *)v91, (const std::string *)v113);\n              std::string::append((std::string *)v91, ")", 1uLL);\n              v26 = v113[0] - 24;\n              if ( (_UNKNOWN *)(v113[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v26 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v26, &v69);\n              }\n              v27 = v111[0] - 24;\n              if ( (_UNKNOWN *)(v111[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v27 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v27, &v69);\n              }\n              v28 = v112[0] - 24LL;\n              if ( (_UNKNOWN *)(v112[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n                && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v28 + 16)) <= 0 )\n              {\n                std::string::_Rep::_M_destroy(v28, &v69);\n              }\n              break;\n          }\n          v29 = v110[0] - 24;\n          if ( (_UNKNOWN *)(v110[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n            && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v29 + 16)) <= 0 )\n          {\n            std::string::_Rep::_M_destroy(v29, &v69);\n          }\n          std::string::assign((std::string *)v70, (const std::string *)v91);\n          v6 = v91[0] - 24;\n          if ( (_UNKNOWN *)(v91[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_101;\n          goto LABEL_56;\n        }\n      }\n      else\n      {\n        if ( v3 == 0x400000 )\n        {\n          std::string::string(v94, "Block upload requested --> NOT PERFORMED (due to invalid security level)", &v65);\n          std::string::assign((std::string *)v70, (const std::string *)v94);\n          v6 = v94[0] - 24;\n          if ( (_UNKNOWN *)(v94[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n        if ( v3 == 0x800000 )\n        {\n          std::string::string(v95, "Block download requested --> NOT PERFORMED (due to invalid security level)", &v66);\n          std::string::assign((std::string *)v70, (const std::string *)v95);\n          v6 = v95[0] - 24;\n          if ( (_UNKNOWN *)(v95[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n            goto LABEL_56;\n          goto LABEL_101;\n        }\n      }\nLABEL_8:\n      IntToString((int)v98);\n      v99[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v99, *(_QWORD *)(v98[0] - 24LL) + 15LL);\n      std::string::append((std::string *)v99, "Unknown event (", 0xFuLL);\n      std::string::append((std::string *)v99, (const std::string *)v98);\n      std::string::string((std::string *)v100, (const std::string *)v99);\n      std::string::append((std::string *)v100, ")", 1uLL);\n      std::string::assign((std::string *)v70, (const std::string *)v100);\n      v4 = v100[0] - 24;\n      if ( (_UNKNOWN *)(v100[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v4 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v4, &v69);\n      }\n      v5 = v99[0] - 24;\n      if ( (_UNKNOWN *)(v99[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v5 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v5, &v69);\n      }\n      v6 = v98[0] - 24LL;\n      if ( (_UNKNOWN *)(v98[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n      {\nLABEL_101:\n        if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v6 + 16)) <= 0 )\n          std::string::_Rep::_M_destroy(v6, &v69);\n      }\nLABEL_56:\n      SenderText((std::string *)v101, v56, v62, v70[0], v71, v72, v73);\n      std::string::string(a1, (const std::string *)v101);\n      std::string::append(a1, (const std::string *)v70);\n      v16 = v101[0] - 24;\n      if ( (_UNKNOWN *)(v101[0] - 24) == &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_57;\n      goto LABEL_34;\n    }\n    v17 = *(_WORD *)(a2 + 18);\n    v119[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    if ( v17 == 2 )\n    {\n      StrBlockType((std::string *)v128);\n      v129[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v129, *(_QWORD *)(v128[0] - 24) + 14LL);\n      std::string::append((std::string *)v129, "Block of type ", 0xEuLL);\n      std::string::append((std::string *)v129, (const std::string *)v128);\n      std::string::string((std::string *)v130, (const std::string *)v129);\n      std::string::append((std::string *)v130, " list requested (start sequence)", 0x20uLL);\n      std::string::assign((std::string *)v119, (const std::string *)v130);\n      v42 = v130[0] - 24;\n      if ( (_UNKNOWN *)(v130[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v42 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v42, &v69);\n      }\n      v43 = v129[0] - 24;\n      if ( (_UNKNOWN *)(v129[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v43 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v43, &v69);\n      }\n      v44 = v128[0] - 24;\n      if ( (_UNKNOWN *)(v128[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n        goto LABEL_118;\n    }\n    else\n    {\n      if ( v17 <= 2u )\n      {\n        if ( v17 == 1 )\n          std::string::assign((std::string *)v119, "Block list requested", 0x14uLL);\n        goto LABEL_45;\n      }\n      if ( v17 == 3 )\n      {\n        StrBlockType((std::string *)v125);\n        v126[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v126, *(_QWORD *)(v125[0] - 24) + 14LL);\n        std::string::append((std::string *)v126, "Block of type ", 0xEuLL);\n        std::string::append((std::string *)v126, (const std::string *)v125);\n        std::string::string((std::string *)v127, (const std::string *)v126);\n        std::string::append((std::string *)v127, " list requested (next part)", 0x1BuLL);\n        std::string::assign((std::string *)v119, (const std::string *)v127);\n        v54 = v127[0] - 24;\n        if ( (_UNKNOWN *)(v127[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v54 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v54, &v69);\n        }\n        v55 = v126[0] - 24;\n        if ( (_UNKNOWN *)(v126[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v55 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v55, &v69);\n        }\n        v44 = v125[0] - 24;\n        if ( (_UNKNOWN *)(v125[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_118;\n      }\n      else if ( v17 == 4 )\n      {\n        IntToString((int)v123);\n        StrBlockType((std::string *)v120);\n        v121[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v121, *(_QWORD *)(v120[0] - 24) + 21LL);\n        std::string::append((std::string *)v121, "Block info requested ", 0x15uLL);\n        std::string::append((std::string *)v121, (const std::string *)v120);\n        std::string::string((std::string *)v122, (const std::string *)v121);\n        std::string::append((std::string *)v122, " ", 1uLL);\n        std::string::string((std::string *)v124, (const std::string *)v122);\n        std::string::append((std::string *)v124, (const std::string *)v123);\n        std::string::assign((std::string *)v119, (const std::string *)v124);\n        v50 = v124[0] - 24;\n        if ( (_UNKNOWN *)(v124[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v50 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v50, &v69);\n        }\n        v51 = v122[0] - 24;\n        if ( (_UNKNOWN *)(v122[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v51 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v51, &v69);\n        }\n        v52 = v121[0] - 24;\n        if ( (_UNKNOWN *)(v121[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v52 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v52, &v69);\n        }\n        v53 = v120[0] - 24;\n        if ( (_UNKNOWN *)(v120[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v53 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v53, &v69);\n        }\n        v44 = v123[0] - 24LL;\n        if ( (_UNKNOWN *)(v123[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n        {\nLABEL_118:\n          if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v44 + 16)) <= 0 )\n            std::string::_Rep::_M_destroy(v44, &v69);\n        }\n      }\n    }\nLABEL_45:\n    if ( *(_WORD *)(a2 + 16) )\n    {\n      std::string::string((std::string *)v96, (const std::string *)v119);\n      std::string::append((std::string *)v96, " --> NOT AVAILABLE", 0x12uLL);\n    }\n    else\n    {\n      std::string::string((std::string *)v96, (const std::string *)v119);\n      std::string::append((std::string *)v96, " --> OK", 7uLL);\n    }\n    v18 = v119[0] - 24;\n    if ( (_UNKNOWN *)(v119[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v18 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v18, &v69);\n    }\n    std::string::assign((std::string *)v70, (const std::string *)v96);\n    v6 = v96[0] - 24;\n    if ( (_UNKNOWN *)(v96[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n      goto LABEL_101;\n    goto LABEL_56;\n  }\n  v131[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( v3 == 16 )\n  {\n    std::string::assign((std::string *)v131, "Client refused", 0xEuLL);\n    goto LABEL_32;\n  }\n  if ( v3 <= 0x10 )\n  {\n    if ( v3 == 2 )\n    {\n      std::string::assign((std::string *)v131, "stopped", 7uLL);\n      goto LABEL_32;\n    }\n    if ( v3 <= 2 )\n    {\n      if ( v3 == 1 )\n      {\n        std::string::assign((std::string *)v131, "started", 7uLL);\n        goto LABEL_32;\n      }\n    }\n    else\n    {\n      if ( v3 == 4 )\n      {\n        TcpTextOf((std::string *)v138);\n        v139[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n        std::string::reserve((std::string *)v139, *(_QWORD *)(v138[0] - 24) + 39LL);\n        std::string::append((std::string *)v139, "Cannot start listener - Socket Error : ", 0x27uLL);\n        std::string::append((std::string *)v139, (const std::string *)v138);\n        std::string::assign((std::string *)v131, (const std::string *)v139);\n        v49 = v139[0] - 24;\n        if ( (_UNKNOWN *)(v139[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n          && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v49 + 16)) <= 0 )\n        {\n          std::string::_Rep::_M_destroy(v49, &v69);\n        }\n        v14 = v138[0] - 24;\n        if ( (_UNKNOWN *)(v138[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n          goto LABEL_107;\n        goto LABEL_32;\n      }\n      if ( v3 == 8 )\n      {\n        std::string::assign((std::string *)v131, "Client added", 0xCuLL);\n        goto LABEL_32;\n      }\n    }\nLABEL_29:\n    IntToString((int)v133);\n    v134[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n    std::string::reserve((std::string *)v134, *(_QWORD *)(v133[0] - 24LL) + 15LL);\n    std::string::append((std::string *)v134, "Unknown event (", 0xFuLL);\n    std::string::append((std::string *)v134, (const std::string *)v133);\n    std::string::string((std::string *)v135, (const std::string *)v134);\n    std::string::append((std::string *)v135, ")", 1uLL);\n    std::string::assign((std::string *)v131, (const std::string *)v135);\n    v12 = v135[0] - 24;\n    if ( (_UNKNOWN *)(v135[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v12 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v12, &v69);\n    }\n    v13 = v134[0] - 24;\n    if ( (_UNKNOWN *)(v134[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n      && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v13 + 16)) <= 0 )\n    {\n      std::string::_Rep::_M_destroy(v13, &v69);\n    }\n    v14 = v133[0] - 24LL;\n    if ( (_UNKNOWN *)(v133[0] - 24LL) == &std::string::_Rep::_S_empty_rep_storage )\n      goto LABEL_32;\nLABEL_107:\n    if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v14 + 16)) <= 0 )\n      std::string::_Rep::_M_destroy(v14, &v69);\n    goto LABEL_32;\n  }\n  if ( v3 == 128 )\n  {\n    std::string::assign((std::string *)v131, "Client disconnected by peer", 0x1BuLL);\n    goto LABEL_32;\n  }\n  if ( v3 <= 0x80 )\n  {\n    if ( v3 == 32 )\n    {\n      std::string::assign((std::string *)v131, "A client was refused due to maximum connections number", 0x36uLL);\n      goto LABEL_32;\n    }\n    if ( v3 == 64 )\n    {\n      std::string::assign((std::string *)v131, "Client exception", 0x10uLL);\n      goto LABEL_32;\n    }\n    goto LABEL_29;\n  }\n  if ( v3 == 256 )\n  {\n    std::string::assign((std::string *)v131, "Client terminated", 0x11uLL);\n    goto LABEL_32;\n  }\n  if ( v3 != 512 )\n    goto LABEL_29;\n  IntToString((int)v136);\n  std::string::string((std::string *)v137, (const std::string *)v136);\n  std::string::append((std::string *)v137, " clients have been dropped bacause unresponsive", 0x2FuLL);\n  std::string::assign((std::string *)v131, (const std::string *)v137);\n  v41 = v137[0] - 24;\n  if ( (_UNKNOWN *)(v137[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v41 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v41, &v69);\n  }\n  v14 = v136[0] - 24LL;\n  if ( (_UNKNOWN *)(v136[0] - 24LL) != &std::string::_Rep::_S_empty_rep_storage )\n    goto LABEL_107;\nLABEL_32:\n  SenderText((std::string *)v132, v56, v62, v70[0], v71, v72, v73);\n  std::string::string(a1, (const std::string *)v132);\n  std::string::append(a1, (const std::string *)v131);\n  v15 = v132[0] - 24;\n  if ( (_UNKNOWN *)(v132[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v15 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v15, &v69);\n  }\n  v16 = v131[0] - 24;\n  if ( (_UNKNOWN *)(v131[0] - 24) != &std::string::_Rep::_S_empty_rep_storage )\n  {\nLABEL_34:\n    if ( (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v16 + 16)) <= 0 )\n      std::string::_Rep::_M_destroy(v16, &v69);\n  }\nLABEL_57:\n  v24 = *(_QWORD *)v70 - 24LL;\n  if ( (_UNKNOWN *)(*(_QWORD *)v70 - 24LL) != &std::string::_Rep::_S_empty_rep_storage\n    && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v24 + 16)) <= 0 )\n  {\n    std::string::_Rep::_M_destroy(v24, &v69);\n  }\n  return a1;\n}\n\n                        \n                        Function Name: _Z11NumToStringiij\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        std::string *__fastcall NumToString(std::string *a1, int a2, int a3, unsigned int a4)\n{\n  unsigned __int64 v4; // r13\n  char *v5; // rcx\n  char *v6; // rax\n  char *i; // rdx\n  char v8; // cl\n  unsigned __int64 j; // rsi\n  __int64 v10; // rbp\n  char v12; // [rsp+Fh] [rbp-79h] BYREF\n  __int64 v13[2]; // [rsp+10h] [rbp-78h] BYREF\n  char v14[56]; // [rsp+20h] [rbp-68h] BYREF\n  unsigned __int64 v15; // [rsp+58h] [rbp-30h]\n\n  v4 = a4;\n  v15 = __readfsqword(0x28u);\n  *(_QWORD *)a1 = (char *)&std::string::_Rep::_S_empty_rep_storage + 24;\n  if ( (unsigned int)(a3 - 2) > 0x22 )\n  {\n    v14[0] = 0;\n  }\n  else\n  {\n    v5 = v14;\n    while ( 1 )\n    {\n      *v5++ = aZyxwvutsrqponm[a2 % a3 + 35];\n      if ( !(a2 / a3) )\n        break;\n      a2 /= a3;\n    }\n    if ( a2 < 0 )\n      *v5++ = 45;\n    v6 = v5 - 1;\n    *v5 = 0;\n    for ( i = v14; v6 > i; ++i )\n    {\n      v8 = *v6;\n      *v6-- = *i;\n      *i = v8;\n    }\n  }\n  std::string::assign(a1, v14, strlen(v14));\n  if ( (_DWORD)v4 )\n  {\n    for ( j = *(_QWORD *)(*(_QWORD *)a1 - 24LL); j < v4; j = *(_QWORD *)(*(_QWORD *)a1 - 24LL) )\n    {\n      v13[0] = (__int64)&std::string::_Rep::_S_empty_rep_storage + 24;\n      std::string::reserve((std::string *)v13, j + 1);\n      std::string::append((std::string *)v13, "0", 1uLL);\n      std::string::append((std::string *)v13, a1);\n      std::string::assign(a1, (const std::string *)v13);\n      v10 = v13[0] - 24;\n      if ( (_UNKNOWN *)(v13[0] - 24) != &std::string::_Rep::_S_empty_rep_storage\n        && (int)__gnu_cxx::__exchange_and_add_dispatch((volatile signed __int32 *)(v10 + 16)) <= 0 )\n      {\n        std::string::_Rep::_M_destroy(v10, &v12);\n      }\n    }\n  }\n  return a1;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker15PerformGroupSZLEv\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::PerformGroupSZL(TS7Worker *this)\n{\n  TSnapBase *v1; // rbp\n  __int64 v2; // rax\n  __int64 v3; // rdx\n  __int16 v4; // ax\n  _BYTE *v5; // rdx\n  __int64 v6; // rax\n  char v7; // al\n  __int64 v9; // rax\n  unsigned __int16 v10; // si\n  unsigned __int16 v11; // ax\n  int v12; // edx\n  unsigned __int16 v13; // r8\n  unsigned __int16 v14; // cx\n\n  v1 = (TS7Worker *)((char *)this + 8);\n  v2 = *((_QWORD *)this + 564);\n  *((_BYTE *)this + 4528) = 50;\n  *((_BYTE *)this + 4529) = 7;\n  *((_BYTE *)this + 8664) = 0;\n  *((_WORD *)this + 2265) = 0;\n  v3 = v2 + 10;\n  LOWORD(v2) = *(_WORD *)(v2 + 4);\n  *((_QWORD *)this + 1078) = v3;\n  *((_QWORD *)this + 1080) = (char *)this + 4538;\n  *((_WORD *)this + 2266) = v2;\n  *((_QWORD *)this + 1081) = (char *)this + 4550;\n  v4 = TSnapBase::SwapWord((TS7Worker *)((char *)this + 8), 0xCu);\n  v5 = (_BYTE *)*((_QWORD *)this + 1078);\n  *((_WORD *)this + 2267) = v4;\n  **((_BYTE **)this + 1080) = *v5;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 1LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 1LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 2LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 2LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 3LL) = 8;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 4LL) = 18;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 5LL) = -124;\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 6LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 6LL);\n  *(_BYTE *)(*((_QWORD *)this + 1080) + 7LL) = *(_BYTE *)(*((_QWORD *)this + 1078) + 7LL);\n  v6 = *((_QWORD *)this + 1080);\n  *(_WORD *)(v6 + 8) = 0;\n  v7 = *(_BYTE *)(v6 + 6);\n  if ( v7 == 2 )\n  {\n    TS7Worker::SZLSystemState(this);\n    return 1LL;\n  }\n  if ( v7 != 1 )\n  {\n    TS7Worker::SZLNotAvailable(this);\n    return 1LL;\n  }\n  v9 = *((_QWORD *)this + 564);\n  v10 = *(_WORD *)(v9 + 22);\n  *((_QWORD *)this + 1079) = v9 + 18;\n  *((_DWORD *)this + 2164) = (unsigned __int16)TSnapBase::SwapWord(v1, v10);\n  v11 = TSnapBase::SwapWord(v1, *(_WORD *)(*((_QWORD *)this + 1079) + 6LL));\n  *((_DWORD *)this + 2165) = v11;\n  v12 = *((_DWORD *)this + 2164);\n  if ( v12 == 404 )\n  {\n    if ( v11 == 100 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0194_IDX_0064, 270);\n      goto LABEL_17;\n    }\nLABEL_16:\n    TS7Worker::SZLNotAvailable(this);\n    goto LABEL_17;\n  }\n  if ( v12 <= 404 )\n  {\n    if ( v12 == 56 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0038_IDX_XXXX, 78);\n      goto LABEL_17;\n    }\n    if ( v12 <= 56 )\n    {\n      if ( v12 == 25 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0019_IDX_XXXX, 40);\n        goto LABEL_17;\n      }\n      if ( v12 > 25 )\n      {\n        if ( v12 == 35 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0023_IDX_XXXX, 228);\n          goto LABEL_17;\n        }\n        if ( v12 > 35 )\n        {\n          if ( v12 == 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0025_IDX_XXXX, 16);\n            goto LABEL_17;\n          }\n          if ( v12 < 37 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0024_IDX_XXXX, 92);\n            goto LABEL_17;\n          }\n          if ( v12 == 54 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0036_IDX_XXXX, 12);\n            goto LABEL_17;\n          }\n          if ( v12 == 55 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0037_IDX_XXXX, 60);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001B_IDX_XXXX, 132);\n            goto LABEL_17;\n          }\n          if ( v12 < 27 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001A_IDX_XXXX, 48);\n            goto LABEL_17;\n          }\n          if ( v12 == 28 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_001C_IDX_XXXX, 352);\n            goto LABEL_17;\n          }\n          if ( v12 == 33 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0021_IDX_XXXX, 100);\n            goto LABEL_17;\n          }\n        }\n      }\n      else\n      {\n        if ( v12 == 19 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0013_IDX_XXXX, 192);\n          goto LABEL_17;\n        }\n        if ( v12 > 19 )\n        {\n          if ( v12 == 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0015_IDX_XXXX, 62);\n            goto LABEL_17;\n          }\n          if ( v12 < 21 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0014_IDX_XXXX, 84);\n            goto LABEL_17;\n          }\n          if ( v12 == 23 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0017_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 == 24 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0018_IDX_XXXX, 28);\n            goto LABEL_17;\n          }\n        }\n        else\n        {\n          if ( v12 == 2 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0002_IDX_XXXX, 458);\n            goto LABEL_17;\n          }\n          if ( v12 > 2 )\n          {\n            if ( v12 == 17 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0011_IDX_XXXX, 124);\n              goto LABEL_17;\n            }\n            if ( v12 == 18 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0012_IDX_XXXX, 58);\n              goto LABEL_17;\n            }\n          }\n          else if ( !v12 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0000_IDX_XXXX, 236);\n            goto LABEL_17;\n          }\n        }\n      }\n    }\n    else if ( v12 == 277 )\n    {\n      if ( v11 == 2048 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0115_IDX_0800, 22);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 277 )\n    {\n      if ( v12 == 293 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0000, 16);\n          goto LABEL_17;\n        }\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0125_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 293 )\n      {\n        if ( v12 == 306 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0003, 52);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_0009, 52);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000A, 52);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000B, 52);\n              break;\n            case 0xCu:\n              TS7Worker::SZLData(this, &SZL_ID_0132_IDX_000C, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 > 306 )\n        {\n          if ( v12 == 311 )\n          {\n            if ( v11 == 2046 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0137_IDX_07FE, 60);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 372 )\n          {\n            switch ( v11 )\n            {\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0001, 16);\n                break;\n              case 4u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0004, 16);\n                break;\n              case 5u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0005, 16);\n                break;\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_0006, 16);\n                break;\n              case 0xBu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000B, 16);\n                break;\n              case 0xCu:\n                TS7Worker::SZLData(this, &SZL_ID_0174_IDX_000C, 16);\n                break;\n              default:\n                goto LABEL_16;\n            }\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 305 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0001, 52);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0002, 52);\n              break;\n            case 3u:\n              TS7Worker::SZL_ID131_IDX003(this);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0004, 52);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0005, 52);\n              break;\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0006, 52);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0007, 52);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0008, 52);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_0131_IDX_0009, 52);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 280 )\n      {\n        switch ( v11 )\n        {\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0001, 16);\n            goto LABEL_17;\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0000, 16);\n            goto LABEL_17;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0002, 16);\n            goto LABEL_17;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0118_IDX_0003, 16);\n            goto LABEL_17;\n        }\n      }\n      else if ( v12 > 280 )\n      {\n        if ( v12 == 284 )\n        {\n          switch ( v11 )\n          {\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0001, 46);\n              break;\n            case 2u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0002, 46);\n              break;\n            case 3u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0003, 46);\n              break;\n            case 4u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0004, 46);\n              break;\n            case 5u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0005, 46);\n              break;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0007, 46);\n              break;\n            case 8u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0008, 46);\n              break;\n            case 9u:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_0009, 46);\n              break;\n            case 0xAu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000A, 46);\n              break;\n            case 0xBu:\n              TS7Worker::SZLData(this, &SZL_ID_011C_IDX_000B, 46);\n              break;\n            default:\n              goto LABEL_16;\n          }\n          goto LABEL_17;\n        }\n        if ( v12 == 292 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0124_IDX_XXXX, 32);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 279 )\n      {\n        switch ( v11 )\n        {\n          case 0u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0000, 16);\n            break;\n          case 1u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0001, 16);\n            break;\n          case 2u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0002, 16);\n            break;\n          case 3u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0003, 16);\n            break;\n          case 4u:\n            TS7Worker::SZLData(this, &SZL_ID_0117_IDX_0004, 16);\n            break;\n          default:\n            goto LABEL_16;\n        }\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 149 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0095_IDX_XXXX, 52);\n        goto LABEL_17;\n      }\n      if ( v12 > 149 )\n      {\n        if ( v12 == 273 )\n        {\n          switch ( v11 )\n          {\n            case 6u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0006, 40);\n              goto LABEL_17;\n            case 7u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0007, 40);\n              goto LABEL_17;\n            case 1u:\n              TS7Worker::SZLData(this, &SZL_ID_0111_IDX_0001, 40);\n              goto LABEL_17;\n          }\n        }\n        else if ( v12 > 273 )\n        {\n          if ( v12 == 274 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0100, 16);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0112_IDX_0000, 14);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 275 && v11 == 1 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0113_IDX_0001, 48);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 160 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_00A0_IDX_XXXX, 212);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 116 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0074_IDX_XXXX, 40);\n          goto LABEL_17;\n        }\n        if ( v12 > 116 )\n        {\n          if ( v12 == 146 )\n          {\n            if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0092_IDX_0000, 28);\n              goto LABEL_17;\n            }\n          }\n          else if ( v12 == 148 && !v11 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0094_IDX_0000, 270);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 58 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_003A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3860 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F14_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3860 )\n  {\n    if ( v12 == 1684 )\n    {\n      if ( v11 == 100 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0694_IDX_0064, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 1684 )\n    {\n      if ( v12 == 3473 )\n      {\n        if ( !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D91_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 > 3473 )\n      {\n        if ( v12 == 3840 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F00_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 > 3840 )\n        {\n          if ( v12 == 3857 )\n          {\n            switch ( v11 )\n            {\n              case 6u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0006, 12);\n                goto LABEL_17;\n              case 7u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0007, 12);\n                goto LABEL_17;\n              case 1u:\n                TS7Worker::SZLData(this, &SZL_ID_0F11_IDX_0001, 12);\n                goto LABEL_17;\n            }\n          }\n          else if ( v12 == 3858 )\n          {\n            if ( v11 == 256 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0100, 12);\n              goto LABEL_17;\n            }\n            if ( v11 > 0x100u )\n            {\n              if ( v11 == 512 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0200, 12);\n                goto LABEL_17;\n              }\n              if ( v11 == 1024 )\n              {\n                TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0400, 12);\n                goto LABEL_17;\n              }\n            }\n            else if ( !v11 )\n            {\n              TS7Worker::SZLData(this, &SZL_ID_0F12_IDX_0000, 12);\n              goto LABEL_17;\n            }\n          }\n        }\n        else if ( v12 == 3479 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0D97_IDX_0000, 60);\n          goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v12 == 2593 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0A21_IDX_XXXX, 16);\n          goto LABEL_17;\n        }\n        if ( v12 > 2593 )\n        {\n          if ( v12 == 2705 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0A91_IDX_XXXX, 44);\n            goto LABEL_17;\n          }\n          if ( v12 == 3217 && v11 == 2046 )\n          {\n            TS7Worker::SZLData(this, &SZL_ID_0C91_IDX_07FE, 28);\n            goto LABEL_17;\n          }\n        }\n        else if ( v12 == 1940 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0794_IDX_XXXX, 270);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 658 )\n    {\n      if ( !v11 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0292_IDX_0000, 28);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 > 658 )\n    {\n      if ( v12 == 1060 )\n      {\n        TS7Worker::SZL_ID424(this);\n        goto LABEL_17;\n      }\n      if ( v12 > 1060 )\n      {\n        if ( v12 == 1425 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0591_IDX_XXXX, 76);\n          goto LABEL_17;\n        }\n        if ( v12 == 1682 && !v11 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0692_IDX_0000, 28);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 660 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0294_IDX_XXXX, 270);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 546 )\n    {\n      if ( v11 == 20 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0014, 40);\n        goto LABEL_17;\n      }\n      if ( v11 > 0x14u )\n      {\n        switch ( v11 )\n        {\n          case \'P\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0050, 40);\n            goto LABEL_17;\n          case \'d\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0064, 40);\n            goto LABEL_17;\n          case \'(\':\n            TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0028, 40);\n            goto LABEL_17;\n        }\n      }\n      else\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_0001, 40);\n          goto LABEL_17;\n        }\n        if ( v11 == 10 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0222_IDX_000A, 40);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 > 546 )\n    {\n      if ( v12 == 549 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0225_IDX_0001, 16);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 562 )\n      {\n        if ( v11 == 1 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0001, 52);\n          goto LABEL_17;\n        }\n        if ( v11 == 4 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0232_IDX_0004, 52);\n          goto LABEL_17;\n        }\n      }\n    }\n    else if ( v12 == 416 )\n    {\n      switch ( v11 )\n      {\n        case 0u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0000, 12);\n          break;\n        case 1u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0001, 32);\n          break;\n        case 2u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0002, 52);\n          break;\n        case 3u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0003, 72);\n          break;\n        case 4u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0004, 92);\n          break;\n        case 5u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0005, 112);\n          break;\n        case 6u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0006, 132);\n          break;\n        case 7u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0007, 152);\n          break;\n        case 8u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0008, 172);\n          break;\n        case 9u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0009, 192);\n          break;\n        case 0xAu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000A, 212);\n          break;\n        case 0xBu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000B, 232);\n          break;\n        case 0xCu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000C, 252);\n          break;\n        case 0xDu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000D, 272);\n          break;\n        case 0xEu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000E, 292);\n          break;\n        case 0xFu:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_000F, 312);\n          break;\n        case 0x10u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0010, 332);\n          break;\n        case 0x11u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0011, 352);\n          break;\n        case 0x12u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0012, 372);\n          break;\n        case 0x13u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0013, 392);\n          break;\n        case 0x14u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0014, 412);\n          break;\n        case 0x15u:\n          TS7Worker::SZLData(this, &SZL_ID_01A0_IDX_0015, 432);\n          break;\n        default:\n          goto LABEL_16;\n      }\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3894 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F36_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3894 )\n  {\n    if ( v12 == 3986 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F92_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3986 )\n    {\n      if ( v12 == 3989 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F95_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 > 3989 )\n      {\n        if ( v12 == 3994 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0F9A_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n        if ( v12 == 4000 )\n        {\n          TS7Worker::SZLData(this, &SZL_ID_0FA0_IDX_XXXX, 12);\n          goto LABEL_17;\n        }\n      }\n      else if ( v12 == 3988 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F94_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      if ( v12 == 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F38_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 < 3896 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F37_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3898 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F3A_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3956 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F74_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3867 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F1B_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 > 3867 )\n  {\n    if ( v12 == 3873 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F21_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    if ( v12 > 3873 )\n    {\n      if ( v12 == 3875 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F23_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n      if ( v12 == 3877 )\n      {\n        TS7Worker::SZLData(this, &SZL_ID_0F25_IDX_XXXX, 12);\n        goto LABEL_17;\n      }\n    }\n    else if ( v12 == 3868 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F1C_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3864 )\n  {\n    TS7Worker::SZLData(this, &SZL_ID_0F18_IDX_XXXX, 12);\n    goto LABEL_17;\n  }\n  if ( v12 <= 3864 )\n  {\n    if ( v12 == 3863 )\n    {\n      TS7Worker::SZLData(this, &SZL_ID_0F17_IDX_XXXX, 12);\n      goto LABEL_17;\n    }\n    goto LABEL_16;\n  }\n  if ( v12 == 3865 )\n    TS7Worker::SZLData(this, &SZL_ID_0F19_IDX_XXXX, 12);\n  else\n    TS7Worker::SZLData(this, &SZL_ID_0F1A_IDX_XXXX, 12);\nLABEL_17:\n  v13 = *((_WORD *)this + 4330);\n  v14 = *((_WORD *)this + 4328);\n  if ( *((_BYTE *)this + 8664) )\n    TS7Worker::DoEvent(this, 0x100000u, 0, v14, v13, 0, 0);\n  else\n    TS7Worker::DoEvent(this, 0x100000u, 0xCu, v14, v13, 0, 0);\n  return 1LL;\n}\n\n                        \n                        Function Name: _ZN9TS7Worker7DoEventEjttttt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall TS7Worker::DoEvent(\n        TS7Worker *this,\n        unsigned int a2,\n        unsigned __int16 a3,\n        unsigned __int16 a4,\n        unsigned __int16 a5,\n        unsigned __int16 a6,\n        unsigned __int16 a7)\n{\n  return (*(__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD))(**((_QWORD **)this + 1084) + 24LL))(\n           *((_QWORD *)this + 1084),\n           *((unsigned int *)this + 15),\n           a2,\n           a3,\n           a4,\n           a5,\n           a6,\n           a7);\n}\n\n                        \n                        Function Name: _ZN9TSnapBase8SwapWordEt\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int16 __fastcall TSnapBase::SwapWord(TSnapBase *this, __int16 a2)\n{\n  __int16 result; // ax\n\n  result = __ROL2__(a2, 8);\n  if ( !*(_BYTE *)this )\n    return a2;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (31, 32) appear to "contaminate" the global variables aZyxwvutsrqponm and local variables var_34, a7, var_70, v25, v24, a6, v118, a2, a3, a2, v5, v1, v13, v11, a5, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (31, 32) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:22:56,150 - my_text.py:621  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
int, length
```
2025-03-08 21:22:58,152 - my_text.py:637  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 field_type: {'2,3': ['int'], '4': ['unsigned char'], '5': ['int'], '6': ['unsigned __int8'], '8': ['int'], '11,12': ['int'], '13,14': ['int'], '15,16': ['unsigned short'], '17': ['unsigned short'], '22': ['int'], '23': ['unsigned_short'], '29,30': ['int'], '31,32': ['int']}
2025-03-08 21:22:58,152 - my_text.py:638  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 field_func: {'2,3': ['length'], '4': ['length'], '5': ['length'], '6': ['flag'], '8': ['length'], '11,12': ['length'], '13,14': ['length'], '15,16': ['length'], '17': ['length'], '22': ['length'], '23': ['length'], '29,30': ['length'], '31,32': ['length']}
2025-03-08 21:22:58,152 - my_text.py:688  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': '\n            You are provided with a list named [] that contains visible strings. Your task is to analyze these strings. If the strings have specific meanings and can be further divided, please present the division results in a Python code block. Each part of the result should be separated by a comma.\n            The types of granularity for division include static text, command groups, strings, integers, decimals, and binary. The semantic granularity includes commands, lengths, delimiters, checksums, file names, etc.\n            Here is an example: If the input is ["POST /path HTTP/1.1"], the correct output should be\n            ```python\n            POST, command group, command\n            , string, delimiter\n            /path, string, file\n            HTTP/1.1, static text, static text\n            ```\n            If you don\'t think these strings have a specific meaning, just answer ```python ```\n            '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:23:01,565 - my_text.py:691  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 Response result: ```python
```python

```
Please provide a list of strings for analysis. For example, you can use `["POST /path HTTP/1.1"]` as shown in the example.
```python
```
2025-03-08 21:23:03,566 - my_text.py:712  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 field_llm_type: {}
2025-03-08 21:23:03,566 - my_text.py:713  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 field_llm_Sem: {}
2025-03-08 21:23:03,566 - my_text.py:715  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 used_fields_llm: ['2,3', '4', '5', '6', '8', '11,12', '13,14', '15,16', '17', '18', '19', '22', '23', '24', '29,30', '31,32']
2025-03-08 21:23:03,566 - my_text.py:716  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 field_llm_type_llm: {'2,3': ['int'], '4': ['unsigned char'], '5': ['int'], '6': ['unsigned __int8'], '8': ['int'], '11,12': ['int'], '13,14': ['int'], '15,16': ['unsigned short'], '17': ['unsigned short'], '22': ['int'], '23': ['unsigned_short'], '29,30': ['int'], '31,32': ['int']}
2025-03-08 21:23:03,566 - my_text.py:717  - 3:0300002102f080320700000100000800080001120411440100ff09000404240000 field_llm_Sem_llm: {'2,3': ['length'], '4': ['length'], '5': ['length'], '6': ['flag'], '8': ['length'], '11,12': ['length'], '13,14': ['length'], '15,16': ['length'], '17': ['length'], '22': ['length'], '23': ['length'], '29,30': ['length'], '31,32': ['length']}
2025-03-08 21:23:03,566 - my_text.py:778  - Analysis completed successfully.
2025-03-08 21:23:03,566 - my_text.py:788  - Closing IDA Pro...
