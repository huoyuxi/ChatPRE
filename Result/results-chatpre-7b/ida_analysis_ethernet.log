2025-03-08 21:06:21,799 - my_text.py:228  - Waiting for initial analysis to complete...
2025-03-08 21:06:21,800 - my_text.py:230  - Initial analysis completed.
2025-03-08 21:06:21,800 - my_text.py:236  - Received argument1: ethernet
2025-03-08 21:06:21,800 - my_text.py:237  - Received argument2: 0
2025-03-08 21:06:21,800 - my_text.py:242  - Starting analysis...
2025-03-08 21:06:21,801 - my_text.py:83  - Total global variables: 1273
2025-03-08 21:06:21,801 - my_text.py:86  - Global Variables:
2025-03-08 21:06:21,802 - my_text.py:107  -   Address: 0x318, Name: aLib64LdLinuxX8, Type: Unknown
2025-03-08 21:06:21,802 - my_text.py:107  -   Address: 0x344, Name: aGnu, Type: Unknown
2025-03-08 21:06:21,802 - my_text.py:107  -   Address: 0x364, Name: aGnu_0, Type: Unknown
2025-03-08 21:06:21,802 - my_text.py:107  -   Address: 0x388, Name: aGnu_1, Type: Unknown
2025-03-08 21:06:21,802 - my_text.py:107  -   Address: 0x3A0, Name: elf_gnu_hash_nbuckets, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0x3A4, Name: elf_gnu_hash_symbias, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0x3A8, Name: elf_gnu_hash_bitmask_nwords, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0x3AC, Name: elf_gnu_hash_shift, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0x3B0, Name: elf_gnu_hash_indexes, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0x3B8, Name: elf_gnu_hash_bucket, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0x3C0, Name: elf_gnu_hash_chain, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0x9B1, Name: aLibpthreadSo0, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0x9C1, Name: aItmDeregistert, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0x9DD, Name: aItmRegistertmc, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0x9F7, Name: aErrnoLocation, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0xA08, Name: aSend, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0xA0D, Name: aAccept, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0xA14, Name: aRecvfrom, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0xA1D, Name: aRecv, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0xA22, Name: aSendto, Type: Unknown
2025-03-08 21:06:21,803 - my_text.py:107  -   Address: 0xA29, Name: aLibcSo6, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA33, Name: aSocket, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA3A, Name: aExit, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA3F, Name: aHtonl, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA45, Name: aHtons, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA4B, Name: aSrand, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA51, Name: aFopen, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA57, Name: aStrrchr, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA5F, Name: aNanosleep, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA69, Name: aFtell, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA6F, Name: aSignal, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA76, Name: aStackChkFail, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA87, Name: aListen, Type: Unknown
2025-03-08 21:06:21,804 - my_text.py:107  -   Address: 0xA8E, Name: aSelect, Type: Unknown
2025-03-08 21:06:21,805 - my_text.py:107  -   Address: 0xA95, Name: aMkdir, Type: Unknown
2025-03-08 21:06:21,805 - my_text.py:107  -   Address: 0xA9B, Name: aInetPton, Type: Unknown
2025-03-08 21:06:21,805 - my_text.py:107  -   Address: 0xAA5, Name: aAssertFail, Type: Unknown
2025-03-08 21:06:21,805 - my_text.py:107  -   Address: 0xAB3, Name: aFgets, Type: Unknown
2025-03-08 21:06:21,805 - my_text.py:107  -   Address: 0xAB9, Name: aCalloc, Type: Unknown
2025-03-08 21:06:21,805 - my_text.py:107  -   Address: 0xAC0, Name: aStrlen, Type: Unknown
2025-03-08 21:06:21,805 - my_text.py:107  -   Address: 0xAC7, Name: aMemset, Type: Unknown
2025-03-08 21:06:21,805 - my_text.py:107  -   Address: 0xACE, Name: aStrstr, Type: Unknown
2025-03-08 21:06:21,805 - my_text.py:107  -   Address: 0xAD5, Name: aBind, Type: Unknown
2025-03-08 21:06:21,805 - my_text.py:107  -   Address: 0xADA, Name: aFseek, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xAE0, Name: aMemcmp, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xAE7, Name: aShutdown, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xAF0, Name: aIsoc99Fscanf, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xB00, Name: aStrtokR, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xB09, Name: aMemcpy, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xB10, Name: aFclose, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xB17, Name: aStrtoul, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xB1F, Name: aSetsockopt, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xB2A, Name: aMalloc, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xB31, Name: aGetpeername, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xB3D, Name: aStderr, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xB44, Name: aIoctl, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xB4A, Name: aGethostname, Type: Unknown
2025-03-08 21:06:21,806 - my_text.py:107  -   Address: 0xB56, Name: aFwrite, Type: Unknown
2025-03-08 21:06:21,807 - my_text.py:107  -   Address: 0xB5D, Name: aFread, Type: Unknown
2025-03-08 21:06:21,807 - my_text.py:107  -   Address: 0xB63, Name: aClockGettime, Type: Unknown
2025-03-08 21:06:21,807 - my_text.py:107  -   Address: 0xB71, Name: aFprintf, Type: Unknown
2025-03-08 21:06:21,807 - my_text.py:107  -   Address: 0xB79, Name: aCxaFinalize, Type: Unknown
2025-03-08 21:06:21,807 - my_text.py:107  -   Address: 0xB88, Name: aXpgStrerrorR, Type: Unknown
2025-03-08 21:06:21,807 - my_text.py:107  -   Address: 0xB99, Name: aFcntl, Type: Unknown
2025-03-08 21:06:21,807 - my_text.py:107  -   Address: 0xB9F, Name: aStrcmp, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xBA6, Name: aLibcStartMain, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xBB8, Name: aNtohl, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xBBE, Name: aNtohs, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xBC4, Name: aSnprintf, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xBCD, Name: aFree, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xBD2, Name: aGlibc225, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xBDE, Name: aGlibc214, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xBE9, Name: aGlibc24, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xBF3, Name: aGlibc217, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xBFE, Name: aGlibc234, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xC0A, Name: aGlibc27, Type: Unknown
2025-03-08 21:06:21,808 - my_text.py:107  -   Address: 0xC14, Name: aGmonStart, Type: Unknown
2025-03-08 21:06:21,809 - my_text.py:107  -   Address: 0x2000, Name: .init_proc, Type: Unknown
2025-03-08 21:06:21,809 - my_text.py:107  -   Address: 0x23B0, Name: __cxa_finalize, Type: None
2025-03-08 21:06:21,809 - my_text.py:107  -   Address: 0x23C0, Name: .free, Type: None
2025-03-08 21:06:21,809 - my_text.py:107  -   Address: 0x23D0, Name: .recv, Type: None
2025-03-08 21:06:21,809 - my_text.py:107  -   Address: 0x23E0, Name: .__errno_location, Type: None
2025-03-08 21:06:21,809 - my_text.py:107  -   Address: 0x23F0, Name: .__isoc99_fscanf, Type: Unknown
2025-03-08 21:06:21,809 - my_text.py:107  -   Address: 0x2400, Name: .mkdir, Type: None
2025-03-08 21:06:21,809 - my_text.py:107  -   Address: 0x2410, Name: .fread, Type: None
2025-03-08 21:06:21,810 - my_text.py:107  -   Address: 0x2420, Name: .setsockopt, Type: None
2025-03-08 21:06:21,810 - my_text.py:107  -   Address: 0x2430, Name: .__xpg_strerror_r, Type: Unknown
2025-03-08 21:06:21,810 - my_text.py:107  -   Address: 0x2440, Name: .fcntl, Type: None
2025-03-08 21:06:21,810 - my_text.py:107  -   Address: 0x2450, Name: .clock_gettime, Type: None
2025-03-08 21:06:21,810 - my_text.py:107  -   Address: 0x2460, Name: .getpeername, Type: None
2025-03-08 21:06:21,810 - my_text.py:107  -   Address: 0x2470, Name: .fclose, Type: None
2025-03-08 21:06:21,810 - my_text.py:107  -   Address: 0x2480, Name: .shutdown, Type: None
2025-03-08 21:06:21,810 - my_text.py:107  -   Address: 0x2490, Name: .strlen, Type: None
2025-03-08 21:06:21,810 - my_text.py:107  -   Address: 0x24A0, Name: .__stack_chk_fail, Type: Unknown
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x24B0, Name: .htons, Type: None
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x24C0, Name: .send, Type: None
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x24D0, Name: .printf, Type: None
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x24E0, Name: .snprintf, Type: None
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x24F0, Name: .nanosleep, Type: None
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x2500, Name: .strrchr, Type: None
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x2510, Name: .__assert_fail, Type: None
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x2520, Name: .htonl, Type: None
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x2530, Name: .memset, Type: None
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x2540, Name: .ioctl, Type: None
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x2550, Name: .sendto, Type: None
2025-03-08 21:06:21,811 - my_text.py:107  -   Address: 0x2560, Name: .close, Type: None
2025-03-08 21:06:21,812 - my_text.py:107  -   Address: 0x2570, Name: .strtok_r, Type: None
2025-03-08 21:06:21,812 - my_text.py:107  -   Address: 0x2580, Name: .srand, Type: None
2025-03-08 21:06:21,812 - my_text.py:107  -   Address: 0x2590, Name: .memcmp, Type: None
2025-03-08 21:06:21,812 - my_text.py:107  -   Address: 0x25A0, Name: .fgets, Type: None
2025-03-08 21:06:21,812 - my_text.py:107  -   Address: 0x25B0, Name: .calloc, Type: None
2025-03-08 21:06:21,812 - my_text.py:107  -   Address: 0x25C0, Name: .strcmp, Type: None
2025-03-08 21:06:21,812 - my_text.py:107  -   Address: 0x25D0, Name: .signal, Type: None
2025-03-08 21:06:21,813 - my_text.py:107  -   Address: 0x25E0, Name: .fprintf, Type: None
2025-03-08 21:06:21,813 - my_text.py:107  -   Address: 0x25F0, Name: .ftell, Type: None
2025-03-08 21:06:21,813 - my_text.py:107  -   Address: 0x2600, Name: .memcpy, Type: None
2025-03-08 21:06:21,813 - my_text.py:107  -   Address: 0x2610, Name: .inet_pton, Type: None
2025-03-08 21:06:21,813 - my_text.py:107  -   Address: 0x2620, Name: .time, Type: None
2025-03-08 21:06:21,813 - my_text.py:107  -   Address: 0x2630, Name: .select, Type: None
2025-03-08 21:06:21,813 - my_text.py:107  -   Address: 0x2640, Name: .malloc, Type: None
2025-03-08 21:06:21,814 - my_text.py:107  -   Address: 0x2650, Name: .listen, Type: None
2025-03-08 21:06:21,814 - my_text.py:107  -   Address: 0x2660, Name: .recvfrom, Type: None
2025-03-08 21:06:21,814 - my_text.py:107  -   Address: 0x2670, Name: .fseek, Type: None
2025-03-08 21:06:21,814 - my_text.py:107  -   Address: 0x2680, Name: .ntohs, Type: None
2025-03-08 21:06:21,814 - my_text.py:107  -   Address: 0x2690, Name: .bind, Type: None
2025-03-08 21:06:21,814 - my_text.py:107  -   Address: 0x26A0, Name: .fopen, Type: None
2025-03-08 21:06:21,814 - my_text.py:107  -   Address: 0x26B0, Name: .accept, Type: None
2025-03-08 21:06:21,814 - my_text.py:107  -   Address: 0x26C0, Name: .strtoul, Type: None
2025-03-08 21:06:21,815 - my_text.py:107  -   Address: 0x26D0, Name: .gethostname, Type: None
2025-03-08 21:06:21,815 - my_text.py:107  -   Address: 0x26E0, Name: .exit, Type: None
2025-03-08 21:06:21,815 - my_text.py:107  -   Address: 0x26F0, Name: .fwrite, Type: None
2025-03-08 21:06:21,815 - my_text.py:107  -   Address: 0x2700, Name: .ntohl, Type: None
2025-03-08 21:06:21,815 - my_text.py:107  -   Address: 0x2710, Name: .strstr, Type: None
2025-03-08 21:06:21,815 - my_text.py:107  -   Address: 0x2720, Name: .rand, Type: None
2025-03-08 21:06:21,815 - my_text.py:107  -   Address: 0x2730, Name: .socket, Type: None
2025-03-08 21:06:21,815 - my_text.py:107  -   Address: 0x2740, Name: _start, Type: Unknown
2025-03-08 21:06:21,815 - my_text.py:107  -   Address: 0x2770, Name: deregister_tm_clones, Type: Unknown
2025-03-08 21:06:21,815 - my_text.py:107  -   Address: 0x27A0, Name: register_tm_clones, Type: Unknown
2025-03-08 21:06:21,815 - my_text.py:107  -   Address: 0x27E0, Name: __do_global_dtors_aux, Type: Unknown
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x2820, Name: frame_dummy, Type: Unknown
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x2829, Name: main, Type: None
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x2A82, Name: LeaveStack, Type: None
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x2AA5, Name: executeEventLoop, Type: Unknown
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x2AD6, Name: NetworkHandlerInitialize, Type: Unknown
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x321A, Name: CloseUdpSocket, Type: Unknown
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x3236, Name: CloseTcpSocket, Type: None
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x3266, Name: RemoveSocketTimerFromList, Type: None
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x32B0, Name: CheckSocketSet, Type: Unknown
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x33B9, Name: CheckAndHandleTcpListenerSocket, Type: Unknown
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x34DD, Name: NetworkHandlerProcessCyclic, Type: Unknown
2025-03-08 21:06:21,816 - my_text.py:107  -   Address: 0x37CE, Name: NetworkHandlerFinish, Type: Unknown
2025-03-08 21:06:21,817 - my_text.py:107  -   Address: 0x3804, Name: CheckAndHandleUdpGlobalBroadcastSocket, Type: Unknown
2025-03-08 21:06:21,817 - my_text.py:107  -   Address: 0x39E0, Name: CheckAndHandleUdpUnicastSocket, Type: Unknown
2025-03-08 21:06:21,817 - my_text.py:107  -   Address: 0x3BBC, Name: SendUdpData, Type: Unknown
2025-03-08 21:06:21,817 - my_text.py:107  -   Address: 0x3C54, Name: HandleDataOnTcpSocket, Type: None
2025-03-08 21:06:21,817 - my_text.py:107  -   Address: 0x4152, Name: CreateUdpSocket, Type: Unknown
2025-03-08 21:06:21,817 - my_text.py:107  -   Address: 0x436A, Name: SetQos, Type: Unknown
2025-03-08 21:06:21,817 - my_text.py:107  -   Address: 0x43BE, Name: SetSocketOptionsMulticastProduce, Type: Unknown
2025-03-08 21:06:21,817 - my_text.py:107  -   Address: 0x44A6, Name: GetPeerAddress, Type: Unknown
2025-03-08 21:06:21,817 - my_text.py:107  -   Address: 0x452E, Name: CheckAndHandleConsumingUdpSocket, Type: Unknown
2025-03-08 21:06:21,817 - my_text.py:107  -   Address: 0x4740, Name: CloseSocket, Type: Unknown
2025-03-08 21:06:21,817 - my_text.py:107  -   Address: 0x47D0, Name: GetMaxSocket, Type: Unknown
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x4840, Name: CheckEncapsulationInactivity, Type: Unknown
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x48E8, Name: RegisterTimeoutChecker, Type: Unknown
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x4947, Name: SocketTimerSetSocket, Type: None
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x4962, Name: SocketTimerSetLastUpdate, Type: None
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x4988, Name: SocketTimerGetLastUpdate, Type: Unknown
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x499E, Name: SocketTimerClear, Type: Unknown
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x49C4, Name: SocketTimerArrayInitialize, Type: Unknown
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x4A0F, Name: SocketTimerArrayGetSocketTimer, Type: None
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x4A6F, Name: SocketTimerArrayGetEmptySocketTimer, Type: None
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x4A9D, Name: GetMicroSeconds, Type: Unknown
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x4B46, Name: GetMilliSeconds, Type: Unknown
2025-03-08 21:06:21,818 - my_text.py:107  -   Address: 0x4B6D, Name: NetworkHandlerInitializePlatform, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x4B7C, Name: ShutdownSocketPlatform, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x4BC3, Name: CloseSocketPlatform, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x4BDF, Name: SetSocketToNonBlocking, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x4C22, Name: SetQosOnSocket, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x4C86, Name: GetSocketErrorNumber, Type: None
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x4C97, Name: GetErrorMessage, Type: None
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x4CD8, Name: FreeErrorMessage, Type: None
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x4CF7, Name: IfaceGetMacAddress, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x4DE7, Name: GetIpAndNetmaskFromInterface, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x4F2F, Name: GetGatewayFromRoute, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x513E, Name: GetDnsInfoFromResolvConf, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x5445, Name: nanosleep_simple32, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x54EB, Name: IfaceGetConfiguration, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x55D5, Name: IfaceWaitForIp, Type: Unknown
2025-03-08 21:06:21,819 - my_text.py:107  -   Address: 0x570E, Name: GetHostName, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x5775, Name: CipStackInit, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x58FA, Name: ShutdownCipStack, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x591E, Name: NotifyClass, Type: None
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x5A5A, Name: GetMaxInstanceNumber, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x5AAB, Name: AddCipInstances, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x5C91, Name: AddCipInstance, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x5CFE, Name: CreateCipClass, Type: None
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x623E, Name: InsertAttribute, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x6495, Name: InsertService, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x6564, Name: InsertGetSetCallback, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x65DA, Name: GetCipAttribute, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x6638, Name: GenerateGetAttributeSingleHeader, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x6681, Name: GetAttributeSingle, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x681C, Name: EncodeCipBool, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x684B, Name: EncodeCipByte, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x687A, Name: EncodeCipWord, Type: Unknown
2025-03-08 21:06:21,820 - my_text.py:107  -   Address: 0x68A9, Name: EncodeCipDword, Type: Unknown
2025-03-08 21:06:21,821 - my_text.py:107  -   Address: 0x68D4, Name: EncodeCipLword, Type: Unknown
2025-03-08 21:06:21,821 - my_text.py:107  -   Address: 0x6901, Name: EncodeCipUsint, Type: Unknown
2025-03-08 21:06:21,821 - my_text.py:107  -   Address: 0x6930, Name: EncodeCipUint, Type: Unknown
2025-03-08 21:06:21,821 - my_text.py:107  -   Address: 0x695F, Name: EncodeCipUdint, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x698A, Name: EncodeCipUlint, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x69B7, Name: EncodeCipSint, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x69E6, Name: EncodeCipInt, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6A15, Name: EncodeCipDint, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6A40, Name: EncodeCipLint, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6A6D, Name: EncodeCipReal, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6A98, Name: EncodeCipLreal, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6AC5, Name: EncodeCipShortString, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6B6A, Name: EncodeCipString, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6C43, Name: EncodeCipString2, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6C76, Name: EncodeCipStringN, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6CA9, Name: CipStringIHeaderEncoding, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6D2F, Name: EncodeCipStringI, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6EC1, Name: EncodeCipByteArray, Type: Unknown
2025-03-08 21:06:21,822 - my_text.py:107  -   Address: 0x6F4E, Name: EncodeCipEPath, Type: Unknown
2025-03-08 21:06:21,823 - my_text.py:107  -   Address: 0x6F90, Name: EncodeCipEthernetLinkPhyisicalAddress, Type: Unknown
2025-03-08 21:06:21,823 - my_text.py:107  -   Address: 0x7002, Name: GenerateSetAttributeSingleHeader, Type: Unknown
2025-03-08 21:06:21,823 - my_text.py:107  -   Address: 0x704B, Name: SetAttributeSingle, Type: Unknown
2025-03-08 21:06:21,823 - my_text.py:107  -   Address: 0x7226, Name: DecodeCipBool, Type: Unknown
2025-03-08 21:06:21,823 - my_text.py:107  -   Address: 0x7263, Name: DecodeCipByte, Type: Unknown
2025-03-08 21:06:21,823 - my_text.py:107  -   Address: 0x72A0, Name: DecodeCipByteArray, Type: Unknown
2025-03-08 21:06:21,823 - my_text.py:107  -   Address: 0x734E, Name: DecodeCipWord, Type: Unknown
2025-03-08 21:06:21,823 - my_text.py:107  -   Address: 0x738C, Name: DecodeCipDword, Type: Unknown
2025-03-08 21:06:21,823 - my_text.py:107  -   Address: 0x73CB, Name: DecodeCipLword, Type: Unknown
2025-03-08 21:06:21,823 - my_text.py:107  -   Address: 0x7409, Name: DecodeCipUsint, Type: Unknown
2025-03-08 21:06:21,823 - my_text.py:107  -   Address: 0x7446, Name: DecodeCipUint, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x7484, Name: DecodeCipUdint, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x74C1, Name: DecodeCipUlint, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x74FF, Name: DecodeCipSint, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x753C, Name: DecodeCipInt, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x757A, Name: DecodeCipDint, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x75B7, Name: DecodeCipLint, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x75F8, Name: DecodeCipReal, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x763B, Name: DecodeCipLreal, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x769B, Name: DecodeCipString, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x7758, Name: DecodeCipShortString, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x77F4, Name: GetCipService, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x7857, Name: GetAttributeAll, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x798B, Name: GetAttributeList, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x7CC5, Name: SetAttributeList, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x805D, Name: EncodeEPath, Type: Unknown
2025-03-08 21:06:21,824 - my_text.py:107  -   Address: 0x8260, Name: DecodePaddedEPath, Type: None
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x845B, Name: def_8351, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x84AC, Name: CipCreateService, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x85C6, Name: CipDeleteService, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x8761, Name: CipResetService, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x8834, Name: AllocateAttributeMasks, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x88AC, Name: CalculateIndex, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x88CF, Name: CipConnectionObjectListArrayAllocator, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x8984, Name: CipConnectionObjectListArrayFree, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x89CE, Name: ConnectionObjectInitializeEmpty, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x8A26, Name: CipConnectionObjectCreate, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x8A55, Name: ConnectionObjectInitializeFromMessage, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x8C68, Name: ConnectionObjectGetState, Type: Unknown
2025-03-08 21:06:21,825 - my_text.py:107  -   Address: 0x8CEC, Name: def_8CAA, Type: Unknown
2025-03-08 21:06:21,826 - my_text.py:107  -   Address: 0x8CF9, Name: ConnectionObjectSetState, Type: Unknown
2025-03-08 21:06:21,826 - my_text.py:107  -   Address: 0x8D75, Name: def_8D33, Type: Unknown
2025-03-08 21:06:21,826 - my_text.py:107  -   Address: 0x8D97, Name: ConnectionObjectGetInstanceType, Type: Unknown
2025-03-08 21:06:21,826 - my_text.py:107  -   Address: 0x8DB0, Name: ConnectionObjectSetInstanceType, Type: Unknown
2025-03-08 21:06:21,826 - my_text.py:107  -   Address: 0x8DCE, Name: ConnectionObjectGetInstanceTypeForAttribute, Type: Unknown
2025-03-08 21:06:21,826 - my_text.py:107  -   Address: 0x8E40, Name: ConnectionObjectIsTypeNonLOIOConnection, Type: Unknown
2025-03-08 21:06:21,826 - my_text.py:107  -   Address: 0x8E6D, Name: ConnectionObjectIsTypeIOConnection, Type: Unknown
2025-03-08 21:06:21,826 - my_text.py:107  -   Address: 0x8E9A, Name: ConnectionObjectGetTransportClassTriggerDirection, Type: Unknown
2025-03-08 21:06:21,826 - my_text.py:107  -   Address: 0x8EC0, Name: ConnectionObjectGetTransportClassTriggerProductionTrigger, Type: Unknown
2025-03-08 21:06:21,826 - my_text.py:107  -   Address: 0x8F22, Name: ConnectionObjectGetTransportClassTriggerTransportClass, Type: None
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x8F96, Name: ConnectionObjectGetProducedConnectionSize, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x8FAC, Name: ConnectionObjectSetProducedConnectionSize, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x8FCD, Name: ConnectionObjectGetConsumedConnectionSize, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x8FE3, Name: ConnectionObjectSetConsumedConnectionSize, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x9004, Name: ConnectionObjectGetExpectedPacketRate, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x901A, Name: ConnectionObjectGetRequestedPacketInterval, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x90A3, Name: ConnectionObjectSetExpectedPacketRate, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x9148, Name: ConnectionObjectGetCipProducedConnectionID, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x915D, Name: ConnectionObjectSetCipProducedConnectionID, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x9179, Name: ConnectionObjectGetCipConsumedConnectionID, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x918E, Name: ConnectionObjectSetCipConsumedConnectionID, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x91AA, Name: ConnectionObjectGetWatchdogTimeoutAction, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x9218, Name: ConnectionObjectSetWatchdogTimeoutAction, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x9280, Name: ConnectionObjectGetProducedConnectionPathLength, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x9296, Name: ConnectionObjectSetProducedConnectionPathLength, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x92B7, Name: ConnectionObjectGetConsumedConnectionPathLength, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x92CD, Name: ConnectionObjectSetConsumedConnectionPathLength, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x92EE, Name: ConnectionObjectGetProductionInhibitTime, Type: Unknown
2025-03-08 21:06:21,827 - my_text.py:107  -   Address: 0x9304, Name: ConnectionObjectSetProductionInhibitTime, Type: Unknown
2025-03-08 21:06:21,828 - my_text.py:107  -   Address: 0x9325, Name: ConnectionObjectSetInitialInactivityWatchdogTimerValue, Type: Unknown
2025-03-08 21:06:21,828 - my_text.py:107  -   Address: 0x936B, Name: ConnectionObjectResetInactivityWatchdogTimerValue, Type: Unknown
2025-03-08 21:06:21,828 - my_text.py:107  -   Address: 0x9395, Name: ConnectionObjectResetLastPackageInactivityTimerValue, Type: Unknown
2025-03-08 21:06:21,828 - my_text.py:107  -   Address: 0x93BF, Name: ConnectionObjectCalculateRegularInactivityWatchdogTimerValue, Type: Unknown
2025-03-08 21:06:21,828 - my_text.py:107  -   Address: 0x93FF, Name: ConnectionObjectGetConnectionSerialNumber, Type: Unknown
2025-03-08 21:06:21,828 - my_text.py:107  -   Address: 0x9418, Name: ConnectionObjectSetConnectionSerialNumber, Type: Unknown
2025-03-08 21:06:21,828 - my_text.py:107  -   Address: 0x943C, Name: ConnectionObjectGetOriginatorVendorId, Type: Unknown
2025-03-08 21:06:21,828 - my_text.py:107  -   Address: 0x9455, Name: ConnectionObjectSetOriginatorVendorId, Type: Unknown
2025-03-08 21:06:21,828 - my_text.py:107  -   Address: 0x9479, Name: ConnectionObjectGetOriginatorSerialNumber, Type: Unknown
2025-03-08 21:06:21,828 - my_text.py:107  -   Address: 0x9491, Name: ConnectionObjectSetOriginatorSerialNumber, Type: Unknown
2025-03-08 21:06:21,828 - my_text.py:107  -   Address: 0x94B0, Name: ConnectionObjectGetConnectionlNumber, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x94CC, Name: ConnectionObjectSetConnectionNumber, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x94EF, Name: GenerateRandomConnectionNumber, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x9558, Name: ConnectionObjectGetConnectionTimeoutMultiplier, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x956E, Name: ConnectionObjectSetConnectionTimeoutMultiplier, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x958D, Name: ConnectionObjectGetOToTRequestedPacketInterval, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x95A5, Name: ConnectionObjectSetOToTRequestedPacketInterval, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x95C4, Name: ConnectionObjectGetTToORequestedPacketInterval, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x95DC, Name: ConnectionObjectSetTToORequestedPacketInterval, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x95FB, Name: ConnectionObjectSetTToONetworkConnectionParameters, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x961A, Name: ConnectionObjectSetOToTNetworkConnectionParameters, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x9639, Name: ConnectionObjectIsRedundantOwner, Type: Unknown
2025-03-08 21:06:21,829 - my_text.py:107  -   Address: 0x966D, Name: ConnectionObjectIsOToTRedundantOwner, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x96A0, Name: ConnectionObjectIsTToORedundantOwner, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x96D3, Name: ConnectionObjectGetConnectionType, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x9738, Name: ConnectionObjectGetOToTConnectionType, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x976B, Name: ConnectionObjectGetTToOConnectionType, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x979E, Name: ConnectionObjectGetPriority, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x983D, Name: ConnectionObjectGetOToTPriority, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x9870, Name: ConnectionObjectGetTToOPriority, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x98A3, Name: ConnectionObjectGetConnectionSizeType, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x98EF, Name: ConnectionObjectGetOToTConnectionSizeType, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x9922, Name: ConnectionObjectGetTToOConnectionSizeType, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x9955, Name: ConnectionObjectGetConnectionSize, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x998F, Name: ConnectionObjectGetOToTConnectionSize, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x99C2, Name: ConnectionObjectGetTToOConnectionSize, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x99F5, Name: ConnectionObjectDeepCopy, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x9A24, Name: ConnectionObjectResetSequenceCounts, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x9A74, Name: ConnectionObjectResetProductionInhibitTimer, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x9A99, Name: ConnectionObjectGeneralConfiguration, Type: Unknown
2025-03-08 21:06:21,830 - my_text.py:107  -   Address: 0x9B4E, Name: ConnectionObjectEqualOriginator, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0x9B9F, Name: EqualConnectionTriad, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0x9C0B, Name: CipConnectionObjectOriginatorHasSameIP, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0x9C33, Name: GetPaddedLogicalPath, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0x9CDC, Name: GetConnectionId, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0x9D09, Name: InitializeConnectionManager, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0x9EFB, Name: ConnectionManagerInit, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0xA0AD, Name: HandleReceivedConnectedData, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0xA1F5, Name: HandleNullNonMatchingForwardOpenRequest, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0xA22D, Name: HandleNullMatchingForwardOpenRequest, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0xA265, Name: HandleNonNullMatchingForwardOpenRequest, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0xA29D, Name: HandleNonNullNonMatchingForwardOpenRequest, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0xA3FF, Name: LargeForwardOpen, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0xA446, Name: ForwardOpen, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0xA48D, Name: ForwardOpenRoutine, Type: Unknown
2025-03-08 21:06:21,831 - my_text.py:107  -   Address: 0xA624, Name: ForwardClose, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xA7CD, Name: GetConnectionOwner, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xA7F0, Name: GetConnectionData, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xA8C3, Name: SearchConnectionData, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xA9DD, Name: AssembleConnectionDataResponseMessage, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xAC5A, Name: ManageConnections, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xAEF8, Name: AssembleForwardOpenResponse, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xB15D, Name: AddNullAddressItem, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xB1B1, Name: AssembleForwardCloseResponse, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xB2F1, Name: GetConnectedObject, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xB35B, Name: GetConnectedOutputAssembly, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xB3EE, Name: CheckForExistingConnection, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xB45F, Name: CheckElectronicKeyData, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xB62C, Name: ParseConnectionPath, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xBE98, Name: CloseConnection, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xBF14, Name: AddNewActiveConnection, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xBF4B, Name: RemoveFromActiveConnections, Type: Unknown
2025-03-08 21:06:21,832 - my_text.py:107  -   Address: 0xBFC5, Name: IsConnectedOutputAssembly, Type: Unknown
2025-03-08 21:06:21,833 - my_text.py:107  -   Address: 0xC03A, Name: AddConnectableObject, Type: Unknown
2025-03-08 21:06:21,833 - my_text.py:107  -   Address: 0xC0D6, Name: GetConnectionManagementEntry, Type: Unknown
2025-03-08 21:06:21,833 - my_text.py:107  -   Address: 0xC139, Name: TriggerConnections, Type: Unknown
2025-03-08 21:06:21,833 - my_text.py:107  -   Address: 0xC1D6, Name: CheckForTimedOutConnectionsAndCloseTCPConnections, Type: Unknown
2025-03-08 21:06:21,833 - my_text.py:107  -   Address: 0xC26D, Name: InitializeConnectionManagerData, Type: Unknown
2025-03-08 21:06:21,833 - my_text.py:107  -   Address: 0xC2A1, Name: CipEthernetLinkInit, Type: Unknown
2025-03-08 21:06:21,833 - my_text.py:107  -   Address: 0xC779, Name: CipEthernetLinkSetMac, Type: Unknown
2025-03-08 21:06:21,834 - my_text.py:107  -   Address: 0xC7D6, Name: EncodeCipEthernetLinkInterfaceCounters, Type: Unknown
2025-03-08 21:06:21,834 - my_text.py:107  -   Address: 0xC803, Name: EncodeCipEthernetLinkMediaCounters, Type: Unknown
2025-03-08 21:06:21,834 - my_text.py:107  -   Address: 0xC830, Name: EncodeCipEthernetLinkInterfaceControl, Type: Unknown
2025-03-08 21:06:21,834 - my_text.py:107  -   Address: 0xC87C, Name: EncodeCipEthernetLinkInterfaceCaps, Type: Unknown
2025-03-08 21:06:21,834 - my_text.py:107  -   Address: 0xC990, Name: SetDeviceRevision, Type: Unknown
2025-03-08 21:06:21,834 - my_text.py:107  -   Address: 0xC9B9, Name: SetDeviceSerialNumber, Type: Unknown
2025-03-08 21:06:21,834 - my_text.py:107  -   Address: 0xC9D0, Name: SetDeviceType, Type: Unknown
2025-03-08 21:06:21,834 - my_text.py:107  -   Address: 0xC9EC, Name: SetDeviceProductCode, Type: Unknown
2025-03-08 21:06:21,834 - my_text.py:107  -   Address: 0xCA08, Name: SetDeviceStatus, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCA33, Name: SetDeviceVendorId, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCA4F, Name: GetDeviceVendorId, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCA60, Name: SetDeviceProductName, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCA8F, Name: GetDeviceProductName, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCAA0, Name: MergeStatusAndExtStatus, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCAE5, Name: CipIdentitySetStatusFlags, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCB17, Name: CipIdentityClearStatusFlags, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCB4B, Name: CipIdentitySetExtendedDeviceStatus, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCB70, Name: IdentityObjectPreResetCallback, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCC11, Name: InitializeCipIdentity, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCE15, Name: EncodeRevision, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xCE65, Name: CipIdentityInit, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xD11A, Name: CipRunIdleHeaderSetO2T, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xD134, Name: CipRunIdleHeaderGetO2T, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xD14A, Name: CipRunIdleHeaderSetT2O, Type: Unknown
2025-03-08 21:06:21,835 - my_text.py:107  -   Address: 0xD164, Name: CipRunIdleHeaderGetT2O, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xD17A, Name: ProcessProductionInhibitTime, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xD21E, Name: SetIoConnectionCallbacks, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xD275, Name: SetupIoConnectionOriginatorToTargetConnectionPoint, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xD3D4, Name: SetupIoConnectionTargetToOriginatorConnectionPoint, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xD67D, Name: EstablishIoConnection, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xD86C, Name: AllocateSocketAddressInfoItem, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xD8D1, Name: OpenConsumingPointToPointConnection, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xDA1E, Name: OpenProducingPointToPointConnection, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xDAE2, Name: OpenProducingMulticastConnection, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xDC5F, Name: OpenMulticastConnection, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xDFDD, Name: HandleConfigData, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xE156, Name: transfer_master_connection, Type: Unknown
2025-03-08 21:06:21,836 - my_text.py:107  -   Address: 0xE21A, Name: CloseIoConnection, Type: Unknown
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xE2D8, Name: HandleIoConnectionTimeOut, Type: Unknown
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xE416, Name: SendConnectedData, Type: Unknown
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xE750, Name: HandleReceivedIoConnectionData, Type: Unknown
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xE869, Name: OpenCommunicationChannels, Type: Unknown
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xE948, Name: CloseCommunicationChannelsAndRemoveFromActiveConnectionsList, Type: Unknown
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xE9BB, Name: InitializeCipMessageRouterClass, Type: Unknown
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xEBAD, Name: CipMessageRouterInit, Type: Unknown
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xEC39, Name: GetRegisteredObject, Type: None
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xECB0, Name: GetCipClass, Type: Unknown
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xECE5, Name: GetCipInstance, Type: None
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xED3F, Name: RegisterCipClass, Type: Unknown
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xEDC0, Name: NotifyMessageRouter, Type: None
2025-03-08 21:06:21,837 - my_text.py:107  -   Address: 0xEEED, Name: CreateMessageRouterRequestStructure, Type: None
2025-03-08 21:06:21,838 - my_text.py:107  -   Address: 0xEFB5, Name: DeleteAllClasses, Type: Unknown
2025-03-08 21:06:21,838 - my_text.py:107  -   Address: 0xF15F, Name: EncodeCipTcpIpInterfaceConfiguration, Type: Unknown
2025-03-08 21:06:21,838 - my_text.py:107  -   Address: 0xF22A, Name: EncodeCipTcpIpMulticastConfiguration, Type: Unknown
2025-03-08 21:06:21,838 - my_text.py:107  -   Address: 0xF2C0, Name: EncodeSafetyNetworkNumber, Type: Unknown
2025-03-08 21:06:21,838 - my_text.py:107  -   Address: 0xF2ED, Name: EncodeCipLastConflictDetected, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xF34B, Name: DecodeTcpIpInterfaceConfigurationControl, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xF3CE, Name: DecodeCipTcpIpInterfaceEncapsulationInactivityTimeout, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xF432, Name: CipTcpIpInterfaceInit, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xF7E3, Name: ShutdownTcpIpInterface, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xF83A, Name: CipTcpIpCalculateMulticastIp, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xF8A1, Name: GetEncapsulationInactivityTimeout, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xF909, Name: GetPathSegmentType, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xFA03, Name: SetPathSegmentType, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xFA88, Name: def_FA3D, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xFAAA, Name: GetPathPortSegmentExtendedLinkAddressSizeBit, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xFADD, Name: GetPathPortSegmentPortIdentifier, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xFB5D, Name: SetPathPortSegmentPortIdentifier, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xFBAA, Name: GetPathPortSegmentLinkAddressSize, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xFBF9, Name: GetPathPortSegmentExtendedPortNumber, Type: Unknown
2025-03-08 21:06:21,839 - my_text.py:107  -   Address: 0xFC88, Name: SetPathPortSegmentExtendedPortIdentifier, Type: Unknown
2025-03-08 21:06:21,840 - my_text.py:107  -   Address: 0xFCF8, Name: GetPathLogicalSegmentLogicalType, Type: Unknown
2025-03-08 21:06:21,840 - my_text.py:107  -   Address: 0xFDC8, Name: def_FD7D, Type: Unknown
2025-03-08 21:06:21,840 - my_text.py:107  -   Address: 0xFDCE, Name: SetPathLogicalSegmentLogicalType, Type: Unknown
2025-03-08 21:06:21,840 - my_text.py:107  -   Address: 0xFEE3, Name: def_FE3C, Type: Unknown
2025-03-08 21:06:21,840 - my_text.py:107  -   Address: 0xFF05, Name: GetPathLogicalSegmentLogicalFormat, Type: Unknown
2025-03-08 21:06:21,840 - my_text.py:107  -   Address: 0xFF9E, Name: SetPathLogicalSegmentLogicalFormat, Type: Unknown
2025-03-08 21:06:21,840 - my_text.py:107  -   Address: 0x10054, Name: CipEpathGetLogicalValue, Type: Unknown
2025-03-08 21:06:21,840 - my_text.py:107  -   Address: 0x1010C, Name: CipEpathSetLogicalValue, Type: Unknown
2025-03-08 21:06:21,841 - my_text.py:107  -   Address: 0x10231, Name: GetPathLogicalSegmentExtendedLogicalType, Type: Unknown
2025-03-08 21:06:21,841 - my_text.py:107  -   Address: 0x102F1, Name: def_102B0, Type: Unknown
2025-03-08 21:06:21,841 - my_text.py:107  -   Address: 0x102F6, Name: GetPathLogicalSegmentSpecialTypeLogicalType, Type: Unknown
2025-03-08 21:06:21,841 - my_text.py:107  -   Address: 0x103A0, Name: GetPathLogicalSegmentElectronicKeyFormat, Type: Unknown
2025-03-08 21:06:21,841 - my_text.py:107  -   Address: 0x10410, Name: GetElectronicKeyFormat4FromMessage, Type: Unknown
2025-03-08 21:06:21,841 - my_text.py:107  -   Address: 0x104FD, Name: GetPathNetworkSegmentSubtype, Type: Unknown
2025-03-08 21:06:21,841 - my_text.py:107  -   Address: 0x105BB, Name: def_10582, Type: Unknown
2025-03-08 21:06:21,841 - my_text.py:107  -   Address: 0x105C8, Name: GetPathNetworkSegmentProductionInhibitTimeInMilliseconds, Type: Unknown
2025-03-08 21:06:21,841 - my_text.py:107  -   Address: 0x10645, Name: GetPathNetworkSegmentProductionInhibitTimeInMicroseconds, Type: Unknown
2025-03-08 21:06:21,841 - my_text.py:107  -   Address: 0x10720, Name: GetPathSymbolicSegmentFormat, Type: Unknown
2025-03-08 21:06:21,842 - my_text.py:107  -   Address: 0x10752, Name: GetPathSymbolicSegmentASCIIFormatLength, Type: Unknown
2025-03-08 21:06:21,842 - my_text.py:107  -   Address: 0x107A3, Name: GetPathSymbolicSegmentNumericType, Type: Unknown
2025-03-08 21:06:21,843 - my_text.py:107  -   Address: 0x10813, Name: GetPathSymbolicSegmentExtendedFormat, Type: Unknown
2025-03-08 21:06:21,843 - my_text.py:107  -   Address: 0x108F5, Name: GetPathDataSegmentSubtype, Type: Unknown
2025-03-08 21:06:21,843 - my_text.py:107  -   Address: 0x1094C, Name: GetPathDataSegmentSimpleDataWordLength, Type: Unknown
2025-03-08 21:06:21,843 - my_text.py:107  -   Address: 0x109F9, Name: CipEpathGetNeededLogicalFormatForValue, Type: Unknown
2025-03-08 21:06:21,843 - my_text.py:107  -   Address: 0x10A30, Name: CipEpathEqual, Type: Unknown
2025-03-08 21:06:21,843 - my_text.py:107  -   Address: 0x10AA4, Name: ElectronicKeySetKeyFormat, Type: Unknown
2025-03-08 21:06:21,843 - my_text.py:107  -   Address: 0x10AC2, Name: ElectronicKeyGetKeyFormat, Type: Unknown
2025-03-08 21:06:21,843 - my_text.py:107  -   Address: 0x10ADA, Name: ElectronicKeySetKeyData, Type: Unknown
2025-03-08 21:06:21,843 - my_text.py:107  -   Address: 0x10AF9, Name: ElectronicKeyGetKeyData, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10B0F, Name: ElectronicKeyFormat4New, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10B28, Name: ElectronicKeyFormat4Delete, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10B55, Name: ElectronicKeyFormat4SetVendorId, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10B75, Name: ElectronicKeyFormat4GetVendorId, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10B8A, Name: ElectronicKeyFormat4SetDeviceType, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10BAB, Name: ElectronicKeyFormat4GetDeviceType, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10BC1, Name: ElectronicKeyFormat4SetProductCode, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10BE2, Name: ElectronicKeyFormat4GetProductCode, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10BF8, Name: ElectronicKeyFormat4SetMajorRevisionCompatibility, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10C17, Name: ElectronicKeyFormat4GetMajorRevision, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10C34, Name: ElectronicKeyFormat4GetMajorRevisionCompatibility, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10C62, Name: ElectronicKeyFormat4SetMinorRevision, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10C81, Name: ElectronicKeyFormat4GetMinorRevision, Type: Unknown
2025-03-08 21:06:21,844 - my_text.py:107  -   Address: 0x10C97, Name: ClearCipStringN, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x10CF0, Name: FreeCipStringN, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x10D22, Name: SetCipStringNByData, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x10E02, Name: SetCipStringNByCstr, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x10E7B, Name: FreeCipString2, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x10EAD, Name: ClearCipString2, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x10EFC, Name: SetCipString2ByData, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x10F92, Name: SetCipString2ByCstr, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x10FCC, Name: ClearCipString, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x1101B, Name: FreeCipString, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x1104D, Name: SetCipStringByData, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x110DE, Name: SetCipStringByCstr, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x11115, Name: ClearCipShortString, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x11162, Name: FreeCipShortString, Type: Unknown
2025-03-08 21:06:21,845 - my_text.py:107  -   Address: 0x11194, Name: SetCipShortStringByData, Type: Unknown
2025-03-08 21:06:21,846 - my_text.py:107  -   Address: 0x11222, Name: SetCipShortStringByCstr, Type: Unknown
2025-03-08 21:06:21,846 - my_text.py:107  -   Address: 0x11259, Name: GetCstrFromCipShortString, Type: Unknown
2025-03-08 21:06:21,846 - my_text.py:107  -   Address: 0x11302, Name: DecodeCipQoSAttribute, Type: Unknown
2025-03-08 21:06:21,846 - my_text.py:107  -   Address: 0x1137B, Name: CipQosGetDscpPriority, Type: Unknown
2025-03-08 21:06:21,846 - my_text.py:107  -   Address: 0x113ED, Name: CipQoSInit, Type: Unknown
2025-03-08 21:06:21,846 - my_text.py:107  -   Address: 0x1167E, Name: CipQosUpdateUsedSetQosValues, Type: Unknown
2025-03-08 21:06:21,846 - my_text.py:107  -   Address: 0x116B0, Name: CipQosResetAttributesToDefaultValues, Type: Unknown
2025-03-08 21:06:21,846 - my_text.py:107  -   Address: 0x116F3, Name: GetCipDataTypeLength, Type: Unknown
2025-03-08 21:06:21,846 - my_text.py:107  -   Address: 0x11810, Name: def_11742, Type: Unknown
2025-03-08 21:06:21,846 - my_text.py:107  -   Address: 0x11827, Name: ConfigureExclusiveOwnerConnectionPoint, Type: Unknown
2025-03-08 21:06:21,847 - my_text.py:107  -   Address: 0x11889, Name: ConfigureInputOnlyConnectionPoint, Type: Unknown
2025-03-08 21:06:21,847 - my_text.py:107  -   Address: 0x118EB, Name: ConfigureListenOnlyConnectionPoint, Type: Unknown
2025-03-08 21:06:21,847 - my_text.py:107  -   Address: 0x1194D, Name: GetIoConnectionForConnectionData, Type: Unknown
2025-03-08 21:06:21,847 - my_text.py:107  -   Address: 0x11A52, Name: GetExclusiveOwnerConnection, Type: Unknown
2025-03-08 21:06:21,847 - my_text.py:107  -   Address: 0x11BDF, Name: GetInputOnlyConnection, Type: Unknown
2025-03-08 21:06:21,847 - my_text.py:107  -   Address: 0x11E98, Name: GetListenOnlyConnection, Type: Unknown
2025-03-08 21:06:21,847 - my_text.py:107  -   Address: 0x12178, Name: GetExistingProducerIoConnection, Type: Unknown
2025-03-08 21:06:21,847 - my_text.py:107  -   Address: 0x12228, Name: GetNextNonControlMasterConnection, Type: Unknown
2025-03-08 21:06:21,847 - my_text.py:107  -   Address: 0x122C5, Name: CloseAllConnectionsForInputWithSameType, Type: Unknown
2025-03-08 21:06:21,847 - my_text.py:107  -   Address: 0x1239E, Name: CloseAllConnections, Type: Unknown
2025-03-08 21:06:21,847 - my_text.py:107  -   Address: 0x1241C, Name: ConnectionWithSameConfigPointExists, Type: Unknown
2025-03-08 21:06:21,848 - my_text.py:107  -   Address: 0x1249B, Name: InitializeIoConnectionData, Type: Unknown
2025-03-08 21:06:21,848 - my_text.py:107  -   Address: 0x124E8, Name: CreateAssemblyClass, Type: Unknown
2025-03-08 21:06:21,848 - my_text.py:107  -   Address: 0x125B5, Name: CipAssemblyInitialize, Type: Unknown
2025-03-08 21:06:21,848 - my_text.py:107  -   Address: 0x125D5, Name: ShutdownAssemblies, Type: Unknown
2025-03-08 21:06:21,848 - my_text.py:107  -   Address: 0x1264B, Name: CreateAssemblyObject, Type: Unknown
2025-03-08 21:06:21,848 - my_text.py:107  -   Address: 0x12766, Name: NotifyAssemblyConnectedDataReceived, Type: Unknown
2025-03-08 21:06:21,848 - my_text.py:107  -   Address: 0x127CE, Name: DecodeCipAssemblyAttribute3, Type: Unknown
2025-03-08 21:06:21,848 - my_text.py:107  -   Address: 0x128C7, Name: AssemblyPreGetCallback, Type: Unknown
2025-03-08 21:06:21,848 - my_text.py:107  -   Address: 0x128F7, Name: AssemblyPostSetCallback, Type: Unknown
2025-03-08 21:06:21,848 - my_text.py:107  -   Address: 0x12924, Name: Class3ConnectionTimeoutHandler, Type: Unknown
2025-03-08 21:06:21,848 - my_text.py:107  -   Address: 0x12959, Name: EstablishClass3Connection, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x129FB, Name: GetFreeExplicitConnection, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12A76, Name: InitializeClass3ConnectionData, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12A97, Name: CipClass3ConnectionObjectStateEstablishedHandler, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12ADB, Name: CipClass3ConnectionObjectStateNonExistentHandler, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12B13, Name: DoublyLinkedListInitialize, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12B59, Name: DoublyLinkedListDestroy, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12BF9, Name: DoublyLinkedListNodeCreate, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12C2E, Name: DoublyLinkedListNodeDestroy, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12C82, Name: DoublyLinkedListInsertAtHead, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12D2D, Name: DoublyLinkedListInsertAtTail, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12DDC, Name: DoublyLinkedListInsertBeforeNode, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12E94, Name: DoublyLinkedListInsertAfterNode, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x12F4F, Name: DoublyLinkedListRemoveNode, Type: Unknown
2025-03-08 21:06:21,849 - my_text.py:107  -   Address: 0x13026, Name: InitializeENIPMessage, Type: None
2025-03-08 21:06:21,850 - my_text.py:107  -   Address: 0x1305E, Name: ApplicationInitialization, Type: Unknown
2025-03-08 21:06:21,850 - my_text.py:107  -   Address: 0x1318A, Name: HandleApplication, Type: Unknown
2025-03-08 21:06:21,850 - my_text.py:107  -   Address: 0x13195, Name: CheckIoConnectionEvent, Type: Unknown
2025-03-08 21:06:21,850 - my_text.py:107  -   Address: 0x131A9, Name: AfterAssemblyDataReceived, Type: Unknown
2025-03-08 21:06:21,850 - my_text.py:107  -   Address: 0x13214, Name: BeforeAssemblyDataSend, Type: Unknown
2025-03-08 21:06:21,850 - my_text.py:107  -   Address: 0x13227, Name: ResetDevice, Type: Unknown
2025-03-08 21:06:21,850 - my_text.py:107  -   Address: 0x13240, Name: ResetDeviceToInitialConfiguration, Type: Unknown
2025-03-08 21:06:21,850 - my_text.py:107  -   Address: 0x13262, Name: CipCalloc, Type: Unknown
2025-03-08 21:06:21,850 - my_text.py:107  -   Address: 0x1328B, Name: CipFree, Type: Unknown
2025-03-08 21:06:21,851 - my_text.py:107  -   Address: 0x132AA, Name: RunIdleChanged, Type: Unknown
2025-03-08 21:06:21,851 - my_text.py:107  -   Address: 0x132DC, Name: InitializeMessageRouterResponse, Type: None
2025-03-08 21:06:21,851 - my_text.py:107  -   Address: 0x13315, Name: NotifyCommonPacketFormat, Type: None
2025-03-08 21:06:21,851 - my_text.py:107  -   Address: 0x13550, Name: NotifyConnectedCommonPacketFormat, Type: Unknown
2025-03-08 21:06:21,851 - my_text.py:107  -   Address: 0x138A3, Name: CreateCommonPacketFormatStructure, Type: None
2025-03-08 21:06:21,851 - my_text.py:107  -   Address: 0x13C66, Name: EncodeNullAddressItem, Type: None
2025-03-08 21:06:21,851 - my_text.py:107  -   Address: 0x13C9B, Name: EncodeConnectedAddressItem, Type: None
2025-03-08 21:06:21,851 - my_text.py:107  -   Address: 0x13CE9, Name: EncodeSequencedAddressItem, Type: None
2025-03-08 21:06:21,851 - my_text.py:107  -   Address: 0x13D51, Name: EncodeItemCount, Type: None
2025-03-08 21:06:21,851 - my_text.py:107  -   Address: 0x13D80, Name: EncodeDataItemType, Type: None
2025-03-08 21:06:21,852 - my_text.py:107  -   Address: 0x13DB0, Name: EncodeDataItemLength, Type: None
2025-03-08 21:06:21,852 - my_text.py:107  -   Address: 0x13DE0, Name: EncodeDataItemData, Type: None
2025-03-08 21:06:21,852 - my_text.py:107  -   Address: 0x13E68, Name: EncodeConnectedDataItemLength, Type: None
2025-03-08 21:06:21,852 - my_text.py:107  -   Address: 0x13EAF, Name: EncodeSequenceNumber, Type: None
2025-03-08 21:06:21,852 - my_text.py:107  -   Address: 0x13EDE, Name: EncodeReplyService, Type: None
2025-03-08 21:06:21,852 - my_text.py:107  -   Address: 0x13F0D, Name: EncodeReservedFieldOfLengthByte, Type: None
2025-03-08 21:06:21,852 - my_text.py:107  -   Address: 0x13F3D, Name: EncodeGeneralStatus, Type: None
2025-03-08 21:06:21,852 - my_text.py:107  -   Address: 0x13F6D, Name: EncodeExtendedStatusLength, Type: Unknown
2025-03-08 21:06:21,852 - my_text.py:107  -   Address: 0x13F9D, Name: EncodeExtendedStatusDataItems, Type: Unknown
2025-03-08 21:06:21,853 - my_text.py:107  -   Address: 0x13FF9, Name: EncodeExtendedStatus, Type: None
2025-03-08 21:06:21,853 - my_text.py:107  -   Address: 0x14036, Name: EncodeUnconnectedDataItemLength, Type: None
2025-03-08 21:06:21,853 - my_text.py:107  -   Address: 0x1407D, Name: EncodeMessageRouterResponseData, Type: None
2025-03-08 21:06:21,853 - my_text.py:107  -   Address: 0x14105, Name: EncodeSockaddrInfoItemTypeId, Type: None
2025-03-08 21:06:21,853 - my_text.py:107  -   Address: 0x1417D, Name: EncodeSockaddrInfoLength, Type: None
2025-03-08 21:06:21,853 - my_text.py:107  -   Address: 0x141CA, Name: AssembleLinearMessage, Type: None
2025-03-08 21:06:21,853 - my_text.py:107  -   Address: 0x144A8, Name: AssembleIOMessage, Type: Unknown
2025-03-08 21:06:21,854 - my_text.py:107  -   Address: 0x144D4, Name: EncapsulationInit, Type: Unknown
2025-03-08 21:06:21,854 - my_text.py:107  -   Address: 0x14597, Name: HandleReceivedExplictTcpData, Type: None
2025-03-08 21:06:21,854 - my_text.py:107  -   Address: 0x14770, Name: def_146B2, Type: Unknown
2025-03-08 21:06:21,854 - my_text.py:107  -   Address: 0x147A2, Name: HandleReceivedExplictUdpData, Type: Unknown
2025-03-08 21:06:21,854 - my_text.py:107  -   Address: 0x14921, Name: SkipEncapsulationHeader, Type: None
2025-03-08 21:06:21,854 - my_text.py:107  -   Address: 0x1494A, Name: GenerateEncapsulationHeader, Type: None
2025-03-08 21:06:21,854 - my_text.py:107  -   Address: 0x14A31, Name: HandleReceivedListServicesCommand, Type: None
2025-03-08 21:06:21,856 - my_text.py:107  -   Address: 0x14B39, Name: HandleReceivedListInterfacesCommand, Type: None
2025-03-08 21:06:21,856 - my_text.py:107  -   Address: 0x14B8A, Name: HandleReceivedListIdentityCommandTcp, Type: None
2025-03-08 21:06:21,856 - my_text.py:107  -   Address: 0x14BB4, Name: HandleReceivedListIdentityCommandUdp, Type: Unknown
2025-03-08 21:06:21,856 - my_text.py:107  -   Address: 0x14C9A, Name: ListIdentityGetCipIdentityItemLength, Type: Unknown
2025-03-08 21:06:21,856 - my_text.py:107  -   Address: 0x14CB1, Name: EncodeListIdentityCipIdentityItem, Type: Unknown
2025-03-08 21:06:21,856 - my_text.py:107  -   Address: 0x14E8A, Name: EncapsulateListIdentityResponseMessage, Type: Unknown
2025-03-08 21:06:21,856 - my_text.py:107  -   Address: 0x14EF0, Name: DetermineDelayTime, Type: Unknown
2025-03-08 21:06:21,856 - my_text.py:107  -   Address: 0x14F55, Name: EncapsulateRegisterSessionCommandResponseMessage, Type: None
2025-03-08 21:06:21,856 - my_text.py:107  -   Address: 0x14FDF, Name: HandleReceivedRegisterSessionCommand, Type: None
2025-03-08 21:06:21,856 - my_text.py:107  -   Address: 0x15147, Name: HandleReceivedUnregisterSessionCommand, Type: None
2025-03-08 21:06:21,857 - my_text.py:107  -   Address: 0x15216, Name: HandleReceivedSendUnitDataCommand, Type: None
2025-03-08 21:06:21,857 - my_text.py:107  -   Address: 0x152E9, Name: HandleReceivedSendRequestResponseDataCommand, Type: None
2025-03-08 21:06:21,857 - my_text.py:107  -   Address: 0x153BC, Name: HandleReceivedInvalidCommand, Type: None
2025-03-08 21:06:21,857 - my_text.py:107  -   Address: 0x153FB, Name: GetFreeSessionIndex, Type: None
2025-03-08 21:06:21,857 - my_text.py:107  -   Address: 0x15442, Name: CreateEncapsulationStructure, Type: None
2025-03-08 21:06:21,857 - my_text.py:107  -   Address: 0x15547, Name: CheckRegisteredSessions, Type: None
2025-03-08 21:06:21,857 - my_text.py:107  -   Address: 0x1559F, Name: CloseSessionBySessionHandle, Type: Unknown
2025-03-08 21:06:21,858 - my_text.py:107  -   Address: 0x155FF, Name: CloseSession, Type: Unknown
2025-03-08 21:06:21,858 - my_text.py:107  -   Address: 0x15672, Name: RemoveSession, Type: None
2025-03-08 21:06:21,858 - my_text.py:107  -   Address: 0x156DB, Name: EncapsulationShutDown, Type: Unknown
2025-03-08 21:06:21,858 - my_text.py:107  -   Address: 0x15758, Name: ManageEncapsulationMessages, Type: Unknown
2025-03-08 21:06:21,858 - my_text.py:107  -   Address: 0x15891, Name: CloseEncapsulationSessionBySockAddr, Type: Unknown
2025-03-08 21:06:21,858 - my_text.py:107  -   Address: 0x1599D, Name: GetSessionFromSocket, Type: Unknown
2025-03-08 21:06:21,858 - my_text.py:107  -   Address: 0x159E1, Name: CloseClass3ConnectionBasedOnSession, Type: None
2025-03-08 21:06:21,858 - my_text.py:107  -   Address: 0x15A54, Name: GetSintFromMessage, Type: Unknown
2025-03-08 21:06:21,858 - my_text.py:107  -   Address: 0x15A8D, Name: GetByteFromMessage, Type: Unknown
2025-03-08 21:06:21,859 - my_text.py:107  -   Address: 0x15AC6, Name: GetUsintFromMessage, Type: Unknown
2025-03-08 21:06:21,859 - my_text.py:107  -   Address: 0x15AFF, Name: GetBoolFromMessage, Type: Unknown
2025-03-08 21:06:21,859 - my_text.py:107  -   Address: 0x15B38, Name: GetIntFromMessage, Type: None
2025-03-08 21:06:21,859 - my_text.py:107  -   Address: 0x15B88, Name: GetUintFromMessage, Type: None
2025-03-08 21:06:21,859 - my_text.py:107  -   Address: 0x15BD8, Name: GetWordFromMessage, Type: Unknown
2025-03-08 21:06:21,859 - my_text.py:107  -   Address: 0x15C28, Name: GetDintFromMessage, Type: None
2025-03-08 21:06:21,859 - my_text.py:107  -   Address: 0x15C9C, Name: GetUdintFromMessage, Type: None
2025-03-08 21:06:21,860 - my_text.py:107  -   Address: 0x15D10, Name: GetDwordFromMessage, Type: Unknown
2025-03-08 21:06:21,860 - my_text.py:107  -   Address: 0x15D84, Name: AddSintToMessage, Type: None
2025-03-08 21:06:21,860 - my_text.py:107  -   Address: 0x15DDD, Name: AddIntToMessage, Type: None
2025-03-08 21:06:21,860 - my_text.py:107  -   Address: 0x15E52, Name: AddDintToMessage, Type: None
2025-03-08 21:06:21,860 - my_text.py:107  -   Address: 0x15EF3, Name: GetLintFromMessage, Type: Unknown
2025-03-08 21:06:21,860 - my_text.py:107  -   Address: 0x16000, Name: AddLintToMessage, Type: Unknown
2025-03-08 21:06:21,860 - my_text.py:107  -   Address: 0x1611C, Name: EncapsulateIpAddress, Type: None
2025-03-08 21:06:21,860 - my_text.py:107  -   Address: 0x16261, Name: DetermineEndianess, Type: Unknown
2025-03-08 21:06:21,860 - my_text.py:107  -   Address: 0x162C3, Name: GetEndianess, Type: Unknown
2025-03-08 21:06:21,860 - my_text.py:107  -   Address: 0x162D3, Name: MoveMessageNOctets, Type: Unknown
2025-03-08 21:06:21,860 - my_text.py:107  -   Address: 0x16321, Name: FillNextNMessageOctetsWith, Type: Unknown
2025-03-08 21:06:21,861 - my_text.py:107  -   Address: 0x16358, Name: FillNextNMessageOctetsWithValueAndMoveToNextPosition, Type: None
2025-03-08 21:06:21,861 - my_text.py:107  -   Address: 0x16398, Name: NvdataLoad, Type: Unknown
2025-03-08 21:06:21,861 - my_text.py:107  -   Address: 0x163DC, Name: NvQosSetCallback, Type: Unknown
2025-03-08 21:06:21,861 - my_text.py:107  -   Address: 0x16420, Name: NvTcpipSetCallback, Type: Unknown
2025-03-08 21:06:21,861 - my_text.py:107  -   Address: 0x1646C, Name: NvQosLoad, Type: Unknown
2025-03-08 21:06:21,861 - my_text.py:107  -   Address: 0x165CE, Name: NvQosStore, Type: Unknown
2025-03-08 21:06:21,861 - my_text.py:107  -   Address: 0x166B7, Name: NvTcpipLoad, Type: Unknown
2025-03-08 21:06:21,861 - my_text.py:107  -   Address: 0x16739, Name: NvTcpipStore, Type: Unknown
2025-03-08 21:06:21,861 - my_text.py:107  -   Address: 0x167B5, Name: Mkdir, Type: Unknown
2025-03-08 21:06:21,861 - my_text.py:107  -   Address: 0x167D4, Name: RecMkdir, Type: Unknown
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x16861, Name: FopenMkdir, Type: Unknown
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x168CB, Name: ConfFileOpen, Type: Unknown
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x16965, Name: ConfFileClose, Type: Unknown
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x169B0, Name: __libc_csu_init, Type: None
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x16A20, Name: __libc_csu_fini, Type: None
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x16A28, Name: .term_proc, Type: Unknown
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x17000, Name: _IO_stdin_used, Type: Unknown
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x17008, Name: kEipInvalidSocket, Type: Unknown
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x17010, Name: kOpenerTimerTickInMilliSeconds, Type: Unknown
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x17018, Name: kCipConnectionManagerClassCode, Type: Unknown
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x1701A, Name: kCipEthernetLinkClassCode, Type: Unknown
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x1701C, Name: kCipTcpIpInterfaceClassCode, Type: Unknown
2025-03-08 21:06:21,862 - my_text.py:107  -   Address: 0x17020, Name: kTcpipStatusMcastPend, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x17024, Name: kTcpipStatusIfaceCfgPend, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x17028, Name: kTcpipStatusAcdStatus, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x1702C, Name: kTcpipStatusAcdFault, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x17030, Name: kTcpipCfgCtrlStaticIp, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x17034, Name: kTcpipCfgCtrlBootp, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x17038, Name: kTcpipCfgCtrlDhcp, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x1703C, Name: kTcpipCfgCtrlMethodMask, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x17040, Name: kTcpipCfgCtrlDnsEnable, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x17048, Name: aWrongNumberOfC, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x17072, Name: format, Type: None
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x1708E, Name: aEGOpenerEth1, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x170A8, Name: aNetworkInterfa, Type: None
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x170C9, Name: aOpenerAbortedB, Type: None
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x17100, Name: kEipInvalidSocket_0, Type: Unknown
2025-03-08 21:06:21,863 - my_text.py:107  -   Address: 0x17108, Name: kOpenerTimerTickInMilliSeconds_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x17110, Name: kCipConnectionManagerClassCode_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x17112, Name: kCipTcpIpInterfaceClassCode_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x17114, Name: kTcpipStatusMcastPend_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x17118, Name: kTcpipStatusIfaceCfgPend_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x1711C, Name: kTcpipStatusAcdStatus_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x17120, Name: kTcpipStatusAcdFault_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x17124, Name: kTcpipCfgCtrlStaticIp_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x17128, Name: kTcpipCfgCtrlBootp_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x1712C, Name: kTcpipCfgCtrlDhcp_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x17130, Name: kTcpipCfgCtrlMethodMask_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x17134, Name: kTcpipCfgCtrlDnsEnable_0, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x17138, Name: kCipQoSClassCode, Type: Unknown
2025-03-08 21:06:21,864 - my_text.py:107  -   Address: 0x17140, Name: file, Type: None
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x1718C, Name: assertion, Type: None
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x171A8, Name: a0, Type: None
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x171C0, Name: __PRETTY_FUNCTION__.5892, Type: None
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x171E0, Name: __PRETTY_FUNCTION__.5980, Type: None
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x171F0, Name: kEipInvalidSocket_1, Type: Unknown
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x17200, Name: kEipInvalidSocket_2, Type: Unknown
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x17208, Name: kOpenerTimerTickInMilliSeconds_1, Type: Unknown
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x17210, Name: kCipConnectionManagerClassCode_1, Type: Unknown
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x17218, Name: aHomeLinuxbrewB_0, Type: None
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x17262, Name: a1Error, Type: None
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x17270, Name: __PRETTY_FUNCTION__.6361, Type: None
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x17280, Name: kErrorMessageBufferSize, Type: Unknown
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x17290, Name: kEipInvalidSocket_3, Type: Unknown
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x17298, Name: kOpenerTimerTickInMilliSeconds_2, Type: Unknown
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x172A0, Name: kCipUintZero, Type: Unknown
2025-03-08 21:06:21,865 - my_text.py:107  -   Address: 0x172A2, Name: modes, Type: None
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x172A4, Name: delim, Type: None
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x172A9, Name: s1, Type: None
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x172B0, Name: aDomain, Type: None
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x172B7, Name: aNameserver, Type: None
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x172C8, Name: aHomeLinuxbrewB_1, Type: None
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x17311, Name: aSleepNs1000000, Type: None
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x17330, Name: route_location.5536, Type: None
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x17340, Name: resolv_conf_file.5551, Type: None
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x17360, Name: __PRETTY_FUNCTION__.5577, Type: None
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x17380, Name: kEipInvalidSocket_4, Type: Unknown
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x17388, Name: kOpenerTimerTickInMilliSeconds_3, Type: Unknown
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x17390, Name: kCipUintZero_0, Type: Unknown
2025-03-08 21:06:21,866 - my_text.py:107  -   Address: 0x17392, Name: kCipIdentityClassCode, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x17394, Name: kCipTcpIpInterfaceClassCode_1, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x17398, Name: kTcpipStatusMcastPend_1, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x1739C, Name: kTcpipStatusIfaceCfgPend_1, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x173A0, Name: kTcpipStatusAcdStatus_1, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x173A4, Name: kTcpipStatusAcdFault_1, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x173A8, Name: kTcpipCfgCtrlStaticIp_1, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x173AC, Name: kTcpipCfgCtrlBootp_1, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x173B0, Name: kTcpipCfgCtrlDhcp_1, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x173B4, Name: kTcpipCfgCtrlMethodMask_1, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x173B8, Name: kTcpipCfgCtrlDnsEnable_1, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x173BC, Name: kCipEthernetLinkClassCode_0, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x173BE, Name: kCipConnectionManagerClassCode_2, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x173C0, Name: kCipAssemblyClassCode, Type: Unknown
2025-03-08 21:06:21,867 - my_text.py:107  -   Address: 0x173C2, Name: kCipMessageRouterClassCode, Type: Unknown
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x173C4, Name: kCipQoSClassCode_0, Type: Unknown
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x173C8, Name: aHomeLinuxbrewB_2, Type: None
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x17405, Name: aKeipstatusokEi, Type: None
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x17420, Name: aVoid0ServiceSe, Type: None
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x17450, Name: aVoid0CurrentIn, Type: None
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x17470, Name: aVoid0CurrentIn_0, Type: None
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x174A0, Name: aVoid0Getcipcla, Type: None
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x174C7, Name: aVoid0Name, Type: None
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x174DB, Name: a0NameLen, Type: None
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x174E8, Name: aVoid0CipClassC, Type: None
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x1750D, Name: aMetaS, Type: None
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x17515, Name: aGetattributeal, Type: Unknown
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x17525, Name: aGetattributesi, Type: Unknown
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x17538, Name: aVoid0Data, Type: None
2025-03-08 21:06:21,868 - my_text.py:107  -   Address: 0x1754C, Name: aVoid0Attribute, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x17568, Name: aAttributeNumbe, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x175A0, Name: a0_0, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x175A2, Name: aServiceVoid0, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x175C0, Name: aEpathPathSizeS, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x17612, Name: aBytesConsumedV, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x17630, Name: jpt_8351, Type: Unknown
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x17678, Name: aVoid0NewInstan, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x17698, Name: __PRETTY_FUNCTION__.5688, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x176A8, Name: __PRETTY_FUNCTION__.5703, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x176C0, Name: __PRETTY_FUNCTION__.5731, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x176D0, Name: __PRETTY_FUNCTION__.5753, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x176E0, Name: __PRETTY_FUNCTION__.5766, Type: None
2025-03-08 21:06:21,869 - my_text.py:107  -   Address: 0x176F0, Name: __PRETTY_FUNCTION__.5781, Type: None
2025-03-08 21:06:21,870 - my_text.py:107  -   Address: 0x17700, Name: __PRETTY_FUNCTION__.5814, Type: None
2025-03-08 21:06:21,870 - my_text.py:107  -   Address: 0x17720, Name: __PRETTY_FUNCTION__.5889, Type: None
2025-03-08 21:06:21,870 - my_text.py:107  -   Address: 0x17740, Name: __PRETTY_FUNCTION__.5894, Type: None
2025-03-08 21:06:21,870 - my_text.py:107  -   Address: 0x17760, Name: __PRETTY_FUNCTION__.5911, Type: None
2025-03-08 21:06:21,870 - my_text.py:107  -   Address: 0x17780, Name: __PRETTY_FUNCTION__.5943, Type: None
2025-03-08 21:06:21,870 - my_text.py:107  -   Address: 0x17798, Name: __PRETTY_FUNCTION__.6114, Type: None
2025-03-08 21:06:21,870 - my_text.py:107  -   Address: 0x177B0, Name: __PRETTY_FUNCTION__.6120, Type: None
2025-03-08 21:06:21,870 - my_text.py:107  -   Address: 0x177D0, Name: __PRETTY_FUNCTION__.6146, Type: None
2025-03-08 21:06:21,870 - my_text.py:107  -   Address: 0x17800, Name: kEipInvalidSocket_5, Type: Unknown
2025-03-08 21:06:21,871 - my_text.py:107  -   Address: 0x17808, Name: kOpenerTimerTickInMilliSeconds_4, Type: Unknown
2025-03-08 21:06:21,871 - my_text.py:107  -   Address: 0x17810, Name: kCipConnectionManagerClassCode_3, Type: Unknown
2025-03-08 21:06:21,871 - my_text.py:107  -   Address: 0x17818, Name: aHomeLinuxbrewB_3, Type: None
2025-03-08 21:06:21,871 - my_text.py:107  -   Address: 0x1785F, Name: aFalse, Type: None
2025-03-08 21:06:21,871 - my_text.py:107  -   Address: 0x17868, Name: jpt_8CAA, Type: Unknown
2025-03-08 21:06:21,871 - my_text.py:107  -   Address: 0x17884, Name: a0_2, Type: None
2025-03-08 21:06:21,871 - my_text.py:107  -   Address: 0x17888, Name: jpt_8D33, Type: Unknown
2025-03-08 21:06:21,872 - my_text.py:107  -   Address: 0x178B0, Name: __PRETTY_FUNCTION__.4768, Type: None
2025-03-08 21:06:21,872 - my_text.py:107  -   Address: 0x178D0, Name: __PRETTY_FUNCTION__.4801, Type: None
2025-03-08 21:06:21,872 - my_text.py:107  -   Address: 0x17900, Name: __PRETTY_FUNCTION__.4821, Type: None
2025-03-08 21:06:21,873 - my_text.py:107  -   Address: 0x17930, Name: __PRETTY_FUNCTION__.5058, Type: None
2025-03-08 21:06:21,873 - my_text.py:107  -   Address: 0x17950, Name: kEipInvalidSocket_6, Type: Unknown
2025-03-08 21:06:21,873 - my_text.py:107  -   Address: 0x17958, Name: kOpenerTimerTickInMilliSeconds_5, Type: Unknown
2025-03-08 21:06:21,874 - my_text.py:107  -   Address: 0x17960, Name: kCipConnectionManagerClassCode_4, Type: Unknown
2025-03-08 21:06:21,874 - my_text.py:107  -   Address: 0x17962, Name: kCipUintZero_1, Type: Unknown
2025-03-08 21:06:21,874 - my_text.py:107  -   Address: 0x17964, Name: kCipMessageRouterClassCode_0, Type: Unknown
2025-03-08 21:06:21,874 - my_text.py:107  -   Address: 0x17966, Name: kCipIdentityClassCode_0, Type: Unknown
2025-03-08 21:06:21,875 - my_text.py:107  -   Address: 0x17968, Name: kCipAssemblyClassCode_0, Type: Unknown
2025-03-08 21:06:21,875 - my_text.py:107  -   Address: 0x1796A, Name: kCipQoSClassCode_1, Type: Unknown
2025-03-08 21:06:21,875 - my_text.py:107  -   Address: 0x17970, Name: g_kForwardOpenHeaderLength, Type: Unknown
2025-03-08 21:06:21,875 - my_text.py:107  -   Address: 0x17978, Name: g_kLargeForwardOpenHeaderLength, Type: Unknown
2025-03-08 21:06:21,876 - my_text.py:107  -   Address: 0x17980, Name: g_kNumberOfConnectableObjects, Type: Unknown
2025-03-08 21:06:21,876 - my_text.py:107  -   Address: 0x17984, Name: aGetattributeal_0, Type: Unknown
2025-03-08 21:06:21,876 - my_text.py:107  -   Address: 0x17994, Name: aGetattributesi_0, Type: Unknown
2025-03-08 21:06:21,877 - my_text.py:107  -   Address: 0x179A7, Name: aConnectionMana, Type: None
2025-03-08 21:06:21,877 - my_text.py:107  -   Address: 0x179BA, Name: aForwardopen, Type: Unknown
2025-03-08 21:06:21,877 - my_text.py:107  -   Address: 0x179C6, Name: aLargeforwardop, Type: Unknown
2025-03-08 21:06:21,877 - my_text.py:107  -   Address: 0x179D7, Name: aForwardclose, Type: Unknown
2025-03-08 21:06:21,878 - my_text.py:107  -   Address: 0x179E4, Name: aGetconnectiono, Type: Unknown
2025-03-08 21:06:21,878 - my_text.py:107  -   Address: 0x179F7, Name: aGetconnectiond, Type: Unknown
2025-03-08 21:06:21,878 - my_text.py:107  -   Address: 0x17A09, Name: aSearchconnecti, Type: Unknown
2025-03-08 21:06:21,879 - my_text.py:107  -   Address: 0x17A20, Name: aHomeLinuxbrewB_4, Type: None
2025-03-08 21:06:21,879 - my_text.py:107  -   Address: 0x17A68, Name: aVoid0Connectio, Type: None
2025-03-08 21:06:21,879 - my_text.py:107  -   Address: 0x17AA8, Name: aVoid0Connectio_0, Type: None
2025-03-08 21:06:21,879 - my_text.py:107  -   Address: 0x17AE8, Name: aVoid0Connectio_1, Type: None
2025-03-08 21:06:21,879 - my_text.py:107  -   Address: 0x17B28, Name: aCommonDataPack, Type: None
2025-03-08 21:06:21,879 - my_text.py:107  -   Address: 0x17B80, Name: __PRETTY_FUNCTION__.5771, Type: None
2025-03-08 21:06:21,879 - my_text.py:107  -   Address: 0x17B90, Name: __PRETTY_FUNCTION__.5823, Type: None
2025-03-08 21:06:21,879 - my_text.py:107  -   Address: 0x17BB0, Name: __PRETTY_FUNCTION__.5847, Type: None
2025-03-08 21:06:21,879 - my_text.py:107  -   Address: 0x17BD0, Name: kEipInvalidSocket_7, Type: Unknown
2025-03-08 21:06:21,880 - my_text.py:107  -   Address: 0x17BD8, Name: kOpenerTimerTickInMilliSeconds_6, Type: Unknown
2025-03-08 21:06:21,880 - my_text.py:107  -   Address: 0x17BE0, Name: kCipEthernetLinkClassCode_1, Type: Unknown
2025-03-08 21:06:21,880 - my_text.py:107  -   Address: 0x17BE2, Name: kCipUintZero_2, Type: Unknown
2025-03-08 21:06:21,880 - my_text.py:107  -   Address: 0x17BF0, Name: speed_duplex_table, Type: Unknown
2025-03-08 21:06:21,880 - my_text.py:107  -   Address: 0x17C08, Name: aEthernetLink, Type: None
2025-03-08 21:06:21,880 - my_text.py:107  -   Address: 0x17C16, Name: aGetattributesi_1, Type: Unknown
2025-03-08 21:06:21,880 - my_text.py:107  -   Address: 0x17C29, Name: aGetattributeal_1, Type: Unknown
2025-03-08 21:06:21,880 - my_text.py:107  -   Address: 0x17C40, Name: kEipInvalidSocket_8, Type: Unknown
2025-03-08 21:06:21,880 - my_text.py:107  -   Address: 0x17C48, Name: kOpenerTimerTickInMilliSeconds_7, Type: Unknown
2025-03-08 21:06:21,880 - my_text.py:107  -   Address: 0x17C50, Name: kCipIdentityClassCode_1, Type: Unknown
2025-03-08 21:06:21,881 - my_text.py:107  -   Address: 0x17C52, Name: kCipUintZero_3, Type: Unknown
2025-03-08 21:06:21,881 - my_text.py:107  -   Address: 0x17C54, Name: kCipMessageRouterClassCode_1, Type: Unknown
2025-03-08 21:06:21,881 - my_text.py:107  -   Address: 0x17C56, Name: aGetattributeal_2, Type: Unknown
2025-03-08 21:06:21,881 - my_text.py:107  -   Address: 0x17C66, Name: aGetattributesi_2, Type: Unknown
2025-03-08 21:06:21,881 - my_text.py:107  -   Address: 0x17C79, Name: aIdentity, Type: None
2025-03-08 21:06:21,881 - my_text.py:107  -   Address: 0x17C82, Name: aOpenerPc, Type: Unknown
2025-03-08 21:06:21,881 - my_text.py:107  -   Address: 0x17C8C, Name: aReset, Type: Unknown
2025-03-08 21:06:21,881 - my_text.py:107  -   Address: 0x17C92, Name: aGetattributeli, Type: Unknown
2025-03-08 21:06:21,881 - my_text.py:107  -   Address: 0x17CA3, Name: aSetattributeli, Type: Unknown
2025-03-08 21:06:21,881 - my_text.py:107  -   Address: 0x17CC0, Name: kEipInvalidSocket_9, Type: Unknown
2025-03-08 21:06:21,881 - my_text.py:107  -   Address: 0x17CC8, Name: kOpenerTimerTickInMilliSeconds_8, Type: Unknown
2025-03-08 21:06:21,882 - my_text.py:107  -   Address: 0x17CD0, Name: kCipConnectionManagerClassCode_5, Type: Unknown
2025-03-08 21:06:21,882 - my_text.py:107  -   Address: 0x17CD2, Name: kCipAssemblyClassCode_1, Type: Unknown
2025-03-08 21:06:21,882 - my_text.py:107  -   Address: 0x17CD4, Name: kCipIdentityClassCode_2, Type: Unknown
2025-03-08 21:06:21,882 - my_text.py:107  -   Address: 0x17CD6, Name: kCipTcpIpInterfaceClassCode_2, Type: Unknown
2025-03-08 21:06:21,882 - my_text.py:107  -   Address: 0x17CD8, Name: kTcpipStatusMcastPend_2, Type: Unknown
2025-03-08 21:06:21,882 - my_text.py:107  -   Address: 0x17CDC, Name: kTcpipStatusIfaceCfgPend_2, Type: Unknown
2025-03-08 21:06:21,882 - my_text.py:107  -   Address: 0x17CE0, Name: kTcpipStatusAcdStatus_2, Type: Unknown
2025-03-08 21:06:21,882 - my_text.py:107  -   Address: 0x17CE4, Name: kTcpipStatusAcdFault_2, Type: Unknown
2025-03-08 21:06:21,882 - my_text.py:107  -   Address: 0x17CE8, Name: kTcpipCfgCtrlStaticIp_2, Type: Unknown
2025-03-08 21:06:21,882 - my_text.py:107  -   Address: 0x17CEC, Name: kTcpipCfgCtrlBootp_2, Type: Unknown
2025-03-08 21:06:21,882 - my_text.py:107  -   Address: 0x17CF0, Name: kTcpipCfgCtrlDhcp_2, Type: Unknown
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17CF4, Name: kTcpipCfgCtrlMethodMask_2, Type: Unknown
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17CF8, Name: kTcpipCfgCtrlDnsEnable_2, Type: Unknown
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17CFC, Name: kCipUintZero_4, Type: Unknown
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17D00, Name: aHomeLinuxbrewB_5, Type: None
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17D43, Name: aAttributeVoid0, Type: None
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17D60, Name: aOriginatorToTa, Type: None
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17E00, Name: aVoid0ConfigIns, Type: None
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17E20, Name: aVoid0Attribute_0, Type: None
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17E40, Name: aVoid0Attribute_1, Type: None
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17E80, Name: __PRETTY_FUNCTION__.5620, Type: None
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17EC0, Name: __PRETTY_FUNCTION__.5636, Type: None
2025-03-08 21:06:21,883 - my_text.py:107  -   Address: 0x17F00, Name: __PRETTY_FUNCTION__.5646, Type: None
2025-03-08 21:06:21,884 - my_text.py:107  -   Address: 0x17F20, Name: __PRETTY_FUNCTION__.5696, Type: None
2025-03-08 21:06:21,884 - my_text.py:107  -   Address: 0x17F40, Name: kEipInvalidSocket_10, Type: Unknown
2025-03-08 21:06:21,884 - my_text.py:107  -   Address: 0x17F48, Name: kOpenerTimerTickInMilliSeconds_9, Type: Unknown
2025-03-08 21:06:21,884 - my_text.py:107  -   Address: 0x17F50, Name: kCipUintZero_5, Type: Unknown
2025-03-08 21:06:21,884 - my_text.py:107  -   Address: 0x17F52, Name: kCipMessageRouterClassCode_2, Type: Unknown
2025-03-08 21:06:21,884 - my_text.py:107  -   Address: 0x17F54, Name: aGetattributeal_3, Type: Unknown
2025-03-08 21:06:21,884 - my_text.py:107  -   Address: 0x17F64, Name: aGetattributesi_3, Type: Unknown
2025-03-08 21:06:21,884 - my_text.py:107  -   Address: 0x17F77, Name: aMessageRouter, Type: None
2025-03-08 21:06:21,885 - my_text.py:107  -   Address: 0x17F88, Name: aHomeLinuxbrewB_6, Type: None
2025-03-08 21:06:21,885 - my_text.py:107  -   Address: 0x17FD0, Name: aVoid0ObjectCip, Type: None
2025-03-08 21:06:21,885 - my_text.py:107  -   Address: 0x17FF8, Name: aVoid0Registere, Type: None
2025-03-08 21:06:21,885 - my_text.py:107  -   Address: 0x18030, Name: __PRETTY_FUNCTION__.3503, Type: None
2025-03-08 21:06:21,885 - my_text.py:107  -   Address: 0x18050, Name: __PRETTY_FUNCTION__.3536, Type: None
2025-03-08 21:06:21,885 - my_text.py:107  -   Address: 0x18080, Name: kEipInvalidSocket_11, Type: Unknown
2025-03-08 21:06:21,885 - my_text.py:107  -   Address: 0x18088, Name: kOpenerTimerTickInMilliSeconds_10, Type: Unknown
2025-03-08 21:06:21,885 - my_text.py:107  -   Address: 0x18090, Name: kCipTcpIpInterfaceClassCode_3, Type: Unknown
2025-03-08 21:06:21,885 - my_text.py:107  -   Address: 0x18094, Name: kTcpipStatusMcastPend_3, Type: Unknown
2025-03-08 21:06:21,886 - my_text.py:107  -   Address: 0x18098, Name: kTcpipStatusIfaceCfgPend_3, Type: Unknown
2025-03-08 21:06:21,886 - my_text.py:107  -   Address: 0x1809C, Name: kTcpipStatusAcdStatus_3, Type: Unknown
2025-03-08 21:06:21,886 - my_text.py:107  -   Address: 0x180A0, Name: kTcpipStatusAcdFault_3, Type: Unknown
2025-03-08 21:06:21,886 - my_text.py:107  -   Address: 0x180A4, Name: kTcpipCfgCtrlStaticIp_3, Type: Unknown
2025-03-08 21:06:21,886 - my_text.py:107  -   Address: 0x180A8, Name: kTcpipCfgCtrlBootp_3, Type: Unknown
2025-03-08 21:06:21,886 - my_text.py:107  -   Address: 0x180AC, Name: kTcpipCfgCtrlDhcp_3, Type: Unknown
2025-03-08 21:06:21,886 - my_text.py:107  -   Address: 0x180B0, Name: kTcpipCfgCtrlMethodMask_3, Type: Unknown
2025-03-08 21:06:21,886 - my_text.py:107  -   Address: 0x180B4, Name: kTcpipCfgCtrlDnsEnable_3, Type: Unknown
2025-03-08 21:06:21,886 - my_text.py:107  -   Address: 0x180B8, Name: kCipUintZero_6, Type: Unknown
2025-03-08 21:06:21,887 - my_text.py:107  -   Address: 0x180BA, Name: kCipMessageRouterClassCode_3, Type: Unknown
2025-03-08 21:06:21,887 - my_text.py:107  -   Address: 0x180BC, Name: kCipEthernetLinkClassCode_2, Type: Unknown
2025-03-08 21:06:21,887 - my_text.py:107  -   Address: 0x180BE, Name: kCipAssemblyClassCode_2, Type: Unknown
2025-03-08 21:06:21,887 - my_text.py:107  -   Address: 0x180C0, Name: aHomeLinuxbrewB_7, Type: None
2025-03-08 21:06:21,887 - my_text.py:107  -   Address: 0x18105, Name: aKattribute11si, Type: None
2025-03-08 21:06:21,887 - my_text.py:107  -   Address: 0x1811C, Name: aTcpIpInterface, Type: None
2025-03-08 21:06:21,887 - my_text.py:107  -   Address: 0x1812D, Name: aGetattributesi_4, Type: Unknown
2025-03-08 21:06:21,887 - my_text.py:107  -   Address: 0x18140, Name: aGetattributeal_4, Type: Unknown
2025-03-08 21:06:21,887 - my_text.py:107  -   Address: 0x18150, Name: aSetattributesi, Type: Unknown
2025-03-08 21:06:21,887 - my_text.py:107  -   Address: 0x18163, Name: aVoid0Attribute_2, Type: None
2025-03-08 21:06:21,888 - my_text.py:107  -   Address: 0x18180, Name: __PRETTY_FUNCTION__.4391, Type: None
2025-03-08 21:06:21,889 - my_text.py:107  -   Address: 0x181A0, Name: cip_mcast_base_addr.4416, Type: Unknown
2025-03-08 21:06:21,889 - my_text.py:107  -   Address: 0x181C0, Name: __PRETTY_FUNCTION__.4422, Type: None
2025-03-08 21:06:21,890 - my_text.py:107  -   Address: 0x18200, Name: kEipInvalidSocket_12, Type: Unknown
2025-03-08 21:06:21,890 - my_text.py:107  -   Address: 0x18208, Name: kOpenerTimerTickInMilliSeconds_11, Type: Unknown
2025-03-08 21:06:21,890 - my_text.py:107  -   Address: 0x18210, Name: kPortSegmentExtendedPort, Type: Unknown
2025-03-08 21:06:21,890 - my_text.py:107  -   Address: 0x18218, Name: aHomeLinuxbrewB_8, Type: None
2025-03-08 21:06:21,890 - my_text.py:107  -   Address: 0x18254, Name: a0_1, Type: None
2025-03-08 21:06:21,890 - my_text.py:107  -   Address: 0x18258, Name: jpt_FA3D, Type: Unknown
2025-03-08 21:06:21,890 - my_text.py:107  -   Address: 0x18278, Name: aKsegmenttypepo, Type: None
2025-03-08 21:06:21,890 - my_text.py:107  -   Address: 0x182B0, Name: a0PortIdentifie, Type: None
2025-03-08 21:06:21,890 - my_text.py:107  -   Address: 0x182C5, Name: aPortIdentifier, Type: None
2025-03-08 21:06:21,891 - my_text.py:107  -   Address: 0x182E0, Name: a1Getpathportse, Type: None
2025-03-08 21:06:21,891 - my_text.py:107  -   Address: 0x18320, Name: aKportsegmentex, Type: None
2025-03-08 21:06:21,891 - my_text.py:107  -   Address: 0x18368, Name: aKsegmenttypelo, Type: None
2025-03-08 21:06:21,891 - my_text.py:107  -   Address: 0x183A4, Name: jpt_FD7D, Type: Unknown
2025-03-08 21:06:21,891 - my_text.py:107  -   Address: 0x18418, Name: jpt_FE3C, Type: Unknown
2025-03-08 21:06:21,891 - my_text.py:107  -   Address: 0x18438, Name: aKsegmenttypelo_0, Type: None
2025-03-08 21:06:21,892 - my_text.py:107  -   Address: 0x18488, Name: aLogicalValue25, Type: None
2025-03-08 21:06:21,892 - my_text.py:107  -   Address: 0x184A1, Name: aLogicalValue65, Type: None
2025-03-08 21:06:21,892 - my_text.py:107  -   Address: 0x184C0, Name: aKlogicalsegmen, Type: None
2025-03-08 21:06:21,892 - my_text.py:107  -   Address: 0x1851C, Name: jpt_102B0, Type: Unknown
2025-03-08 21:06:21,892 - my_text.py:107  -   Address: 0x18538, Name: aKlogicalsegmen_0, Type: None
2025-03-08 21:06:21,892 - my_text.py:107  -   Address: 0x18590, Name: aKlogicalsegmen_1, Type: None
2025-03-08 21:06:21,892 - my_text.py:107  -   Address: 0x18600, Name: aKelectronickey, Type: None
2025-03-08 21:06:21,892 - my_text.py:107  -   Address: 0x18660, Name: aKsegmenttypene, Type: None
2025-03-08 21:06:21,892 - my_text.py:107  -   Address: 0x1869C, Name: jpt_10582, Type: Unknown
2025-03-08 21:06:21,893 - my_text.py:107  -   Address: 0x18720, Name: aKnetworksegmen, Type: None
2025-03-08 21:06:21,893 - my_text.py:107  -   Address: 0x18788, Name: aKnetworksegmen_0, Type: None
2025-03-08 21:06:21,893 - my_text.py:107  -   Address: 0x187ED, Name: a2CipPath1, Type: None
2025-03-08 21:06:21,893 - my_text.py:107  -   Address: 0x18802, Name: a0Length, Type: None
2025-03-08 21:06:21,893 - my_text.py:107  -   Address: 0x18810, Name: aKsegmenttypesy, Type: None
2025-03-08 21:06:21,893 - my_text.py:107  -   Address: 0x18850, Name: aKsymbolicsegme, Type: None
2025-03-08 21:06:21,893 - my_text.py:107  -   Address: 0x188A0, Name: aKsegmenttypeda, Type: None
2025-03-08 21:06:21,893 - my_text.py:107  -   Address: 0x188D8, Name: aKdatasegmentsu, Type: None
2025-03-08 21:06:21,893 - my_text.py:107  -   Address: 0x18920, Name: __PRETTY_FUNCTION__.3749, Type: None
2025-03-08 21:06:21,893 - my_text.py:107  -   Address: 0x18940, Name: __PRETTY_FUNCTION__.3759, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18980, Name: __PRETTY_FUNCTION__.3764, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x189C0, Name: __PRETTY_FUNCTION__.3768, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18A00, Name: __PRETTY_FUNCTION__.3772, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18A40, Name: __PRETTY_FUNCTION__.3782, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18A80, Name: __PRETTY_FUNCTION__.3800, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18AC0, Name: __PRETTY_FUNCTION__.3814, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18B00, Name: __PRETTY_FUNCTION__.3827, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18B30, Name: __PRETTY_FUNCTION__.3849, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18B60, Name: __PRETTY_FUNCTION__.3857, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18BA0, Name: __PRETTY_FUNCTION__.3872, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18BE0, Name: __PRETTY_FUNCTION__.3882, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18C20, Name: __PRETTY_FUNCTION__.3891, Type: None
2025-03-08 21:06:21,894 - my_text.py:107  -   Address: 0x18C50, Name: __PRETTY_FUNCTION__.3895, Type: None
2025-03-08 21:06:21,895 - my_text.py:107  -   Address: 0x18C80, Name: __PRETTY_FUNCTION__.3910, Type: None
2025-03-08 21:06:21,895 - my_text.py:107  -   Address: 0x18CC0, Name: __PRETTY_FUNCTION__.3914, Type: None
2025-03-08 21:06:21,895 - my_text.py:107  -   Address: 0x18D00, Name: __PRETTY_FUNCTION__.3925, Type: None
2025-03-08 21:06:21,895 - my_text.py:107  -   Address: 0x18D40, Name: __PRETTY_FUNCTION__.3940, Type: None
2025-03-08 21:06:21,895 - my_text.py:107  -   Address: 0x18D80, Name: __PRETTY_FUNCTION__.3962, Type: None
2025-03-08 21:06:21,895 - my_text.py:107  -   Address: 0x18DA8, Name: kEipInvalidSocket_13, Type: Unknown
2025-03-08 21:06:21,895 - my_text.py:107  -   Address: 0x18DB0, Name: kElectronicKeyFormat4Size, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18DB8, Name: kEipInvalidSocket_14, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18DC0, Name: kOpenerTimerTickInMilliSeconds_12, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18DC8, Name: kEipInvalidSocket_15, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18DD0, Name: kOpenerTimerTickInMilliSeconds_13, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18DD8, Name: kCipConnectionManagerClassCode_6, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18DDA, Name: kCipQoSClassCode_2, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18DDC, Name: kCipUintZero_7, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18DDE, Name: kCipMessageRouterClassCode_4, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18DE0, Name: kCipEthernetLinkClassCode_3, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18DE2, Name: aQualityOfServi, Type: None
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18DF5, Name: aGetattributesi_5, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18E08, Name: aSetattributesi_0, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18E1B, Name: kDefaultValues.4219, Type: Unknown
2025-03-08 21:06:21,896 - my_text.py:107  -   Address: 0x18E28, Name: kEipInvalidSocket_16, Type: Unknown
2025-03-08 21:06:21,897 - my_text.py:107  -   Address: 0x18E30, Name: kOpenerTimerTickInMilliSeconds_14, Type: Unknown
2025-03-08 21:06:21,897 - my_text.py:107  -   Address: 0x18E38, Name: kCipInstanceNumMax, Type: Unknown
2025-03-08 21:06:21,897 - my_text.py:107  -   Address: 0x18E3C, Name: jpt_11742, Type: Unknown
2025-03-08 21:06:21,897 - my_text.py:107  -   Address: 0x18F40, Name: kEipInvalidSocket_17, Type: Unknown
2025-03-08 21:06:21,897 - my_text.py:107  -   Address: 0x18F48, Name: kOpenerTimerTickInMilliSeconds_15, Type: Unknown
2025-03-08 21:06:21,897 - my_text.py:107  -   Address: 0x18F50, Name: kCipConnectionManagerClassCode_7, Type: Unknown
2025-03-08 21:06:21,897 - my_text.py:107  -   Address: 0x18F58, Name: aHomeLinuxbrewB_9, Type: None
2025-03-08 21:06:21,897 - my_text.py:107  -   Address: 0x18F98, Name: aConnectionToDe, Type: None
2025-03-08 21:06:21,897 - my_text.py:107  -   Address: 0x18FD0, Name: aConnectionConn, Type: None
2025-03-08 21:06:21,898 - my_text.py:107  -   Address: 0x18FFE, Name: aVoid0Connectio_2, Type: None
2025-03-08 21:06:21,898 - my_text.py:107  -   Address: 0x19020, Name: __PRETTY_FUNCTION__.4333, Type: None
2025-03-08 21:06:21,898 - my_text.py:107  -   Address: 0x19050, Name: __PRETTY_FUNCTION__.4342, Type: None
2025-03-08 21:06:21,898 - my_text.py:107  -   Address: 0x19080, Name: __PRETTY_FUNCTION__.4351, Type: None
2025-03-08 21:06:21,898 - my_text.py:107  -   Address: 0x190A8, Name: kEipInvalidSocket_18, Type: Unknown
2025-03-08 21:06:21,898 - my_text.py:107  -   Address: 0x190B0, Name: kOpenerTimerTickInMilliSeconds_16, Type: Unknown
2025-03-08 21:06:21,898 - my_text.py:107  -   Address: 0x190B8, Name: kCipAssemblyClassCode_3, Type: Unknown
2025-03-08 21:06:21,898 - my_text.py:107  -   Address: 0x190BA, Name: kCipUintZero_8, Type: Unknown
2025-03-08 21:06:21,898 - my_text.py:107  -   Address: 0x190BC, Name: kCipConnectionManagerClassCode_8, Type: Unknown
2025-03-08 21:06:21,898 - my_text.py:107  -   Address: 0x190BE, Name: aAssembly, Type: None
2025-03-08 21:06:21,899 - my_text.py:107  -   Address: 0x190C7, Name: aGetattributesi_6, Type: Unknown
2025-03-08 21:06:21,899 - my_text.py:107  -   Address: 0x190DA, Name: aSetattributesi_1, Type: Unknown
2025-03-08 21:06:21,899 - my_text.py:107  -   Address: 0x190F0, Name: kEipInvalidSocket_19, Type: Unknown
2025-03-08 21:06:21,899 - my_text.py:107  -   Address: 0x190F8, Name: kOpenerTimerTickInMilliSeconds_17, Type: Unknown
2025-03-08 21:06:21,899 - my_text.py:107  -   Address: 0x19100, Name: kCipConnectionManagerClassCode_9, Type: Unknown
2025-03-08 21:06:21,899 - my_text.py:107  -   Address: 0x19120, Name: kEipInvalidSocket_20, Type: Unknown
2025-03-08 21:06:21,899 - my_text.py:107  -   Address: 0x19128, Name: kOpenerTimerTickInMilliSeconds_18, Type: Unknown
2025-03-08 21:06:21,899 - my_text.py:107  -   Address: 0x19130, Name: aHomeLinuxbrewB_10, Type: None
2025-03-08 21:06:21,899 - my_text.py:107  -   Address: 0x19178, Name: aListDeallocato, Type: None
2025-03-08 21:06:21,899 - my_text.py:107  -   Address: 0x191A0, Name: aListAllocatorV, Type: None
2025-03-08 21:06:21,899 - my_text.py:107  -   Address: 0x191C0, Name: __PRETTY_FUNCTION__.3150, Type: None
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x191E0, Name: __PRETTY_FUNCTION__.3155, Type: None
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x19200, Name: __PRETTY_FUNCTION__.3161, Type: None
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x19220, Name: __PRETTY_FUNCTION__.3168, Type: None
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x19260, Name: __PRETTY_FUNCTION__.3175, Type: None
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x19280, Name: kEipInvalidSocket_21, Type: Unknown
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x19288, Name: kOpenerTimerTickInMilliSeconds_19, Type: Unknown
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x19290, Name: kEipInvalidSocket_22, Type: Unknown
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x19298, Name: kOpenerTimerTickInMilliSeconds_20, Type: Unknown
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x192A0, Name: kCipConnectionManagerClassCode_10, Type: Unknown
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x192A2, Name: kCipIdentityClassCode_3, Type: Unknown
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x192A4, Name: kCipTcpIpInterfaceClassCode_4, Type: Unknown
2025-03-08 21:06:21,900 - my_text.py:107  -   Address: 0x192A8, Name: kTcpipStatusMcastPend_4, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192AC, Name: kTcpipStatusIfaceCfgPend_4, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192B0, Name: kTcpipStatusAcdStatus_4, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192B4, Name: kTcpipStatusAcdFault_4, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192B8, Name: kTcpipCfgCtrlStaticIp_4, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192BC, Name: kTcpipCfgCtrlBootp_4, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192C0, Name: kTcpipCfgCtrlDhcp_4, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192C4, Name: kTcpipCfgCtrlMethodMask_4, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192C8, Name: kTcpipCfgCtrlDnsEnable_4, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192CC, Name: kCipQoSClassCode_3, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192D0, Name: kEipInvalidSocket_23, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192D8, Name: kOpenerTimerTickInMilliSeconds_21, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192E0, Name: kCipConnectionManagerClassCode_11, Type: Unknown
2025-03-08 21:06:21,901 - my_text.py:107  -   Address: 0x192E2, Name: kCipUintZero_9, Type: Unknown
2025-03-08 21:06:21,902 - my_text.py:107  -   Address: 0x192E4, Name: kCipMessageRouterClassCode_5, Type: Unknown
2025-03-08 21:06:21,902 - my_text.py:107  -   Address: 0x192E8, Name: kItemCountFieldSize, Type: Unknown
2025-03-08 21:06:21,902 - my_text.py:107  -   Address: 0x192F0, Name: KItemDataTypeIdFieldLength, Type: Unknown
2025-03-08 21:06:21,902 - my_text.py:107  -   Address: 0x192F8, Name: kSequencedAddressItemLength, Type: Unknown
2025-03-08 21:06:21,902 - my_text.py:107  -   Address: 0x19300, Name: aHomeLinuxbrewB_11, Type: None
2025-03-08 21:06:21,902 - my_text.py:107  -   Address: 0x19340, Name: aItemType0ItemT, Type: None
2025-03-08 21:06:21,902 - my_text.py:107  -   Address: 0x19370, Name: __PRETTY_FUNCTION__.5582, Type: None
2025-03-08 21:06:21,902 - my_text.py:107  -   Address: 0x193A0, Name: kEipInvalidSocket_24, Type: Unknown
2025-03-08 21:06:21,902 - my_text.py:107  -   Address: 0x193A8, Name: kOpenerTimerTickInMilliSeconds_22, Type: Unknown
2025-03-08 21:06:21,902 - my_text.py:107  -   Address: 0x193B0, Name: kCipConnectionManagerClassCode_12, Type: Unknown
2025-03-08 21:06:21,902 - my_text.py:107  -   Address: 0x193B2, Name: kCipUintZero_10, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193B4, Name: kCipMessageRouterClassCode_6, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193B6, Name: kCipIdentityClassCode_4, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193B8, Name: kCipTcpIpInterfaceClassCode_5, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193BC, Name: kTcpipStatusMcastPend_5, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193C0, Name: kTcpipStatusIfaceCfgPend_5, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193C4, Name: kTcpipStatusAcdStatus_5, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193C8, Name: kTcpipStatusAcdFault_5, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193CC, Name: kTcpipCfgCtrlStaticIp_5, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193D0, Name: kTcpipCfgCtrlBootp_5, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193D4, Name: kTcpipCfgCtrlDhcp_5, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193D8, Name: kTcpipCfgCtrlMethodMask_5, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193DC, Name: kTcpipCfgCtrlDnsEnable_5, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193E0, Name: kSupportedProtocolVersion, Type: Unknown
2025-03-08 21:06:21,903 - my_text.py:107  -   Address: 0x193E4, Name: kEncapsulationHeaderOptionsFlag, Type: Unknown
2025-03-08 21:06:21,904 - my_text.py:107  -   Address: 0x193E8, Name: kEncapsulationHeaderSessionHandlePosition, Type: Unknown
2025-03-08 21:06:21,904 - my_text.py:107  -   Address: 0x193EC, Name: kListIdentityDefaultDelayTime, Type: Unknown
2025-03-08 21:06:21,904 - my_text.py:107  -   Address: 0x193EE, Name: kListIdentityMinimumDelayTime, Type: Unknown
2025-03-08 21:06:21,904 - my_text.py:107  -   Address: 0x193F0, Name: kSenderContextSize, Type: Unknown
2025-03-08 21:06:21,904 - my_text.py:107  -   Address: 0x193F4, Name: aCommunications, Type: None
2025-03-08 21:06:21,904 - my_text.py:107  -   Address: 0x19404, Name: jpt_146B2, Type: Unknown
2025-03-08 21:06:21,904 - my_text.py:107  -   Address: 0x19440, Name: aHomeLinuxbrewB_12, Type: None
2025-03-08 21:06:21,904 - my_text.py:107  -   Address: 0x19480, Name: aKlistinterface, Type: None
2025-03-08 21:06:21,904 - my_text.py:107  -   Address: 0x194B0, Name: a2147483647Rece, Type: None
2025-03-08 21:06:21,904 - my_text.py:107  -   Address: 0x194E0, Name: __PRETTY_FUNCTION__.5724, Type: None
2025-03-08 21:06:21,905 - my_text.py:107  -   Address: 0x19520, Name: __PRETTY_FUNCTION__.5773, Type: None
2025-03-08 21:06:21,905 - my_text.py:107  -   Address: 0x19540, Name: kEipInvalidSocket_25, Type: Unknown
2025-03-08 21:06:21,905 - my_text.py:107  -   Address: 0x19548, Name: kOpenerTimerTickInMilliSeconds_23, Type: Unknown
2025-03-08 21:06:21,905 - my_text.py:107  -   Address: 0x19550, Name: aNoEndianessDet, Type: Unknown
2025-03-08 21:06:21,906 - my_text.py:107  -   Address: 0x195A8, Name: kEipInvalidSocket_26, Type: Unknown
2025-03-08 21:06:21,906 - my_text.py:107  -   Address: 0x195B0, Name: kOpenerTimerTickInMilliSeconds_24, Type: Unknown
2025-03-08 21:06:21,906 - my_text.py:107  -   Address: 0x195B8, Name: kCipConnectionManagerClassCode_13, Type: Unknown
2025-03-08 21:06:21,906 - my_text.py:107  -   Address: 0x195BA, Name: kCipQoSClassCode_4, Type: Unknown
2025-03-08 21:06:21,907 - my_text.py:107  -   Address: 0x195BC, Name: kCipTcpIpInterfaceClassCode_6, Type: Unknown
2025-03-08 21:06:21,907 - my_text.py:107  -   Address: 0x195C0, Name: kTcpipStatusMcastPend_6, Type: Unknown
2025-03-08 21:06:21,907 - my_text.py:107  -   Address: 0x195C4, Name: kTcpipStatusIfaceCfgPend_6, Type: Unknown
2025-03-08 21:06:21,907 - my_text.py:107  -   Address: 0x195C8, Name: kTcpipStatusAcdStatus_6, Type: Unknown
2025-03-08 21:06:21,908 - my_text.py:107  -   Address: 0x195CC, Name: kTcpipStatusAcdFault_6, Type: Unknown
2025-03-08 21:06:21,908 - my_text.py:107  -   Address: 0x195D0, Name: kTcpipCfgCtrlStaticIp_6, Type: Unknown
2025-03-08 21:06:21,908 - my_text.py:107  -   Address: 0x195D4, Name: kTcpipCfgCtrlBootp_6, Type: Unknown
2025-03-08 21:06:21,908 - my_text.py:107  -   Address: 0x195D8, Name: kTcpipCfgCtrlDhcp_6, Type: Unknown
2025-03-08 21:06:21,908 - my_text.py:107  -   Address: 0x195DC, Name: kTcpipCfgCtrlMethodMask_6, Type: Unknown
2025-03-08 21:06:21,908 - my_text.py:107  -   Address: 0x195E0, Name: kTcpipCfgCtrlDnsEnable_6, Type: Unknown
2025-03-08 21:06:21,908 - my_text.py:107  -   Address: 0x195E8, Name: kEipInvalidSocket_27, Type: Unknown
2025-03-08 21:06:21,908 - my_text.py:107  -   Address: 0x195F0, Name: kOpenerTimerTickInMilliSeconds_25, Type: Unknown
2025-03-08 21:06:21,908 - my_text.py:107  -   Address: 0x195F8, Name: kCipConnectionManagerClassCode_14, Type: Unknown
2025-03-08 21:06:21,908 - my_text.py:107  -   Address: 0x195FA, Name: kCipQoSClassCode_5, Type: Unknown
2025-03-08 21:06:21,908 - my_text.py:107  -   Address: 0x195FC, Name: aQosCfg, Type: Unknown
2025-03-08 21:06:21,909 - my_text.py:107  -   Address: 0x19604, Name: aUUUUU, Type: None
2025-03-08 21:06:21,909 - my_text.py:107  -   Address: 0x19620, Name: kEipInvalidSocket_28, Type: Unknown
2025-03-08 21:06:21,909 - my_text.py:107  -   Address: 0x19628, Name: kOpenerTimerTickInMilliSeconds_26, Type: Unknown
2025-03-08 21:06:21,909 - my_text.py:107  -   Address: 0x19630, Name: kCipTcpIpInterfaceClassCode_7, Type: Unknown
2025-03-08 21:06:21,909 - my_text.py:107  -   Address: 0x19634, Name: kTcpipStatusMcastPend_7, Type: Unknown
2025-03-08 21:06:21,909 - my_text.py:107  -   Address: 0x19638, Name: kTcpipStatusIfaceCfgPend_7, Type: Unknown
2025-03-08 21:06:21,909 - my_text.py:107  -   Address: 0x1963C, Name: kTcpipStatusAcdStatus_7, Type: Unknown
2025-03-08 21:06:21,909 - my_text.py:107  -   Address: 0x19640, Name: kTcpipStatusAcdFault_7, Type: Unknown
2025-03-08 21:06:21,909 - my_text.py:107  -   Address: 0x19644, Name: kTcpipCfgCtrlStaticIp_7, Type: Unknown
2025-03-08 21:06:21,909 - my_text.py:107  -   Address: 0x19648, Name: kTcpipCfgCtrlBootp_7, Type: Unknown
2025-03-08 21:06:21,910 - my_text.py:107  -   Address: 0x1964C, Name: kTcpipCfgCtrlDhcp_7, Type: Unknown
2025-03-08 21:06:21,910 - my_text.py:107  -   Address: 0x19650, Name: kTcpipCfgCtrlMethodMask_7, Type: Unknown
2025-03-08 21:06:21,910 - my_text.py:107  -   Address: 0x19654, Name: kTcpipCfgCtrlDnsEnable_7, Type: Unknown
2025-03-08 21:06:21,910 - my_text.py:107  -   Address: 0x19658, Name: aTcpipCfg, Type: Unknown
2025-03-08 21:06:21,910 - my_text.py:107  -   Address: 0x19664, Name: kEipInvalidSocket_29, Type: Unknown
2025-03-08 21:06:21,910 - my_text.py:107  -   Address: 0x19668, Name: aNvdata, Type: Unknown
2025-03-08 21:06:21,911 - my_text.py:107  -   Address: 0x19670, Name: aSS, Type: None
2025-03-08 21:06:21,911 - my_text.py:107  -   Address: 0x19675, Name: aW, Type: Unknown
2025-03-08 21:06:21,911 - my_text.py:107  -   Address: 0x19677, Name: aR, Type: Unknown
2025-03-08 21:06:21,911 - my_text.py:107  -   Address: 0x1967C, Name: __GNU_EH_FRAME_HDR, Type: Unknown
2025-03-08 21:06:21,911 - my_text.py:107  -   Address: 0x1E58C, Name: __FRAME_END__, Type: Unknown
2025-03-08 21:06:21,911 - my_text.py:107  -   Address: 0x1FBD0, Name: __frame_dummy_init_array_entry, Type: Unknown
2025-03-08 21:06:21,911 - my_text.py:107  -   Address: 0x1FBD8, Name: __do_global_dtors_aux_fini_array_entry, Type: Unknown
2025-03-08 21:06:21,911 - my_text.py:107  -   Address: 0x1FBE0, Name: handle_forward_open_request_functions, Type: Unknown
2025-03-08 21:06:21,911 - my_text.py:107  -   Address: 0x1FC00, Name: _DYNAMIC, Type: Unknown
2025-03-08 21:06:21,911 - my_text.py:107  -   Address: 0x1FE00, Name: _GLOBAL_OFFSET_TABLE_, Type: Unknown
2025-03-08 21:06:21,911 - my_text.py:107  -   Address: 0x1FE18, Name: free_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE20, Name: recv_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE28, Name: __errno_location_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE30, Name: __isoc99_fscanf_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE38, Name: mkdir_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE40, Name: fread_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE48, Name: setsockopt_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE50, Name: __xpg_strerror_r_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE58, Name: fcntl_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE60, Name: clock_gettime_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE68, Name: getpeername_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE70, Name: fclose_ptr, Type: Unknown
2025-03-08 21:06:21,912 - my_text.py:107  -   Address: 0x1FE78, Name: shutdown_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FE80, Name: strlen_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FE88, Name: __stack_chk_fail_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FE90, Name: htons_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FE98, Name: send_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FEA0, Name: printf_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FEA8, Name: snprintf_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FEB0, Name: nanosleep_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FEB8, Name: strrchr_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FEC0, Name: __assert_fail_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FEC8, Name: htonl_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FED0, Name: memset_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FED8, Name: ioctl_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FEE0, Name: sendto_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FEE8, Name: close_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FEF0, Name: strtok_r_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FEF8, Name: srand_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FF00, Name: memcmp_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FF08, Name: fgets_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FF10, Name: calloc_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FF18, Name: strcmp_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FF20, Name: signal_ptr, Type: Unknown
2025-03-08 21:06:21,913 - my_text.py:107  -   Address: 0x1FF28, Name: fprintf_ptr, Type: Unknown
2025-03-08 21:06:21,914 - my_text.py:107  -   Address: 0x1FF30, Name: ftell_ptr, Type: Unknown
2025-03-08 21:06:21,914 - my_text.py:107  -   Address: 0x1FF38, Name: memcpy_ptr, Type: Unknown
2025-03-08 21:06:21,914 - my_text.py:107  -   Address: 0x1FF40, Name: inet_pton_ptr, Type: Unknown
2025-03-08 21:06:21,914 - my_text.py:107  -   Address: 0x1FF48, Name: time_ptr, Type: Unknown
2025-03-08 21:06:21,914 - my_text.py:107  -   Address: 0x1FF50, Name: select_ptr, Type: Unknown
2025-03-08 21:06:21,914 - my_text.py:107  -   Address: 0x1FF58, Name: malloc_ptr, Type: Unknown
2025-03-08 21:06:21,914 - my_text.py:107  -   Address: 0x1FF60, Name: listen_ptr, Type: Unknown
2025-03-08 21:06:21,914 - my_text.py:107  -   Address: 0x1FF68, Name: recvfrom_ptr, Type: Unknown
2025-03-08 21:06:21,914 - my_text.py:107  -   Address: 0x1FF70, Name: fseek_ptr, Type: Unknown
2025-03-08 21:06:21,914 - my_text.py:107  -   Address: 0x1FF78, Name: ntohs_ptr, Type: Unknown
2025-03-08 21:06:21,914 - my_text.py:107  -   Address: 0x1FF80, Name: bind_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FF88, Name: fopen_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FF90, Name: accept_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FF98, Name: strtoul_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FFA0, Name: gethostname_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FFA8, Name: exit_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FFB0, Name: fwrite_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FFB8, Name: ntohl_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FFC0, Name: strstr_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FFC8, Name: rand_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FFD0, Name: socket_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FFD8, Name: _ITM_deregisterTMCloneTable_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FFE0, Name: __libc_start_main_ptr, Type: Unknown
2025-03-08 21:06:21,915 - my_text.py:107  -   Address: 0x1FFE8, Name: __gmon_start___ptr, Type: Unknown
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x1FFF0, Name: _ITM_registerTMCloneTable_ptr, Type: Unknown
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x1FFF8, Name: __cxa_finalize_ptr, Type: Unknown
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x20000, Name: __data_start, Type: Unknown
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x20008, Name: __dso_handle, Type: None
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x20010, Name: connection_id.5655, Type: Unknown
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x20020, Name: g_identity, Type: Unknown
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x20038, Name: src, Type: None
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x20048, Name: s_consume_run_idle, Type: Unknown
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x20060, Name: g_tcpip, Type: Unknown
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x20078, Name: seed, Type: None
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x200B8, Name: netlong, Type: uint32_t
2025-03-08 21:06:21,916 - my_text.py:107  -   Address: 0x200C0, Name: g_qos, Type: Unknown
2025-03-08 21:06:21,917 - my_text.py:107  -   Address: 0x200C8, Name: s_active_dscp, Type: Unknown
2025-03-08 21:06:21,917 - my_text.py:107  -   Address: 0x200D0, Name: g_opener_platform_endianess, Type: Unknown
2025-03-08 21:06:21,917 - my_text.py:107  -   Address: 0x200D4, Name: __bss_start, Type: Unknown
2025-03-08 21:06:21,917 - my_text.py:107  -   Address: 0x200D8, Name: __TMC_END__, Type: Unknown
2025-03-08 21:06:21,917 - my_text.py:107  -   Address: 0x200E0, Name: stderr@@GLIBC_2.2.5, Type: None
2025-03-08 21:06:21,917 - my_text.py:107  -   Address: 0x200E8, Name: completed.8061, Type: Unknown
2025-03-08 21:06:21,918 - my_text.py:107  -   Address: 0x200EC, Name: g_end_stack, Type: Unknown
2025-03-08 21:06:21,918 - my_text.py:107  -   Address: 0x200F0, Name: pthread_dummy_ret.6629, Type: Unknown
2025-03-08 21:06:21,918 - my_text.py:107  -   Address: 0x20100, Name: nodes.4750, Type: Unknown
2025-03-08 21:06:21,918 - my_text.py:107  -   Address: 0x201E0, Name: g_connection_management_list, Type: Unknown
2025-03-08 21:06:21,918 - my_text.py:107  -   Address: 0x20210, Name: dummy_attribute_usint, Type: Unknown
2025-03-08 21:06:21,918 - my_text.py:107  -   Address: 0x20214, Name: dummy_attribute_udint, Type: Unknown
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x20218, Name: s_interface_control, Type: Unknown
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x20220, Name: g_config_data_buffer, Type: None
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x20228, Name: g_config_data_length, Type: size_t
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x2022C, Name: g_run_idle_state, Type: Unknown
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x20230, Name: s_produce_run_idle, Type: Unknown
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x20238, Name: g_first_object, Type: Unknown
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x20240, Name: dummy_data_field, Type: Unknown
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x20260, Name: g_network_status, Type: None
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x20268, Name: fd, Type: None
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x20280, Name: g_actual_time, Type: Unknown
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x202A0, Name: read_socket, Type: fd_set
2025-03-08 21:06:21,919 - my_text.py:107  -   Address: 0x20320, Name: g_current_active_tcp_socket, Type: None
2025-03-08 21:06:21,920 - my_text.py:107  -   Address: 0x20340, Name: master_socket, Type: Unknown
2025-03-08 21:06:21,920 - my_text.py:107  -   Address: 0x203C0, Name: highest_socket_handle, Type: Unknown
2025-03-08 21:06:21,920 - my_text.py:107  -   Address: 0x203D0, Name: g_time_value, Type: timeval
2025-03-08 21:06:21,921 - my_text.py:107  -   Address: 0x203E0, Name: timeout_checker_array, Type: Unknown
2025-03-08 21:06:21,921 - my_text.py:107  -   Address: 0x20430, Name: g_last_time, Type: Unknown
2025-03-08 21:06:21,921 - my_text.py:107  -   Address: 0x20440, Name: g_timestamps, Type: Unknown
2025-03-08 21:06:21,921 - my_text.py:107  -   Address: 0x20580, Name: explicit_connection_object_pool, Type: Unknown
2025-03-08 21:06:21,921 - my_text.py:107  -   Address: 0x21900, Name: connection_list, Type: Unknown
2025-03-08 21:06:21,921 - my_text.py:107  -   Address: 0x21920, Name: g_dummy_connection_object, Type: Unknown
2025-03-08 21:06:21,921 - my_text.py:107  -   Address: 0x21C60, Name: g_incarnation_id, Type: Unknown
2025-03-08 21:06:21,922 - my_text.py:107  -   Address: 0x21C80, Name: g_ethernet_link, Type: Unknown
2025-03-08 21:06:21,922 - my_text.py:107  -   Address: 0x21CC0, Name: g_message_router_request, Type: Unknown
2025-03-08 21:06:21,922 - my_text.py:107  -   Address: 0x21CE0, Name: g_input_only_connections, Type: Unknown
2025-03-08 21:06:21,922 - my_text.py:107  -   Address: 0x226C0, Name: g_listen_only_connections, Type: Unknown
2025-03-08 21:06:21,923 - my_text.py:107  -   Address: 0x230A0, Name: g_exlusive_owner_connections, Type: Unknown
2025-03-08 21:06:21,923 - my_text.py:107  -   Address: 0x23400, Name: g_assembly_data09A, Type: Unknown
2025-03-08 21:06:21,923 - my_text.py:107  -   Address: 0x23420, Name: g_assembly_data097, Type: Unknown
2025-03-08 21:06:21,923 - my_text.py:107  -   Address: 0x23440, Name: g_assembly_data064, Type: Unknown
2025-03-08 21:06:21,923 - my_text.py:107  -   Address: 0x23460, Name: g_assembly_data096, Type: Unknown
2025-03-08 21:06:21,923 - my_text.py:107  -   Address: 0x23480, Name: g_common_packet_format_data_item, Type: None
2025-03-08 21:06:21,923 - my_text.py:107  -   Address: 0x234E0, Name: g_delayed_encapsulation_messages, Type: Unknown
2025-03-08 21:06:21,923 - my_text.py:107  -   Address: 0x23930, Name: g_service_information, Type: Unknown
2025-03-08 21:06:21,924 - my_text.py:107  -   Address: 0x23938, Name: s, Type: None
2025-03-08 21:06:21,924 - my_text.py:107  -   Address: 0x23960, Name: g_registered_sessions, Type: None
2025-03-08 21:06:21,924 - my_text.py:107  -   Address: 0x239B0, Name: _end, Type: Unknown
2025-03-08 21:06:21,924 - my_text.py:107  -   Address: 0x239B8, Name: free, Type: None
2025-03-08 21:06:21,924 - my_text.py:107  -   Address: 0x239C0, Name: recv, Type: None
2025-03-08 21:06:21,924 - my_text.py:107  -   Address: 0x239C8, Name: __errno_location, Type: None
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x239D0, Name: __isoc99_fscanf, Type: Unknown
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x239D8, Name: mkdir, Type: None
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x239E0, Name: fread, Type: None
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x239E8, Name: setsockopt, Type: None
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x239F0, Name: __xpg_strerror_r, Type: Unknown
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x239F8, Name: fcntl, Type: None
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x23A00, Name: clock_gettime, Type: None
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x23A08, Name: getpeername, Type: None
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x23A10, Name: fclose, Type: None
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x23A18, Name: shutdown, Type: None
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x23A20, Name: strlen, Type: None
2025-03-08 21:06:21,925 - my_text.py:107  -   Address: 0x23A28, Name: __stack_chk_fail, Type: Unknown
2025-03-08 21:06:21,926 - my_text.py:107  -   Address: 0x23A30, Name: htons, Type: None
2025-03-08 21:06:21,926 - my_text.py:107  -   Address: 0x23A38, Name: send, Type: None
2025-03-08 21:06:21,926 - my_text.py:107  -   Address: 0x23A40, Name: printf, Type: None
2025-03-08 21:06:21,926 - my_text.py:107  -   Address: 0x23A48, Name: snprintf, Type: None
2025-03-08 21:06:21,926 - my_text.py:107  -   Address: 0x23A50, Name: nanosleep, Type: None
2025-03-08 21:06:21,926 - my_text.py:107  -   Address: 0x23A58, Name: strrchr, Type: None
2025-03-08 21:06:21,926 - my_text.py:107  -   Address: 0x23A60, Name: __assert_fail, Type: None
2025-03-08 21:06:21,926 - my_text.py:107  -   Address: 0x23A68, Name: htonl, Type: None
2025-03-08 21:06:21,926 - my_text.py:107  -   Address: 0x23A70, Name: memset, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23A78, Name: ioctl, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23A80, Name: sendto, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23A88, Name: close, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23A90, Name: strtok_r, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23A98, Name: __libc_start_main, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23AA0, Name: srand, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23AA8, Name: memcmp, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23AB0, Name: fgets, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23AB8, Name: calloc, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23AC0, Name: strcmp, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23AC8, Name: signal, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23AD0, Name: fprintf, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23AD8, Name: ftell, Type: None
2025-03-08 21:06:21,927 - my_text.py:107  -   Address: 0x23AE0, Name: memcpy, Type: None
2025-03-08 21:06:21,928 - my_text.py:107  -   Address: 0x23AE8, Name: inet_pton, Type: None
2025-03-08 21:06:21,928 - my_text.py:107  -   Address: 0x23AF0, Name: time, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23AF8, Name: select, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B00, Name: malloc, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B08, Name: listen, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B10, Name: recvfrom, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B18, Name: fseek, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B20, Name: ntohs, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B28, Name: bind, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B30, Name: fopen, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B38, Name: accept, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B40, Name: strtoul, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B48, Name: gethostname, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B50, Name: exit, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B58, Name: fwrite, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B60, Name: ntohl, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B68, Name: strstr, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B70, Name: rand, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B78, Name: socket, Type: None
2025-03-08 21:06:21,929 - my_text.py:107  -   Address: 0x23B80, Name: __imp___cxa_finalize, Type: None
2025-03-08 21:06:22,225 - my_text.py:268  - The offset address of the function main is: 0x2829
2025-03-08 21:06:22,225 - my_text.py:271  - The base address of the function main is: 0x5bd41f0e8829
2025-03-08 21:06:22,273 - my_text.py:310  - Extracted information: {'0:6500040000000000000000005f7079636f6d6d5f0000000001000000': {'0': {2: {'0x15ba3': '0x7fffaece3612 0x4', '0x15ba6': '0x7fffaece3612 0x4', '0x15bba': '0x4', '0x15bbc': '0x7fffaece3612 0x4', '0x15bd2': '0x7fffaece3612 0x4', '0x3da3': '0x7fffaece3612 0x4', '0x3da6': '0x4', '0x3dab': '0x7fffaece3612 0x18', '0x3db2': '0x18', '0x3ef2': '0x7fffaece3612 0x18', '0x3fd7': '0x18;0x18', '0x3fe4': '0x18', '0x4092': '0x7fffaece3612 0x1c', '0x145aa': '0x7fffaece3612 0x1c', '0x145fc': '0x7fffaece3612 0x1c', '0x14604': '0x7fffaece3612 0x1c', '0x15452': '0x7fffaece3612 0x1c', '0x15489': '0x7fffaece3612 0x4', '0x15508': '0x1c;0x80000000', '0x1552d': '0x7fffaece3612 0x1c', '0x15538': '0x7fffaece3612 0x4', '0x1553c': '0x7fffaece3612 0x4', '0x1553f': '0x4;0x4'}, 3: {'0x15bb1': '0x7fffaece3613 0x0', '0x15bb4': '0x7fffaece3613 0x0', '0x15bb7': '0x0', '0x15bba': '0x4', '0x15bbc': '0x7fffaece3612 0x4', '0x15bd2': '0x7fffaece3612 0x4', '0x3da3': '0x7fffaece3612 0x4', '0x3da6': '0x4', '0x3dab': '0x7fffaece3612 0x18', '0x3db2': '0x18', '0x3ef2': '0x7fffaece3612 0x18', '0x3fd7': '0x18;0x18', '0x3fe4': '0x18', '0x4092': '0x7fffaece3612 0x1c', '0x145aa': '0x7fffaece3612 0x1c', '0x145fc': '0x7fffaece3612 0x1c', '0x14604': '0x7fffaece3612 0x1c', '0x15452': '0x7fffaece3612 0x1c', '0x15489': '0x7fffaece3612 0x4', '0x15508': '0x1c;0x80000000', '0x1552d': '0x7fffaece3612 0x1c', '0x15538': '0x7fffaece3612 0x4', '0x1553c': '0x7fffaece3612 0x4', '0x1553f': '0x4;0x4'}, 0: {'0x15ba3': '0x7fffaece3610 0x65', '0x15ba6': '0x7fffaece3610 0x65', '0x15bba': '0x65', '0x15bbc': '0x7fffaece3610 0x65', '0x15bd2': '0x7fffaece3610 0x65', '0x15476': '0x7fffaece3610 0x65', '0x14663': '0x7fffaece3610 0x65', '0x14667': '0x7fffaece3610 0x65', '0x1466a': '0x65', '0x14673': '0x65', '0x14686': '0x65', '0x14689': '0x2', '0x14692': '0x7fffaece3610 0x2', '0x1496c': '0x7fffaece3610 0x65', '0x1496f': '0x7fffaece3610 0x65', '0x14979': '0x7fffaece3610 0x65', '0x15de5': '0x7fffaece3610 0x65', '0x15deb': '0x7fffaece3610 0x65', '0x15dfa': '0x7fffaece3610 0x65', '0x15e00': '0x7fffaece3610 0x65', '0x15e04': '0x65', '0x15e08': '0x7fffaece3610 0x0'}, 1: {'0x15bb1': '0x7fffaece3611 0x0', '0x15bb4': '0x7fffaece3611 0x0', '0x15bb7': '0x0', '0x15bba': '0x65', '0x15bbc': '0x7fffaece3610 0x65', '0x15bd2': '0x7fffaece3610 0x65', '0x15476': '0x7fffaece3610 0x65', '0x14663': '0x7fffaece3610 0x65', '0x14667': '0x7fffaece3610 0x65', '0x1466a': '0x65', '0x14673': '0x65', '0x14686': '0x65', '0x14689': '0x2', '0x14692': '0x7fffaece3610 0x2', '0x1496c': '0x7fffaece3610 0x65', '0x1496f': '0x7fffaece3610 0x65', '0x14979': '0x7fffaece3610 0x65', '0x15de5': '0x7fffaece3610 0x65', '0x15deb': '0x7fffaece3610 0x65', '0x15dfa': '0x7fffaece3610 0x65', '0x15dfe': '0x7fffaece3611 0x65', '0x15e00': '0x7fffaece3610 0x65', '0x15e04': '0x65', '0x15e08': '0x7fffaece3610 0x0', '0x15e19': '0x7fffaece3611 0x0'}, 4: {'0x15cb7': '0x7fffaece3614 0x0', '0x15cba': '0x7fffaece3614 0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x0', '0x15d0b': '0x7fffaece3614 0x0', '0x1549d': '0x7fffaece3614 0x0'}, 5: {'0x15cc5': '0x7fffaece3615 0x0', '0x15cc8': '0x7fffaece3615 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x0', '0x15d0b': '0x7fffaece3614 0x0', '0x1549d': '0x7fffaece3614 0x0'}, 6: {'0x15cd8': '0x7fffaece3616 0x0', '0x15cdb': '0x7fffaece3616 0x0', '0x15cde': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x0', '0x15d0b': '0x7fffaece3614 0x0', '0x1549d': '0x7fffaece3614 0x0'}, 7: {'0x15ceb': '0x7fffaece3617 0x0', '0x15cee': '0x7fffaece3617 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x0', '0x15d0b': '0x7fffaece3614 0x0', '0x1549d': '0x7fffaece3614 0x0'}, 8: {'0x15cb7': '0x7fffaece3618 0x0', '0x15cba': '0x7fffaece3618 0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 9: {'0x15cc5': '0x7fffaece3619 0x0', '0x15cc8': '0x7fffaece3619 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 10: {'0x15cd8': '0x7fffaece361a 0x0', '0x15cdb': '0x7fffaece361a 0x0', '0x15cde': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 11: {'0x15ceb': '0x7fffaece361b 0x0', '0x15cee': '0x7fffaece361b 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 20: {'0x15cb7': '0x7fffaece3624 0x0', '0x15cba': '0x7fffaece3624 0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 21: {'0x15cc5': '0x7fffaece3625 0x0', '0x15cc8': '0x7fffaece3625 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 22: {'0x15cd8': '0x7fffaece3626 0x0', '0x15cdb': '0x7fffaece3626 0x0', '0x15cde': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 23: {'0x15ceb': '0x7fffaece3627 0x0', '0x15cee': '0x7fffaece3627 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 24: {'0x15ba3': '0x7fffaece3628 0x1', '0x15ba6': '0x7fffaece3628 0x1', '0x15bba': '0x1', '0x15bbc': '0x7fffaece3628 0x1', '0x15bd2': '0x7fffaece3628 0x1', '0x1501b': '0x7fffaece3628 0x1', '0x15033': '0x1', '0x15043': '0x1;0x1'}, 25: {'0x15bb1': '0x7fffaece3629 0x0', '0x15bb4': '0x7fffaece3629 0x0', '0x15bb7': '0x0', '0x15bba': '0x1', '0x15bbc': '0x7fffaece3628 0x1', '0x15bd2': '0x7fffaece3628 0x1', '0x1501b': '0x7fffaece3628 0x1', '0x15033': '0x1', '0x15043': '0x1;0x1'}, 26: {'0x15ba3': '0x7fffaece362a 0x0', '0x15ba6': '0x7fffaece362a 0x0', '0x15bba': '0x0', '0x15bbc': '0x7fffaece362a 0x0', '0x15bd2': '0x7fffaece362a 0x0', '0x1502f': '0x7fffaece362a 0x0', '0x1504d': '0x0'}, 27: {'0x15bb1': '0x7fffaece362b 0x0', '0x15bb4': '0x7fffaece362b 0x0', '0x15bb7': '0x0', '0x15bba': '0x0', '0x15bbc': '0x7fffaece362a 0x0', '0x15bd2': '0x7fffaece362a 0x0', '0x1502f': '0x7fffaece362a 0x0', '0x1504d': '0x0'}}}, '1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000': {'0': {2: {'0x15ba3': '0x7fffaece3612 0x24', '0x15ba6': '0x7fffaece3612 0x24', '0x15bba': '0x24', '0x15bbc': '0x7fffaece3612 0x24', '0x15bd2': '0x7fffaece3612 0x24', '0x3da3': '0x7fffaece3612 0x24', '0x3da6': '0x24', '0x3dab': '0x7fffaece3612 0x38', '0x3db2': '0x38', '0x3ef2': '0x7fffaece3612 0x38', '0x3fd7': '0x38;0x38', '0x3fe4': '0x38', '0x4092': '0x7fffaece3612 0x3c', '0x145aa': '0x7fffaece3612 0x3c', '0x145fc': '0x7fffaece3612 0x3c', '0x14604': '0x7fffaece3612 0x3c', '0x15452': '0x7fffaece3612 0x3c', '0x15489': '0x7fffaece3612 0x24', '0x15508': '0x3c;0x80000000', '0x1552d': '0x7fffaece3612 0x3c', '0x15538': '0x7fffaece3612 0x24', '0x1553c': '0x7fffaece3612 0x24', '0x1553f': '0x24;0x24', '0x15313': '0x7fffaece3612 0x24', '0x15317': '0x24', '0x15345': '0x7fffaece3612 0x24'}, 3: {'0x15bb1': '0x7fffaece3613 0x0', '0x15bb4': '0x7fffaece3613 0x0', '0x15bb7': '0x0', '0x15bba': '0x24', '0x15bbc': '0x7fffaece3612 0x24', '0x15bd2': '0x7fffaece3612 0x24', '0x3da3': '0x7fffaece3612 0x24', '0x3da6': '0x24', '0x3dab': '0x7fffaece3612 0x38', '0x3db2': '0x38', '0x3ef2': '0x7fffaece3612 0x38', '0x3fd7': '0x38;0x38', '0x3fe4': '0x38', '0x4092': '0x7fffaece3612 0x3c', '0x145aa': '0x7fffaece3612 0x3c', '0x145fc': '0x7fffaece3612 0x3c', '0x14604': '0x7fffaece3612 0x3c', '0x15452': '0x7fffaece3612 0x3c', '0x15489': '0x7fffaece3612 0x24', '0x15508': '0x3c;0x80000000', '0x1552d': '0x7fffaece3612 0x3c', '0x15538': '0x7fffaece3612 0x24', '0x1553c': '0x7fffaece3612 0x24', '0x1553f': '0x24;0x24', '0x15313': '0x7fffaece3612 0x24', '0x15317': '0x24', '0x15345': '0x7fffaece3612 0x24'}, 0: {'0x15ba3': '0x7fffaece3610 0x6f', '0x15ba6': '0x7fffaece3610 0x6f', '0x15bba': '0x6f', '0x15bbc': '0x7fffaece3610 0x6f', '0x15bd2': '0x7fffaece3610 0x6f', '0x15476': '0x7fffaece3610 0x6f', '0x14663': '0x7fffaece3610 0x6f', '0x14667': '0x7fffaece3610 0x6f', '0x1466a': '0x6f', '0x14673': '0x6f', '0x14686': '0x6f', '0x14689': '0xc', '0x14692': '0x7fffaece3610 0xc', '0x1496c': '0x7fffaece3610 0x6f', '0x1496f': '0x7fffaece3610 0x6f', '0x14979': '0x7fffaece3610 0x6f', '0x15de5': '0x7fffaece3610 0x6f', '0x15deb': '0x7fffaece3610 0x6f', '0x15dfa': '0x7fffaece3610 0x6f', '0x15e00': '0x7fffaece3610 0x6f', '0x15e04': '0x6f', '0x15e08': '0x7fffaece3610 0x0'}, 1: {'0x15bb1': '0x7fffaece3611 0x0', '0x15bb4': '0x7fffaece3611 0x0', '0x15bb7': '0x0', '0x15bba': '0x6f', '0x15bbc': '0x7fffaece3610 0x6f', '0x15bd2': '0x7fffaece3610 0x6f', '0x15476': '0x7fffaece3610 0x6f', '0x14663': '0x7fffaece3610 0x6f', '0x14667': '0x7fffaece3610 0x6f', '0x1466a': '0x6f', '0x14673': '0x6f', '0x14686': '0x6f', '0x14689': '0xc', '0x14692': '0x7fffaece3610 0xc', '0x1496c': '0x7fffaece3610 0x6f', '0x1496f': '0x7fffaece3610 0x6f', '0x14979': '0x7fffaece3610 0x6f', '0x15de5': '0x7fffaece3610 0x6f', '0x15deb': '0x7fffaece3610 0x6f', '0x15dfa': '0x7fffaece3610 0x6f', '0x15dfe': '0x7fffaece3611 0x6f', '0x15e00': '0x7fffaece3610 0x6f', '0x15e04': '0x6f', '0x15e08': '0x7fffaece3610 0x0', '0x15e19': '0x7fffaece3611 0x0'}, 4: {'0x15cb7': '0x7fffaece3614 0x1', '0x15cba': '0x7fffaece3614 0x1', '0x15cce': '0x0', '0x15ce1': '0x1', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1', '0x15557': '0x7fffaece3614 0x1', '0x1555a': '0x1;0x1', '0x15562': '0x7fffaece3614 0x1', '0x15565': '0x1', '0x1556e': '0x7fffaece3614 0x1', '0x15571': '0x1', '0x15574': '0x7fffaece3614 0x0', '0x133d1': '0x7fffaece3614 0x1', '0x133f3': '0x7fffaece3614 0x1', '0xeddb': '0x7fffaece3614 0x1', '0xeec8': '0x7fffaece3614 0x1', '0xeed3': '0x7fffaece3614 0x1', '0x593a': '0x7fffaece3614 0x1', '0x13474': '0x7fffaece3614 0x1', '0x1495e': '0x7fffaece3614 0x1', '0x14999': '0x7fffaece3614 0x1', '0x1499f': '0x7fffaece3614 0x1', '0x15e5a': '0x7fffaece3614 0x1', '0x15e6c': '0x7fffaece3614 0x1', '0x15e71': '0x7fffaece3614 0x1', '0x15e74': '0x1', '0x15e77': '0x7fffaece3614 0x0', '0x15e8a': '0x7fffaece3614 0x1', '0x15e8d': '0x1', '0x15e90': '0x7fffaece3614 0x0', '0x15ea3': '0x7fffaece3614 0x1', '0x15ea6': '0x1', '0x15ea9': '0x7fffaece3614 0x0'}, 5: {'0x15cc5': '0x7fffaece3615 0x0', '0x15cc8': '0x7fffaece3615 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x1', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1', '0x15557': '0x7fffaece3614 0x1', '0x1555a': '0x1;0x1', '0x15562': '0x7fffaece3614 0x1', '0x15565': '0x1', '0x1556e': '0x7fffaece3614 0x1', '0x15571': '0x1', '0x15574': '0x7fffaece3614 0x0', '0x133d1': '0x7fffaece3614 0x1', '0x133f3': '0x7fffaece3614 0x1', '0xeddb': '0x7fffaece3614 0x1', '0xeec8': '0x7fffaece3614 0x1', '0xeed3': '0x7fffaece3614 0x1', '0x593a': '0x7fffaece3614 0x1', '0x13474': '0x7fffaece3614 0x1', '0x1495e': '0x7fffaece3614 0x1', '0x14999': '0x7fffaece3614 0x1', '0x1499f': '0x7fffaece3614 0x1', '0x15e5a': '0x7fffaece3614 0x1', '0x15e6c': '0x7fffaece3614 0x1', '0x15e71': '0x7fffaece3614 0x1', '0x15e74': '0x1', '0x15e77': '0x7fffaece3614 0x0', '0x15e8a': '0x7fffaece3614 0x1', '0x15e8d': '0x1', '0x15e90': '0x7fffaece3614 0x0', '0x15ea3': '0x7fffaece3614 0x1', '0x15ea6': '0x1', '0x15ea9': '0x7fffaece3614 0x0'}, 6: {'0x15cd8': '0x7fffaece3616 0x0', '0x15cdb': '0x7fffaece3616 0x0', '0x15cde': '0x0', '0x15ce1': '0x1', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1', '0x15557': '0x7fffaece3614 0x1', '0x1555a': '0x1;0x1', '0x15562': '0x7fffaece3614 0x1', '0x15565': '0x1', '0x1556e': '0x7fffaece3614 0x1', '0x15571': '0x1', '0x15574': '0x7fffaece3614 0x0', '0x133d1': '0x7fffaece3614 0x1', '0x133f3': '0x7fffaece3614 0x1', '0xeddb': '0x7fffaece3614 0x1', '0xeec8': '0x7fffaece3614 0x1', '0xeed3': '0x7fffaece3614 0x1', '0x593a': '0x7fffaece3614 0x1', '0x13474': '0x7fffaece3614 0x1', '0x1495e': '0x7fffaece3614 0x1', '0x14999': '0x7fffaece3614 0x1', '0x1499f': '0x7fffaece3614 0x1', '0x15e5a': '0x7fffaece3614 0x1', '0x15e6c': '0x7fffaece3614 0x1', '0x15e71': '0x7fffaece3614 0x1', '0x15e74': '0x1', '0x15e77': '0x7fffaece3614 0x0', '0x15e8a': '0x7fffaece3614 0x1', '0x15e8d': '0x1', '0x15e90': '0x7fffaece3614 0x0', '0x15ea3': '0x7fffaece3614 0x1', '0x15ea6': '0x1', '0x15ea9': '0x7fffaece3614 0x0'}, 7: {'0x15ceb': '0x7fffaece3617 0x0', '0x15cee': '0x7fffaece3617 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1', '0x15557': '0x7fffaece3614 0x1', '0x1555a': '0x1;0x1', '0x15562': '0x7fffaece3614 0x1', '0x15565': '0x1', '0x1556e': '0x7fffaece3614 0x1', '0x15571': '0x1', '0x15574': '0x7fffaece3614 0x0', '0x133d1': '0x7fffaece3614 0x1', '0x133f3': '0x7fffaece3614 0x1', '0xeddb': '0x7fffaece3614 0x1', '0xeec8': '0x7fffaece3614 0x1', '0xeed3': '0x7fffaece3614 0x1', '0x593a': '0x7fffaece3614 0x1', '0x13474': '0x7fffaece3614 0x1', '0x1495e': '0x7fffaece3614 0x1', '0x14999': '0x7fffaece3614 0x1', '0x1499f': '0x7fffaece3614 0x1', '0x15e5a': '0x7fffaece3614 0x1', '0x15e6c': '0x7fffaece3614 0x1', '0x15e6f': '0x7fffaece3617 0x1', '0x15e71': '0x7fffaece3614 0x1', '0x15e74': '0x1', '0x15e77': '0x7fffaece3614 0x0', '0x15e88': '0x7fffaece3617 0x0', '0x15e8a': '0x7fffaece3614 0x1', '0x15e8d': '0x1', '0x15e90': '0x7fffaece3614 0x0', '0x15ea1': '0x7fffaece3617 0x0', '0x15ea3': '0x7fffaece3614 0x1', '0x15ea6': '0x1', '0x15ea9': '0x7fffaece3614 0x0', '0x15eba': '0x7fffaece3617 0x0'}, 8: {'0x15cb7': '0x7fffaece3618 0x0', '0x15cba': '0x7fffaece3618 0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 9: {'0x15cc5': '0x7fffaece3619 0x0', '0x15cc8': '0x7fffaece3619 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 10: {'0x15cd8': '0x7fffaece361a 0x0', '0x15cdb': '0x7fffaece361a 0x0', '0x15cde': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 11: {'0x15ceb': '0x7fffaece361b 0x0', '0x15cee': '0x7fffaece361b 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 20: {'0x15cb7': '0x7fffaece3624 0x0', '0x15cba': '0x7fffaece3624 0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 21: {'0x15cc5': '0x7fffaece3625 0x0', '0x15cc8': '0x7fffaece3625 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 22: {'0x15cd8': '0x7fffaece3626 0x0', '0x15cdb': '0x7fffaece3626 0x0', '0x15cde': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 23: {'0x15ceb': '0x7fffaece3627 0x0', '0x15cee': '0x7fffaece3627 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 24: {'0x15c43': '0x7fffaece3628 0x0', '0x15c46': '0x7fffaece3628 0x0', '0x15c5a': '0x0', '0x15c6d': '0x0', '0x15c80': '0x0', '0x15c82': '0x7fffaece3628 0x0', '0x15c97': '0x7fffaece3628 0x0'}, 25: {'0x15c51': '0x7fffaece3629 0x0', '0x15c54': '0x7fffaece3629 0x0', '0x15c57': '0x0', '0x15c5a': '0x0', '0x15c6d': '0x0', '0x15c80': '0x0', '0x15c82': '0x7fffaece3628 0x0', '0x15c97': '0x7fffaece3628 0x0'}, 26: {'0x15c64': '0x7fffaece362a 0x0', '0x15c67': '0x7fffaece362a 0x0', '0x15c6a': '0x0', '0x15c6d': '0x0', '0x15c80': '0x0', '0x15c82': '0x7fffaece3628 0x0', '0x15c97': '0x7fffaece3628 0x0'}, 27: {'0x15c77': '0x7fffaece362b 0x0', '0x15c7a': '0x7fffaece362b 0x0', '0x15c7d': '0x0', '0x15c80': '0x0', '0x15c82': '0x7fffaece3628 0x0', '0x15c97': '0x7fffaece3628 0x0'}, 28: {'0x15b53': '0x7fffaece362c 0xa', '0x15b56': '0x7fffaece362c 0xa', '0x15b6a': '0xa', '0x15b6c': '0x7fffaece362c 0xa', '0x15b82': '0x7fffaece362c 0xa'}, 29: {'0x15b61': '0x7fffaece362d 0x0', '0x15b64': '0x7fffaece362d 0x0', '0x15b67': '0x0', '0x15b6a': '0xa', '0x15b6c': '0x7fffaece362c 0xa', '0x15b82': '0x7fffaece362c 0xa'}, 30: {'0x15ba3': '0x7fffaece362e 0x2', '0x15ba6': '0x7fffaece362e 0x2', '0x15bba': '0x2', '0x15bbc': '0x7fffaece362e 0x2', '0x15bd2': '0x7fffaece362e 0x2', '0x138e3': '0x7fffaece362e 0x2', '0x138eb': '0x7fffaece362e 0x2', '0x138ef': '0x7fffaece362e 0x2', '0x138fb': '0x7fffaece362e 0x2', '0x138fe': '0x2;0x2', '0x13980': '0x7fffaece362e 0x2', '0x13983': '0x2', '0x13a0b': '0x7fffaece362e 0x2', '0x13a0e': '0x2', '0x13a11': '0x7fffaece362e 0x0', '0x13bf5': '0x0', '0x13bfa': '0x2;0x0', '0x13c10': '0x7fffaece362e 0x2', '0x13c13': '0x2', '0x13c27': '0x7fffaece362e 0x2', '0x13c2a': '0x2', '0x13d69': '0x7fffaece362e 0x2', '0x13d6c': '0x7fffaece362e 0x2', '0x13d76': '0x7fffaece362e 0x2', '0x15de5': '0x7fffaece362e 0x2', '0x15deb': '0x7fffaece362e 0x2', '0x15dfa': '0x7fffaece362e 0x2', '0x15e00': '0x7fffaece362e 0x2', '0x15e04': '0x2', '0x15e08': '0x7fffaece362e 0x0'}, 31: {'0x15bb1': '0x7fffaece362f 0x0', '0x15bb4': '0x7fffaece362f 0x0', '0x15bb7': '0x0', '0x15bba': '0x2', '0x15bbc': '0x7fffaece362e 0x2', '0x15bd2': '0x7fffaece362e 0x2', '0x138e3': '0x7fffaece362e 0x2', '0x138eb': '0x7fffaece362e 0x2', '0x138ef': '0x7fffaece362e 0x2', '0x138fb': '0x7fffaece362e 0x2', '0x138fe': '0x2;0x2', '0x13980': '0x7fffaece362e 0x2', '0x13983': '0x2', '0x13a0b': '0x7fffaece362e 0x2', '0x13a0e': '0x2', '0x13a11': '0x7fffaece362e 0x0', '0x13bf5': '0x0', '0x13bfa': '0x2;0x0', '0x13c10': '0x7fffaece362e 0x2', '0x13c13': '0x2', '0x13c27': '0x7fffaece362e 0x2', '0x13c2a': '0x2', '0x13d69': '0x7fffaece362e 0x2', '0x13d6c': '0x7fffaece362e 0x2', '0x13d76': '0x7fffaece362e 0x2', '0x15de5': '0x7fffaece362e 0x2', '0x15deb': '0x7fffaece362e 0x2', '0x15dfa': '0x7fffaece362e 0x2', '0x15dfe': '0x7fffaece362f 0x2', '0x15e00': '0x7fffaece362e 0x2', '0x15e04': '0x2', '0x15e08': '0x7fffaece362e 0x0', '0x15e19': '0x7fffaece362f 0x0'}, 32: {'0x15ba3': '0x7fffaece3630 0x0', '0x15ba6': '0x7fffaece3630 0x0', '0x15bba': '0x0', '0x15bbc': '0x7fffaece3630 0x0', '0x15bd2': '0x7fffaece3630 0x0', '0x13913': '0x7fffaece3630 0x0', '0x133a9': '0x7fffaece3630 0x0', '0x133b0': '0x0;0x0', '0x14222': '0x7fffaece3630 0x0', '0x14226': '0x7fffaece3630 0x0', '0x14229': '0x0', '0x14230': '0x0', '0x14237': '0x0;0x0'}, 33: {'0x15bb1': '0x7fffaece3631 0x0', '0x15bb4': '0x7fffaece3631 0x0', '0x15bb7': '0x0', '0x15bba': '0x0', '0x15bbc': '0x7fffaece3630 0x0', '0x15bd2': '0x7fffaece3630 0x0', '0x13913': '0x7fffaece3630 0x0', '0x133a9': '0x7fffaece3630 0x0', '0x133b0': '0x0;0x0', '0x14222': '0x7fffaece3630 0x0', '0x14226': '0x7fffaece3630 0x0', '0x14229': '0x0', '0x14230': '0x0', '0x14237': '0x0;0x0'}, 34: {'0x15ba3': '0x7fffaece3632 0x0', '0x15ba6': '0x7fffaece3632 0x0', '0x15bba': '0x0', '0x15bbc': '0x7fffaece3632 0x0', '0x15bd2': '0x7fffaece3632 0x0', '0x13927': '0x7fffaece3632 0x0', '0x13934': '0x7fffaece3632 0x0', '0x13938': '0x0', '0x1395a': '0x7fffaece3632 0x0', '0x1395e': '0x0'}, 35: {'0x15bb1': '0x7fffaece3633 0x0', '0x15bb4': '0x7fffaece3633 0x0', '0x15bb7': '0x0', '0x15bba': '0x0', '0x15bbc': '0x7fffaece3632 0x0', '0x15bd2': '0x7fffaece3632 0x0', '0x13927': '0x7fffaece3632 0x0', '0x13934': '0x7fffaece3632 0x0', '0x13938': '0x0', '0x1395a': '0x7fffaece3632 0x0', '0x1395e': '0x0'}, 36: {'0x15ba3': '0x7fffaece3634 0xb2', '0x15ba6': '0x7fffaece3634 0xb2', '0x15bba': '0xb2', '0x15bbc': '0x7fffaece3634 0xb2', '0x15bd2': '0x7fffaece3634 0xb2', '0x1399d': '0x7fffaece3634 0xb2', '0x133b9': '0x7fffaece3634 0xb2', '0x133c0': '0xb2', '0x1428a': '0x7fffaece3634 0xb2', '0x1428e': '0xb2', '0x13d98': '0x7fffaece3634 0xb2', '0x13d9c': '0x7fffaece3634 0xb2', '0x13da6': '0x7fffaece3634 0xb2', '0x15de5': '0x7fffaece3634 0xb2', '0x15deb': '0x7fffaece3634 0xb2', '0x15dfa': '0x7fffaece3634 0xb2', '0x15e00': '0x7fffaece3634 0xb2', '0x15e04': '0xb2', '0x15e08': '0x7fffaece3634 0x0', '0x142c8': '0x7fffaece3634 0xb2', '0x142cc': '0xb2'}, 37: {'0x15bb1': '0x7fffaece3635 0x0', '0x15bb4': '0x7fffaece3635 0x0', '0x15bb7': '0x0', '0x15bba': '0xb2', '0x15bbc': '0x7fffaece3634 0xb2', '0x15bd2': '0x7fffaece3634 0xb2', '0x1399d': '0x7fffaece3634 0xb2', '0x133b9': '0x7fffaece3634 0xb2', '0x133c0': '0xb2', '0x1428a': '0x7fffaece3634 0xb2', '0x1428e': '0xb2', '0x13d98': '0x7fffaece3634 0xb2', '0x13d9c': '0x7fffaece3634 0xb2', '0x13da6': '0x7fffaece3634 0xb2', '0x15de5': '0x7fffaece3634 0xb2', '0x15deb': '0x7fffaece3634 0xb2', '0x15dfa': '0x7fffaece3634 0xb2', '0x15dfe': '0x7fffaece3635 0xb2', '0x15e00': '0x7fffaece3634 0xb2', '0x15e04': '0xb2', '0x15e08': '0x7fffaece3634 0x0', '0x15e19': '0x7fffaece3635 0x0', '0x142c8': '0x7fffaece3634 0xb2', '0x142cc': '0xb2'}, 38: {'0x15ba3': '0x7fffaece3636 0x14', '0x15ba6': '0x7fffaece3636 0x14', '0x15bba': '0x14', '0x15bbc': '0x7fffaece3636 0x14', '0x15bd2': '0x7fffaece3636 0x14', '0x139b1': '0x7fffaece3636 0x14', '0x139c5': '0x7fffaece3636 0x14', '0x139c9': '0x7fffaece3636 0x14', '0x139d0': '0x6;0x14', '0x139e5': '0x7fffaece3636 0x14', '0x139e9': '0x7fffaece3636 0x14', '0x139ec': '0x14;0x7fffaece3638', '0x139ef': '0x7fffaece3636 0x7fffaece364c', '0x139f7': '0x7fffaece3636 0x14', '0x139fb': '0x7fffaece3636 0x14', '0x139fe': '0x14', '0x13a03': '0x6;0x18', '0x133d4': '0x7fffaece3636 0x14', '0x133db': '0x7fffaece3636 0x14', '0xedd0': '0x7fffaece3636 0x14', '0xeded': '0x7fffaece3636 0x14', '0xedf0': '0x7fffaece3636 0x14', '0xedfe': '0x7fffaece3636 0x14', '0xeefd': '0x7fffaece3636 0x14', '0xef03': '0x7fffaece3636 0x14', '0xef2f': '0x7fffaece3636 0x14', '0xef33': '0x14', '0xef36': '0x7fffaece3636 0x13', '0xef65': '0x7fffaece3636 0x13', '0xef6e': '0x13;0x5', '0xef86': '0x7fffaece3636 0x13', '0xef8f': '0x13;0x5', '0xef96': '0x7fffaece3636 0xe'}, 39: {'0x15bb1': '0x7fffaece3637 0x0', '0x15bb4': '0x7fffaece3637 0x0', '0x15bb7': '0x0', '0x15bba': '0x14', '0x15bbc': '0x7fffaece3636 0x14', '0x15bd2': '0x7fffaece3636 0x14', '0x139b1': '0x7fffaece3636 0x14', '0x139c5': '0x7fffaece3636 0x14', '0x139c9': '0x7fffaece3636 0x14', '0x139d0': '0x6;0x14', '0x139e5': '0x7fffaece3636 0x14', '0x139e9': '0x7fffaece3636 0x14', '0x139ec': '0x14;0x7fffaece3638', '0x139ef': '0x7fffaece3636 0x7fffaece364c', '0x139f7': '0x7fffaece3636 0x14', '0x139fb': '0x7fffaece3636 0x14', '0x139fe': '0x14', '0x13a03': '0x6;0x18', '0x133d4': '0x7fffaece3636 0x14', '0x133db': '0x7fffaece3636 0x14', '0xedd0': '0x7fffaece3636 0x14', '0xeded': '0x7fffaece3636 0x14', '0xedf0': '0x7fffaece3636 0x14', '0xedfe': '0x7fffaece3636 0x14', '0xeefd': '0x7fffaece3636 0x14', '0xef03': '0x7fffaece3636 0x14', '0xef2f': '0x7fffaece3636 0x14', '0xef33': '0x14', '0xef36': '0x7fffaece3636 0x13', '0xef65': '0x7fffaece3636 0x13', '0xef6e': '0x13;0x5', '0xef86': '0x7fffaece3636 0x13', '0xef8f': '0x13;0x5', '0xef96': '0x7fffaece3636 0xe'}, 40: {'0xef1a': '0x7fffaece3638 0x52', '0xef21': '0x7fffaece3638 0x52', '0x5994': '0x7fffaece3638 0x52', '0x599e': '0x52;0x57', '0x5a45': '0x7fffaece3638 0x52', '0x5a48': '0x52', '0x5a4b': '0x7fffaece3638 0xffffffd2', '0x5a51': '0x7fffaece3638 0xd2', '0x13ef6': '0x7fffaece3638 0xd2', '0x13ef9': '0x7fffaece3638 0xd2', '0x13f03': '0x7fffaece3638 0xd2', '0x15d8c': '0x7fffaece3638 0xd2', '0x15d92': '0x7fffaece3638 0xd2', '0x15da0': '0x7fffaece3638 0xd2', '0x15da4': '0x7fffaece3638 0xd2'}, 41: {'0x82c3': '0x7fffaece3639 0x2', '0x82ca': '0x7fffaece3639 0x2', '0x8466': '0x7fffaece3639 0x2', '0x8469': '0x7fffaece3639 0x2', '0x846c': '0x2;0x2'}, 42: {'0x82ff': '0x7fffaece363a 0x20', '0x8302': '0x7fffaece363a 0x20', '0x8305': '0x20', '0x8308': '0x0', '0x831f': '0x7fffaece363a 0x20', '0x8322': '0x7fffaece363a 0x20', '0x8325': '0x20', '0x8328': '0x0', '0x8331': '0x7fffaece363a 0x0'}, 43: {'0x835c': '0x7fffaece363b 0x6', '0x835f': '0x7fffaece363b 0x6', '0x8366': '0x7fffaece363b 0x6', '0xee44': '0x7fffaece363b 0x6', '0xee4b': '0x7fffaece363b 0x6', '0xee4e': '0x7fffaece363b 0x6', '0xec45': '0x7fffaece363b 0x6', '0xec8c': '0x6;0x6'}, 44: {'0x82ff': '0x7fffaece363c 0x24', '0x8302': '0x7fffaece363c 0x24', '0x8305': '0x24', '0x8308': '0x4', '0x831f': '0x7fffaece363c 0x24', '0x8322': '0x7fffaece363c 0x24', '0x8325': '0x24', '0x8328': '0x4', '0x8331': '0x7fffaece363c 0x4'}, 45: {'0x83ac': '0x7fffaece363d 0x1', '0x83af': '0x7fffaece363d 0x1', '0x83b6': '0x7fffaece363d 0x1', '0x5942': '0x7fffaece363d 0x1', '0x5946': '0x7fffaece363d 0x1', '0x594a': '0x7fffaece363d 0x1', '0x5952': '0x7fffaece363d 0x1', '0xecf1': '0x7fffaece363d 0x1', '0xecf3': '0x7fffaece363d 0x1', '0xecf7': '0x1', '0xed19': '0x1;0x1'}}}, '2:6600000001000000000000005f7079636f6d6d5f00000000': {'0': {2: {'0x15ba3': '0x7fffaece3612 0x0', '0x15ba6': '0x7fffaece3612 0x0', '0x15bba': '0x0', '0x15bbc': '0x7fffaece3612 0x0', '0x15bd2': '0x7fffaece3612 0x0', '0x3da3': '0x7fffaece3612 0x0', '0x3da6': '0x0', '0x3dab': '0x7fffaece3612 0x14', '0x3db2': '0x14', '0x3ef2': '0x7fffaece3612 0x14', '0x3fd7': '0x14;0x14', '0x3fe4': '0x14', '0x4092': '0x7fffaece3612 0x18', '0x145aa': '0x7fffaece3612 0x18', '0x145fc': '0x7fffaece3612 0x18', '0x14604': '0x7fffaece3612 0x18', '0x15452': '0x7fffaece3612 0x18', '0x15489': '0x7fffaece3612 0x0', '0x15508': '0x18;0x80000000', '0x1552d': '0x7fffaece3612 0x18', '0x15538': '0x7fffaece3612 0x0', '0x1553c': '0x7fffaece3612 0x0', '0x1553f': '0x0;0x0'}, 3: {'0x15bb1': '0x7fffaece3613 0x0', '0x15bb4': '0x7fffaece3613 0x0', '0x15bb7': '0x0', '0x15bba': '0x0', '0x15bbc': '0x7fffaece3612 0x0', '0x15bd2': '0x7fffaece3612 0x0', '0x3da3': '0x7fffaece3612 0x0', '0x3da6': '0x0', '0x3dab': '0x7fffaece3612 0x14', '0x3db2': '0x14', '0x3ef2': '0x7fffaece3612 0x14', '0x3fd7': '0x14;0x14', '0x3fe4': '0x14', '0x4092': '0x7fffaece3612 0x18', '0x145aa': '0x7fffaece3612 0x18', '0x145fc': '0x7fffaece3612 0x18', '0x14604': '0x7fffaece3612 0x18', '0x15452': '0x7fffaece3612 0x18', '0x15489': '0x7fffaece3612 0x0', '0x15508': '0x18;0x80000000', '0x1552d': '0x7fffaece3612 0x18', '0x15538': '0x7fffaece3612 0x0', '0x1553c': '0x7fffaece3612 0x0', '0x1553f': '0x0;0x0'}, 0: {'0x15ba3': '0x7fffaece3610 0x66', '0x15ba6': '0x7fffaece3610 0x66', '0x15bba': '0x66', '0x15bbc': '0x7fffaece3610 0x66', '0x15bd2': '0x7fffaece3610 0x66', '0x15476': '0x7fffaece3610 0x66', '0x14663': '0x7fffaece3610 0x66', '0x14667': '0x7fffaece3610 0x66', '0x1466a': '0x66', '0x14673': '0x66', '0x14686': '0x66', '0x14689': '0x3', '0x14692': '0x7fffaece3610 0x3'}, 1: {'0x15bb1': '0x7fffaece3611 0x0', '0x15bb4': '0x7fffaece3611 0x0', '0x15bb7': '0x0', '0x15bba': '0x66', '0x15bbc': '0x7fffaece3610 0x66', '0x15bd2': '0x7fffaece3610 0x66', '0x15476': '0x7fffaece3610 0x66', '0x14663': '0x7fffaece3610 0x66', '0x14667': '0x7fffaece3610 0x66', '0x1466a': '0x66', '0x14673': '0x66', '0x14686': '0x66', '0x14689': '0x3', '0x14692': '0x7fffaece3610 0x3'}, 4: {'0x15cb7': '0x7fffaece3614 0x1', '0x15cba': '0x7fffaece3614 0x1', '0x15cce': '0x0', '0x15ce1': '0x1', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1', '0x1515f': '0x7fffaece3614 0x1', '0x15162': '0x1;0x1', '0x1516e': '0x7fffaece3614 0x1', '0x15171': '0x1', '0x1517a': '0x7fffaece3614 0x1', '0x1517d': '0x1', '0x15180': '0x7fffaece3614 0x0', '0x15183': '0x7fffaece3614 0x0', '0x151a1': '0x7fffaece3614 0x0', '0x151c2': '0x7fffaece3614 0x0', '0x151d7': '0x7fffaece3614 0x0', '0x151da': '0x0', '0x151dd': '0x7fffaece3614 0x1', '0x159ed': '0x7fffaece3614 0x1'}, 5: {'0x15cc5': '0x7fffaece3615 0x0', '0x15cc8': '0x7fffaece3615 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x1', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1', '0x1515f': '0x7fffaece3614 0x1', '0x15162': '0x1;0x1', '0x1516e': '0x7fffaece3614 0x1', '0x15171': '0x1', '0x1517a': '0x7fffaece3614 0x1', '0x1517d': '0x1', '0x15180': '0x7fffaece3614 0x0', '0x15183': '0x7fffaece3614 0x0', '0x151a1': '0x7fffaece3614 0x0', '0x151c2': '0x7fffaece3614 0x0', '0x151d7': '0x7fffaece3614 0x0', '0x151da': '0x0', '0x151dd': '0x7fffaece3614 0x1', '0x159ed': '0x7fffaece3614 0x1'}, 6: {'0x15cd8': '0x7fffaece3616 0x0', '0x15cdb': '0x7fffaece3616 0x0', '0x15cde': '0x0', '0x15ce1': '0x1', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1', '0x1515f': '0x7fffaece3614 0x1', '0x15162': '0x1;0x1', '0x1516e': '0x7fffaece3614 0x1', '0x15171': '0x1', '0x1517a': '0x7fffaece3614 0x1', '0x1517d': '0x1', '0x15180': '0x7fffaece3614 0x0', '0x15183': '0x7fffaece3614 0x0', '0x151a1': '0x7fffaece3614 0x0', '0x151c2': '0x7fffaece3614 0x0', '0x151d7': '0x7fffaece3614 0x0', '0x151da': '0x0', '0x151dd': '0x7fffaece3614 0x1', '0x159ed': '0x7fffaece3614 0x1'}, 7: {'0x15ceb': '0x7fffaece3617 0x0', '0x15cee': '0x7fffaece3617 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1', '0x1515f': '0x7fffaece3614 0x1', '0x15162': '0x1;0x1', '0x1516e': '0x7fffaece3614 0x1', '0x15171': '0x1', '0x1517a': '0x7fffaece3614 0x1', '0x1517d': '0x1', '0x15180': '0x7fffaece3614 0x0', '0x15183': '0x7fffaece3614 0x0', '0x151a1': '0x7fffaece3614 0x0', '0x151c2': '0x7fffaece3614 0x0', '0x151d7': '0x7fffaece3614 0x0', '0x151da': '0x0', '0x151dd': '0x7fffaece3614 0x1', '0x159ed': '0x7fffaece3614 0x1'}, 8: {'0x15cb7': '0x7fffaece3618 0x0', '0x15cba': '0x7fffaece3618 0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 9: {'0x15cc5': '0x7fffaece3619 0x0', '0x15cc8': '0x7fffaece3619 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 10: {'0x15cd8': '0x7fffaece361a 0x0', '0x15cdb': '0x7fffaece361a 0x0', '0x15cde': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 11: {'0x15ceb': '0x7fffaece361b 0x0', '0x15cee': '0x7fffaece361b 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 20: {'0x15cb7': '0x7fffaece3624 0x0', '0x15cba': '0x7fffaece3624 0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 21: {'0x15cc5': '0x7fffaece3625 0x0', '0x15cc8': '0x7fffaece3625 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 22: {'0x15cd8': '0x7fffaece3626 0x0', '0x15cdb': '0x7fffaece3626 0x0', '0x15cde': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 23: {'0x15ceb': '0x7fffaece3627 0x0', '0x15cee': '0x7fffaece3627 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}}}, '3:6300000001000000000000005f7079636f6d6d5f00000000': {'0': {2: {'0x15ba3': '0x7fffaece3612 0x0', '0x15ba6': '0x7fffaece3612 0x0', '0x15bba': '0x0', '0x15bbc': '0x7fffaece3612 0x0', '0x15bd2': '0x7fffaece3612 0x0', '0x3da3': '0x7fffaece3612 0x0', '0x3da6': '0x0', '0x3dab': '0x7fffaece3612 0x14', '0x3db2': '0x14', '0x3ef2': '0x7fffaece3612 0x14', '0x3fd7': '0x14;0x14', '0x3fe4': '0x14', '0x4092': '0x7fffaece3612 0x18', '0x145aa': '0x7fffaece3612 0x18', '0x145fc': '0x7fffaece3612 0x18', '0x14604': '0x7fffaece3612 0x18', '0x15452': '0x7fffaece3612 0x18', '0x15489': '0x7fffaece3612 0x0', '0x15508': '0x18;0x80000000', '0x1552d': '0x7fffaece3612 0x18', '0x15538': '0x7fffaece3612 0x0', '0x1553c': '0x7fffaece3612 0x0', '0x1553f': '0x0;0x0'}, 3: {'0x15bb1': '0x7fffaece3613 0x0', '0x15bb4': '0x7fffaece3613 0x0', '0x15bb7': '0x0', '0x15bba': '0x0', '0x15bbc': '0x7fffaece3612 0x0', '0x15bd2': '0x7fffaece3612 0x0', '0x3da3': '0x7fffaece3612 0x0', '0x3da6': '0x0', '0x3dab': '0x7fffaece3612 0x14', '0x3db2': '0x14', '0x3ef2': '0x7fffaece3612 0x14', '0x3fd7': '0x14;0x14', '0x3fe4': '0x14', '0x4092': '0x7fffaece3612 0x18', '0x145aa': '0x7fffaece3612 0x18', '0x145fc': '0x7fffaece3612 0x18', '0x14604': '0x7fffaece3612 0x18', '0x15452': '0x7fffaece3612 0x18', '0x15489': '0x7fffaece3612 0x0', '0x15508': '0x18;0x80000000', '0x1552d': '0x7fffaece3612 0x18', '0x15538': '0x7fffaece3612 0x0', '0x1553c': '0x7fffaece3612 0x0', '0x1553f': '0x0;0x0'}, 0: {'0x15ba3': '0x7fffaece3610 0x63', '0x15ba6': '0x7fffaece3610 0x63', '0x15bba': '0x63', '0x15bbc': '0x7fffaece3610 0x63', '0x15bd2': '0x7fffaece3610 0x63', '0x15476': '0x7fffaece3610 0x63', '0x14663': '0x7fffaece3610 0x63', '0x14667': '0x7fffaece3610 0x63', '0x1466a': '0x63', '0x14673': '0x63', '0x14686': '0x63', '0x14689': '0x0', '0x14692': '0x7fffaece3610 0x0', '0x1496c': '0x7fffaece3610 0x63', '0x1496f': '0x7fffaece3610 0x63', '0x14979': '0x7fffaece3610 0x63', '0x15de5': '0x7fffaece3610 0x63', '0x15deb': '0x7fffaece3610 0x63', '0x15dfa': '0x7fffaece3610 0x63', '0x15e00': '0x7fffaece3610 0x63', '0x15e04': '0x63', '0x15e08': '0x7fffaece3610 0x0'}, 1: {'0x15bb1': '0x7fffaece3611 0x0', '0x15bb4': '0x7fffaece3611 0x0', '0x15bb7': '0x0', '0x15bba': '0x63', '0x15bbc': '0x7fffaece3610 0x63', '0x15bd2': '0x7fffaece3610 0x63', '0x15476': '0x7fffaece3610 0x63', '0x14663': '0x7fffaece3610 0x63', '0x14667': '0x7fffaece3610 0x63', '0x1466a': '0x63', '0x14673': '0x63', '0x14686': '0x63', '0x14689': '0x0', '0x14692': '0x7fffaece3610 0x0', '0x1496c': '0x7fffaece3610 0x63', '0x1496f': '0x7fffaece3610 0x63', '0x14979': '0x7fffaece3610 0x63', '0x15de5': '0x7fffaece3610 0x63', '0x15deb': '0x7fffaece3610 0x63', '0x15dfa': '0x7fffaece3610 0x63', '0x15dfe': '0x7fffaece3611 0x63', '0x15e00': '0x7fffaece3610 0x63', '0x15e04': '0x63', '0x15e08': '0x7fffaece3610 0x0', '0x15e19': '0x7fffaece3611 0x0'}, 4: {'0x15cb7': '0x7fffaece3614 0x1', '0x15cba': '0x7fffaece3614 0x1', '0x15cce': '0x0', '0x15ce1': '0x1', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1'}, 5: {'0x15cc5': '0x7fffaece3615 0x0', '0x15cc8': '0x7fffaece3615 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x1', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1'}, 6: {'0x15cd8': '0x7fffaece3616 0x0', '0x15cdb': '0x7fffaece3616 0x0', '0x15cde': '0x0', '0x15ce1': '0x1', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1'}, 7: {'0x15ceb': '0x7fffaece3617 0x0', '0x15cee': '0x7fffaece3617 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3614 0x1', '0x15d0b': '0x7fffaece3614 0x1', '0x1549d': '0x7fffaece3614 0x1'}, 8: {'0x15cb7': '0x7fffaece3618 0x0', '0x15cba': '0x7fffaece3618 0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 9: {'0x15cc5': '0x7fffaece3619 0x0', '0x15cc8': '0x7fffaece3619 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 10: {'0x15cd8': '0x7fffaece361a 0x0', '0x15cdb': '0x7fffaece361a 0x0', '0x15cde': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 11: {'0x15ceb': '0x7fffaece361b 0x0', '0x15cee': '0x7fffaece361b 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3618 0x0', '0x15d0b': '0x7fffaece3618 0x0', '0x154b0': '0x7fffaece3618 0x0'}, 20: {'0x15cb7': '0x7fffaece3624 0x0', '0x15cba': '0x7fffaece3624 0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 21: {'0x15cc5': '0x7fffaece3625 0x0', '0x15cc8': '0x7fffaece3625 0x0', '0x15ccb': '0x0', '0x15cce': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 22: {'0x15cd8': '0x7fffaece3626 0x0', '0x15cdb': '0x7fffaece3626 0x0', '0x15cde': '0x0', '0x15ce1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}, 23: {'0x15ceb': '0x7fffaece3627 0x0', '0x15cee': '0x7fffaece3627 0x0', '0x15cf1': '0x0', '0x15cf4': '0x0', '0x15cf6': '0x7fffaece3624 0x0', '0x15d0b': '0x7fffaece3624 0x0', '0x154f4': '0x7fffaece3624 0x0', '0x14621': '0x7fffaece3624 0x0', '0x14629': '0x0;0x0'}}}}
2025-03-08 21:06:22,286 - my_text.py:352  - Local variables for GetUintFromMessage: {'var_18': {'start': 0, 'end': 7}, 'var_A': {'start': 14, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' s': {'start': 24, 'end': 31}, ' r': {'start': 32, 'end': 39}}
2025-03-08 21:06:22,293 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,293 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,293 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,293 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,294 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,310 - my_text.py:352  - Local variables for HandleDataOnTcpSocket: {'fd': {'start': 12, 'end': 15}, 'var_4AC': {'start': 20, 'end': 23}, 'len': {'start': 24, 'end': 27}, 'var_4A4': {'start': 28, 'end': 31}, 'var_4A0': {'start': 32, 'end': 35}, 'var_49C': {'start': 36, 'end': 39}, 'var_498': {'start': 40, 'end': 43}, 'var_494': {'start': 44, 'end': 47}, 'var_490': {'start': 48, 'end': 51}, 'var_48C': {'start': 52, 'end': 55}, 'var_488': {'start': 56, 'end': 63}, 'n': {'start': 64, 'end': 71}, 'var_478': {'start': 72, 'end': 79}, 'var_470': {'start': 80, 'end': 87}, 'var_468': {'start': 88, 'end': 95}, 'var_460': {'start': 96, 'end': 103}, 'var_458': {'start': 104, 'end': 111}, 'var_450': {'start': 112, 'end': 119}, 'var_448': {'start': 120, 'end': 127}, 'var_440': {'start': 128, 'end': 135}, 'var_438': {'start': 136, 'end': 143}, 's': {'start': 144, 'end': 159}, 'var_420': {'start': 160, 'end': 160}, 'var_218': {'start': 680, 'end': 687}, 'buf': {'start': 688, 'end': 695}, 'var_208': {'start': 696, 'end': 703}, 'var_200': {'start': 704, 'end': 704}, 'var_8': {'start': 1208, 'end': 1215}, ' s': {'start': 1216, 'end': 1223}, ' r': {'start': 1224, 'end': 1231}}
2025-03-08 21:06:22,315 - my_text.py:150  - Pseudocode line:       v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;
2025-03-08 21:06:22,315 - my_text.py:150  - Pseudocode line:       v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;
2025-03-08 21:06:22,315 - my_text.py:150  - Pseudocode line:       v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;
2025-03-08 21:06:22,315 - my_text.py:150  - Pseudocode line:       if ( v13 <= 0x1FC )
2025-03-08 21:06:22,316 - my_text.py:150  - Pseudocode line:         v14 = recv(a1, (char *)buf + 4, v13, 0);
2025-03-08 21:06:22,316 - my_text.py:150  - Pseudocode line:             if ( v13 == (unsigned int)v14 )
2025-03-08 21:06:22,316 - my_text.py:150  - Pseudocode line:               v13 += 4LL;
2025-03-08 21:06:22,316 - my_text.py:150  - Pseudocode line:               v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);
2025-03-08 21:06:22,319 - my_text.py:352  - Local variables for HandleReceivedExplictTcpData: {'var_70': {'start': 0, 'end': 7}, 'var_68': {'start': 8, 'end': 15}, 'var_60': {'start': 16, 'end': 23}, 'var_58': {'start': 24, 'end': 31}, 'var_50': {'start': 32, 'end': 39}, 'var_44': {'start': 44, 'end': 47}, 'var_38': {'start': 56, 'end': 59}, 'var_34': {'start': 60, 'end': 63}, 'var_30': {'start': 64, 'end': 71}, 'var_28': {'start': 72, 'end': 79}, 'var_20': {'start': 80, 'end': 87}, 'var_18': {'start': 88, 'end': 95}, 'var_10': {'start': 96, 'end': 103}, 'var_8': {'start': 104, 'end': 111}, ' s': {'start': 112, 'end': 119}, ' r': {'start': 120, 'end': 127}}
2025-03-08 21:06:22,320 - my_text.py:150  - Pseudocode line:   v17 = __readfsqword(0x28u);
2025-03-08 21:06:22,321 - my_text.py:150  - Pseudocode line:   EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);
2025-03-08 21:06:22,321 - my_text.py:150  - Pseudocode line:   EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);
2025-03-08 21:06:22,329 - my_text.py:352  - Local variables for CreateEncapsulationStructure: {'var_18': {'start': 8, 'end': 15}, 'var_10': {'start': 16, 'end': 23}, 'src': {'start': 24, 'end': 31}, ' s': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}
2025-03-08 21:06:22,331 - my_text.py:150  - Pseudocode line:   src = a1;
2025-03-08 21:06:22,331 - my_text.py:150  - Pseudocode line:   *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);
2025-03-08 21:06:22,331 - my_text.py:150  - Pseudocode line:   if ( a2 >= 0x80000000 )
2025-03-08 21:06:22,331 - my_text.py:150  - Pseudocode line:   return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));
2025-03-08 21:06:22,332 - my_text.py:150  - Pseudocode line:   return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));
2025-03-08 21:06:22,332 - my_text.py:150  - Pseudocode line:   return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));
2025-03-08 21:06:22,332 - my_text.py:150  - Pseudocode line:   return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));
2025-03-08 21:06:22,332 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,332 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,333 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,333 - my_text.py:150  - Pseudocode line:   *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);
2025-03-08 21:06:22,333 - my_text.py:150  - Pseudocode line:     if ( (unsigned __int16)v12 > 0x70u )
2025-03-08 21:06:22,333 - my_text.py:150  - Pseudocode line:     if ( (unsigned __int16)v12 > 0x70u )
2025-03-08 21:06:22,334 - my_text.py:150  - Pseudocode line:     if ( (unsigned __int16)v12 > 0x70u )
2025-03-08 21:06:22,334 - my_text.py:150  - Pseudocode line:     if ( (unsigned __int16)v12 >= 0x63u )
2025-03-08 21:06:22,334 - my_text.py:150  - Pseudocode line:         return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);
2025-03-08 21:06:22,335 - my_text.py:150  - Pseudocode line:         return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);
2025-03-08 21:06:22,335 - my_text.py:150  - Pseudocode line:         return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);
2025-03-08 21:06:22,337 - my_text.py:352  - Local variables for GenerateEncapsulationHeader: {'var_20': {'start': 0, 'end': 7}, 'var_18': {'start': 8, 'end': 11}, 'var_14': {'start': 12, 'end': 15}, 'var_10': {'start': 16, 'end': 23}, 'var_8': {'start': 24, 'end': 31}, ' s': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}
2025-03-08 21:06:22,337 - my_text.py:150  - Pseudocode line:   AddIntToMessage(*a1, a5);
2025-03-08 21:06:22,339 - my_text.py:150  - Pseudocode line:   AddIntToMessage(*a1, a5);
2025-03-08 21:06:22,339 - my_text.py:150  - Pseudocode line:   AddIntToMessage(*a1, a5);
2025-03-08 21:06:22,340 - my_text.py:352  - Local variables for AddIntToMessage: {'var_10': {'start': 0, 'end': 7}, 'var_4': {'start': 12, 'end': 13}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:06:22,341 - my_text.py:150  - Pseudocode line:   **(_WORD **)(a2 + 512) = a1;
2025-03-08 21:06:22,342 - my_text.py:150  - Pseudocode line:   **(_WORD **)(a2 + 512) = a1;
2025-03-08 21:06:22,342 - my_text.py:150  - Pseudocode line:   **(_WORD **)(a2 + 512) = a1;
2025-03-08 21:06:22,342 - my_text.py:150  - Pseudocode line:   **(_WORD **)(a2 + 512) = a1;
2025-03-08 21:06:22,342 - my_text.py:150  - Pseudocode line:   **(_WORD **)(a2 + 512) = a1;
2025-03-08 21:06:22,343 - my_text.py:150  - Pseudocode line:   **(_WORD **)(a2 + 512) = a1;
2025-03-08 21:06:22,343 - my_text.py:150  - Pseudocode line:   **(_WORD **)(a2 + 512) = a1;
2025-03-08 21:06:22,343 - my_text.py:150  - Pseudocode line:   *(_QWORD *)(a2 + 512) += 2LL;
2025-03-08 21:06:22,345 - my_text.py:352  - Local variables for GetUdintFromMessage: {'var_18': {'start': 0, 'end': 7}, 'var_C': {'start': 12, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' s': {'start': 24, 'end': 31}, ' r': {'start': 32, 'end': 39}}
2025-03-08 21:06:22,346 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,346 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,346 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,346 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,347 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,347 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,347 - my_text.py:150  - Pseudocode line:   return v2;
2025-03-08 21:06:22,347 - my_text.py:150  - Pseudocode line:   *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);
2025-03-08 21:06:22,347 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,347 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,347 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,348 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,348 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,348 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,348 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,348 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,348 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,350 - my_text.py:150  - Pseudocode line:   *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);
2025-03-08 21:06:22,351 - my_text.py:150  - Pseudocode line:   *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);
2025-03-08 21:06:22,352 - my_text.py:150  - Pseudocode line:   *a4 = EncapsulationStructure;
2025-03-08 21:06:22,352 - my_text.py:150  - Pseudocode line:   if ( !HIDWORD(v14) && *a4 >= 0 )
2025-03-08 21:06:22,370 - my_text.py:352  - Local variables for HandleReceivedRegisterSessionCommand: {'var_38': {'start': 8, 'end': 15}, 'var_30': {'start': 16, 'end': 23}, 'var_24': {'start': 28, 'end': 31}, 'var_1C': {'start': 36, 'end': 37}, 'var_1A': {'start': 38, 'end': 39}, 'var_18': {'start': 40, 'end': 43}, 'var_14': {'start': 44, 'end': 47}, 'var_10': {'start': 48, 'end': 51}, 'var_C': {'start': 52, 'end': 55}, 'var_8': {'start': 56, 'end': 63}, ' s': {'start': 64, 'end': 71}, ' r': {'start': 72, 'end': 79}}
2025-03-08 21:06:22,373 - my_text.py:150  - Pseudocode line:   UintFromMessage = GetUintFromMessage((_WORD **)(a2 + 32));
2025-03-08 21:06:22,374 - my_text.py:150  - Pseudocode line:   if ( UintFromMessage != 1 || *(_WORD *)v6 )
2025-03-08 21:06:22,374 - my_text.py:150  - Pseudocode line:   if ( UintFromMessage != 1 || *(_WORD *)v6 )
2025-03-08 21:06:22,374 - my_text.py:150  - Pseudocode line:   *(_DWORD *)v6 = (unsigned __int16)GetUintFromMessage((_WORD **)(a2 + 32));
2025-03-08 21:06:22,375 - my_text.py:150  - Pseudocode line:   if ( UintFromMessage != 1 || *(_WORD *)v6 )
2025-03-08 21:06:22,375 - my_text.py:364  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 c_taint_asm_dict: {'0': {2: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'HandleDataOnTcpSocket': {'cmp     [rbp+var_478], rax', 'movzx   eax, ax', 'mov     rdx, [rbp+var_478]', 'mov     rdx, [rbp+var_478]; n', 'add     [rbp+var_478], 4', 'cmp     [rbp+var_478], 1FCh', 'add     eax, 14h', 'mov     [rbp+var_478], rax'}, 'HandleReceivedExplictTcpData': {'mov     rsi, rcx', 'mov     rcx, [rbp+var_58]', 'mov     [rbp+var_58], rdx'}, 'CreateEncapsulationStructure': {'movzx   eax, word ptr [rax+2]', 'movzx   eax, ax', 'cmp     [rbp+var_10], rax', 'mov     rax, [rbp+var_10]', 'mov     [rbp+var_10], rsi', 'mov     [rdx+2], ax', 'sub     edx, eax'}}, 3: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'HandleDataOnTcpSocket': {'cmp     [rbp+var_478], rax', 'movzx   eax, ax', 'mov     rdx, [rbp+var_478]', 'mov     rdx, [rbp+var_478]; n', 'add     [rbp+var_478], 4', 'cmp     [rbp+var_478], 1FCh', 'add     eax, 14h', 'mov     [rbp+var_478], rax'}, 'HandleReceivedExplictTcpData': {'mov     rsi, rcx', 'mov     rcx, [rbp+var_58]', 'mov     [rbp+var_58], rdx'}, 'CreateEncapsulationStructure': {'movzx   eax, word ptr [rax+2]', 'movzx   eax, ax', 'cmp     [rbp+var_10], rax', 'mov     rax, [rbp+var_10]', 'mov     [rbp+var_10], rsi', 'mov     [rdx+2], ax', 'sub     edx, eax'}}, 0: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'CreateEncapsulationStructure': {'mov     [rdx], ax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, 0Dh', "cmp     eax, 70h ; 'p'", 'movzx   eax, ax', 'mov     eax, eax', 'movzx   eax, word ptr [rbp+var_30]', "sub     eax, 63h ; 'c'; switch 14 cases", "cmp     eax, 63h ; 'c'"}, 'GenerateEncapsulationHeader': {'mov     edi, eax', 'movzx   eax, word ptr [rax]', 'movzx   eax, ax'}, 'AddIntToMessage': {'shr     ax, 8', 'movzx   eax, [rbp+var_4]', 'mov     edx, eax', 'mov     eax, edi', 'mov     [rbp+var_4], ax', 'movzx   edx, [rbp+var_4]'}}, 1: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'CreateEncapsulationStructure': {'mov     [rdx], ax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, 0Dh', "cmp     eax, 70h ; 'p'", 'movzx   eax, ax', 'mov     eax, eax', 'movzx   eax, word ptr [rbp+var_30]', "sub     eax, 63h ; 'c'; switch 14 cases", "cmp     eax, 63h ; 'c'"}, 'GenerateEncapsulationHeader': {'mov     edi, eax', 'movzx   eax, word ptr [rax]', 'movzx   eax, ax'}, 'AddIntToMessage': {'mov     [rax], dl', 'shr     ax, 8', 'movzx   eax, [rbp+var_4]', 'mov     edx, eax', 'mov     eax, edi', 'mov     [rbp+var_4], ax', 'movzx   edx, [rbp+var_4]'}}, 4: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}}, 5: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}}, 6: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}}, 7: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}}, 8: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 9: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 10: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 11: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 20: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 21: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 22: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 23: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 24: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'HandleReceivedRegisterSessionCommand': {'mov     [rbp+var_1C], ax', 'cmp     [rbp+var_1C], ax', 'cmp     [rbp+var_1C], 0'}}, 25: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'HandleReceivedRegisterSessionCommand': {'mov     [rbp+var_1C], ax', 'cmp     [rbp+var_1C], ax', 'cmp     [rbp+var_1C], 0'}}, 26: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'HandleReceivedRegisterSessionCommand': {'mov     [rbp+var_1A], ax', 'cmp     [rbp+var_1A], 0'}}, 27: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'HandleReceivedRegisterSessionCommand': {'mov     [rbp+var_1A], ax', 'cmp     [rbp+var_1A], 0'}}}}
2025-03-08 21:06:22,381 - my_text.py:352  - Local variables for HandleReceivedSendRequestResponseDataCommand: {'var_28': {'start': 8, 'end': 15}, 'var_20': {'start': 16, 'end': 23}, 'var_18': {'start': 24, 'end': 31}, 'var_4': {'start': 44, 'end': 47}, ' s': {'start': 48, 'end': 55}, ' r': {'start': 56, 'end': 63}}
2025-03-08 21:06:22,382 - my_text.py:150  - Pseudocode line:   if ( *(_WORD *)(a1 + 2) > 5u )
2025-03-08 21:06:22,382 - my_text.py:150  - Pseudocode line:   if ( *(_WORD *)(a1 + 2) > 5u )
2025-03-08 21:06:22,383 - my_text.py:150  - Pseudocode line:     *(_WORD *)(a1 + 2) -= 6;
2025-03-08 21:06:22,385 - my_text.py:352  - Local variables for CheckRegisteredSessions: {'var_8': {'start': 0, 'end': 7}, ' s': {'start': 8, 'end': 15}, ' r': {'start': 16, 'end': 23}}
2025-03-08 21:06:22,386 - my_text.py:150  - Pseudocode line:   if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )
2025-03-08 21:06:22,386 - my_text.py:150  - Pseudocode line:   if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )
2025-03-08 21:06:22,386 - my_text.py:150  - Pseudocode line:   if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )
2025-03-08 21:06:22,387 - my_text.py:150  - Pseudocode line:   if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )
2025-03-08 21:06:22,387 - my_text.py:150  - Pseudocode line:   if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )
2025-03-08 21:06:22,387 - my_text.py:150  - Pseudocode line:   if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )
2025-03-08 21:06:22,387 - my_text.py:150  - Pseudocode line:   if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )
2025-03-08 21:06:22,394 - my_text.py:352  - Local variables for NotifyCommonPacketFormat: {'var_248': {'start': 8, 'end': 15}, 'var_240': {'start': 16, 'end': 23}, 'var_238': {'start': 24, 'end': 31}, 'var_230': {'start': 32, 'end': 35}, 'var_22C': {'start': 36, 'end': 39}, 'var_228': {'start': 40, 'end': 47}, 'var_220': {'start': 48, 'end': 48}, 'var_8': {'start': 584, 'end': 591}, ' s': {'start': 592, 'end': 599}, ' r': {'start': 600, 'end': 607}}
2025-03-08 21:06:22,395 - my_text.py:150  - Pseudocode line:       CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));
2025-03-08 21:06:22,395 - my_text.py:150  - Pseudocode line:       CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));
2025-03-08 21:06:22,397 - my_text.py:352  - Local variables for NotifyMessageRouter: {'var_30': {'start': 0, 'end': 7}, 'var_28': {'start': 8, 'end': 15}, 'var_20': {'start': 16, 'end': 19}, 'var_1C': {'start': 20, 'end': 23}, 'var_18': {'start': 24, 'end': 31}, 'var_10': {'start': 32, 'end': 35}, 'var_C': {'start': 36, 'end': 39}, 'var_8': {'start': 40, 'end': 47}, ' s': {'start': 48, 'end': 55}, ' r': {'start': 56, 'end': 63}}
2025-03-08 21:06:22,398 - my_text.py:150  - Pseudocode line:   v9 = 1;
2025-03-08 21:06:22,398 - my_text.py:150  - Pseudocode line:       return (unsigned int)NotifyClass(RegisteredObject[1], (__int64)&g_message_router_request, a3, a4, a5);
2025-03-08 21:06:22,398 - my_text.py:150  - Pseudocode line:       return (unsigned int)NotifyClass(RegisteredObject[1], (__int64)&g_message_router_request, a3, a4, a5);
2025-03-08 21:06:22,400 - my_text.py:352  - Local variables for NotifyClass: {'var_44': {'start': 12, 'end': 15}, 'var_40': {'start': 16, 'end': 23}, 'var_38': {'start': 24, 'end': 31}, 'var_30': {'start': 32, 'end': 39}, 'var_28': {'start': 40, 'end': 47}, 'var_1A': {'start': 54, 'end': 55}, 'var_18': {'start': 56, 'end': 63}, 'var_10': {'start': 64, 'end': 71}, 'var_8': {'start': 72, 'end': 79}, ' s': {'start': 80, 'end': 87}, ' r': {'start': 88, 'end': 95}}
2025-03-08 21:06:22,401 - my_text.py:150  - Pseudocode line:   CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));
2025-03-08 21:06:22,401 - my_text.py:150  - Pseudocode line:         GenerateEncapsulationHeader((unsigned __int16 *)a1, *(_QWORD *)(a3 + 520), *(_DWORD *)(a1 + 4), 0, a3);
2025-03-08 21:06:22,402 - my_text.py:150  - Pseudocode line:   AddIntToMessage(*a1, a5);
2025-03-08 21:06:22,402 - my_text.py:150  - Pseudocode line:   AddDintToMessage(a3, a5);
2025-03-08 21:06:22,402 - my_text.py:150  - Pseudocode line:   AddDintToMessage(a3, a5);
2025-03-08 21:06:22,403 - my_text.py:352  - Local variables for AddDintToMessage: {'var_10': {'start': 0, 'end': 7}, 'var_4': {'start': 12, 'end': 15}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:06:22,403 - my_text.py:150  - Pseudocode line:   *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;
2025-03-08 21:06:22,403 - my_text.py:150  - Pseudocode line:   **(_BYTE **)(a2 + 512) = a1;
2025-03-08 21:06:22,403 - my_text.py:150  - Pseudocode line:   **(_BYTE **)(a2 + 512) = a1;
2025-03-08 21:06:22,404 - my_text.py:150  - Pseudocode line:   **(_BYTE **)(a2 + 512) = a1;
2025-03-08 21:06:22,404 - my_text.py:150  - Pseudocode line:   *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;
2025-03-08 21:06:22,404 - my_text.py:150  - Pseudocode line:   *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;
2025-03-08 21:06:22,404 - my_text.py:150  - Pseudocode line:   *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;
2025-03-08 21:06:22,405 - my_text.py:150  - Pseudocode line:   *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;
2025-03-08 21:06:22,405 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*(_QWORD *)(a2 + 512) + 3LL) = HIBYTE(a1);
2025-03-08 21:06:22,405 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*(_QWORD *)(a2 + 512) + 3LL) = HIBYTE(a1);
2025-03-08 21:06:22,405 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*(_QWORD *)(a2 + 512) + 3LL) = HIBYTE(a1);
2025-03-08 21:06:22,407 - my_text.py:150  - Pseudocode line:   **(_BYTE **)(a2 + 512) = a1;
2025-03-08 21:06:22,407 - my_text.py:150  - Pseudocode line:   *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;
2025-03-08 21:06:22,407 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*(_QWORD *)(a2 + 512) + 3LL) = HIBYTE(a1);
2025-03-08 21:06:22,407 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*(_QWORD *)(a2 + 512) + 3LL) = HIBYTE(a1);
2025-03-08 21:06:22,409 - my_text.py:352  - Local variables for GetDintFromMessage: {'var_18': {'start': 0, 'end': 7}, 'var_C': {'start': 12, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' s': {'start': 24, 'end': 31}, ' r': {'start': 32, 'end': 39}}
2025-03-08 21:06:22,409 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,409 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,409 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,410 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,410 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,410 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,410 - my_text.py:150  - Pseudocode line:   return v2;
2025-03-08 21:06:22,410 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,410 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,410 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,410 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,410 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,411 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,411 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,411 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,411 - my_text.py:150  - Pseudocode line:   v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);
2025-03-08 21:06:22,412 - my_text.py:352  - Local variables for GetIntFromMessage: {'var_18': {'start': 0, 'end': 7}, 'var_A': {'start': 14, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' s': {'start': 24, 'end': 31}, ' r': {'start': 32, 'end': 39}}
2025-03-08 21:06:22,412 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,412 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,412 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,412 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,412 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,412 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,412 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,413 - my_text.py:150  - Pseudocode line:   return (unsigned __int16)*(*a1)++;
2025-03-08 21:06:22,416 - my_text.py:352  - Local variables for CreateCommonPacketFormatStructure: {'var_38': {'start': 8, 'end': 15}, 'var_30': {'start': 16, 'end': 23}, 'var_28': {'start': 24, 'end': 31}, 'var_1C': {'start': 36, 'end': 37}, 'var_1A': {'start': 38, 'end': 39}, 'var_18': {'start': 40, 'end': 47}, 'var_10': {'start': 48, 'end': 55}, 'var_8': {'start': 56, 'end': 63}, ' s': {'start': 64, 'end': 71}, ' r': {'start': 72, 'end': 79}}
2025-03-08 21:06:22,419 - my_text.py:150  - Pseudocode line:   UintFromMessage = GetUintFromMessage(&v11);
2025-03-08 21:06:22,419 - my_text.py:150  - Pseudocode line:   *(_WORD *)a3 = UintFromMessage;
2025-03-08 21:06:22,419 - my_text.py:150  - Pseudocode line:   *(_WORD *)a3 = UintFromMessage;
2025-03-08 21:06:22,420 - my_text.py:150  - Pseudocode line:   if ( *(_WORD *)a3 )
2025-03-08 21:06:22,420 - my_text.py:150  - Pseudocode line:   if ( *(_WORD *)a3 )
2025-03-08 21:06:22,420 - my_text.py:150  - Pseudocode line:   if ( *(_WORD *)a3 > 1u )
2025-03-08 21:06:22,420 - my_text.py:150  - Pseudocode line:   if ( *(_WORD *)a3 > 1u )
2025-03-08 21:06:22,421 - my_text.py:150  - Pseudocode line:     v13 = *(_WORD *)a3 - 2;
2025-03-08 21:06:22,421 - my_text.py:150  - Pseudocode line:     v13 = *(_WORD *)a3 - 2;
2025-03-08 21:06:22,421 - my_text.py:150  - Pseudocode line:     v13 = *(_WORD *)a3 - 2;
2025-03-08 21:06:22,422 - my_text.py:150  - Pseudocode line:       if ( v13 <= 2u )
2025-03-08 21:06:22,424 - my_text.py:150  - Pseudocode line:         v9 = v13;
2025-03-08 21:06:22,425 - my_text.py:150  - Pseudocode line:   if ( *(_WORD *)a3 <= 3u )
2025-03-08 21:06:22,426 - my_text.py:150  - Pseudocode line:   if ( *(_WORD *)a3 <= 3u )
2025-03-08 21:06:22,426 - my_text.py:150  - Pseudocode line:     if ( *(_WORD *)a3 <= 2u )
2025-03-08 21:06:22,426 - my_text.py:150  - Pseudocode line:     if ( *(_WORD *)a3 <= 2u )
2025-03-08 21:06:22,427 - my_text.py:352  - Local variables for EncodeItemCount: {'var_10': {'start': 0, 'end': 7}, 'var_8': {'start': 8, 'end': 15}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:06:22,427 - my_text.py:150  - Pseudocode line:   return AddIntToMessage(*a1, a2);
2025-03-08 21:06:22,427 - my_text.py:150  - Pseudocode line:   return AddIntToMessage(*a1, a2);
2025-03-08 21:06:22,427 - my_text.py:150  - Pseudocode line:   return AddIntToMessage(*a1, a2);
2025-03-08 21:06:22,428 - my_text.py:150  - Pseudocode line:     *(_WORD *)(a3 + 4) = GetUintFromMessage(&v11);
2025-03-08 21:06:22,428 - my_text.py:150  - Pseudocode line:     if ( word_23484 || word_23490 != 178 )
2025-03-08 21:06:22,428 - my_text.py:150  - Pseudocode line:     if ( word_23484 || word_23490 != 178 )
2025-03-08 21:06:22,431 - my_text.py:352  - Local variables for AssembleLinearMessage: {'var_28': {'start': 8, 'end': 15}, 'var_20': {'start': 16, 'end': 23}, 'var_18': {'start': 24, 'end': 31}, 'var_8': {'start': 40, 'end': 43}, 'var_4': {'start': 44, 'end': 47}, ' s': {'start': 48, 'end': 55}, ' r': {'start': 56, 'end': 63}}
2025-03-08 21:06:22,433 - my_text.py:150  - Pseudocode line:   v3 = (unsigned __int16)a2[2];
2025-03-08 21:06:22,433 - my_text.py:150  - Pseudocode line:   v3 = (unsigned __int16)a2[2];
2025-03-08 21:06:22,434 - my_text.py:150  - Pseudocode line:   if ( v3 == 32770 )
2025-03-08 21:06:22,434 - my_text.py:150  - Pseudocode line:     if ( (unsigned __int16)a2[2] > 0x8002u )
2025-03-08 21:06:22,434 - my_text.py:150  - Pseudocode line:     if ( (unsigned __int16)a2[2] > 0x8002u )
2025-03-08 21:06:22,434 - my_text.py:150  - Pseudocode line:     *(_WORD *)(a3 + 6) = GetUintFromMessage(&v11);
2025-03-08 21:06:22,434 - my_text.py:150  - Pseudocode line:     if ( *(_WORD *)(a3 + 6) > 3u )
2025-03-08 21:06:22,434 - my_text.py:150  - Pseudocode line:     if ( *(_WORD *)(a3 + 6) > 3u )
2025-03-08 21:06:22,435 - my_text.py:150  - Pseudocode line:     if ( *(_WORD *)(a3 + 6) == 8 )
2025-03-08 21:06:22,435 - my_text.py:150  - Pseudocode line:     if ( *(_WORD *)(a3 + 6) == 8 )
2025-03-08 21:06:22,435 - my_text.py:150  - Pseudocode line:     *(_WORD *)(a3 + 16) = GetUintFromMessage(&v11);
2025-03-08 21:06:22,435 - my_text.py:150  - Pseudocode line:     if ( word_23484 || word_23490 != 178 )
2025-03-08 21:06:22,436 - my_text.py:150  - Pseudocode line:     if ( word_23484 || word_23490 != 178 )
2025-03-08 21:06:22,436 - my_text.py:150  - Pseudocode line:   if ( a2[8] == 178 || a2[8] == 177 )
2025-03-08 21:06:22,436 - my_text.py:150  - Pseudocode line:   if ( a2[8] == 178 || a2[8] == 177 )
2025-03-08 21:06:22,436 - my_text.py:352  - Local variables for EncodeDataItemType: {'var_10': {'start': 0, 'end': 7}, 'var_8': {'start': 8, 'end': 15}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:06:22,437 - my_text.py:150  - Pseudocode line:   return AddIntToMessage(*(_WORD *)(a1 + 16), a2);
2025-03-08 21:06:22,437 - my_text.py:150  - Pseudocode line:   return AddIntToMessage(*(_WORD *)(a1 + 16), a2);
2025-03-08 21:06:22,437 - my_text.py:150  - Pseudocode line:   return AddIntToMessage(*(_WORD *)(a1 + 16), a2);
2025-03-08 21:06:22,437 - my_text.py:150  - Pseudocode line:       if ( a2[8] == 177 )
2025-03-08 21:06:22,437 - my_text.py:150  - Pseudocode line:       if ( a2[8] == 177 )
2025-03-08 21:06:22,438 - my_text.py:150  - Pseudocode line:     *(_WORD *)(a3 + 18) = GetUintFromMessage(&v11);
2025-03-08 21:06:22,439 - my_text.py:150  - Pseudocode line:     if ( a2 < (unsigned __int64)*(unsigned __int16 *)(a3 + 18) + v14 + 4 )
2025-03-08 21:06:22,439 - my_text.py:150  - Pseudocode line:     if ( a2 < (unsigned __int64)*(unsigned __int16 *)(a3 + 18) + v14 + 4 )
2025-03-08 21:06:22,439 - my_text.py:150  - Pseudocode line:     if ( a2 < (unsigned __int64)*(unsigned __int16 *)(a3 + 18) + v14 + 4 )
2025-03-08 21:06:22,439 - my_text.py:150  - Pseudocode line:     v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));
2025-03-08 21:06:22,440 - my_text.py:150  - Pseudocode line:     v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));
2025-03-08 21:06:22,440 - my_text.py:150  - Pseudocode line:     v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));
2025-03-08 21:06:22,440 - my_text.py:150  - Pseudocode line:     v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));
2025-03-08 21:06:22,440 - my_text.py:150  - Pseudocode line:     v14 += *(unsigned __int16 *)(a3 + 18) + 4;
2025-03-08 21:06:22,440 - my_text.py:150  - Pseudocode line:     v14 += *(unsigned __int16 *)(a3 + 18) + 4;
2025-03-08 21:06:22,441 - my_text.py:150  - Pseudocode line:     v14 += *(unsigned __int16 *)(a3 + 18) + 4;
2025-03-08 21:06:22,441 - my_text.py:150  - Pseudocode line:     v14 += *(unsigned __int16 *)(a3 + 18) + 4;
2025-03-08 21:06:22,441 - my_text.py:150  - Pseudocode line:       CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));
2025-03-08 21:06:22,441 - my_text.py:150  - Pseudocode line:       CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));
2025-03-08 21:06:22,441 - my_text.py:150  - Pseudocode line:   v9 = 1;
2025-03-08 21:06:22,441 - my_text.py:150  - Pseudocode line:   MessageRouterRequestStructure = CreateMessageRouterRequestStructure(a1, a2, (__int64)&g_message_router_request);
2025-03-08 21:06:22,442 - my_text.py:150  - Pseudocode line:   MessageRouterRequestStructure = CreateMessageRouterRequestStructure(a1, a2, (__int64)&g_message_router_request);
2025-03-08 21:06:22,442 - my_text.py:150  - Pseudocode line:   MessageRouterRequestStructure = CreateMessageRouterRequestStructure(a1, a2, (__int64)&g_message_router_request);
2025-03-08 21:06:22,443 - my_text.py:352  - Local variables for CreateMessageRouterRequestStructure: {'var_38': {'start': 8, 'end': 15}, 'var_2C': {'start': 20, 'end': 21}, 'var_28': {'start': 24, 'end': 31}, 'var_14': {'start': 44, 'end': 47}, 'var_10': {'start': 48, 'end': 55}, 'var_8': {'start': 56, 'end': 63}, ' s': {'start': 64, 'end': 71}, ' r': {'start': 72, 'end': 79}}
2025-03-08 21:06:22,444 - my_text.py:150  - Pseudocode line:   v6 = a1;
2025-03-08 21:06:22,444 - my_text.py:150  - Pseudocode line:   v8[1] = __readfsqword(0x28u);
2025-03-08 21:06:22,444 - my_text.py:150  - Pseudocode line:   v6 = (_WORD *)((char *)v6 + 1);
2025-03-08 21:06:22,444 - my_text.py:150  - Pseudocode line:   v5 = a2 - 1;
2025-03-08 21:06:22,444 - my_text.py:150  - Pseudocode line:   v5 = a2 - 1;
2025-03-08 21:06:22,444 - my_text.py:150  - Pseudocode line:   if ( (unsigned __int64)v5 < v8[0] )
2025-03-08 21:06:22,445 - my_text.py:150  - Pseudocode line:   if ( (unsigned __int64)v5 < v8[0] )
2025-03-08 21:06:22,445 - my_text.py:150  - Pseudocode line:   *(_QWORD *)(a3 + 16) = v5 - v8[0];
2025-03-08 21:06:22,445 - my_text.py:150  - Pseudocode line:   *(_QWORD *)(a3 + 16) = v5 - v8[0];
2025-03-08 21:06:22,445 - my_text.py:150  - Pseudocode line:   *(_QWORD *)(a3 + 16) = v5 - v8[0];
2025-03-08 21:06:22,446 - my_text.py:150  - Pseudocode line:   *(_BYTE *)a3 = *a1;
2025-03-08 21:06:22,446 - my_text.py:150  - Pseudocode line:   *(_BYTE *)a3 = *a1;
2025-03-08 21:06:22,446 - my_text.py:150  - Pseudocode line:         if ( *(_BYTE *)a2 == *(_BYTE *)v9 )
2025-03-08 21:06:22,446 - my_text.py:150  - Pseudocode line:         if ( *(_BYTE *)a2 == *(_BYTE *)v9 )
2025-03-08 21:06:22,446 - my_text.py:150  - Pseudocode line:   *a3 = *(_BYTE *)a2 | 0x80;
2025-03-08 21:06:22,446 - my_text.py:150  - Pseudocode line:   *a3 = *(_BYTE *)a2 | 0x80;
2025-03-08 21:06:22,447 - my_text.py:150  - Pseudocode line:   *a3 = *(_BYTE *)a2 | 0x80;
2025-03-08 21:06:22,447 - my_text.py:150  - Pseudocode line:   *a3 = *(_BYTE *)a2 | 0x80;
2025-03-08 21:06:22,447 - my_text.py:352  - Local variables for EncodeReplyService: {'var_10': {'start': 0, 'end': 7}, 'var_8': {'start': 8, 'end': 15}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:06:22,448 - my_text.py:150  - Pseudocode line:   return AddSintToMessage(*a1, a2);
2025-03-08 21:06:22,448 - my_text.py:150  - Pseudocode line:   return AddSintToMessage(*a1, a2);
2025-03-08 21:06:22,448 - my_text.py:150  - Pseudocode line:   return AddSintToMessage(*a1, a2);
2025-03-08 21:06:22,448 - my_text.py:352  - Local variables for AddSintToMessage: {'var_10': {'start': 0, 'end': 7}, 'var_4': {'start': 12, 'end': 12}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}
2025-03-08 21:06:22,449 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*(_QWORD *)(a2 + 512))++ = a1;
2025-03-08 21:06:22,449 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*(_QWORD *)(a2 + 512))++ = a1;
2025-03-08 21:06:22,449 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*(_QWORD *)(a2 + 512))++ = a1;
2025-03-08 21:06:22,449 - my_text.py:150  - Pseudocode line:   *(_BYTE *)(*(_QWORD *)(a2 + 512))++ = a1;
2025-03-08 21:06:22,451 - my_text.py:352  - Local variables for DecodePaddedEPath: {'var_38': {'start': 8, 'end': 15}, 'var_30': {'start': 16, 'end': 23}, 'var_28': {'start': 24, 'end': 31}, 'var_14': {'start': 44, 'end': 47}, 'var_10': {'start': 48, 'end': 55}, 'var_8': {'start': 56, 'end': 63}, ' s': {'start': 64, 'end': 71}, ' r': {'start': 72, 'end': 79}}
2025-03-08 21:06:22,453 - my_text.py:150  - Pseudocode line:   *a1 = *(_BYTE *)v6[0]++;
2025-03-08 21:06:22,453 - my_text.py:150  - Pseudocode line:   *a1 = *(_BYTE *)v6[0]++;
2025-03-08 21:06:22,453 - my_text.py:150  - Pseudocode line:     if ( v5 < *a1 )
2025-03-08 21:06:22,454 - my_text.py:150  - Pseudocode line:     if ( v5 < *a1 )
2025-03-08 21:06:22,454 - my_text.py:150  - Pseudocode line:     if ( v5 < *a1 )
2025-03-08 21:06:22,455 - my_text.py:150  - Pseudocode line:       if ( (*(_BYTE *)v6[0] & 7) == 7 )
2025-03-08 21:06:22,455 - my_text.py:150  - Pseudocode line:       if ( (*(_BYTE *)v6[0] & 7) == 7 )
2025-03-08 21:06:22,455 - my_text.py:150  - Pseudocode line:       if ( (*(_BYTE *)v6[0] & 7) == 7 )
2025-03-08 21:06:22,456 - my_text.py:150  - Pseudocode line:       if ( (*(_BYTE *)v6[0] & 7) == 7 )
2025-03-08 21:06:22,456 - my_text.py:150  - Pseudocode line:         ++v5;
2025-03-08 21:06:22,457 - my_text.py:150  - Pseudocode line:         ++v5;
2025-03-08 21:06:22,457 - my_text.py:150  - Pseudocode line:         ++v5;
2025-03-08 21:06:22,457 - my_text.py:150  - Pseudocode line:         ++v5;
2025-03-08 21:06:22,457 - my_text.py:150  - Pseudocode line:         ++v5;
2025-03-08 21:06:22,457 - my_text.py:150  - Pseudocode line:             *((_WORD *)a1 + 1) = *((unsigned __int8 *)v6[0]++ + 1);
2025-03-08 21:06:22,458 - my_text.py:150  - Pseudocode line:             *((_WORD *)a1 + 1) = *((unsigned __int8 *)v6[0]++ + 1);
2025-03-08 21:06:22,458 - my_text.py:150  - Pseudocode line:             *((_WORD *)a1 + 1) = *((unsigned __int8 *)v6[0]++ + 1);
2025-03-08 21:06:22,458 - my_text.py:150  - Pseudocode line:     *a3 = g_message_router_request | 0x80;
2025-03-08 21:06:22,458 - my_text.py:150  - Pseudocode line:     RegisteredObject = GetRegisteredObject((unsigned __int16)word_21CC4);
2025-03-08 21:06:22,458 - my_text.py:150  - Pseudocode line:     RegisteredObject = GetRegisteredObject((unsigned __int16)word_21CC4);
2025-03-08 21:06:22,459 - my_text.py:352  - Local variables for GetRegisteredObject: {'var_14': {'start': 12, 'end': 15}, 'var_8': {'start': 24, 'end': 31}, ' s': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}
2025-03-08 21:06:22,460 - my_text.py:150  - Pseudocode line:   for ( i = (_QWORD *)g_first_object; i; i = (_QWORD *)*i )
2025-03-08 21:06:22,460 - my_text.py:150  - Pseudocode line:     if ( a1 == *(_DWORD *)(i[1] + 40LL) )
2025-03-08 21:06:22,460 - my_text.py:150  - Pseudocode line:             *((_WORD *)a1 + 2) = *((unsigned __int8 *)v6[0]++ + 1);
2025-03-08 21:06:22,461 - my_text.py:150  - Pseudocode line:             *((_WORD *)a1 + 2) = *((unsigned __int8 *)v6[0]++ + 1);
2025-03-08 21:06:22,461 - my_text.py:150  - Pseudocode line:             *((_WORD *)a1 + 2) = *((unsigned __int8 *)v6[0]++ + 1);
2025-03-08 21:06:22,461 - my_text.py:150  - Pseudocode line:   CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));
2025-03-08 21:06:22,461 - my_text.py:150  - Pseudocode line:   CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));
2025-03-08 21:06:22,461 - my_text.py:150  - Pseudocode line:   CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));
2025-03-08 21:06:22,461 - my_text.py:150  - Pseudocode line:   CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));
2025-03-08 21:06:22,462 - my_text.py:352  - Local variables for GetCipInstance: {'var_1C': {'start': 0, 'end': 1}, 'var_18': {'start': 4, 'end': 11}, 'var_8': {'start': 20, 'end': 27}, ' s': {'start': 28, 'end': 35}, ' r': {'start': 36, 'end': 43}}
2025-03-08 21:06:22,462 - my_text.py:150  - Pseudocode line:   if ( !a2 )
2025-03-08 21:06:22,463 - my_text.py:150  - Pseudocode line:   if ( !a2 )
2025-03-08 21:06:22,463 - my_text.py:150  - Pseudocode line:   if ( !a2 )
2025-03-08 21:06:22,463 - my_text.py:150  - Pseudocode line:     if ( a2 == *(_WORD *)i )
2025-03-08 21:06:22,463 - my_text.py:364  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 c_taint_asm_dict: {'0': {2: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'HandleDataOnTcpSocket': {'cmp     [rbp+var_478], rax', 'movzx   eax, ax', 'mov     rdx, [rbp+var_478]', 'mov     rdx, [rbp+var_478]; n', 'add     [rbp+var_478], 4', 'cmp     [rbp+var_478], 1FCh', 'add     eax, 14h', 'mov     [rbp+var_478], rax'}, 'HandleReceivedExplictTcpData': {'mov     rsi, rcx', 'mov     rcx, [rbp+var_58]', 'mov     [rbp+var_58], rdx'}, 'CreateEncapsulationStructure': {'movzx   eax, word ptr [rax+2]', 'movzx   eax, ax', 'cmp     [rbp+var_10], rax', 'mov     rax, [rbp+var_10]', 'mov     [rbp+var_10], rsi', 'mov     [rdx+2], ax', 'sub     edx, eax'}, 'HandleReceivedSendRequestResponseDataCommand': {'movzx   eax, word ptr [rax+2]', 'cmp     ax, 5'}}, 3: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'HandleDataOnTcpSocket': {'cmp     [rbp+var_478], rax', 'movzx   eax, ax', 'mov     rdx, [rbp+var_478]', 'mov     rdx, [rbp+var_478]; n', 'add     [rbp+var_478], 4', 'cmp     [rbp+var_478], 1FCh', 'add     eax, 14h', 'mov     [rbp+var_478], rax'}, 'HandleReceivedExplictTcpData': {'mov     rsi, rcx', 'mov     rcx, [rbp+var_58]', 'mov     [rbp+var_58], rdx'}, 'CreateEncapsulationStructure': {'movzx   eax, word ptr [rax+2]', 'movzx   eax, ax', 'cmp     [rbp+var_10], rax', 'mov     rax, [rbp+var_10]', 'mov     [rbp+var_10], rsi', 'mov     [rdx+2], ax', 'sub     edx, eax'}, 'HandleReceivedSendRequestResponseDataCommand': {'movzx   eax, word ptr [rax+2]', 'cmp     ax, 5'}}, 0: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'CreateEncapsulationStructure': {'mov     [rdx], ax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, 0Dh', "cmp     eax, 70h ; 'p'", 'movzx   eax, ax', 'mov     eax, eax', 'movzx   eax, word ptr [rbp+var_30]', "sub     eax, 63h ; 'c'; switch 14 cases", "cmp     eax, 63h ; 'c'"}, 'GenerateEncapsulationHeader': {'mov     edi, eax', 'movzx   eax, word ptr [rax]', 'movzx   eax, ax'}, 'AddIntToMessage': {'shr     ax, 8', 'movzx   eax, [rbp+var_4]', 'mov     edx, eax', 'mov     eax, edi', 'mov     [rbp+var_4], ax', 'movzx   edx, [rbp+var_4]'}}, 1: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'CreateEncapsulationStructure': {'mov     [rdx], ax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, 0Dh', "cmp     eax, 70h ; 'p'", 'movzx   eax, ax', 'mov     eax, eax', 'movzx   eax, word ptr [rbp+var_30]', "sub     eax, 63h ; 'c'; switch 14 cases", "cmp     eax, 63h ; 'c'"}, 'GenerateEncapsulationHeader': {'mov     edi, eax', 'movzx   eax, word ptr [rax]', 'movzx   eax, ax'}, 'AddIntToMessage': {'mov     [rax], dl', 'shr     ax, 8', 'movzx   eax, [rbp+var_4]', 'mov     edx, eax', 'mov     eax, edi', 'mov     [rbp+var_4], ax', 'movzx   edx, [rbp+var_4]'}}, 4: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}, 'CheckRegisteredSessions': {'mov     eax, [rax+4]', 'sub     eax, 1', 'cmp     eax, 14h', 'mov     eax, eax', 'test    eax, eax'}, 'NotifyCommonPacketFormat': {'mov     edi, [rax+4]', 'mov     edx, [rax+4]', 'mov     r8d, edi'}, 'NotifyMessageRouter': {'mov     r8d, esi', 'mov     esi, [rbp+var_20]', 'mov     [rbp+var_20], r8d'}, 'NotifyClass': {'mov     [rbp+var_44], r8d'}, 'GenerateEncapsulationHeader': {'mov     edi, eax', 'mov     [rbp+var_14], edx', 'mov     eax, [rbp+var_14]'}, 'AddDintToMessage': {'mov     eax, [rbp+var_4]', 'shr     eax, 10h', 'mov     edx, [rbp+var_4]', 'mov     edx, eax', 'shr     eax, 8', 'mov     [rbp+var_4], edi', 'shr     eax, 18h'}}, 5: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}, 'CheckRegisteredSessions': {'mov     eax, [rax+4]', 'sub     eax, 1', 'cmp     eax, 14h', 'mov     eax, eax', 'test    eax, eax'}, 'NotifyCommonPacketFormat': {'mov     edi, [rax+4]', 'mov     edx, [rax+4]', 'mov     r8d, edi'}, 'NotifyMessageRouter': {'mov     r8d, esi', 'mov     esi, [rbp+var_20]', 'mov     [rbp+var_20], r8d'}, 'NotifyClass': {'mov     [rbp+var_44], r8d'}, 'GenerateEncapsulationHeader': {'mov     edi, eax', 'mov     [rbp+var_14], edx', 'mov     eax, [rbp+var_14]'}, 'AddDintToMessage': {'mov     eax, [rbp+var_4]', 'shr     eax, 10h', 'mov     edx, [rbp+var_4]', 'mov     edx, eax', 'shr     eax, 8', 'mov     [rbp+var_4], edi', 'shr     eax, 18h'}}, 6: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}, 'CheckRegisteredSessions': {'mov     eax, [rax+4]', 'sub     eax, 1', 'cmp     eax, 14h', 'mov     eax, eax', 'test    eax, eax'}, 'NotifyCommonPacketFormat': {'mov     edi, [rax+4]', 'mov     edx, [rax+4]', 'mov     r8d, edi'}, 'NotifyMessageRouter': {'mov     r8d, esi', 'mov     esi, [rbp+var_20]', 'mov     [rbp+var_20], r8d'}, 'NotifyClass': {'mov     [rbp+var_44], r8d'}, 'GenerateEncapsulationHeader': {'mov     edi, eax', 'mov     [rbp+var_14], edx', 'mov     eax, [rbp+var_14]'}, 'AddDintToMessage': {'mov     eax, [rbp+var_4]', 'shr     eax, 10h', 'mov     edx, [rbp+var_4]', 'mov     edx, eax', 'shr     eax, 8', 'mov     [rbp+var_4], edi', 'shr     eax, 18h'}}, 7: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}, 'CheckRegisteredSessions': {'mov     eax, [rax+4]', 'sub     eax, 1', 'cmp     eax, 14h', 'mov     eax, eax', 'test    eax, eax'}, 'NotifyCommonPacketFormat': {'mov     edi, [rax+4]', 'mov     edx, [rax+4]', 'mov     r8d, edi'}, 'NotifyMessageRouter': {'mov     r8d, esi', 'mov     esi, [rbp+var_20]', 'mov     [rbp+var_20], r8d'}, 'NotifyClass': {'mov     [rbp+var_44], r8d'}, 'GenerateEncapsulationHeader': {'mov     edi, eax', 'mov     [rbp+var_14], edx', 'mov     eax, [rbp+var_14]'}, 'AddDintToMessage': {'mov     [rax], dl', 'mov     eax, [rbp+var_4]', 'shr     eax, 10h', 'mov     edx, [rbp+var_4]', 'mov     edx, eax', 'shr     eax, 8', 'mov     [rbp+var_4], edi', 'shr     eax, 18h'}}, 8: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 9: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 10: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 11: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 20: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 21: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 22: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 23: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 24: {'GetDintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}}, 25: {'GetDintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}}, 26: {'GetDintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}}, 27: {'GetDintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}}, 28: {'GetIntFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}}, 29: {'GetIntFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}}, 30: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'CreateCommonPacketFormatStructure': {'cmp     ax, 1', 'mov     [rbp+var_1C], ax', 'mov     [rbp+var_1A], ax', 'sub     eax, 2', 'cmp     ax, 2', 'movzx   eax, word ptr [rax]', 'test    ax, ax', 'mov     [rax], dx', 'cmovbe  ax, [rbp+var_1A]', 'cmp     [rbp+var_1A], 2', 'movzx   edx, [rbp+var_1C]', 'cmp     ax, 3'}, 'EncodeItemCount': {'mov     edi, eax', 'movzx   eax, word ptr [rax]', 'movzx   eax, ax'}, 'AddIntToMessage': {'shr     ax, 8', 'movzx   eax, [rbp+var_4]', 'mov     edx, eax', 'mov     eax, edi', 'mov     [rbp+var_4], ax', 'movzx   edx, [rbp+var_4]'}}, 31: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'CreateCommonPacketFormatStructure': {'cmp     ax, 1', 'mov     [rbp+var_1C], ax', 'mov     [rbp+var_1A], ax', 'sub     eax, 2', 'cmp     ax, 2', 'movzx   eax, word ptr [rax]', 'test    ax, ax', 'mov     [rax], dx', 'cmovbe  ax, [rbp+var_1A]', 'cmp     [rbp+var_1A], 2', 'movzx   edx, [rbp+var_1C]', 'cmp     ax, 3'}, 'EncodeItemCount': {'mov     edi, eax', 'movzx   eax, word ptr [rax]', 'movzx   eax, ax'}, 'AddIntToMessage': {'mov     [rax], dl', 'shr     ax, 8', 'movzx   eax, [rbp+var_4]', 'mov     edx, eax', 'mov     eax, edi', 'mov     [rbp+var_4], ax', 'movzx   edx, [rbp+var_4]'}}, 32: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'CreateCommonPacketFormatStructure': {'mov     [rdx+4], ax'}, 'NotifyCommonPacketFormat': {'test    ax, ax', 'movzx   eax, cs:word_23484'}, 'AssembleLinearMessage': {'cmp     eax, 8002h', 'movzx   eax, word ptr [rax+4]', 'movzx   eax, ax', 'test    eax, eax'}}, 33: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'CreateCommonPacketFormatStructure': {'mov     [rdx+4], ax'}, 'NotifyCommonPacketFormat': {'test    ax, ax', 'movzx   eax, cs:word_23484'}, 'AssembleLinearMessage': {'cmp     eax, 8002h', 'movzx   eax, word ptr [rax+4]', 'movzx   eax, ax', 'test    eax, eax'}}, 34: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'CreateCommonPacketFormatStructure': {'cmp     ax, 8', 'cmp     ax, 3', 'mov     [rdx+6], ax', 'movzx   eax, word ptr [rax+6]'}}, 35: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'CreateCommonPacketFormatStructure': {'cmp     ax, 8', 'cmp     ax, 3', 'mov     [rdx+6], ax', 'movzx   eax, word ptr [rax+6]'}}, 36: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'CreateCommonPacketFormatStructure': {'mov     [rdx+10h], ax'}, 'NotifyCommonPacketFormat': {'cmp     ax, 0B2h', 'movzx   eax, cs:word_23490'}, 'AssembleLinearMessage': {'cmp     ax, 0B1h', 'cmp     ax, 0B2h', 'movzx   eax, word ptr [rax+10h]'}, 'EncodeDataItemType': {'mov     edi, eax', 'movzx   eax, ax', 'movzx   eax, word ptr [rax+10h]'}, 'AddIntToMessage': {'shr     ax, 8', 'movzx   eax, [rbp+var_4]', 'mov     edx, eax', 'mov     eax, edi', 'mov     [rbp+var_4], ax', 'movzx   edx, [rbp+var_4]'}}, 37: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'CreateCommonPacketFormatStructure': {'mov     [rdx+10h], ax'}, 'NotifyCommonPacketFormat': {'cmp     ax, 0B2h', 'movzx   eax, cs:word_23490'}, 'AssembleLinearMessage': {'cmp     ax, 0B1h', 'cmp     ax, 0B2h', 'movzx   eax, word ptr [rax+10h]'}, 'EncodeDataItemType': {'mov     edi, eax', 'movzx   eax, ax', 'movzx   eax, word ptr [rax+10h]'}, 'AddIntToMessage': {'mov     [rax], dl', 'shr     ax, 8', 'movzx   eax, [rbp+var_4]', 'mov     edx, eax', 'mov     eax, edi', 'mov     [rbp+var_4], ax', 'movzx   edx, [rbp+var_4]'}}, 38: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'CreateCommonPacketFormatStructure': {'movzx   eax, word ptr [rax+12h]', 'movzx   eax, ax', 'movzx   edx, ax', 'mov     [rbp+var_28], rax', 'mov     [rdx+12h], ax', 'add     rax, rdx', 'add     [rbp+var_18], rax', 'add     eax, 4'}, 'NotifyCommonPacketFormat': {'movzx   esi, ax', 'movzx   eax, cs:word_23492'}, 'NotifyMessageRouter': {'mov     esi, ecx', 'movsx   ecx, ax', 'mov     [rbp+var_1C], esi', 'mov     eax, [rbp+var_1C]'}, 'CreateMessageRouterRequestStructure': {'sub     eax, 1', 'mov     eax, esi', 'movzx   eax, [rbp+var_2C]', 'movsx   rdx, [rbp+var_2C]', 'mov     [rax+10h], rdx', 'cmp     rdx, rax', 'mov     [rbp+var_2C], ax', 'sub     rdx, rax'}}, 39: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'CreateCommonPacketFormatStructure': {'movzx   eax, word ptr [rax+12h]', 'movzx   eax, ax', 'movzx   edx, ax', 'mov     [rbp+var_28], rax', 'mov     [rdx+12h], ax', 'add     rax, rdx', 'add     [rbp+var_18], rax', 'add     eax, 4'}, 'NotifyCommonPacketFormat': {'movzx   esi, ax', 'movzx   eax, cs:word_23492'}, 'NotifyMessageRouter': {'mov     esi, ecx', 'movsx   ecx, ax', 'mov     [rbp+var_1C], esi', 'mov     eax, [rbp+var_1C]'}, 'CreateMessageRouterRequestStructure': {'sub     eax, 1', 'mov     eax, esi', 'movzx   eax, [rbp+var_2C]', 'movsx   rdx, [rbp+var_2C]', 'mov     [rax+10h], rdx', 'cmp     rdx, rax', 'mov     [rbp+var_2C], ax', 'sub     rdx, rax'}}, 40: {'CreateMessageRouterRequestStructure': {'movzx   edx, byte ptr [rax]', 'mov     [rax], dl'}, 'NotifyClass': {'mov     [rax], dl', 'movzx   edx, byte ptr [rax]', 'movzx   eax, byte ptr [rax]', 'cmp     dl, al', 'or      eax, 0FFFFFF80h', 'mov     edx, eax'}, 'EncodeReplyService': {'mov     edi, eax', 'movzx   eax, al', 'movzx   eax, byte ptr [rax]'}, 'AddSintToMessage': {'movzx   edx, [rbp+var_4]', 'mov     [rax], dl', 'mov     [rbp+var_4], al', 'mov     eax, edi'}}, 41: {'DecodePaddedEPath': {'mov     [rax], dl', 'movzx   eax, al', 'movzx   edx, byte ptr [rax]', 'movzx   eax, byte ptr [rax]', 'cmp     [rbp+var_14], eax'}}, 42: {'DecodePaddedEPath': {'and     eax, 7', 'movzx   eax, al', 'cmp     eax, 11h', "sub     eax, 20h ; ' '; switch 18 cases", 'movzx   eax, byte ptr [rax]', 'mov     eax, eax', 'cmp     eax, 7'}}, 43: {'DecodePaddedEPath': {'movzx   edx, al', 'movzx   eax, byte ptr [rax]', 'mov     [rax+2], dx'}, 'NotifyMessageRouter': {'mov     edi, eax', 'movzx   eax, cs:word_21CC4', 'movzx   eax, ax'}, 'GetRegisteredObject': {'mov     [rbp+var_14], edi', 'cmp     [rbp+var_14], eax'}}, 44: {'DecodePaddedEPath': {'and     eax, 7', 'movzx   eax, al', 'cmp     eax, 11h', "sub     eax, 20h ; ' '; switch 18 cases", 'movzx   eax, byte ptr [rax]', 'mov     eax, eax', 'cmp     eax, 7'}}, 45: {'DecodePaddedEPath': {'mov     [rax+4], dx', 'movzx   edx, al', 'movzx   eax, byte ptr [rax]'}, 'NotifyClass': {'movzx   edx, [rbp+var_1A]', 'mov     esi, edx', 'mov     [rbp+var_1A], ax', 'movzx   eax, word ptr [rax+6]'}, 'GetCipInstance': {'mov     [rbp+var_1C], ax', 'cmp     [rbp+var_1C], ax', 'cmp     [rbp+var_1C], 0', 'mov     eax, esi'}}}}
2025-03-08 21:06:22,466 - my_text.py:352  - Local variables for HandleReceivedUnregisterSessionCommand: {'var_20': {'start': 0, 'end': 7}, 'var_18': {'start': 8, 'end': 15}, 'var_4': {'start': 28, 'end': 31}, ' s': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}
2025-03-08 21:06:22,467 - my_text.py:150  - Pseudocode line:   if ( !*(_DWORD *)(a1 + 4)
2025-03-08 21:06:22,467 - my_text.py:150  - Pseudocode line:   if ( !*(_DWORD *)(a1 + 4)
2025-03-08 21:06:22,467 - my_text.py:150  - Pseudocode line:     || *(_DWORD *)(a1 + 4) > 0x14u
2025-03-08 21:06:22,467 - my_text.py:150  - Pseudocode line:     || *(_DWORD *)(a1 + 4) > 0x14u
2025-03-08 21:06:22,467 - my_text.py:150  - Pseudocode line:     || (v3 = *(_DWORD *)(a1 + 4) - 1, g_registered_sessions[v3] == -1) )
2025-03-08 21:06:22,468 - my_text.py:150  - Pseudocode line:     || (v3 = *(_DWORD *)(a1 + 4) - 1, g_registered_sessions[v3] == -1) )
2025-03-08 21:06:22,468 - my_text.py:150  - Pseudocode line:     || (v3 = *(_DWORD *)(a1 + 4) - 1, g_registered_sessions[v3] == -1) )
2025-03-08 21:06:22,468 - my_text.py:150  - Pseudocode line:     || (v3 = *(_DWORD *)(a1 + 4) - 1, g_registered_sessions[v3] == -1) )
2025-03-08 21:06:22,468 - my_text.py:150  - Pseudocode line:     CloseTcpSocket((unsigned int)g_registered_sessions[v3]);
2025-03-08 21:06:22,468 - my_text.py:150  - Pseudocode line:     g_registered_sessions[v3] = -1;
2025-03-08 21:06:22,468 - my_text.py:150  - Pseudocode line:     g_registered_sessions[v3] = -1;
2025-03-08 21:06:22,468 - my_text.py:150  - Pseudocode line:     CloseClass3ConnectionBasedOnSession(v3 + 1);
2025-03-08 21:06:22,469 - my_text.py:150  - Pseudocode line:     CloseClass3ConnectionBasedOnSession(v3 + 1);
2025-03-08 21:06:22,470 - my_text.py:352  - Local variables for CloseClass3ConnectionBasedOnSession: {'var_14': {'start': 12, 'end': 15}, 'var_10': {'start': 16, 'end': 23}, 'var_8': {'start': 24, 'end': 31}, ' s': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}
2025-03-08 21:06:22,471 - my_text.py:150  - Pseudocode line:   result = connection_list;
2025-03-08 21:06:22,473 - my_text.py:364  - 2:6600000001000000000000005f7079636f6d6d5f00000000 c_taint_asm_dict: {'0': {2: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'HandleDataOnTcpSocket': {'cmp     [rbp+var_478], rax', 'movzx   eax, ax', 'mov     rdx, [rbp+var_478]', 'mov     rdx, [rbp+var_478]; n', 'add     [rbp+var_478], 4', 'cmp     [rbp+var_478], 1FCh', 'add     eax, 14h', 'mov     [rbp+var_478], rax'}, 'HandleReceivedExplictTcpData': {'mov     rsi, rcx', 'mov     rcx, [rbp+var_58]', 'mov     [rbp+var_58], rdx'}, 'CreateEncapsulationStructure': {'movzx   eax, word ptr [rax+2]', 'movzx   eax, ax', 'cmp     [rbp+var_10], rax', 'mov     rax, [rbp+var_10]', 'mov     [rbp+var_10], rsi', 'mov     [rdx+2], ax', 'sub     edx, eax'}}, 3: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'HandleDataOnTcpSocket': {'cmp     [rbp+var_478], rax', 'movzx   eax, ax', 'mov     rdx, [rbp+var_478]', 'mov     rdx, [rbp+var_478]; n', 'add     [rbp+var_478], 4', 'cmp     [rbp+var_478], 1FCh', 'add     eax, 14h', 'mov     [rbp+var_478], rax'}, 'HandleReceivedExplictTcpData': {'mov     rsi, rcx', 'mov     rcx, [rbp+var_58]', 'mov     [rbp+var_58], rdx'}, 'CreateEncapsulationStructure': {'movzx   eax, word ptr [rax+2]', 'movzx   eax, ax', 'cmp     [rbp+var_10], rax', 'mov     rax, [rbp+var_10]', 'mov     [rbp+var_10], rsi', 'mov     [rdx+2], ax', 'sub     edx, eax'}}, 0: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'CreateEncapsulationStructure': {'mov     [rdx], ax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, 0Dh', "cmp     eax, 70h ; 'p'", 'movzx   eax, ax', 'mov     eax, eax', 'movzx   eax, word ptr [rbp+var_30]', "sub     eax, 63h ; 'c'; switch 14 cases", "cmp     eax, 63h ; 'c'"}}, 1: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'CreateEncapsulationStructure': {'mov     [rdx], ax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, 0Dh', "cmp     eax, 70h ; 'p'", 'movzx   eax, ax', 'mov     eax, eax', 'movzx   eax, word ptr [rbp+var_30]', "sub     eax, 63h ; 'c'; switch 14 cases", "cmp     eax, 63h ; 'c'"}}, 4: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}, 'HandleReceivedUnregisterSessionCommand': {'mov     [rbp+var_4], eax', 'mov     eax, [rax+4]', 'add     eax, 1', 'mov     eax, [rbp+var_4]', 'sub     eax, 1', 'cmp     eax, 14h', 'test    eax, eax', 'mov     edi, eax'}, 'CloseClass3ConnectionBasedOnSession': {'mov     [rbp+var_14], edi'}}, 5: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}, 'HandleReceivedUnregisterSessionCommand': {'mov     [rbp+var_4], eax', 'mov     eax, [rax+4]', 'add     eax, 1', 'mov     eax, [rbp+var_4]', 'sub     eax, 1', 'cmp     eax, 14h', 'test    eax, eax', 'mov     edi, eax'}, 'CloseClass3ConnectionBasedOnSession': {'mov     [rbp+var_14], edi'}}, 6: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}, 'HandleReceivedUnregisterSessionCommand': {'mov     [rbp+var_4], eax', 'mov     eax, [rax+4]', 'add     eax, 1', 'mov     eax, [rbp+var_4]', 'sub     eax, 1', 'cmp     eax, 14h', 'test    eax, eax', 'mov     edi, eax'}, 'CloseClass3ConnectionBasedOnSession': {'mov     [rbp+var_14], edi'}}, 7: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}, 'HandleReceivedUnregisterSessionCommand': {'mov     [rbp+var_4], eax', 'mov     eax, [rax+4]', 'add     eax, 1', 'mov     eax, [rbp+var_4]', 'sub     eax, 1', 'cmp     eax, 14h', 'test    eax, eax', 'mov     edi, eax'}, 'CloseClass3ConnectionBasedOnSession': {'mov     [rbp+var_14], edi'}}, 8: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 9: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 10: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 11: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 20: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 21: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 22: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 23: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}}}
2025-03-08 21:06:22,476 - my_text.py:364  - 3:6300000001000000000000005f7079636f6d6d5f00000000 c_taint_asm_dict: {'0': {2: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'HandleDataOnTcpSocket': {'cmp     [rbp+var_478], rax', 'movzx   eax, ax', 'mov     rdx, [rbp+var_478]', 'mov     rdx, [rbp+var_478]; n', 'add     [rbp+var_478], 4', 'cmp     [rbp+var_478], 1FCh', 'add     eax, 14h', 'mov     [rbp+var_478], rax'}, 'HandleReceivedExplictTcpData': {'mov     rsi, rcx', 'mov     rcx, [rbp+var_58]', 'mov     [rbp+var_58], rdx'}, 'CreateEncapsulationStructure': {'movzx   eax, word ptr [rax+2]', 'movzx   eax, ax', 'cmp     [rbp+var_10], rax', 'mov     rax, [rbp+var_10]', 'mov     [rbp+var_10], rsi', 'mov     [rdx+2], ax', 'sub     edx, eax'}}, 3: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'HandleDataOnTcpSocket': {'cmp     [rbp+var_478], rax', 'movzx   eax, ax', 'mov     rdx, [rbp+var_478]', 'mov     rdx, [rbp+var_478]; n', 'add     [rbp+var_478], 4', 'cmp     [rbp+var_478], 1FCh', 'add     eax, 14h', 'mov     [rbp+var_478], rax'}, 'HandleReceivedExplictTcpData': {'mov     rsi, rcx', 'mov     rcx, [rbp+var_58]', 'mov     [rbp+var_58], rdx'}, 'CreateEncapsulationStructure': {'movzx   eax, word ptr [rax+2]', 'movzx   eax, ax', 'cmp     [rbp+var_10], rax', 'mov     rax, [rbp+var_10]', 'mov     [rbp+var_10], rsi', 'mov     [rdx+2], ax', 'sub     edx, eax'}}, 0: {'GetUintFromMessage': {'movzx   eax, al', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'movzx   eax, [rbp+var_A]'}, 'CreateEncapsulationStructure': {'mov     [rdx], ax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, 0Dh', "cmp     eax, 70h ; 'p'", 'movzx   eax, ax', 'mov     eax, eax', 'movzx   eax, word ptr [rbp+var_30]', "sub     eax, 63h ; 'c'; switch 14 cases", "cmp     eax, 63h ; 'c'"}, 'GenerateEncapsulationHeader': {'mov     edi, eax', 'movzx   eax, word ptr [rax]', 'movzx   eax, ax'}, 'AddIntToMessage': {'shr     ax, 8', 'movzx   eax, [rbp+var_4]', 'mov     edx, eax', 'mov     eax, edi', 'mov     [rbp+var_4], ax', 'movzx   edx, [rbp+var_4]'}}, 1: {'GetUintFromMessage': {'movzx   edx, byte ptr [rdx]', 'mov     [rbp+var_A], ax', 'or      eax, edx', 'shl     edx, 8', 'movzx   edx, dl', 'movzx   eax, [rbp+var_A]'}, 'CreateEncapsulationStructure': {'mov     [rdx], ax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, 0Dh', "cmp     eax, 70h ; 'p'", 'movzx   eax, ax', 'mov     eax, eax', 'movzx   eax, word ptr [rbp+var_30]', "sub     eax, 63h ; 'c'; switch 14 cases", "cmp     eax, 63h ; 'c'"}, 'GenerateEncapsulationHeader': {'mov     edi, eax', 'movzx   eax, word ptr [rax]', 'movzx   eax, ax'}, 'AddIntToMessage': {'mov     [rax], dl', 'shr     ax, 8', 'movzx   eax, [rbp+var_4]', 'mov     edx, eax', 'mov     eax, edi', 'mov     [rbp+var_4], ax', 'movzx   edx, [rbp+var_4]'}}, 4: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}}, 5: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}}, 6: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}}, 7: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+4], eax'}}, 8: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 9: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 10: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 11: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+8], eax'}}, 20: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 21: {'GetUdintFromMessage': {'movzx   edx, byte ptr [rdx]', 'or      edx, eax', 'or      eax, edx', 'shl     edx, 8', 'mov     eax, [rbp+var_C]', 'movzx   edx, dl', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 22: {'GetUdintFromMessage': {'movzx   eax, al', 'or      edx, eax', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'shl     eax, 10h', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}, 23: {'GetUdintFromMessage': {'shl     eax, 18h', 'movzx   eax, al', 'or      eax, edx', 'movzx   eax, byte ptr [rax]', 'mov     eax, [rbp+var_C]', 'mov     [rbp+var_C], eax'}, 'CreateEncapsulationStructure': {'mov     [rdx+14h], eax'}, 'HandleReceivedExplictTcpData': {'cmp     eax, edx', 'mov     eax, dword ptr [rbp+var_20+4]'}}}}
2025-03-08 21:06:22,476 - my_text.py:366  - local_vars: {'GetUintFromMessage': {'var_18': {'start': 0, 'end': 7}, 'var_A': {'start': 14, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' s': {'start': 24, 'end': 31}, ' r': {'start': 32, 'end': 39}}, 'HandleDataOnTcpSocket': {'fd': {'start': 12, 'end': 15}, 'var_4AC': {'start': 20, 'end': 23}, 'len': {'start': 24, 'end': 27}, 'var_4A4': {'start': 28, 'end': 31}, 'var_4A0': {'start': 32, 'end': 35}, 'var_49C': {'start': 36, 'end': 39}, 'var_498': {'start': 40, 'end': 43}, 'var_494': {'start': 44, 'end': 47}, 'var_490': {'start': 48, 'end': 51}, 'var_48C': {'start': 52, 'end': 55}, 'var_488': {'start': 56, 'end': 63}, 'n': {'start': 64, 'end': 71}, 'var_478': {'start': 72, 'end': 79}, 'var_470': {'start': 80, 'end': 87}, 'var_468': {'start': 88, 'end': 95}, 'var_460': {'start': 96, 'end': 103}, 'var_458': {'start': 104, 'end': 111}, 'var_450': {'start': 112, 'end': 119}, 'var_448': {'start': 120, 'end': 127}, 'var_440': {'start': 128, 'end': 135}, 'var_438': {'start': 136, 'end': 143}, 's': {'start': 144, 'end': 159}, 'var_420': {'start': 160, 'end': 160}, 'var_218': {'start': 680, 'end': 687}, 'buf': {'start': 688, 'end': 695}, 'var_208': {'start': 696, 'end': 703}, 'var_200': {'start': 704, 'end': 704}, 'var_8': {'start': 1208, 'end': 1215}, ' s': {'start': 1216, 'end': 1223}, ' r': {'start': 1224, 'end': 1231}}, 'HandleReceivedExplictTcpData': {'var_70': {'start': 0, 'end': 7}, 'var_68': {'start': 8, 'end': 15}, 'var_60': {'start': 16, 'end': 23}, 'var_58': {'start': 24, 'end': 31}, 'var_50': {'start': 32, 'end': 39}, 'var_44': {'start': 44, 'end': 47}, 'var_38': {'start': 56, 'end': 59}, 'var_34': {'start': 60, 'end': 63}, 'var_30': {'start': 64, 'end': 71}, 'var_28': {'start': 72, 'end': 79}, 'var_20': {'start': 80, 'end': 87}, 'var_18': {'start': 88, 'end': 95}, 'var_10': {'start': 96, 'end': 103}, 'var_8': {'start': 104, 'end': 111}, ' s': {'start': 112, 'end': 119}, ' r': {'start': 120, 'end': 127}}, 'CreateEncapsulationStructure': {'var_18': {'start': 8, 'end': 15}, 'var_10': {'start': 16, 'end': 23}, 'src': {'start': 24, 'end': 31}, ' s': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}, 'GenerateEncapsulationHeader': {'var_20': {'start': 0, 'end': 7}, 'var_18': {'start': 8, 'end': 11}, 'var_14': {'start': 12, 'end': 15}, 'var_10': {'start': 16, 'end': 23}, 'var_8': {'start': 24, 'end': 31}, ' s': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}, 'AddIntToMessage': {'var_10': {'start': 0, 'end': 7}, 'var_4': {'start': 12, 'end': 13}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}, 'GetUdintFromMessage': {'var_18': {'start': 0, 'end': 7}, 'var_C': {'start': 12, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' s': {'start': 24, 'end': 31}, ' r': {'start': 32, 'end': 39}}, 'HandleReceivedRegisterSessionCommand': {'var_38': {'start': 8, 'end': 15}, 'var_30': {'start': 16, 'end': 23}, 'var_24': {'start': 28, 'end': 31}, 'var_1C': {'start': 36, 'end': 37}, 'var_1A': {'start': 38, 'end': 39}, 'var_18': {'start': 40, 'end': 43}, 'var_14': {'start': 44, 'end': 47}, 'var_10': {'start': 48, 'end': 51}, 'var_C': {'start': 52, 'end': 55}, 'var_8': {'start': 56, 'end': 63}, ' s': {'start': 64, 'end': 71}, ' r': {'start': 72, 'end': 79}}, 'HandleReceivedSendRequestResponseDataCommand': {'var_28': {'start': 8, 'end': 15}, 'var_20': {'start': 16, 'end': 23}, 'var_18': {'start': 24, 'end': 31}, 'var_4': {'start': 44, 'end': 47}, ' s': {'start': 48, 'end': 55}, ' r': {'start': 56, 'end': 63}}, 'CheckRegisteredSessions': {'var_8': {'start': 0, 'end': 7}, ' s': {'start': 8, 'end': 15}, ' r': {'start': 16, 'end': 23}}, 'NotifyCommonPacketFormat': {'var_248': {'start': 8, 'end': 15}, 'var_240': {'start': 16, 'end': 23}, 'var_238': {'start': 24, 'end': 31}, 'var_230': {'start': 32, 'end': 35}, 'var_22C': {'start': 36, 'end': 39}, 'var_228': {'start': 40, 'end': 47}, 'var_220': {'start': 48, 'end': 48}, 'var_8': {'start': 584, 'end': 591}, ' s': {'start': 592, 'end': 599}, ' r': {'start': 600, 'end': 607}}, 'NotifyMessageRouter': {'var_30': {'start': 0, 'end': 7}, 'var_28': {'start': 8, 'end': 15}, 'var_20': {'start': 16, 'end': 19}, 'var_1C': {'start': 20, 'end': 23}, 'var_18': {'start': 24, 'end': 31}, 'var_10': {'start': 32, 'end': 35}, 'var_C': {'start': 36, 'end': 39}, 'var_8': {'start': 40, 'end': 47}, ' s': {'start': 48, 'end': 55}, ' r': {'start': 56, 'end': 63}}, 'NotifyClass': {'var_44': {'start': 12, 'end': 15}, 'var_40': {'start': 16, 'end': 23}, 'var_38': {'start': 24, 'end': 31}, 'var_30': {'start': 32, 'end': 39}, 'var_28': {'start': 40, 'end': 47}, 'var_1A': {'start': 54, 'end': 55}, 'var_18': {'start': 56, 'end': 63}, 'var_10': {'start': 64, 'end': 71}, 'var_8': {'start': 72, 'end': 79}, ' s': {'start': 80, 'end': 87}, ' r': {'start': 88, 'end': 95}}, 'AddDintToMessage': {'var_10': {'start': 0, 'end': 7}, 'var_4': {'start': 12, 'end': 15}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}, 'GetDintFromMessage': {'var_18': {'start': 0, 'end': 7}, 'var_C': {'start': 12, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' s': {'start': 24, 'end': 31}, ' r': {'start': 32, 'end': 39}}, 'GetIntFromMessage': {'var_18': {'start': 0, 'end': 7}, 'var_A': {'start': 14, 'end': 15}, 'var_8': {'start': 16, 'end': 23}, ' s': {'start': 24, 'end': 31}, ' r': {'start': 32, 'end': 39}}, 'CreateCommonPacketFormatStructure': {'var_38': {'start': 8, 'end': 15}, 'var_30': {'start': 16, 'end': 23}, 'var_28': {'start': 24, 'end': 31}, 'var_1C': {'start': 36, 'end': 37}, 'var_1A': {'start': 38, 'end': 39}, 'var_18': {'start': 40, 'end': 47}, 'var_10': {'start': 48, 'end': 55}, 'var_8': {'start': 56, 'end': 63}, ' s': {'start': 64, 'end': 71}, ' r': {'start': 72, 'end': 79}}, 'EncodeItemCount': {'var_10': {'start': 0, 'end': 7}, 'var_8': {'start': 8, 'end': 15}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}, 'AssembleLinearMessage': {'var_28': {'start': 8, 'end': 15}, 'var_20': {'start': 16, 'end': 23}, 'var_18': {'start': 24, 'end': 31}, 'var_8': {'start': 40, 'end': 43}, 'var_4': {'start': 44, 'end': 47}, ' s': {'start': 48, 'end': 55}, ' r': {'start': 56, 'end': 63}}, 'EncodeDataItemType': {'var_10': {'start': 0, 'end': 7}, 'var_8': {'start': 8, 'end': 15}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}, 'CreateMessageRouterRequestStructure': {'var_38': {'start': 8, 'end': 15}, 'var_2C': {'start': 20, 'end': 21}, 'var_28': {'start': 24, 'end': 31}, 'var_14': {'start': 44, 'end': 47}, 'var_10': {'start': 48, 'end': 55}, 'var_8': {'start': 56, 'end': 63}, ' s': {'start': 64, 'end': 71}, ' r': {'start': 72, 'end': 79}}, 'EncodeReplyService': {'var_10': {'start': 0, 'end': 7}, 'var_8': {'start': 8, 'end': 15}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}, 'AddSintToMessage': {'var_10': {'start': 0, 'end': 7}, 'var_4': {'start': 12, 'end': 12}, ' s': {'start': 16, 'end': 23}, ' r': {'start': 24, 'end': 31}}, 'DecodePaddedEPath': {'var_38': {'start': 8, 'end': 15}, 'var_30': {'start': 16, 'end': 23}, 'var_28': {'start': 24, 'end': 31}, 'var_14': {'start': 44, 'end': 47}, 'var_10': {'start': 48, 'end': 55}, 'var_8': {'start': 56, 'end': 63}, ' s': {'start': 64, 'end': 71}, ' r': {'start': 72, 'end': 79}}, 'GetRegisteredObject': {'var_14': {'start': 12, 'end': 15}, 'var_8': {'start': 24, 'end': 31}, ' s': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}, 'GetCipInstance': {'var_1C': {'start': 0, 'end': 1}, 'var_18': {'start': 4, 'end': 11}, 'var_8': {'start': 20, 'end': 27}, ' s': {'start': 28, 'end': 35}, ' r': {'start': 36, 'end': 43}}, 'HandleReceivedUnregisterSessionCommand': {'var_20': {'start': 0, 'end': 7}, 'var_18': {'start': 8, 'end': 15}, 'var_4': {'start': 28, 'end': 31}, ' s': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}, 'CloseClass3ConnectionBasedOnSession': {'var_14': {'start': 12, 'end': 15}, 'var_10': {'start': 16, 'end': 23}, 'var_8': {'start': 24, 'end': 31}, ' s': {'start': 32, 'end': 39}, ' r': {'start': 40, 'end': 47}}}
2025-03-08 21:06:22,477 - my_text.py:368  - c_code: {'GetUintFromMessage': '__int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n', 'HandleDataOnTcpSocket': '__int64 __fastcall HandleDataOnTcpSocket(unsigned int a1)\n{\n  int v2; // [rsp+14h] [rbp-4ACh] BYREF\n  socklen_t len; // [rsp+18h] [rbp-4A8h] BYREF\n  unsigned int SocketErrorNumber; // [rsp+1Ch] [rbp-4A4h]\n  int v5; // [rsp+20h] [rbp-4A0h]\n  unsigned int v6; // [rsp+24h] [rbp-49Ch]\n  unsigned int v7; // [rsp+28h] [rbp-498h]\n  unsigned int v8; // [rsp+2Ch] [rbp-494h]\n  unsigned int v9; // [rsp+30h] [rbp-490h]\n  unsigned int v10; // [rsp+34h] [rbp-48Ch]\n  _WORD *v11; // [rsp+38h] [rbp-488h] BYREF\n  size_t n; // [rsp+40h] [rbp-480h]\n  size_t v13; // [rsp+48h] [rbp-478h]\n  ssize_t v14; // [rsp+50h] [rbp-470h]\n  __int64 SocketTimer; // [rsp+58h] [rbp-468h]\n  __int64 ErrorMessage; // [rsp+60h] [rbp-460h]\n  __int64 v17; // [rsp+68h] [rbp-458h]\n  __int64 v18; // [rsp+70h] [rbp-450h]\n  __int64 v19; // [rsp+78h] [rbp-448h]\n  __int64 v20; // [rsp+80h] [rbp-440h]\n  __int64 v21; // [rsp+88h] [rbp-438h]\n  struct sockaddr s; // [rsp+90h] [rbp-430h] BYREF\n  char v23[520]; // [rsp+A0h] [rbp-420h] BYREF\n  size_t v24; // [rsp+2A8h] [rbp-218h]\n  __int64 buf[66]; // [rsp+2B0h] [rbp-210h] BYREF\n\n  buf[65] = __readfsqword(0x28u);\n  v2 = 0;\n  n = 512LL;\n  memset(buf, 0, 512);\n  v14 = recv(a1, buf, 4uLL, 0);\n  SocketTimer = SocketTimerArrayGetSocketTimer(&g_timestamps, 20LL, a1);\n  if ( v14 )\n  {\n    if ( v14 >= 0 )\n    {\n      v11 = (_WORD *)buf + 1;\n      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;\n      if ( v13 <= 0x1FC )\n      {\n        v14 = recv(a1, (char *)buf + 4, v13, 0);\n        if ( v14 )\n        {\n          if ( v14 >= 0 )\n          {\n            if ( v13 == (unsigned int)v14 )\n            {\n              v13 += 4LL;\n              g_current_active_tcp_socket = a1;\n              memset(&s, 0, sizeof(s));\n              len = 16;\n              if ( getpeername(a1, &s, &len) < 0 )\n              {\n                SocketErrorNumber = GetSocketErrorNumber();\n                ErrorMessage = GetErrorMessage(SocketErrorNumber);\n                FreeErrorMessage(ErrorMessage);\n              }\n              InitializeENIPMessage(v23);\n              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);\n              if ( SocketTimer )\n                SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n              g_current_active_tcp_socket = -1;\n              if ( v5 > 0 )\n              {\n                n = send(a1, v23, v24, 0x4000);\n                SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n              }\n              return 0LL;\n            }\n            else\n            {\n              return 0xFFFFFFFFLL;\n            }\n          }\n          else\n          {\n            v6 = GetSocketErrorNumber();\n            v17 = GetErrorMessage(v6);\n            if ( v6 == 11 )\n            {\n              return 0LL;\n            }\n            else\n            {\n              FreeErrorMessage(v17);\n              return 0xFFFFFFFFLL;\n            }\n          }\n        }\n        else\n        {\n          v7 = GetSocketErrorNumber();\n          v18 = GetErrorMessage(v7);\n          FreeErrorMessage(v18);\n          RemoveSocketTimerFromList(a1);\n          RemoveSession(a1);\n          return 0xFFFFFFFFLL;\n        }\n      }\n      else\n      {\n        while ( 1 )\n        {\n          v14 = recv(a1, buf, n, 0);\n          if ( !v14 )\n          {\n            v9 = GetSocketErrorNumber();\n            v20 = GetErrorMessage(v9);\n            FreeErrorMessage(v20);\n            RemoveSocketTimerFromList(a1);\n            return 0xFFFFFFFFLL;\n          }\n          if ( v14 < 0 )\n            break;\n          v13 -= v14;\n          if ( v13 <= 0x1FF && v13 )\n            n = v13;\n          if ( !v13 )\n          {\n            SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n            return 0LL;\n          }\n        }\n        v8 = GetSocketErrorNumber();\n        v19 = GetErrorMessage(v8);\n        if ( v8 == 11 )\n        {\n          return 0LL;\n        }\n        else\n        {\n          FreeErrorMessage(v19);\n          return 0xFFFFFFFFLL;\n        }\n      }\n    }\n    else\n    {\n      v10 = GetSocketErrorNumber();\n      if ( v10 == 11 )\n      {\n        return 0LL;\n      }\n      else\n      {\n        v21 = GetErrorMessage(v10);\n        FreeErrorMessage(v21);\n        return 0xFFFFFFFFLL;\n      }\n    }\n  }\n  else\n  {\n    RemoveSocketTimerFromList(a1);\n    RemoveSession(a1);\n    return 0xFFFFFFFFLL;\n  }\n}\n', 'HandleReceivedExplictTcpData': "__int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case 'c':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case 'd':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case 'e':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case 'f':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case 'o':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case 'p':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n", 'CreateEncapsulationStructure': '__int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n', 'GenerateEncapsulationHeader': '__int64 __fastcall GenerateEncapsulationHeader(\n        unsigned __int16 *a1,\n        __int16 a2,\n        unsigned int a3,\n        unsigned int a4,\n        __int64 a5)\n{\n  AddIntToMessage(*a1, a5);\n  AddIntToMessage(a2, a5);\n  AddDintToMessage(a3, a5);\n  AddDintToMessage(a4, a5);\n  memcpy(*(void **)(a5 + 512), a1 + 6, 8uLL);\n  *(_QWORD *)(a5 + 512) += 8LL;\n  *(_QWORD *)(a5 + 520) += 8LL;\n  return AddDintToMessage(0, a5);\n}\n', 'AddIntToMessage': '__int64 __fastcall AddIntToMessage(__int16 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  **(_WORD **)(a2 + 512) = a1;\n  *(_QWORD *)(a2 + 512) += 2LL;\n  result = a2;\n  *(_QWORD *)(a2 + 520) += 2LL;\n  return result;\n}\n', 'GetUdintFromMessage': '__int64 __fastcall GetUdintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n', 'HandleReceivedRegisterSessionCommand': '__int64 __fastcall HandleReceivedRegisterSessionCommand(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int16 UintFromMessage; // [rsp+24h] [rbp-1Ch]\n  _BYTE v6[6]; // [rsp+26h] [rbp-1Ah]\n  int FreeSessionIndex; // [rsp+28h] [rbp-18h]\n  unsigned int v8; // [rsp+2Ch] [rbp-14h]\n  unsigned int v9; // [rsp+30h] [rbp-10h]\n  unsigned int i; // [rsp+34h] [rbp-Ch]\n  __int64 EmptySocketTimer; // [rsp+38h] [rbp-8h]\n\n  *(_WORD *)&v6[4] = 0;\n  v8 = 0;\n  v9 = 0;\n  UintFromMessage = GetUintFromMessage((_WORD **)(a2 + 32));\n  *(_DWORD *)v6 = (unsigned __int16)GetUintFromMessage((_WORD **)(a2 + 32));\n  if ( UintFromMessage != 1 || *(_WORD *)v6 )\n  {\n    v9 = 105;\n  }\n  else\n  {\n    for ( i = 0; i <= 0x13; ++i )\n    {\n      if ( a1 == g_registered_sessions[i] )\n      {\n        v8 = i + 1;\n        v9 = 1;\n        *(_DWORD *)&v6[2] = -1;\n        break;\n      }\n    }\n    if ( *(_DWORD *)&v6[2] != -1 )\n    {\n      FreeSessionIndex = GetFreeSessionIndex();\n      if ( FreeSessionIndex == -1 )\n      {\n        v9 = 2;\n      }\n      else\n      {\n        EmptySocketTimer = SocketTimerArrayGetEmptySocketTimer(&g_timestamps, 20LL);\n        SocketTimerSetSocket(EmptySocketTimer, a1);\n        SocketTimerSetLastUpdate(EmptySocketTimer, g_actual_time);\n        g_registered_sessions[FreeSessionIndex] = a1;\n        v8 = FreeSessionIndex + 1;\n        v9 = 0;\n      }\n    }\n  }\n  return EncapsulateRegisterSessionCommandResponseMessage(a2, v8, v9, a3);\n}\n', 'HandleReceivedSendRequestResponseDataCommand': '__int64 __fastcall HandleReceivedSendRequestResponseDataCommand(__int64 a1, __int64 a2, __int64 a3)\n{\n  unsigned int v5; // [rsp+2Ch] [rbp-4h]\n\n  v5 = 0;\n  if ( *(_WORD *)(a1 + 2) > 5u )\n  {\n    GetDintFromMessage((unsigned __int16 **)(a1 + 32));\n    GetIntFromMessage((_WORD **)(a1 + 32));\n    *(_WORD *)(a1 + 2) -= 6;\n    if ( (unsigned int)CheckRegisteredSessions(a1) )\n    {\n      InitializeENIPMessage(a3);\n      GenerateEncapsulationHeader((unsigned __int16 *)a1, 0, *(_DWORD *)(a1 + 4), 0x64u, a3);\n      return 1;\n    }\n    else\n    {\n      return (unsigned int)NotifyCommonPacketFormat(a1, a2, a3);\n    }\n  }\n  return v5;\n}\n', 'CheckRegisteredSessions': '__int64 __fastcall CheckRegisteredSessions(__int64 a1)\n{\n  if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )\n    return 0xFFFFFFFFLL;\n  else\n    return 0LL;\n}\n', 'NotifyCommonPacketFormat': '__int64 __fastcall NotifyCommonPacketFormat(__int64 a1, __int64 a2, __int64 a3)\n{\n  unsigned int CommonPacketFormatStructure; // [rsp+20h] [rbp-230h]\n  __int64 v6; // [rsp+28h] [rbp-228h]\n  char v7[536]; // [rsp+30h] [rbp-220h] BYREF\n  unsigned __int64 v8; // [rsp+248h] [rbp-8h]\n\n  v8 = __readfsqword(0x28u);\n  InitializeMessageRouterResponse(v7);\n  CommonPacketFormatStructure = CreateCommonPacketFormatStructure(\n                                  *(_WORD **)(a1 + 32),\n                                  *(unsigned __int16 *)(a1 + 2),\n                                  (__int64)g_common_packet_format_data_item);\n  if ( CommonPacketFormatStructure != -1 )\n  {\n    if ( word_23484 || word_23490 != 178 )\n    {\n      GenerateEncapsulationHeader((unsigned __int16 *)a1, 0, *(_DWORD *)(a1 + 4), 3u, a3);\n      return 1;\n    }\n    else\n    {\n      CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));\n      if ( CommonPacketFormatStructure != -1 )\n      {\n        SkipEncapsulationHeader(a3);\n        AssembleLinearMessage((__int64)v7, g_common_packet_format_data_item, a3);\n        v6 = *(_QWORD *)(a3 + 512);\n        *(_QWORD *)(a3 + 512) = a3;\n        GenerateEncapsulationHeader((unsigned __int16 *)a1, *(_QWORD *)(a3 + 520), *(_DWORD *)(a1 + 4), 0, a3);\n        *(_QWORD *)(a3 + 512) = v6;\n        return 1;\n      }\n    }\n  }\n  return CommonPacketFormatStructure;\n}\n', 'NotifyMessageRouter': '__int64 __fastcall NotifyMessageRouter(_BYTE *a1, __int16 a2, _BYTE *a3, __int64 a4, unsigned int a5)\n{\n  unsigned int v9; // [rsp+20h] [rbp-10h]\n  int MessageRouterRequestStructure; // [rsp+24h] [rbp-Ch]\n  _QWORD *RegisteredObject; // [rsp+28h] [rbp-8h]\n\n  v9 = 1;\n  MessageRouterRequestStructure = CreateMessageRouterRequestStructure(a1, a2, (__int64)&g_message_router_request);\n  if ( MessageRouterRequestStructure )\n  {\n    a3[2] = MessageRouterRequestStructure;\n    a3[3] = 0;\n    a3[1] = 0;\n    *a3 = g_message_router_request | 0x80;\n  }\n  else\n  {\n    RegisteredObject = GetRegisteredObject((unsigned __int16)word_21CC4);\n    if ( RegisteredObject )\n    {\n      a3[1] = 0;\n      if ( !RegisteredObject[1] )\n        __assert_fail(\n          "((void *)0) != registered_object->cip_class",\n          "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipmessagerouter.c",\n          0xD6u,\n          "NotifyMessageRouter");\n      return (unsigned int)NotifyClass(RegisteredObject[1], (__int64)&g_message_router_request, a3, a4, a5);\n    }\n    else\n    {\n      a3[2] = 5;\n      a3[3] = 0;\n      a3[1] = 0;\n      *a3 = g_message_router_request | 0x80;\n    }\n  }\n  return v9;\n}\n', 'NotifyClass': '__int64 __fastcall NotifyClass(__int64 a1, __int64 a2, _BYTE *a3, __int64 a4, unsigned int a5)\n{\n  __int64 v9; // [rsp+38h] [rbp-18h]\n  unsigned __int64 i; // [rsp+40h] [rbp-10h]\n  __int64 CipInstance; // [rsp+48h] [rbp-8h]\n\n  CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));\n  if ( CipInstance )\n  {\n    v9 = *(_QWORD *)(*(_QWORD *)(CipInstance + 16) + 96LL);\n    if ( v9 )\n    {\n      for ( i = 0LL; i < *(unsigned __int16 *)(*(_QWORD *)(CipInstance + 16) + 80LL); ++i )\n      {\n        if ( *(_BYTE *)a2 == *(_BYTE *)v9 )\n        {\n          if ( !*(_QWORD *)(v9 + 8) )\n            __assert_fail(\n              "((void *)0) != service->service_function",\n              "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipcommon.c",\n              0x7Eu,\n              "NotifyClass");\n          return (*(__int64 (__fastcall **)(__int64, __int64, _BYTE *, __int64, _QWORD))(v9 + 8))(\n                   CipInstance,\n                   a2,\n                   a3,\n                   a4,\n                   a5);\n        }\n        v9 += 24LL;\n      }\n    }\n    a3[2] = 8;\n  }\n  else\n  {\n    a3[2] = 5;\n  }\n  a3[3] = 0;\n  InitializeENIPMessage(a3 + 8);\n  *a3 = *(_BYTE *)a2 | 0x80;\n  return 1LL;\n}\n', 'AddDintToMessage': '__int64 __fastcall AddDintToMessage(unsigned int a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  **(_BYTE **)(a2 + 512) = a1;\n  *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;\n  *(_BYTE *)(*(_QWORD *)(a2 + 512) + 3LL) = HIBYTE(a1);\n  *(_QWORD *)(a2 + 512) += 4LL;\n  result = a2;\n  *(_QWORD *)(a2 + 520) += 4LL;\n  return result;\n}\n', 'GetDintFromMessage': '__int64 __fastcall GetDintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n', 'GetIntFromMessage': '__int64 __fastcall GetIntFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n', 'CreateCommonPacketFormatStructure': '__int64 __fastcall CreateCommonPacketFormatStructure(_WORD *a1, unsigned __int64 a2, __int64 a3)\n{\n  __int16 IntFromMessage; // ax\n  __int16 v5; // ax\n  __int16 v6; // ax\n  __int16 v7; // ax\n  int UdintFromMessage; // eax\n  unsigned __int16 v9; // ax\n  _WORD *v11; // [rsp+18h] [rbp-28h] BYREF\n  __int16 UintFromMessage; // [rsp+24h] [rbp-1Ch]\n  unsigned __int16 v13; // [rsp+26h] [rbp-1Ah]\n  __int64 v14; // [rsp+28h] [rbp-18h]\n  unsigned __int64 i; // [rsp+30h] [rbp-10h]\n  unsigned __int64 j; // [rsp+38h] [rbp-8h]\n\n  v11 = a1;\n  *(_WORD *)(a3 + 32) = 0;\n  *(_WORD *)(a3 + 52) = 0;\n  v14 = 0LL;\n  UintFromMessage = GetUintFromMessage(&v11);\n  *(_WORD *)a3 = UintFromMessage;\n  v14 += 2LL;\n  if ( *(_WORD *)a3 )\n  {\n    *(_WORD *)(a3 + 4) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 6) = GetUintFromMessage(&v11);\n    v14 += 4LL;\n    if ( *(_WORD *)(a3 + 6) > 3u )\n    {\n      *(_DWORD *)(a3 + 8) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n    if ( *(_WORD *)(a3 + 6) == 8 )\n    {\n      *(_DWORD *)(a3 + 12) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n  }\n  if ( *(_WORD *)a3 > 1u )\n  {\n    *(_WORD *)(a3 + 16) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 18) = GetUintFromMessage(&v11);\n    *(_QWORD *)(a3 + 24) = v11;\n    if ( a2 < (unsigned __int64)*(unsigned __int16 *)(a3 + 18) + v14 + 4 )\n      return 0xFFFFFFFFLL;\n    v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));\n    v14 += *(unsigned __int16 *)(a3 + 18) + 4;\n    v13 = *(_WORD *)a3 - 2;\n    for ( i = 0LL; ; ++i )\n    {\n      v9 = 2;\n      if ( v13 <= 2u )\n        v9 = v13;\n      if ( i >= v9 )\n        break;\n      IntFromMessage = GetIntFromMessage(&v11);\n      *(_WORD *)(a3 + 20 * i + 32) = IntFromMessage;\n      v14 += 2LL;\n      if ( *(_WORD *)(a3 + 20 * i + 32) == 0x8000 || *(_WORD *)(a3 + 20 * i + 32) == 0x8001 )\n      {\n        v5 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 34) = v5;\n        v6 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 36) = v6;\n        v7 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 38) = v7;\n        UdintFromMessage = GetUdintFromMessage(&v11);\n        *(_DWORD *)(a3 + 20 * i + 40) = UdintFromMessage;\n        for ( j = 0LL; j <= 7; ++j )\n        {\n          *(_BYTE *)(a3 + 20 * i + j + 44) = *(_BYTE *)v11;\n          v11 = (_WORD *)((char *)v11 + 1);\n        }\n        v14 += 18LL;\n      }\n      else\n      {\n        *(_WORD *)(a3 + 20 * i + 32) = 0;\n        --v11;\n      }\n    }\n  }\n  if ( *(_WORD *)a3 <= 3u )\n  {\n    *(_WORD *)(a3 + 52) = 0;\n    if ( *(_WORD *)a3 <= 2u )\n      *(_WORD *)(a3 + 32) = 0;\n  }\n  if ( v14 == a2 )\n    return 0LL;\n  if ( *(_WORD *)a3 <= 2u )\n    return 0xFFFFFFFFLL;\n  return 0LL;\n}\n', 'EncodeItemCount': '__int64 __fastcall EncodeItemCount(__int16 *a1, __int64 a2)\n{\n  return AddIntToMessage(*a1, a2);\n}\n', 'AssembleLinearMessage': '__int64 __fastcall AssembleLinearMessage(unsigned __int8 *a1, __int16 *a2, __int64 a3)\n{\n  int v3; // eax\n  int i; // [rsp+28h] [rbp-8h]\n  int j; // [rsp+2Ch] [rbp-4h]\n\n  if ( a1 )\n  {\n    AddDintToMessage(0, a3);\n    AddIntToMessage(0, a3);\n  }\n  EncodeItemCount(a2, a3);\n  v3 = (unsigned __int16)a2[2];\n  if ( v3 == 32770 )\n  {\n    EncodeSequencedAddressItem(a2, a3);\n  }\n  else\n  {\n    if ( (unsigned __int16)a2[2] > 0x8002u )\n      return 0xFFFFFFFFLL;\n    if ( a2[2] )\n    {\n      if ( v3 != 161 )\n        return 0xFFFFFFFFLL;\n      EncodeConnectedAddressItem(a2, a3);\n    }\n    else\n    {\n      EncodeNullAddressItem(a3);\n    }\n  }\n  if ( a2[8] == 178 || a2[8] == 177 )\n  {\n    if ( a1 )\n    {\n      EncodeDataItemType((__int64)a2, a3);\n      if ( a2[8] == 177 )\n      {\n        EncodeConnectedDataItemLength(a1, a3);\n        EncodeSequenceNumber(g_common_packet_format_data_item, a3);\n      }\n      else\n      {\n        EncodeUnconnectedDataItemLength(a1, a3);\n      }\n      EncodeReplyService(a1, a3);\n      EncodeReservedFieldOfLengthByte(a1, a3);\n      EncodeGeneralStatus(a1, a3);\n      EncodeExtendedStatus(a1, a3);\n      EncodeMessageRouterResponseData(a1, a3);\n    }\n    else\n    {\n      EncodeDataItemType((__int64)a2, a3);\n      EncodeDataItemLength(a2, a3);\n      EncodeDataItemData(a2, a3);\n    }\n  }\n  for ( i = 0x8000; i <= 32769; ++i )\n  {\n    for ( j = 0; j <= 1; ++j )\n    {\n      if ( i == (unsigned __int16)a2[10 * j + 16] )\n      {\n        EncodeSockaddrInfoItemTypeId((unsigned int)j, a2, a3);\n        EncodeSockaddrInfoLength((unsigned int)j, a2, a3);\n        EncapsulateIpAddress((unsigned __int16)a2[10 * j + 19], *(unsigned int *)&a2[10 * j + 20], a3);\n        FillNextNMessageOctetsWithValueAndMoveToNextPosition(0LL, 8LL, a3);\n        break;\n      }\n    }\n  }\n  return 0LL;\n}\n', 'EncodeDataItemType': '__int64 __fastcall EncodeDataItemType(__int64 a1, __int64 a2)\n{\n  return AddIntToMessage(*(_WORD *)(a1 + 16), a2);\n}\n', 'CreateMessageRouterRequestStructure': '__int64 __fastcall CreateMessageRouterRequestStructure(_BYTE *a1, __int16 a2, __int64 a3)\n{\n  __int16 v5; // [rsp+14h] [rbp-2Ch]\n  _WORD *v6; // [rsp+18h] [rbp-28h] BYREF\n  __int64 v8[2]; // [rsp+30h] [rbp-10h] BYREF\n\n  v6 = a1;\n  v8[1] = __readfsqword(0x28u);\n  *(_BYTE *)a3 = *a1;\n  v6 = (_WORD *)((char *)v6 + 1);\n  v5 = a2 - 1;\n  if ( (unsigned int)DecodePaddedEPath((unsigned __int8 *)(a3 + 2), &v6, v8) )\n    return 4LL;\n  if ( (unsigned __int64)v5 < v8[0] )\n    return 38LL;\n  *(_QWORD *)(a3 + 24) = v6;\n  *(_QWORD *)(a3 + 16) = v5 - v8[0];\n  return 0LL;\n}\n', 'EncodeReplyService': '__int64 __fastcall EncodeReplyService(char *a1, __int64 a2)\n{\n  return AddSintToMessage(*a1, a2);\n}\n', 'AddSintToMessage': '__int64 __fastcall AddSintToMessage(char a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  *(_BYTE *)(*(_QWORD *)(a2 + 512))++ = a1;\n  result = a2;\n  ++*(_QWORD *)(a2 + 520);\n  return result;\n}\n', 'DecodePaddedEPath': '__int64 __fastcall DecodePaddedEPath(unsigned __int8 *a1, _WORD **a2, _QWORD *a3)\n{\n  __int64 result; // rax\n  unsigned int v5; // [rsp+2Ch] [rbp-14h]\n  _WORD *v6[2]; // [rsp+30h] [rbp-10h] BYREF\n\n  v6[1] = (_WORD *)__readfsqword(0x28u);\n  if ( !a3 )\n    __assert_fail(\n      "bytes_consumed != ((void *)0)",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipcommon.c",\n      0x56Fu,\n      "DecodePaddedEPath");\n  v5 = 0;\n  v6[0] = *a2;\n  *a1 = *(_BYTE *)v6[0]++;\n  *((_WORD *)a1 + 1) = 0;\n  *((_WORD *)a1 + 2) = 0;\n  *((_WORD *)a1 + 3) = 0;\n  while ( 2 )\n  {\n    if ( v5 < *a1 )\n    {\n      if ( (*(_BYTE *)v6[0] & 7) == 7 )\n      {\n        return 0xFFFFFFFFLL;\n      }\n      else\n      {\n        ++v5;\n        switch ( *(_BYTE *)v6[0] )\n        {\n          case \' \':\n            *((_WORD *)a1 + 1) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'!\':\n            ++v6[0];\n            *((_WORD *)a1 + 1) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'$\':\n            *((_WORD *)a1 + 2) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'%\':\n            ++v6[0];\n            *((_WORD *)a1 + 2) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'(\':\n            ++v6[0];\n            continue;\n          case \')\':\n            ++v6[0];\n            ++v5;\n            continue;\n          case \'0\':\n            *((_WORD *)a1 + 3) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'1\':\n            ++v6[0];\n            *((_WORD *)a1 + 3) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          default:\n            result = 0xFFFFFFFFLL;\n            break;\n        }\n      }\n    }\n    else\n    {\n      *a2 = v6[0];\n      *a3 = 2LL * v5 + 1;\n      return 0LL;\n    }\n    return result;\n  }\n}\n', 'GetRegisteredObject': '_QWORD *__fastcall GetRegisteredObject(int a1)\n{\n  _QWORD *i; // [rsp+18h] [rbp-8h]\n\n  for ( i = (_QWORD *)g_first_object; i; i = (_QWORD *)*i )\n  {\n    if ( !i[1] )\n      __assert_fail(\n        "((void *)0) != object->cip_class",\n        "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipmessagerouter.c",\n        0x77u,\n        "GetRegisteredObject");\n    if ( a1 == *(_DWORD *)(i[1] + 40LL) )\n      return i;\n  }\n  return 0LL;\n}\n', 'GetCipInstance': '__int64 __fastcall GetCipInstance(__int64 a1, __int16 a2)\n{\n  __int64 i; // [rsp+14h] [rbp-8h]\n\n  if ( !a2 )\n    return a1;\n  for ( i = *(_QWORD *)(a1 + 88); i; i = *(_QWORD *)(i + 24) )\n  {\n    if ( a2 == *(_WORD *)i )\n      return i;\n  }\n  return 0LL;\n}\n', 'HandleReceivedUnregisterSessionCommand': '__int64 __fastcall HandleReceivedUnregisterSessionCommand(__int64 a1, __int64 a2)\n{\n  int v3; // [rsp+1Ch] [rbp-4h]\n\n  if ( !*(_DWORD *)(a1 + 4)\n    || *(_DWORD *)(a1 + 4) > 0x14u\n    || (v3 = *(_DWORD *)(a1 + 4) - 1, g_registered_sessions[v3] == -1) )\n  {\n    GenerateEncapsulationHeader((unsigned __int16 *)a1, 0, *(_DWORD *)(a1 + 4), 0x64u, a2);\n    return 1LL;\n  }\n  else\n  {\n    CloseTcpSocket((unsigned int)g_registered_sessions[v3]);\n    g_registered_sessions[v3] = -1;\n    CloseClass3ConnectionBasedOnSession(v3 + 1);\n    return 0LL;\n  }\n}\n', 'CloseClass3ConnectionBasedOnSession': '__int64 __fastcall CloseClass3ConnectionBasedOnSession(int a1)\n{\n  __int64 result; // rax\n  __int64 i; // [rsp+10h] [rbp-10h]\n  __int64 v3; // [rsp+18h] [rbp-8h]\n\n  result = connection_list;\n  for ( i = connection_list; i; i = result )\n  {\n    v3 = *(_QWORD *)(i + 16);\n    if ( (unsigned int)ConnectionObjectGetTransportClassTriggerTransportClass(v3) == 3 && a1 == *(_DWORD *)(v3 + 248) )\n      (*(void (__fastcall **)(__int64))(v3 + 264))(v3);\n    result = *(_QWORD *)(i + 8);\n  }\n  return result;\n}\n'}
2025-03-08 21:06:22,478 - my_text.py:383  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Updated c_taint_asm_dict: {'0': {2: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'HandleDataOnTcpSocket': {'4', 'add', 'movzx', '14h', 'n', 'var_478', 'cmp', 'rax', '1FCh', 'eax', 'rbp', 'mov', 'rdx', 'ax'}, 'HandleReceivedExplictTcpData': {'rbp', 'rcx', 'mov', 'rdx', 'rsi', 'var_58'}, 'CreateEncapsulationStructure': {'edx', 'movzx', 'var_10', 'word', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'ptr', 'ax', 'rsi', 'rdx', 'sub', '2'}}, 3: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'HandleDataOnTcpSocket': {'4', 'add', 'movzx', '14h', 'n', 'var_478', 'cmp', 'rax', '1FCh', 'eax', 'rbp', 'mov', 'rdx', 'ax'}, 'HandleReceivedExplictTcpData': {'rbp', 'rcx', 'mov', 'rdx', 'rsi', 'var_58'}, 'CreateEncapsulationStructure': {'edx', 'movzx', 'var_10', 'word', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'ptr', 'ax', 'rsi', 'rdx', 'sub', '2'}}, 0: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'CreateEncapsulationStructure': {'rdx', 'mov', 'ax'}, 'HandleReceivedExplictTcpData': {'70h', '63h', 'switch', 'cases', 'movzx', '0Dh', 'word', 'cmp', 'var_30', 'eax', 'p', 'mov', 'ptr', 'ax', 'rbp', '14', 'sub', 'c'}, 'GenerateEncapsulationHeader': {'movzx', 'word', 'rax', 'eax', 'mov', 'ptr', 'ax', 'edi'}, 'AddIntToMessage': {'edx', 'movzx', 'shr', 'eax', 'rbp', 'mov', 'ax', 'var_4', 'edi', '8'}}, 1: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'CreateEncapsulationStructure': {'rdx', 'mov', 'ax'}, 'HandleReceivedExplictTcpData': {'70h', '63h', 'switch', 'cases', 'movzx', '0Dh', 'word', 'cmp', 'var_30', 'eax', 'p', 'mov', 'ptr', 'ax', 'rbp', '14', 'sub', 'c'}, 'GenerateEncapsulationHeader': {'movzx', 'word', 'rax', 'eax', 'mov', 'ptr', 'ax', 'edi'}, 'AddIntToMessage': {'edx', 'dl', 'movzx', 'shr', 'rax', 'eax', 'rbp', 'mov', 'ax', 'var_4', 'edi', '8'}}, 4: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}}, 5: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}}, 6: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}}, 7: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}}, 8: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 9: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 10: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 11: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 20: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 21: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 22: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 23: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 24: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'HandleReceivedRegisterSessionCommand': {'var_1C', 'cmp', 'rbp', 'mov', '0', 'ax'}}, 25: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'HandleReceivedRegisterSessionCommand': {'var_1C', 'cmp', 'rbp', 'mov', '0', 'ax'}}, 26: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'HandleReceivedRegisterSessionCommand': {'var_1A', 'cmp', 'rbp', 'mov', '0', 'ax'}}, 27: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'HandleReceivedRegisterSessionCommand': {'var_1A', 'cmp', 'rbp', 'mov', '0', 'ax'}}}}
2025-03-08 21:06:22,480 - my_text.py:383  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Updated c_taint_asm_dict: {'0': {2: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'HandleDataOnTcpSocket': {'4', 'add', 'movzx', '14h', 'n', 'var_478', 'cmp', 'rax', '1FCh', 'eax', 'rbp', 'mov', 'rdx', 'ax'}, 'HandleReceivedExplictTcpData': {'rbp', 'rcx', 'mov', 'rdx', 'rsi', 'var_58'}, 'CreateEncapsulationStructure': {'edx', 'movzx', 'var_10', 'word', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'ptr', 'ax', 'rsi', 'rdx', 'sub', '2'}, 'HandleReceivedSendRequestResponseDataCommand': {'movzx', 'word', 'cmp', 'rax', 'eax', 'ptr', 'ax', '5', '2'}}, 3: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'HandleDataOnTcpSocket': {'4', 'add', 'movzx', '14h', 'n', 'var_478', 'cmp', 'rax', '1FCh', 'eax', 'rbp', 'mov', 'rdx', 'ax'}, 'HandleReceivedExplictTcpData': {'rbp', 'rcx', 'mov', 'rdx', 'rsi', 'var_58'}, 'CreateEncapsulationStructure': {'edx', 'movzx', 'var_10', 'word', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'ptr', 'ax', 'rsi', 'rdx', 'sub', '2'}, 'HandleReceivedSendRequestResponseDataCommand': {'movzx', 'word', 'cmp', 'rax', 'eax', 'ptr', 'ax', '5', '2'}}, 0: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'CreateEncapsulationStructure': {'rdx', 'mov', 'ax'}, 'HandleReceivedExplictTcpData': {'70h', '63h', 'switch', 'cases', 'movzx', '0Dh', 'word', 'cmp', 'var_30', 'eax', 'p', 'mov', 'ptr', 'ax', 'rbp', '14', 'sub', 'c'}, 'GenerateEncapsulationHeader': {'movzx', 'word', 'rax', 'eax', 'mov', 'ptr', 'ax', 'edi'}, 'AddIntToMessage': {'edx', 'movzx', 'shr', 'eax', 'rbp', 'mov', 'ax', 'var_4', 'edi', '8'}}, 1: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'CreateEncapsulationStructure': {'rdx', 'mov', 'ax'}, 'HandleReceivedExplictTcpData': {'70h', '63h', 'switch', 'cases', 'movzx', '0Dh', 'word', 'cmp', 'var_30', 'eax', 'p', 'mov', 'ptr', 'ax', 'rbp', '14', 'sub', 'c'}, 'GenerateEncapsulationHeader': {'movzx', 'word', 'rax', 'eax', 'mov', 'ptr', 'ax', 'edi'}, 'AddIntToMessage': {'edx', 'dl', 'movzx', 'shr', 'rax', 'eax', 'rbp', 'mov', 'ax', 'var_4', 'edi', '8'}}, 4: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}, 'CheckRegisteredSessions': {'4', '14h', 'cmp', 'rax', 'eax', 'mov', 'sub', 'test', '1'}, 'NotifyCommonPacketFormat': {'edx', '4', 'r8d', 'rax', 'mov', 'edi'}, 'NotifyMessageRouter': {'r8d', 'esi', 'rbp', 'mov', 'var_20'}, 'NotifyClass': {'var_44', 'r8d', 'rbp', 'mov'}, 'GenerateEncapsulationHeader': {'edx', 'eax', 'rbp', 'mov', 'var_14', 'edi'}, 'AddDintToMessage': {'edx', '18h', 'shr', 'eax', 'rbp', 'mov', '10h', 'var_4', 'edi', '8'}}, 5: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}, 'CheckRegisteredSessions': {'4', '14h', 'cmp', 'rax', 'eax', 'mov', 'sub', 'test', '1'}, 'NotifyCommonPacketFormat': {'edx', '4', 'r8d', 'rax', 'mov', 'edi'}, 'NotifyMessageRouter': {'r8d', 'esi', 'rbp', 'mov', 'var_20'}, 'NotifyClass': {'var_44', 'r8d', 'rbp', 'mov'}, 'GenerateEncapsulationHeader': {'edx', 'eax', 'rbp', 'mov', 'var_14', 'edi'}, 'AddDintToMessage': {'edx', '18h', 'shr', 'eax', 'rbp', 'mov', '10h', 'var_4', 'edi', '8'}}, 6: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}, 'CheckRegisteredSessions': {'4', '14h', 'cmp', 'rax', 'eax', 'mov', 'sub', 'test', '1'}, 'NotifyCommonPacketFormat': {'edx', '4', 'r8d', 'rax', 'mov', 'edi'}, 'NotifyMessageRouter': {'r8d', 'esi', 'rbp', 'mov', 'var_20'}, 'NotifyClass': {'var_44', 'r8d', 'rbp', 'mov'}, 'GenerateEncapsulationHeader': {'edx', 'eax', 'rbp', 'mov', 'var_14', 'edi'}, 'AddDintToMessage': {'edx', '18h', 'shr', 'eax', 'rbp', 'mov', '10h', 'var_4', 'edi', '8'}}, 7: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}, 'CheckRegisteredSessions': {'4', '14h', 'cmp', 'rax', 'eax', 'mov', 'sub', 'test', '1'}, 'NotifyCommonPacketFormat': {'edx', '4', 'r8d', 'rax', 'mov', 'edi'}, 'NotifyMessageRouter': {'r8d', 'esi', 'rbp', 'mov', 'var_20'}, 'NotifyClass': {'var_44', 'r8d', 'rbp', 'mov'}, 'GenerateEncapsulationHeader': {'edx', 'eax', 'rbp', 'mov', 'var_14', 'edi'}, 'AddDintToMessage': {'edx', 'dl', '18h', 'shr', 'rax', 'eax', 'rbp', 'mov', '10h', 'var_4', 'edi', '8'}}, 8: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 9: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 10: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 11: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 20: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 21: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 22: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 23: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 24: {'GetDintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}}, 25: {'GetDintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}}, 26: {'GetDintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}}, 27: {'GetDintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}}, 28: {'GetIntFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}}, 29: {'GetIntFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}}, 30: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'CreateCommonPacketFormatStructure': {'movzx', 'cmp', 'ax', 'sub', 'test', 'edx', '3', 'var_1C', 'rax', 'ptr', 'var_1A', 'word', 'eax', 'cmovbe', '1', 'dx', 'rbp', 'mov', '2'}, 'EncodeItemCount': {'movzx', 'word', 'rax', 'eax', 'mov', 'ptr', 'ax', 'edi'}, 'AddIntToMessage': {'edx', 'movzx', 'shr', 'eax', 'rbp', 'mov', 'ax', 'var_4', 'edi', '8'}}, 31: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'CreateCommonPacketFormatStructure': {'movzx', 'cmp', 'ax', 'sub', 'test', 'edx', '3', 'var_1C', 'rax', 'ptr', 'var_1A', 'word', 'eax', 'cmovbe', '1', 'dx', 'rbp', 'mov', '2'}, 'EncodeItemCount': {'movzx', 'word', 'rax', 'eax', 'mov', 'ptr', 'ax', 'edi'}, 'AddIntToMessage': {'edx', 'dl', 'movzx', 'shr', 'rax', 'eax', 'rbp', 'mov', 'ax', 'var_4', 'edi', '8'}}, 32: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'CreateCommonPacketFormatStructure': {'4', 'rdx', 'mov', 'ax'}, 'NotifyCommonPacketFormat': {'movzx', 'cs', 'eax', 'ax', 'word_23484', 'test'}, 'AssembleLinearMessage': {'4', '8002h', 'movzx', 'word', 'cmp', 'rax', 'eax', 'ptr', 'ax', 'test'}}, 33: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'CreateCommonPacketFormatStructure': {'4', 'rdx', 'mov', 'ax'}, 'NotifyCommonPacketFormat': {'movzx', 'cs', 'eax', 'ax', 'word_23484', 'test'}, 'AssembleLinearMessage': {'4', '8002h', 'movzx', 'word', 'cmp', 'rax', 'eax', 'ptr', 'ax', 'test'}}, 34: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'CreateCommonPacketFormatStructure': {'6', 'movzx', '3', 'word', 'cmp', 'rax', 'eax', 'rdx', 'mov', 'ptr', 'ax', '8'}}, 35: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'CreateCommonPacketFormatStructure': {'6', 'movzx', '3', 'word', 'cmp', 'rax', 'eax', 'rdx', 'mov', 'ptr', 'ax', '8'}}, 36: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'CreateCommonPacketFormatStructure': {'rdx', 'mov', 'ax', '10h'}, 'NotifyCommonPacketFormat': {'word_23490', '0B2h', 'movzx', 'cs', 'cmp', 'eax', 'ax'}, 'AssembleLinearMessage': {'0B2h', 'movzx', 'word', 'cmp', '0B1h', 'rax', 'eax', 'ptr', 'ax', '10h'}, 'EncodeDataItemType': {'movzx', 'word', 'rax', 'eax', 'mov', 'ptr', 'ax', '10h', 'edi'}, 'AddIntToMessage': {'edx', 'movzx', 'shr', 'eax', 'rbp', 'mov', 'ax', 'var_4', 'edi', '8'}}, 37: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'CreateCommonPacketFormatStructure': {'rdx', 'mov', 'ax', '10h'}, 'NotifyCommonPacketFormat': {'word_23490', '0B2h', 'movzx', 'cs', 'cmp', 'eax', 'ax'}, 'AssembleLinearMessage': {'0B2h', 'movzx', 'word', 'cmp', '0B1h', 'rax', 'eax', 'ptr', 'ax', '10h'}, 'EncodeDataItemType': {'movzx', 'word', 'rax', 'eax', 'mov', 'ptr', 'ax', '10h', 'edi'}, 'AddIntToMessage': {'edx', 'dl', 'movzx', 'shr', 'rax', 'eax', 'rbp', 'mov', 'ax', 'var_4', 'edi', '8'}}, 38: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'CreateCommonPacketFormatStructure': {'edx', '4', 'add', 'movzx', '12h', 'word', 'rax', 'eax', 'rbp', 'mov', 'ptr', 'ax', 'rdx', 'var_18', 'var_28'}, 'NotifyCommonPacketFormat': {'movzx', 'word_23492', 'cs', 'esi', 'eax', 'ax'}, 'NotifyMessageRouter': {'var_1C', 'movsx', 'esi', 'eax', 'rbp', 'mov', 'ax', 'ecx'}, 'CreateMessageRouterRequestStructure': {'movzx', 'movsx', 'var_2C', 'cmp', 'rax', 'esi', 'eax', 'rbp', 'mov', 'rdx', 'ax', '10h', 'sub', '1'}}, 39: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'CreateCommonPacketFormatStructure': {'edx', '4', 'add', 'movzx', '12h', 'word', 'rax', 'eax', 'rbp', 'mov', 'ptr', 'ax', 'rdx', 'var_18', 'var_28'}, 'NotifyCommonPacketFormat': {'movzx', 'word_23492', 'cs', 'esi', 'eax', 'ax'}, 'NotifyMessageRouter': {'var_1C', 'movsx', 'esi', 'eax', 'rbp', 'mov', 'ax', 'ecx'}, 'CreateMessageRouterRequestStructure': {'movzx', 'movsx', 'var_2C', 'cmp', 'rax', 'esi', 'eax', 'rbp', 'mov', 'rdx', 'ax', '10h', 'sub', '1'}}, 40: {'CreateMessageRouterRequestStructure': {'edx', 'dl', 'movzx', 'rax', 'mov', 'ptr', 'byte'}, 'NotifyClass': {'edx', 'al', 'dl', 'movzx', 'cmp', 'rax', 'eax', '0FFFFFF80h', 'mov', 'ptr', 'or', 'byte'}, 'EncodeReplyService': {'al', 'movzx', 'rax', 'eax', 'mov', 'ptr', 'byte', 'edi'}, 'AddSintToMessage': {'edx', 'al', 'dl', 'movzx', 'rax', 'eax', 'rbp', 'mov', 'var_4', 'edi'}}, 41: {'DecodePaddedEPath': {'edx', 'al', 'dl', 'movzx', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'ptr', 'byte', 'var_14'}}, 42: {'DecodePaddedEPath': {'al', 'switch', '11h', 'cases', 'movzx', 'byte', '7', 'and', 'cmp', 'rax', 'eax', '20h', 'mov', 'ptr', 'sub', '18'}}, 43: {'DecodePaddedEPath': {'edx', 'al', 'dx', 'movzx', 'rax', 'eax', 'mov', 'ptr', 'byte', '2'}, 'NotifyMessageRouter': {'movzx', 'word_21CC4', 'cs', 'eax', 'mov', 'ax', 'edi'}, 'GetRegisteredObject': {'cmp', 'eax', 'rbp', 'mov', 'var_14', 'edi'}}, 44: {'DecodePaddedEPath': {'al', 'switch', '11h', 'cases', 'movzx', 'byte', '7', 'and', 'cmp', 'rax', 'eax', '20h', 'mov', 'ptr', 'sub', '18'}}, 45: {'DecodePaddedEPath': {'4', 'edx', 'al', 'dx', 'movzx', 'rax', 'eax', 'mov', 'ptr', 'byte'}, 'NotifyClass': {'edx', '6', 'movzx', 'var_1A', 'word', 'rax', 'esi', 'eax', 'rbp', 'mov', 'ptr', 'ax'}, 'GetCipInstance': {'var_1C', 'cmp', 'esi', 'eax', 'rbp', 'mov', '0', 'ax'}}}}
2025-03-08 21:06:22,481 - my_text.py:383  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Updated c_taint_asm_dict: {'0': {2: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'HandleDataOnTcpSocket': {'4', 'add', 'movzx', '14h', 'n', 'var_478', 'cmp', 'rax', '1FCh', 'eax', 'rbp', 'mov', 'rdx', 'ax'}, 'HandleReceivedExplictTcpData': {'rbp', 'rcx', 'mov', 'rdx', 'rsi', 'var_58'}, 'CreateEncapsulationStructure': {'edx', 'movzx', 'var_10', 'word', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'ptr', 'ax', 'rsi', 'rdx', 'sub', '2'}}, 3: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'HandleDataOnTcpSocket': {'4', 'add', 'movzx', '14h', 'n', 'var_478', 'cmp', 'rax', '1FCh', 'eax', 'rbp', 'mov', 'rdx', 'ax'}, 'HandleReceivedExplictTcpData': {'rbp', 'rcx', 'mov', 'rdx', 'rsi', 'var_58'}, 'CreateEncapsulationStructure': {'edx', 'movzx', 'var_10', 'word', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'ptr', 'ax', 'rsi', 'rdx', 'sub', '2'}}, 0: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'CreateEncapsulationStructure': {'rdx', 'mov', 'ax'}, 'HandleReceivedExplictTcpData': {'70h', '63h', 'switch', 'cases', 'movzx', '0Dh', 'word', 'cmp', 'var_30', 'eax', 'p', 'mov', 'ptr', 'ax', 'rbp', '14', 'sub', 'c'}}, 1: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'CreateEncapsulationStructure': {'rdx', 'mov', 'ax'}, 'HandleReceivedExplictTcpData': {'70h', '63h', 'switch', 'cases', 'movzx', '0Dh', 'word', 'cmp', 'var_30', 'eax', 'p', 'mov', 'ptr', 'ax', 'rbp', '14', 'sub', 'c'}}, 4: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}, 'HandleReceivedUnregisterSessionCommand': {'4', 'add', '14h', 'test', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'sub', 'var_4', 'edi', '1'}, 'CloseClass3ConnectionBasedOnSession': {'var_14', 'rbp', 'mov', 'edi'}}, 5: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}, 'HandleReceivedUnregisterSessionCommand': {'4', 'add', '14h', 'test', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'sub', 'var_4', 'edi', '1'}, 'CloseClass3ConnectionBasedOnSession': {'var_14', 'rbp', 'mov', 'edi'}}, 6: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}, 'HandleReceivedUnregisterSessionCommand': {'4', 'add', '14h', 'test', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'sub', 'var_4', 'edi', '1'}, 'CloseClass3ConnectionBasedOnSession': {'var_14', 'rbp', 'mov', 'edi'}}, 7: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}, 'HandleReceivedUnregisterSessionCommand': {'4', 'add', '14h', 'test', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'sub', 'var_4', 'edi', '1'}, 'CloseClass3ConnectionBasedOnSession': {'var_14', 'rbp', 'mov', 'edi'}}, 8: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 9: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 10: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 11: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 20: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 21: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 22: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 23: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}}}
2025-03-08 21:06:22,482 - my_text.py:383  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Updated c_taint_asm_dict: {'0': {2: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'HandleDataOnTcpSocket': {'4', 'add', 'movzx', '14h', 'n', 'var_478', 'cmp', 'rax', '1FCh', 'eax', 'rbp', 'mov', 'rdx', 'ax'}, 'HandleReceivedExplictTcpData': {'rbp', 'rcx', 'mov', 'rdx', 'rsi', 'var_58'}, 'CreateEncapsulationStructure': {'edx', 'movzx', 'var_10', 'word', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'ptr', 'ax', 'rsi', 'rdx', 'sub', '2'}}, 3: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'HandleDataOnTcpSocket': {'4', 'add', 'movzx', '14h', 'n', 'var_478', 'cmp', 'rax', '1FCh', 'eax', 'rbp', 'mov', 'rdx', 'ax'}, 'HandleReceivedExplictTcpData': {'rbp', 'rcx', 'mov', 'rdx', 'rsi', 'var_58'}, 'CreateEncapsulationStructure': {'edx', 'movzx', 'var_10', 'word', 'cmp', 'rax', 'eax', 'rbp', 'mov', 'ptr', 'ax', 'rsi', 'rdx', 'sub', '2'}}, 0: {'GetUintFromMessage': {'edx', 'al', 'movzx', 'var_A', 'rax', 'eax', 'rbp', 'mov', 'or', 'ax', 'ptr', 'byte'}, 'CreateEncapsulationStructure': {'rdx', 'mov', 'ax'}, 'HandleReceivedExplictTcpData': {'70h', '63h', 'switch', 'cases', 'movzx', '0Dh', 'word', 'cmp', 'var_30', 'eax', 'p', 'mov', 'ptr', 'ax', 'rbp', '14', 'sub', 'c'}, 'GenerateEncapsulationHeader': {'movzx', 'word', 'rax', 'eax', 'mov', 'ptr', 'ax', 'edi'}, 'AddIntToMessage': {'edx', 'movzx', 'shr', 'eax', 'rbp', 'mov', 'ax', 'var_4', 'edi', '8'}}, 1: {'GetUintFromMessage': {'edx', 'dl', 'movzx', 'var_A', 'shl', 'eax', 'rdx', 'mov', 'ptr', 'rbp', 'ax', 'or', 'byte', '8'}, 'CreateEncapsulationStructure': {'rdx', 'mov', 'ax'}, 'HandleReceivedExplictTcpData': {'70h', '63h', 'switch', 'cases', 'movzx', '0Dh', 'word', 'cmp', 'var_30', 'eax', 'p', 'mov', 'ptr', 'ax', 'rbp', '14', 'sub', 'c'}, 'GenerateEncapsulationHeader': {'movzx', 'word', 'rax', 'eax', 'mov', 'ptr', 'ax', 'edi'}, 'AddIntToMessage': {'edx', 'dl', 'movzx', 'shr', 'rax', 'eax', 'rbp', 'mov', 'ax', 'var_4', 'edi', '8'}}, 4: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}}, 5: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}}, 6: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}}, 7: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'4', 'rdx', 'mov', 'eax'}}, 8: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 9: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 10: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 11: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'eax', 'rdx', 'mov', '8'}}, 20: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 21: {'GetUdintFromMessage': {'edx', 'dl', 'movzx', 'shl', 'eax', 'rdx', 'or', 'ptr', 'mov', 'rbp', 'byte', '8', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 22: {'GetUdintFromMessage': {'edx', 'al', 'movzx', 'rax', 'shl', 'eax', 'rbp', 'or', 'ptr', 'mov', '10h', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}, 23: {'GetUdintFromMessage': {'edx', 'al', 'movzx', '18h', 'shl', 'rax', 'eax', 'rbp', 'or', 'ptr', 'mov', 'byte', 'var_C'}, 'CreateEncapsulationStructure': {'14h', 'rdx', 'mov', 'eax'}, 'HandleReceivedExplictTcpData': {'edx', '4', 'cmp', 'eax', 'dword', 'rbp', 'mov', 'ptr', 'var_20'}}}}
2025-03-08 21:06:22,482 - my_text.py:394  - bss:00000000000200E0 stderr@@GLIBC_2.2.5 (FILE *)
2025-03-08 21:06:22,482 - my_text.py:394  - bss:00000000000200E8 completed.8061 (Unknown)
2025-03-08 21:06:22,482 - my_text.py:394  - bss:00000000000200EC g_end_stack (Unknown)
2025-03-08 21:06:22,482 - my_text.py:394  - bss:00000000000200F0 pthread_dummy_ret.6629 (Unknown)
2025-03-08 21:06:22,482 - my_text.py:394  - bss:0000000000020100 nodes.4750 (Unknown)
2025-03-08 21:06:22,482 - my_text.py:394  - bss:0000000000020108 unk_20108 (Unknown)
2025-03-08 21:06:22,482 - my_text.py:394  - bss:0000000000020110 unk_20110 (Unknown)
2025-03-08 21:06:22,482 - my_text.py:394  - bss:00000000000201E0 g_connection_management_list (Unknown)
2025-03-08 21:06:22,482 - my_text.py:394  - bss:00000000000201E8 unk_201E8 (Unknown)
2025-03-08 21:06:22,482 - my_text.py:394  - bss:0000000000020210 dummy_attribute_usint (Unknown)
2025-03-08 21:06:22,482 - my_text.py:394  - bss:0000000000020214 dummy_attribute_udint (Unknown)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020218 s_interface_control (Unknown)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020220 g_config_data_buffer (void *)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020228 g_config_data_length (size_t)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:000000000002022C g_run_idle_state (Unknown)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020230 s_produce_run_idle (Unknown)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020238 g_first_object (Unknown)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020240 dummy_data_field (Unknown)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020260 g_network_status (int)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020264 dword_20264 (int)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020268 fd (int)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:000000000002026C dword_2026C (int)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020270 dword_20270 (Unknown)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020274 dword_20274 (Unknown)
2025-03-08 21:06:22,483 - my_text.py:394  - bss:0000000000020278 qword_20278 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020280 g_actual_time (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:00000000000202A0 read_socket (fd_set)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020320 g_current_active_tcp_socket (int)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020340 master_socket (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020348 qword_20348 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020350 qword_20350 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020358 qword_20358 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020360 qword_20360 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020368 qword_20368 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020370 qword_20370 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020378 qword_20378 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020380 qword_20380 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020388 qword_20388 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020390 qword_20390 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:0000000000020398 qword_20398 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:00000000000203A0 qword_203A0 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:00000000000203A8 qword_203A8 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:00000000000203B0 qword_203B0 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:00000000000203B8 qword_203B8 (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:00000000000203C0 highest_socket_handle (Unknown)
2025-03-08 21:06:22,484 - my_text.py:394  - bss:00000000000203D0 g_time_value (struct timeval)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:00000000000203E0 timeout_checker_array (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000020430 g_last_time (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000020440 g_timestamps (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000020580 explicit_connection_object_pool (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021900 connection_list (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021920 g_dummy_connection_object (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021978 dword_21978 (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021A08 qword_21A08 (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021A10 qword_21A10 (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021A18 dword_21A18 (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021C58 byte_21C58 (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021C60 g_incarnation_id (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021C80 g_ethernet_link (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021C84 unk_21C84 (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021C8E unk_21C8E (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021CA0 unk_21CA0 (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021CA4 unk_21CA4 (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021CC0 g_message_router_request (Unknown)
2025-03-08 21:06:22,485 - my_text.py:394  - bss:0000000000021CC4 word_21CC4 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:0000000000021CE0 g_input_only_connections (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:0000000000021CE4 unk_21CE4 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:0000000000021CE8 unk_21CE8 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:0000000000021DF8 unk_21DF8 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:00000000000226C0 g_listen_only_connections (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:00000000000226C4 unk_226C4 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:00000000000226C8 unk_226C8 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:00000000000227D8 unk_227D8 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:00000000000230A0 g_exlusive_owner_connections (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:00000000000230A4 unk_230A4 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:00000000000230A8 unk_230A8 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:00000000000231B8 unk_231B8 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:0000000000023400 g_assembly_data09A (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:0000000000023420 g_assembly_data097 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:0000000000023440 g_assembly_data064 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:0000000000023460 g_assembly_data096 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:0000000000023480 g_common_packet_format_data_item (__int16[2])
2025-03-08 21:06:22,486 - my_text.py:394  - bss:0000000000023484 word_23484 (Unknown)
2025-03-08 21:06:22,486 - my_text.py:394  - bss:0000000000023488 dword_23488 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:000000000002348C dword_2348C (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:0000000000023490 word_23490 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:0000000000023492 word_23492 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:0000000000023498 qword_23498 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:00000000000234A0 word_234A0 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:00000000000234B4 word_234B4 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:00000000000234E0 g_delayed_encapsulation_messages (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:00000000000234E4 unk_234E4 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:0000000000023700 unk_23700 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:0000000000023930 g_service_information (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:0000000000023932 word_23932 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:0000000000023934 word_23934 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:0000000000023936 word_23936 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:0000000000023938 s (char[])
2025-03-08 21:06:22,487 - my_text.py:394  - bss:0000000000023940 qword_23940 (Unknown)
2025-03-08 21:06:22,487 - my_text.py:394  - bss:0000000000023960 g_registered_sessions (_DWORD[20])
2025-03-08 21:06:22,490 - my_text.py:432  - {'0': {2: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleDataOnTcpSocket': {'      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;', '            if ( v13 == (unsigned int)v14 )', '              v13 += 4LL;', '        v14 = recv(a1, (char *)buf + 4, v13, 0);', '      if ( v13 <= 0x1FC )', '              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);'}, 'HandleReceivedExplictTcpData': {'  v17 = __readfsqword(0x28u);', '  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);'}, 'CreateEncapsulationStructure': {'  if ( a2 >= 0x80000000 )', '  src = a1;', '  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);', '  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));'}}, 3: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleDataOnTcpSocket': {'      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;', '            if ( v13 == (unsigned int)v14 )', '              v13 += 4LL;', '        v14 = recv(a1, (char *)buf + 4, v13, 0);', '      if ( v13 <= 0x1FC )', '              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);'}, 'HandleReceivedExplictTcpData': {'  v17 = __readfsqword(0x28u);', '  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);'}, 'CreateEncapsulationStructure': {'  if ( a2 >= 0x80000000 )', '  src = a1;', '  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);', '  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));'}}, 0: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateEncapsulationStructure': {'  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);'}, 'HandleReceivedExplictTcpData': {'    if ( (unsigned __int16)v12 > 0x70u )', '    if ( (unsigned __int16)v12 >= 0x63u )', '        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);'}, 'GenerateEncapsulationHeader': {'  AddIntToMessage(*a1, a5);'}, 'AddIntToMessage': {'  **(_WORD **)(a2 + 512) = a1;'}}, 1: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateEncapsulationStructure': {'  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);'}, 'HandleReceivedExplictTcpData': {'    if ( (unsigned __int16)v12 > 0x70u )', '    if ( (unsigned __int16)v12 >= 0x63u )', '        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);'}, 'GenerateEncapsulationHeader': {'  AddIntToMessage(*a1, a5);'}, 'AddIntToMessage': {'  **(_WORD **)(a2 + 512) = a1;', '  *(_QWORD *)(a2 + 512) += 2LL;'}}, 4: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 5: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 6: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 7: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 8: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 9: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 10: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 11: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 20: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 21: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 22: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 23: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 24: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleReceivedRegisterSessionCommand': {'  UintFromMessage = GetUintFromMessage((_WORD **)(a2 + 32));', '  if ( UintFromMessage != 1 || *(_WORD *)v6 )'}}, 25: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleReceivedRegisterSessionCommand': {'  UintFromMessage = GetUintFromMessage((_WORD **)(a2 + 32));', '  if ( UintFromMessage != 1 || *(_WORD *)v6 )'}}, 26: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleReceivedRegisterSessionCommand': {'  if ( UintFromMessage != 1 || *(_WORD *)v6 )', '  *(_DWORD *)v6 = (unsigned __int16)GetUintFromMessage((_WORD **)(a2 + 32));'}}, 27: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleReceivedRegisterSessionCommand': {'  if ( UintFromMessage != 1 || *(_WORD *)v6 )', '  *(_DWORD *)v6 = (unsigned __int16)GetUintFromMessage((_WORD **)(a2 + 32));'}}}}
2025-03-08 21:06:22,491 - my_text.py:443  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Updated c_taint_c_dict: {'0': {2: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleDataOnTcpSocket': {'v14', 'v2', 'if', '4', 'HandleReceivedExplictTcpData', 'v5', 'unsigned', 'recv', '20', '0', 'GetUintFromMessage', 'v13', 's', 'buf', '__int64', 'a1', 'v11', 'v23', 'char', '0x1FC', '4LL', 'int', '__int16'}, 'HandleReceivedExplictTcpData': {'a3', '__int64', 'v17', '0x28u', 'CreateEncapsulationStructure', 'a2', 'EncapsulationStructure', '__readfsqword', 'v12'}, 'CreateEncapsulationStructure': {'a3', 'unsigned', 'src', '24', 'return', 'a2', 'if', '0x80000000', 'a1', '_WORD', 'int', '2', 'GetUintFromMessage', '__int16'}}, 3: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleDataOnTcpSocket': {'v14', 'v2', 'if', '4', 'HandleReceivedExplictTcpData', 'v5', 'unsigned', 'recv', '20', '0', 'GetUintFromMessage', 'v13', 's', 'buf', '__int64', 'a1', 'v11', 'v23', 'char', '0x1FC', '4LL', 'int', '__int16'}, 'HandleReceivedExplictTcpData': {'a3', '__int64', 'v17', '0x28u', 'CreateEncapsulationStructure', 'a2', 'EncapsulationStructure', '__readfsqword', 'v12'}, 'CreateEncapsulationStructure': {'a3', 'unsigned', 'src', '24', 'return', 'a2', 'if', '0x80000000', 'a1', '_WORD', 'int', '2', 'GetUintFromMessage', '__int16'}}, 0: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateEncapsulationStructure': {'src', '_WORD', 'a3', 'GetUintFromMessage'}, 'HandleReceivedExplictTcpData': {'unsigned', '0x63u', 'HandleReceivedInvalidCommand', 'return', 'a6', 'if', 'int', 'v12', '0x70u', '__int16'}, 'GenerateEncapsulationHeader': {'a5', 'a1', 'AddIntToMessage'}, 'AddIntToMessage': {'a2', '_WORD', 'a1', '512'}}, 1: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateEncapsulationStructure': {'src', '_WORD', 'a3', 'GetUintFromMessage'}, 'HandleReceivedExplictTcpData': {'unsigned', '0x63u', 'HandleReceivedInvalidCommand', 'return', 'a6', 'if', 'int', 'v12', '0x70u', '__int16'}, 'GenerateEncapsulationHeader': {'a5', 'a1', 'AddIntToMessage'}, 'AddIntToMessage': {'2LL', '_QWORD', '512', 'a2', 'a1', '_WORD'}}, 4: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}}, 5: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}}, 6: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}}, 7: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}}, 8: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 9: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 10: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 11: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 20: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 21: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 22: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 23: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 24: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleReceivedRegisterSessionCommand': {'v6', 'UintFromMessage', 'a2', 'if', '_WORD', 'GetUintFromMessage', '32', '1'}}, 25: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleReceivedRegisterSessionCommand': {'v6', 'UintFromMessage', 'a2', 'if', '_WORD', 'GetUintFromMessage', '32', '1'}}, 26: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleReceivedRegisterSessionCommand': {'v6', '__int16', 'unsigned', '_DWORD', 'UintFromMessage', 'a2', 'if', '_WORD', 'GetUintFromMessage', '32', '1'}}, 27: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleReceivedRegisterSessionCommand': {'v6', '__int16', 'unsigned', '_DWORD', 'UintFromMessage', 'a2', 'if', '_WORD', 'GetUintFromMessage', '32', '1'}}}}
2025-03-08 21:06:22,491 - my_text.py:460  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 var_flow: {'0': {2: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'HandleDataOnTcpSocket:v2', 'HandleDataOnTcpSocket:n', 'HandleDataOnTcpSocket:v23', 'HandleDataOnTcpSocket:a1', 'HandleDataOnTcpSocket:buf', 'CreateEncapsulationStructure:a1', 'HandleDataOnTcpSocket:var_478', 'GetUintFromMessage:var_A', 'CreateEncapsulationStructure:a2', 'GetUintFromMessage:a1', 'HandleDataOnTcpSocket:v13', 'HandleDataOnTcpSocket:v14', 'HandleReceivedExplictTcpData:a3', 'HandleDataOnTcpSocket:v5', 'HandleDataOnTcpSocket:v11', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a2', 'HandleReceivedExplictTcpData:var_58', 'CreateEncapsulationStructure:var_10', 'HandleDataOnTcpSocket:s', 'HandleReceivedExplictTcpData:v17'}, 3: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'HandleDataOnTcpSocket:v2', 'HandleDataOnTcpSocket:n', 'HandleDataOnTcpSocket:v23', 'HandleDataOnTcpSocket:a1', 'HandleDataOnTcpSocket:buf', 'CreateEncapsulationStructure:a1', 'HandleDataOnTcpSocket:var_478', 'GetUintFromMessage:var_A', 'CreateEncapsulationStructure:a2', 'GetUintFromMessage:a1', 'HandleDataOnTcpSocket:v13', 'HandleDataOnTcpSocket:v14', 'HandleReceivedExplictTcpData:a3', 'HandleDataOnTcpSocket:v5', 'HandleDataOnTcpSocket:v11', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a2', 'HandleReceivedExplictTcpData:var_58', 'CreateEncapsulationStructure:var_10', 'HandleDataOnTcpSocket:s', 'HandleReceivedExplictTcpData:v17'}, 0: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'CreateEncapsulationStructure:a3', 'GenerateEncapsulationHeader:a1', 'GetUintFromMessage:var_A', 'AddIntToMessage:a1', 'HandleReceivedExplictTcpData:var_30', 'AddIntToMessage:a2', 'HandleReceivedExplictTcpData:a6', 'AddIntToMessage:var_4', 'GenerateEncapsulationHeader:a5', 'GetUintFromMessage:a1'}, 1: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'CreateEncapsulationStructure:a3', 'GenerateEncapsulationHeader:a1', 'GetUintFromMessage:var_A', 'AddIntToMessage:a1', 'HandleReceivedExplictTcpData:var_30', 'AddIntToMessage:a2', 'HandleReceivedExplictTcpData:a6', 'AddIntToMessage:var_4', 'GenerateEncapsulationHeader:a5', 'GetUintFromMessage:a1'}, 4: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 5: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 6: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 7: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 8: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 9: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 10: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 11: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 20: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 21: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 22: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 23: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 24: {'GetUintFromMessage:var_A', 'HandleReceivedRegisterSessionCommand:var_1C', 'HandleReceivedRegisterSessionCommand:v6', 'HandleReceivedRegisterSessionCommand:a2', 'GetUintFromMessage:a1'}, 25: {'GetUintFromMessage:var_A', 'HandleReceivedRegisterSessionCommand:var_1C', 'HandleReceivedRegisterSessionCommand:v6', 'HandleReceivedRegisterSessionCommand:a2', 'GetUintFromMessage:a1'}, 26: {'GetUintFromMessage:var_A', 'HandleReceivedRegisterSessionCommand:v6', 'HandleReceivedRegisterSessionCommand:a2', 'HandleReceivedRegisterSessionCommand:var_1A', 'GetUintFromMessage:a1'}, 27: {'GetUintFromMessage:var_A', 'HandleReceivedRegisterSessionCommand:v6', 'HandleReceivedRegisterSessionCommand:a2', 'HandleReceivedRegisterSessionCommand:var_1A', 'GetUintFromMessage:a1'}}}
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (2, 3): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (0, 1): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (4, 5): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (5, 6): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (6, 7): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (7, 8): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (8, 9): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (9, 10): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (10, 11): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (20, 21): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (21, 22): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (22, 23): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (24, 25): Similarity = 1.0
2025-03-08 21:06:22,492 - my_text.py:478  - Key pair (26, 27): Similarity = 1.0
2025-03-08 21:06:22,493 - my_text.py:482  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Similarity matrix: {(2, 3): 1.0, (3, 0): 0.16666666666666666, (0, 1): 1.0, (1, 4): 0.13333333333333333, (4, 5): 1.0, (5, 6): 1.0, (6, 7): 1.0, (7, 8): 1.0, (8, 9): 1.0, (9, 10): 1.0, (10, 11): 1.0, (11, 20): 0.625, (20, 21): 1.0, (21, 22): 1.0, (22, 23): 1.0, (23, 24): 0.0, (24, 25): 1.0, (25, 26): 0.6666666666666666, (26, 27): 1.0}
2025-03-08 21:06:22,493 - my_text.py:519  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Merged queue: [(0, 1), (2, 3), (4, 5, 6, 7, 8, 9, 10, 11), (20, 21, 22, 23), (24, 25), (26, 27)]
2025-03-08 21:06:22,493 - my_text.py:525  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 used_fields: ['0,1', '2,3', '4,5,6,7,8,9,10,11', '20,21,22,23', '24,25', '26,27']
2025-03-08 21:06:22,493 - my_text.py:541  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 data_new: {(0, 1): {'CreateEncapsulationStructure': ['src', 'a3'], 'HandleReceivedExplictTcpData': ['v12', 'var_30', 'a6'], 'GenerateEncapsulationHeader': ['a1', 'a5'], 'AddIntToMessage': ['a1', 'a2', 'var_4'], 'GetUintFromMessage': ['var_A', 'a1']}, (2, 3): {'CreateEncapsulationStructure': ['src', 'a1', 'a2', 'a3', 'var_10'], 'HandleReceivedExplictTcpData': ['v12', 'a3', 'a2', 'var_58', 'v17'], 'HandleDataOnTcpSocket': ['v2', 'n', 'v23', 'a1', 'buf', 'var_478', 'v13', 'v14', 'v5', 'v11', 's'], 'GetUintFromMessage': ['var_A', 'a1']}, (4, 5, 6, 7, 8, 9, 10, 11): {'CreateEncapsulationStructure': ['src', 'a3'], 'GetUdintFromMessage': ['v2', 'a1', 'var_C']}, (20, 21, 22, 23): {'CreateEncapsulationStructure': ['src', 'a3'], 'HandleReceivedExplictTcpData': ['var_20', 'v14', 'a4'], 'GetUdintFromMessage': ['v2', 'a1', 'var_C']}, (24, 25): {'GetUintFromMessage': ['var_A', 'a1'], 'HandleReceivedRegisterSessionCommand': ['var_1C', 'v6', 'a2']}, (26, 27): {'GetUintFromMessage': ['var_A', 'a1'], 'HandleReceivedRegisterSessionCommand': ['v6', 'a2', 'var_1A']}}
2025-03-08 21:06:22,493 - my_text.py:618  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (0, 1)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: GenerateEncapsulationHeader\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GenerateEncapsulationHeader(\n        unsigned __int16 *a1,\n        __int16 a2,\n        unsigned int a3,\n        unsigned int a4,\n        __int64 a5)\n{\n  AddIntToMessage(*a1, a5);\n  AddIntToMessage(a2, a5);\n  AddDintToMessage(a3, a5);\n  AddDintToMessage(a4, a5);\n  memcpy(*(void **)(a5 + 512), a1 + 6, 8uLL);\n  *(_QWORD *)(a5 + 512) += 8LL;\n  *(_QWORD *)(a5 + 520) += 8LL;\n  return AddDintToMessage(0, a5);\n}\n\n                        \n                        Function Name: AddIntToMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall AddIntToMessage(__int16 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  **(_WORD **)(a2 + 512) = a1;\n  *(_QWORD *)(a2 + 512) += 2LL;\n  result = a2;\n  *(_QWORD *)(a2 + 520) += 2LL;\n  return result;\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (0, 1) appear to "contaminate" the global variables  and local variables src, a3, v12, var_30, a6, a1, a5, a1, a2, var_4, var_A, a1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (0, 1) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:23,424 - my_text.py:621  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Response result: ```python
int, length
```
2025-03-08 21:06:25,426 - my_text.py:618  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (2, 3)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: HandleDataOnTcpSocket\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleDataOnTcpSocket(unsigned int a1)\n{\n  int v2; // [rsp+14h] [rbp-4ACh] BYREF\n  socklen_t len; // [rsp+18h] [rbp-4A8h] BYREF\n  unsigned int SocketErrorNumber; // [rsp+1Ch] [rbp-4A4h]\n  int v5; // [rsp+20h] [rbp-4A0h]\n  unsigned int v6; // [rsp+24h] [rbp-49Ch]\n  unsigned int v7; // [rsp+28h] [rbp-498h]\n  unsigned int v8; // [rsp+2Ch] [rbp-494h]\n  unsigned int v9; // [rsp+30h] [rbp-490h]\n  unsigned int v10; // [rsp+34h] [rbp-48Ch]\n  _WORD *v11; // [rsp+38h] [rbp-488h] BYREF\n  size_t n; // [rsp+40h] [rbp-480h]\n  size_t v13; // [rsp+48h] [rbp-478h]\n  ssize_t v14; // [rsp+50h] [rbp-470h]\n  __int64 SocketTimer; // [rsp+58h] [rbp-468h]\n  __int64 ErrorMessage; // [rsp+60h] [rbp-460h]\n  __int64 v17; // [rsp+68h] [rbp-458h]\n  __int64 v18; // [rsp+70h] [rbp-450h]\n  __int64 v19; // [rsp+78h] [rbp-448h]\n  __int64 v20; // [rsp+80h] [rbp-440h]\n  __int64 v21; // [rsp+88h] [rbp-438h]\n  struct sockaddr s; // [rsp+90h] [rbp-430h] BYREF\n  char v23[520]; // [rsp+A0h] [rbp-420h] BYREF\n  size_t v24; // [rsp+2A8h] [rbp-218h]\n  __int64 buf[66]; // [rsp+2B0h] [rbp-210h] BYREF\n\n  buf[65] = __readfsqword(0x28u);\n  v2 = 0;\n  n = 512LL;\n  memset(buf, 0, 512);\n  v14 = recv(a1, buf, 4uLL, 0);\n  SocketTimer = SocketTimerArrayGetSocketTimer(&g_timestamps, 20LL, a1);\n  if ( v14 )\n  {\n    if ( v14 >= 0 )\n    {\n      v11 = (_WORD *)buf + 1;\n      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;\n      if ( v13 <= 0x1FC )\n      {\n        v14 = recv(a1, (char *)buf + 4, v13, 0);\n        if ( v14 )\n        {\n          if ( v14 >= 0 )\n          {\n            if ( v13 == (unsigned int)v14 )\n            {\n              v13 += 4LL;\n              g_current_active_tcp_socket = a1;\n              memset(&s, 0, sizeof(s));\n              len = 16;\n              if ( getpeername(a1, &s, &len) < 0 )\n              {\n                SocketErrorNumber = GetSocketErrorNumber();\n                ErrorMessage = GetErrorMessage(SocketErrorNumber);\n                FreeErrorMessage(ErrorMessage);\n              }\n              InitializeENIPMessage(v23);\n              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);\n              if ( SocketTimer )\n                SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n              g_current_active_tcp_socket = -1;\n              if ( v5 > 0 )\n              {\n                n = send(a1, v23, v24, 0x4000);\n                SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n              }\n              return 0LL;\n            }\n            else\n            {\n              return 0xFFFFFFFFLL;\n            }\n          }\n          else\n          {\n            v6 = GetSocketErrorNumber();\n            v17 = GetErrorMessage(v6);\n            if ( v6 == 11 )\n            {\n              return 0LL;\n            }\n            else\n            {\n              FreeErrorMessage(v17);\n              return 0xFFFFFFFFLL;\n            }\n          }\n        }\n        else\n        {\n          v7 = GetSocketErrorNumber();\n          v18 = GetErrorMessage(v7);\n          FreeErrorMessage(v18);\n          RemoveSocketTimerFromList(a1);\n          RemoveSession(a1);\n          return 0xFFFFFFFFLL;\n        }\n      }\n      else\n      {\n        while ( 1 )\n        {\n          v14 = recv(a1, buf, n, 0);\n          if ( !v14 )\n          {\n            v9 = GetSocketErrorNumber();\n            v20 = GetErrorMessage(v9);\n            FreeErrorMessage(v20);\n            RemoveSocketTimerFromList(a1);\n            return 0xFFFFFFFFLL;\n          }\n          if ( v14 < 0 )\n            break;\n          v13 -= v14;\n          if ( v13 <= 0x1FF && v13 )\n            n = v13;\n          if ( !v13 )\n          {\n            SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n            return 0LL;\n          }\n        }\n        v8 = GetSocketErrorNumber();\n        v19 = GetErrorMessage(v8);\n        if ( v8 == 11 )\n        {\n          return 0LL;\n        }\n        else\n        {\n          FreeErrorMessage(v19);\n          return 0xFFFFFFFFLL;\n        }\n      }\n    }\n    else\n    {\n      v10 = GetSocketErrorNumber();\n      if ( v10 == 11 )\n      {\n        return 0LL;\n      }\n      else\n      {\n        v21 = GetErrorMessage(v10);\n        FreeErrorMessage(v21);\n        return 0xFFFFFFFFLL;\n      }\n    }\n  }\n  else\n  {\n    RemoveSocketTimerFromList(a1);\n    RemoveSession(a1);\n    return 0xFFFFFFFFLL;\n  }\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (2, 3) appear to "contaminate" the global variables  and local variables src, a1, a2, a3, var_10, v12, a3, a2, var_58, v17, v2, n, v23, a1, buf, var_478, v13, v14, v5, v11, s, var_A, a1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (2, 3) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:26,608 - my_text.py:621  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Response result: ```python
int, length
```
2025-03-08 21:06:28,610 - my_text.py:618  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (4, 5, 6, 7, 8, 9, 10, 11)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: GetUdintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUdintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (4, 5, 6, 7, 8, 9, 10, 11) appear to "contaminate" the global variables  and local variables src, a3, v2, a1, var_C. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (4, 5, 6, 7, 8, 9, 10, 11) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:29,618 - my_text.py:621  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Response result: ```python
int, length
```
2025-03-08 21:06:31,620 - my_text.py:618  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (20, 21, 22, 23)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: GetUdintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUdintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (20, 21, 22, 23) appear to "contaminate" the global variables  and local variables src, a3, var_20, v14, a4, v2, a1, var_C. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (20, 21, 22, 23) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:32,428 - my_text.py:621  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Response result: ```python
int, length
```
2025-03-08 21:06:34,430 - my_text.py:618  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (24, 25)  has some situations that affect the operation of the relevant code\n\n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                        \n                        Function Name: HandleReceivedRegisterSessionCommand\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedRegisterSessionCommand(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int16 UintFromMessage; // [rsp+24h] [rbp-1Ch]\n  _BYTE v6[6]; // [rsp+26h] [rbp-1Ah]\n  int FreeSessionIndex; // [rsp+28h] [rbp-18h]\n  unsigned int v8; // [rsp+2Ch] [rbp-14h]\n  unsigned int v9; // [rsp+30h] [rbp-10h]\n  unsigned int i; // [rsp+34h] [rbp-Ch]\n  __int64 EmptySocketTimer; // [rsp+38h] [rbp-8h]\n\n  *(_WORD *)&v6[4] = 0;\n  v8 = 0;\n  v9 = 0;\n  UintFromMessage = GetUintFromMessage((_WORD **)(a2 + 32));\n  *(_DWORD *)v6 = (unsigned __int16)GetUintFromMessage((_WORD **)(a2 + 32));\n  if ( UintFromMessage != 1 || *(_WORD *)v6 )\n  {\n    v9 = 105;\n  }\n  else\n  {\n    for ( i = 0; i <= 0x13; ++i )\n    {\n      if ( a1 == g_registered_sessions[i] )\n      {\n        v8 = i + 1;\n        v9 = 1;\n        *(_DWORD *)&v6[2] = -1;\n        break;\n      }\n    }\n    if ( *(_DWORD *)&v6[2] != -1 )\n    {\n      FreeSessionIndex = GetFreeSessionIndex();\n      if ( FreeSessionIndex == -1 )\n      {\n        v9 = 2;\n      }\n      else\n      {\n        EmptySocketTimer = SocketTimerArrayGetEmptySocketTimer(&g_timestamps, 20LL);\n        SocketTimerSetSocket(EmptySocketTimer, a1);\n        SocketTimerSetLastUpdate(EmptySocketTimer, g_actual_time);\n        g_registered_sessions[FreeSessionIndex] = a1;\n        v8 = FreeSessionIndex + 1;\n        v9 = 0;\n      }\n    }\n  }\n  return EncapsulateRegisterSessionCommandResponseMessage(a2, v8, v9, a3);\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (24, 25) appear to "contaminate" the global variables  and local variables var_A, a1, var_1C, v6, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (24, 25) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:35,396 - my_text.py:621  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Response result: ```python
unsigned __int16, length
```
2025-03-08 21:06:37,397 - my_text.py:618  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (26, 27)  has some situations that affect the operation of the relevant code\n\n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                        \n                        Function Name: HandleReceivedRegisterSessionCommand\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedRegisterSessionCommand(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int16 UintFromMessage; // [rsp+24h] [rbp-1Ch]\n  _BYTE v6[6]; // [rsp+26h] [rbp-1Ah]\n  int FreeSessionIndex; // [rsp+28h] [rbp-18h]\n  unsigned int v8; // [rsp+2Ch] [rbp-14h]\n  unsigned int v9; // [rsp+30h] [rbp-10h]\n  unsigned int i; // [rsp+34h] [rbp-Ch]\n  __int64 EmptySocketTimer; // [rsp+38h] [rbp-8h]\n\n  *(_WORD *)&v6[4] = 0;\n  v8 = 0;\n  v9 = 0;\n  UintFromMessage = GetUintFromMessage((_WORD **)(a2 + 32));\n  *(_DWORD *)v6 = (unsigned __int16)GetUintFromMessage((_WORD **)(a2 + 32));\n  if ( UintFromMessage != 1 || *(_WORD *)v6 )\n  {\n    v9 = 105;\n  }\n  else\n  {\n    for ( i = 0; i <= 0x13; ++i )\n    {\n      if ( a1 == g_registered_sessions[i] )\n      {\n        v8 = i + 1;\n        v9 = 1;\n        *(_DWORD *)&v6[2] = -1;\n        break;\n      }\n    }\n    if ( *(_DWORD *)&v6[2] != -1 )\n    {\n      FreeSessionIndex = GetFreeSessionIndex();\n      if ( FreeSessionIndex == -1 )\n      {\n        v9 = 2;\n      }\n      else\n      {\n        EmptySocketTimer = SocketTimerArrayGetEmptySocketTimer(&g_timestamps, 20LL);\n        SocketTimerSetSocket(EmptySocketTimer, a1);\n        SocketTimerSetLastUpdate(EmptySocketTimer, g_actual_time);\n        g_registered_sessions[FreeSessionIndex] = a1;\n        v8 = FreeSessionIndex + 1;\n        v9 = 0;\n      }\n    }\n  }\n  return EncapsulateRegisterSessionCommandResponseMessage(a2, v8, v9, a3);\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (26, 27) appear to "contaminate" the global variables  and local variables var_A, a1, v6, a2, var_1A. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (26, 27) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:38,266 - my_text.py:621  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Response result: ```python
unsigned short, length
```
2025-03-08 21:06:40,268 - my_text.py:637  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 field_type: {'0,1': ['int'], '2,3': ['int'], '4,5,6,7,8,9,10,11': ['int'], '20,21,22,23': ['int'], '24,25': ['unsigned __int16'], '26,27': ['unsigned short']}
2025-03-08 21:06:40,268 - my_text.py:638  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 field_func: {'0,1': ['length'], '2,3': ['length'], '4,5,6,7,8,9,10,11': ['length'], '20,21,22,23': ['length'], '24,25': ['length'], '26,27': ['length']}
2025-03-08 21:06:40,268 - my_text.py:688  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': '\n            You are provided with a list named [\'_pycomm_\'] that contains visible strings. Your task is to analyze these strings. If the strings have specific meanings and can be further divided, please present the division results in a Python code block. Each part of the result should be separated by a comma.\n            The types of granularity for division include static text, command groups, strings, integers, decimals, and binary. The semantic granularity includes commands, lengths, delimiters, checksums, file names, etc.\n            Here is an example: If the input is ["POST /path HTTP/1.1"], the correct output should be\n            ```python\n            POST, command group, command\n            , string, delimiter\n            /path, string, file\n            HTTP/1.1, static text, static text\n            ```\n            If you don\'t think these strings have a specific meaning, just answer ```python ```\n            '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:42,807 - my_text.py:691  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 Response result: ```python
```python
_post, command group, command
/, string, delimiter
_path, string, file
_HTTP/1.1, static text, static text
```
```
2025-03-08 21:06:44,808 - my_text.py:712  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 field_llm_type: {'_post': {'command group'}, '/': {'string'}, '_path': {'string'}, '_HTTP/1.1': {'static text'}}
2025-03-08 21:06:44,808 - my_text.py:713  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 field_llm_Sem: {'_post': {'command'}, '/': {'delimiter'}, '_path': {'file'}, '_HTTP/1.1': {'static text'}}
2025-03-08 21:06:44,808 - my_text.py:726  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 LLM_field_string: [-1]
2025-03-08 21:06:44,808 - my_text.py:727  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 string_dict: {}
2025-03-08 21:06:44,808 - my_text.py:729  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 used_fields_llm: ['0,1', '2,3', '4,5,6,7,8,9,10,11', '20,21,22,23', '24,25', '26,27']
2025-03-08 21:06:44,808 - my_text.py:730  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 field_llm_type_llm: {'0,1': ['int'], '2,3': ['int'], '4,5,6,7,8,9,10,11': ['int'], '20,21,22,23': ['int'], '24,25': ['unsigned __int16'], '26,27': ['unsigned short']}
2025-03-08 21:06:44,808 - my_text.py:731  - 0:6500040000000000000000005f7079636f6d6d5f0000000001000000 field_llm_Sem_llm: {'0,1': ['length'], '2,3': ['length'], '4,5,6,7,8,9,10,11': ['length'], '20,21,22,23': ['length'], '24,25': ['length'], '26,27': ['length']}
2025-03-08 21:06:44,809 - my_text.py:432  - {'0': {2: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleDataOnTcpSocket': {'      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;', '            if ( v13 == (unsigned int)v14 )', '              v13 += 4LL;', '        v14 = recv(a1, (char *)buf + 4, v13, 0);', '      if ( v13 <= 0x1FC )', '              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);'}, 'HandleReceivedExplictTcpData': {'  v17 = __readfsqword(0x28u);', '  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);'}, 'CreateEncapsulationStructure': {'  if ( a2 >= 0x80000000 )', '  src = a1;', '  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);', '  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));'}, 'HandleReceivedSendRequestResponseDataCommand': {'    *(_WORD *)(a1 + 2) -= 6;', '  if ( *(_WORD *)(a1 + 2) > 5u )'}}, 3: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleDataOnTcpSocket': {'      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;', '            if ( v13 == (unsigned int)v14 )', '              v13 += 4LL;', '        v14 = recv(a1, (char *)buf + 4, v13, 0);', '      if ( v13 <= 0x1FC )', '              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);'}, 'HandleReceivedExplictTcpData': {'  v17 = __readfsqword(0x28u);', '  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);'}, 'CreateEncapsulationStructure': {'  if ( a2 >= 0x80000000 )', '  src = a1;', '  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);', '  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));'}, 'HandleReceivedSendRequestResponseDataCommand': {'    *(_WORD *)(a1 + 2) -= 6;', '  if ( *(_WORD *)(a1 + 2) > 5u )'}}, 0: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateEncapsulationStructure': {'  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);'}, 'HandleReceivedExplictTcpData': {'    if ( (unsigned __int16)v12 > 0x70u )', '    if ( (unsigned __int16)v12 >= 0x63u )', '        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);'}, 'GenerateEncapsulationHeader': {'  AddIntToMessage(*a1, a5);'}, 'AddIntToMessage': {'  **(_WORD **)(a2 + 512) = a1;'}}, 1: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateEncapsulationStructure': {'  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);'}, 'HandleReceivedExplictTcpData': {'    if ( (unsigned __int16)v12 > 0x70u )', '    if ( (unsigned __int16)v12 >= 0x63u )', '        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);'}, 'GenerateEncapsulationHeader': {'  AddIntToMessage(*a1, a5);'}, 'AddIntToMessage': {'  **(_WORD **)(a2 + 512) = a1;', '  *(_QWORD *)(a2 + 512) += 2LL;'}}, 4: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'CheckRegisteredSessions': {'  if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )'}, 'NotifyCommonPacketFormat': {'        GenerateEncapsulationHeader((unsigned __int16 *)a1, *(_QWORD *)(a3 + 520), *(_DWORD *)(a1 + 4), 0, a3);', '      CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));'}, 'NotifyMessageRouter': {'      return (unsigned int)NotifyClass(RegisteredObject[1], (__int64)&g_message_router_request, a3, a4, a5);', '  v9 = 1;'}, 'NotifyClass': {'  CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));'}, 'GenerateEncapsulationHeader': {'  AddDintToMessage(a3, a5);', '  AddIntToMessage(*a1, a5);'}, 'AddDintToMessage': {'  *(_BYTE *)(*(_QWORD *)(a2 + 512) + 3LL) = HIBYTE(a1);', '  **(_BYTE **)(a2 + 512) = a1;', '  *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;'}}, 5: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'CheckRegisteredSessions': {'  if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )'}, 'NotifyCommonPacketFormat': {'        GenerateEncapsulationHeader((unsigned __int16 *)a1, *(_QWORD *)(a3 + 520), *(_DWORD *)(a1 + 4), 0, a3);', '      CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));'}, 'NotifyMessageRouter': {'      return (unsigned int)NotifyClass(RegisteredObject[1], (__int64)&g_message_router_request, a3, a4, a5);', '  v9 = 1;'}, 'NotifyClass': {'  CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));'}, 'GenerateEncapsulationHeader': {'  AddDintToMessage(a3, a5);', '  AddIntToMessage(*a1, a5);'}, 'AddDintToMessage': {'  *(_BYTE *)(*(_QWORD *)(a2 + 512) + 3LL) = HIBYTE(a1);', '  **(_BYTE **)(a2 + 512) = a1;', '  *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;'}}, 6: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'CheckRegisteredSessions': {'  if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )'}, 'NotifyCommonPacketFormat': {'        GenerateEncapsulationHeader((unsigned __int16 *)a1, *(_QWORD *)(a3 + 520), *(_DWORD *)(a1 + 4), 0, a3);', '      CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));'}, 'NotifyMessageRouter': {'      return (unsigned int)NotifyClass(RegisteredObject[1], (__int64)&g_message_router_request, a3, a4, a5);', '  v9 = 1;'}, 'NotifyClass': {'  CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));'}, 'GenerateEncapsulationHeader': {'  AddDintToMessage(a3, a5);', '  AddIntToMessage(*a1, a5);'}, 'AddDintToMessage': {'  *(_BYTE *)(*(_QWORD *)(a2 + 512) + 3LL) = HIBYTE(a1);', '  **(_BYTE **)(a2 + 512) = a1;', '  *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;'}}, 7: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'CheckRegisteredSessions': {'  if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )'}, 'NotifyCommonPacketFormat': {'        GenerateEncapsulationHeader((unsigned __int16 *)a1, *(_QWORD *)(a3 + 520), *(_DWORD *)(a1 + 4), 0, a3);', '      CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));'}, 'NotifyMessageRouter': {'      return (unsigned int)NotifyClass(RegisteredObject[1], (__int64)&g_message_router_request, a3, a4, a5);', '  v9 = 1;'}, 'NotifyClass': {'  CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));'}, 'GenerateEncapsulationHeader': {'  AddDintToMessage(a3, a5);', '  AddIntToMessage(*a1, a5);'}, 'AddDintToMessage': {'  *(_BYTE *)(*(_QWORD *)(a2 + 512) + 3LL) = HIBYTE(a1);', '  **(_BYTE **)(a2 + 512) = a1;', '  *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;'}}, 8: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 9: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 10: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 11: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 20: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 21: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 22: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 23: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 24: {'GetDintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}}, 25: {'GetDintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}}, 26: {'GetDintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}}, 27: {'GetDintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}}, 28: {'GetIntFromMessage': {'  return (unsigned __int16)*(*a1)++;'}}, 29: {'GetIntFromMessage': {'  return (unsigned __int16)*(*a1)++;'}}, 30: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateCommonPacketFormatStructure': {'  if ( *(_WORD *)a3 )', '    if ( *(_WORD *)a3 <= 2u )', '  if ( *(_WORD *)a3 > 1u )', '  *(_WORD *)a3 = UintFromMessage;', '  UintFromMessage = GetUintFromMessage(&v11);', '        v9 = v13;', '  if ( *(_WORD *)a3 <= 3u )', '    v13 = *(_WORD *)a3 - 2;', '      if ( v13 <= 2u )'}, 'EncodeItemCount': {'  return AddIntToMessage(*a1, a2);'}, 'AddIntToMessage': {'  **(_WORD **)(a2 + 512) = a1;'}}, 31: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateCommonPacketFormatStructure': {'  if ( *(_WORD *)a3 )', '    if ( *(_WORD *)a3 <= 2u )', '  if ( *(_WORD *)a3 > 1u )', '  *(_WORD *)a3 = UintFromMessage;', '  UintFromMessage = GetUintFromMessage(&v11);', '        v9 = v13;', '  if ( *(_WORD *)a3 <= 3u )', '    v13 = *(_WORD *)a3 - 2;', '      if ( v13 <= 2u )'}, 'EncodeItemCount': {'  return AddIntToMessage(*a1, a2);'}, 'AddIntToMessage': {'  **(_WORD **)(a2 + 512) = a1;', '  *(_QWORD *)(a2 + 512) += 2LL;'}}, 32: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateCommonPacketFormatStructure': {'    *(_WORD *)(a3 + 4) = GetUintFromMessage(&v11);'}, 'NotifyCommonPacketFormat': {'    if ( word_23484 || word_23490 != 178 )'}, 'AssembleLinearMessage': {'  v3 = (unsigned __int16)a2[2];', '  if ( v3 == 32770 )', '    if ( (unsigned __int16)a2[2] > 0x8002u )'}}, 33: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateCommonPacketFormatStructure': {'    *(_WORD *)(a3 + 4) = GetUintFromMessage(&v11);'}, 'NotifyCommonPacketFormat': {'    if ( word_23484 || word_23490 != 178 )'}, 'AssembleLinearMessage': {'  v3 = (unsigned __int16)a2[2];', '  if ( v3 == 32770 )', '    if ( (unsigned __int16)a2[2] > 0x8002u )'}}, 34: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateCommonPacketFormatStructure': {'    if ( *(_WORD *)(a3 + 6) == 8 )', '    if ( *(_WORD *)(a3 + 6) > 3u )', '    *(_WORD *)(a3 + 6) = GetUintFromMessage(&v11);'}}, 35: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateCommonPacketFormatStructure': {'    if ( *(_WORD *)(a3 + 6) == 8 )', '    if ( *(_WORD *)(a3 + 6) > 3u )', '    *(_WORD *)(a3 + 6) = GetUintFromMessage(&v11);'}}, 36: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateCommonPacketFormatStructure': {'    *(_WORD *)(a3 + 16) = GetUintFromMessage(&v11);'}, 'NotifyCommonPacketFormat': {'    if ( word_23484 || word_23490 != 178 )'}, 'AssembleLinearMessage': {'      if ( a2[8] == 177 )', '  if ( a2[8] == 178 || a2[8] == 177 )'}, 'EncodeDataItemType': {'  return AddIntToMessage(*(_WORD *)(a1 + 16), a2);'}, 'AddIntToMessage': {'  **(_WORD **)(a2 + 512) = a1;'}}, 37: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateCommonPacketFormatStructure': {'    *(_WORD *)(a3 + 16) = GetUintFromMessage(&v11);'}, 'NotifyCommonPacketFormat': {'    if ( word_23484 || word_23490 != 178 )'}, 'AssembleLinearMessage': {'      if ( a2[8] == 177 )', '  if ( a2[8] == 178 || a2[8] == 177 )'}, 'EncodeDataItemType': {'  return AddIntToMessage(*(_WORD *)(a1 + 16), a2);'}, 'AddIntToMessage': {'  **(_WORD **)(a2 + 512) = a1;', '  *(_QWORD *)(a2 + 512) += 2LL;'}}, 38: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateCommonPacketFormatStructure': {'    v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));', '    *(_WORD *)(a3 + 18) = GetUintFromMessage(&v11);', '    if ( a2 < (unsigned __int64)*(unsigned __int16 *)(a3 + 18) + v14 + 4 )', '    v14 += *(unsigned __int16 *)(a3 + 18) + 4;'}, 'NotifyCommonPacketFormat': {'      CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));'}, 'NotifyMessageRouter': {'  v9 = 1;', '  MessageRouterRequestStructure = CreateMessageRouterRequestStructure(a1, a2, (__int64)&g_message_router_request);'}, 'CreateMessageRouterRequestStructure': {'  v5 = a2 - 1;', '  v6 = a1;', '  v6 = (_WORD *)((char *)v6 + 1);', '  *(_QWORD *)(a3 + 16) = v5 - v8[0];', '  v8[1] = __readfsqword(0x28u);', '  if ( (unsigned __int64)v5 < v8[0] )'}}, 39: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateCommonPacketFormatStructure': {'    v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));', '    *(_WORD *)(a3 + 18) = GetUintFromMessage(&v11);', '    if ( a2 < (unsigned __int64)*(unsigned __int16 *)(a3 + 18) + v14 + 4 )', '    v14 += *(unsigned __int16 *)(a3 + 18) + 4;'}, 'NotifyCommonPacketFormat': {'      CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));'}, 'NotifyMessageRouter': {'  v9 = 1;', '  MessageRouterRequestStructure = CreateMessageRouterRequestStructure(a1, a2, (__int64)&g_message_router_request);'}, 'CreateMessageRouterRequestStructure': {'  v5 = a2 - 1;', '  v6 = a1;', '  v6 = (_WORD *)((char *)v6 + 1);', '  *(_QWORD *)(a3 + 16) = v5 - v8[0];', '  v8[1] = __readfsqword(0x28u);', '  if ( (unsigned __int64)v5 < v8[0] )'}}, 40: {'CreateMessageRouterRequestStructure': {'  *(_BYTE *)a3 = *a1;'}, 'NotifyClass': {'  *a3 = *(_BYTE *)a2 | 0x80;', '        if ( *(_BYTE *)a2 == *(_BYTE *)v9 )'}, 'EncodeReplyService': {'  return AddSintToMessage(*a1, a2);'}, 'AddSintToMessage': {'  *(_BYTE *)(*(_QWORD *)(a2 + 512))++ = a1;'}}, 41: {'DecodePaddedEPath': {'    if ( v5 < *a1 )', '  *a1 = *(_BYTE *)v6[0]++;'}}, 42: {'DecodePaddedEPath': {'        ++v5;', '      if ( (*(_BYTE *)v6[0] & 7) == 7 )'}}, 43: {'DecodePaddedEPath': {'            *((_WORD *)a1 + 1) = *((unsigned __int8 *)v6[0]++ + 1);'}, 'NotifyMessageRouter': {'    *a3 = g_message_router_request | 0x80;', '    RegisteredObject = GetRegisteredObject((unsigned __int16)word_21CC4);'}, 'GetRegisteredObject': {'    if ( a1 == *(_DWORD *)(i[1] + 40LL) )', '  for ( i = (_QWORD *)g_first_object; i; i = (_QWORD *)*i )'}}, 44: {'DecodePaddedEPath': {'        ++v5;', '      if ( (*(_BYTE *)v6[0] & 7) == 7 )'}}, 45: {'DecodePaddedEPath': {'            *((_WORD *)a1 + 2) = *((unsigned __int8 *)v6[0]++ + 1);'}, 'NotifyClass': {'  CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));'}, 'GetCipInstance': {'  if ( !a2 )', '    if ( a2 == *(_WORD *)i )'}}}}
2025-03-08 21:06:44,810 - my_text.py:443  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Updated c_taint_c_dict: {'0': {2: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleDataOnTcpSocket': {'v14', 'v2', 'if', '4', 'HandleReceivedExplictTcpData', 'v5', 'unsigned', 'recv', '20', '0', 'GetUintFromMessage', 'v13', 's', 'buf', '__int64', 'a1', 'v11', 'v23', 'char', '0x1FC', '4LL', 'int', '__int16'}, 'HandleReceivedExplictTcpData': {'a3', '__int64', 'v17', '0x28u', 'CreateEncapsulationStructure', 'a2', 'EncapsulationStructure', '__readfsqword', 'v12'}, 'CreateEncapsulationStructure': {'a3', 'unsigned', 'src', '24', 'return', 'a2', 'if', '0x80000000', 'a1', '_WORD', 'int', '2', 'GetUintFromMessage', '__int16'}, 'HandleReceivedSendRequestResponseDataCommand': {'6', 'a1', 'if', '_WORD', '5u', '2'}}, 3: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleDataOnTcpSocket': {'v14', 'v2', 'if', '4', 'HandleReceivedExplictTcpData', 'v5', 'unsigned', 'recv', '20', '0', 'GetUintFromMessage', 'v13', 's', 'buf', '__int64', 'a1', 'v11', 'v23', 'char', '0x1FC', '4LL', 'int', '__int16'}, 'HandleReceivedExplictTcpData': {'a3', '__int64', 'v17', '0x28u', 'CreateEncapsulationStructure', 'a2', 'EncapsulationStructure', '__readfsqword', 'v12'}, 'CreateEncapsulationStructure': {'a3', 'unsigned', 'src', '24', 'return', 'a2', 'if', '0x80000000', 'a1', '_WORD', 'int', '2', 'GetUintFromMessage', '__int16'}, 'HandleReceivedSendRequestResponseDataCommand': {'6', 'a1', 'if', '_WORD', '5u', '2'}}, 0: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateEncapsulationStructure': {'src', '_WORD', 'a3', 'GetUintFromMessage'}, 'HandleReceivedExplictTcpData': {'unsigned', '0x63u', 'HandleReceivedInvalidCommand', 'return', 'a6', 'if', 'int', 'v12', '0x70u', '__int16'}, 'GenerateEncapsulationHeader': {'a5', 'a1', 'AddIntToMessage'}, 'AddIntToMessage': {'a2', '_WORD', 'a1', '512'}}, 1: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateEncapsulationStructure': {'src', '_WORD', 'a3', 'GetUintFromMessage'}, 'HandleReceivedExplictTcpData': {'unsigned', '0x63u', 'HandleReceivedInvalidCommand', 'return', 'a6', 'if', 'int', 'v12', '0x70u', '__int16'}, 'GenerateEncapsulationHeader': {'a5', 'a1', 'AddIntToMessage'}, 'AddIntToMessage': {'2LL', '_QWORD', '512', 'a2', 'a1', '_WORD'}}, 4: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}, 'CheckRegisteredSessions': {'4', '_DWORD', 'g_registered_sessions', 'a1', 'if', '0x14u', '1'}, 'NotifyCommonPacketFormat': {'4', 'GenerateEncapsulationHeader', 'unsigned', 'a3', 'word_23492', '_DWORD', 'CommonPacketFormatStructure', 'qword_23498', 'v7', '_QWORD', 'a1', '0', 'a2', '520', 'NotifyMessageRouter', '__int16'}, 'NotifyMessageRouter': {'unsigned', '__int64', 'a3', 'RegisteredObject', 'g_message_router_request', 'return', 'NotifyClass', 'a5', 'v9', 'int', 'a4', '1'}, 'NotifyClass': {'6', 'CipInstance', 'GetCipInstance', 'a1', 'a2', '_WORD'}, 'GenerateEncapsulationHeader': {'a3', 'AddIntToMessage', 'AddDintToMessage', 'a5', 'a1'}, 'AddDintToMessage': {'HIBYTE', '1LL', '_QWORD', '512', 'a2', 'a1', '_WORD', '3LL', '8', '_BYTE'}}, 5: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}, 'CheckRegisteredSessions': {'4', '_DWORD', 'g_registered_sessions', 'a1', 'if', '0x14u', '1'}, 'NotifyCommonPacketFormat': {'4', 'GenerateEncapsulationHeader', 'unsigned', 'a3', 'word_23492', '_DWORD', 'CommonPacketFormatStructure', 'qword_23498', 'v7', '_QWORD', 'a1', '0', 'a2', '520', 'NotifyMessageRouter', '__int16'}, 'NotifyMessageRouter': {'unsigned', '__int64', 'a3', 'RegisteredObject', 'g_message_router_request', 'return', 'NotifyClass', 'a5', 'v9', 'int', 'a4', '1'}, 'NotifyClass': {'6', 'CipInstance', 'GetCipInstance', 'a1', 'a2', '_WORD'}, 'GenerateEncapsulationHeader': {'a3', 'AddIntToMessage', 'AddDintToMessage', 'a5', 'a1'}, 'AddDintToMessage': {'HIBYTE', '1LL', '_QWORD', '512', 'a2', 'a1', '_WORD', '3LL', '8', '_BYTE'}}, 6: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}, 'CheckRegisteredSessions': {'4', '_DWORD', 'g_registered_sessions', 'a1', 'if', '0x14u', '1'}, 'NotifyCommonPacketFormat': {'4', 'GenerateEncapsulationHeader', 'unsigned', 'a3', 'word_23492', '_DWORD', 'CommonPacketFormatStructure', 'qword_23498', 'v7', '_QWORD', 'a1', '0', 'a2', '520', 'NotifyMessageRouter', '__int16'}, 'NotifyMessageRouter': {'unsigned', '__int64', 'a3', 'RegisteredObject', 'g_message_router_request', 'return', 'NotifyClass', 'a5', 'v9', 'int', 'a4', '1'}, 'NotifyClass': {'6', 'CipInstance', 'GetCipInstance', 'a1', 'a2', '_WORD'}, 'GenerateEncapsulationHeader': {'a3', 'AddIntToMessage', 'AddDintToMessage', 'a5', 'a1'}, 'AddDintToMessage': {'HIBYTE', '1LL', '_QWORD', '512', 'a2', 'a1', '_WORD', '3LL', '8', '_BYTE'}}, 7: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}, 'CheckRegisteredSessions': {'4', '_DWORD', 'g_registered_sessions', 'a1', 'if', '0x14u', '1'}, 'NotifyCommonPacketFormat': {'4', 'GenerateEncapsulationHeader', 'unsigned', 'a3', 'word_23492', '_DWORD', 'CommonPacketFormatStructure', 'qword_23498', 'v7', '_QWORD', 'a1', '0', 'a2', '520', 'NotifyMessageRouter', '__int16'}, 'NotifyMessageRouter': {'unsigned', '__int64', 'a3', 'RegisteredObject', 'g_message_router_request', 'return', 'NotifyClass', 'a5', 'v9', 'int', 'a4', '1'}, 'NotifyClass': {'6', 'CipInstance', 'GetCipInstance', 'a1', 'a2', '_WORD'}, 'GenerateEncapsulationHeader': {'a3', 'AddIntToMessage', 'AddDintToMessage', 'a5', 'a1'}, 'AddDintToMessage': {'HIBYTE', '1LL', '_QWORD', '512', 'a2', 'a1', '_WORD', '3LL', '8', '_BYTE'}}, 8: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 9: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 10: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 11: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 20: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 21: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 22: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 23: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 24: {'GetDintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}}, 25: {'GetDintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}}, 26: {'GetDintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}}, 27: {'GetDintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}}, 28: {'GetIntFromMessage': {'a1', 'return', 'unsigned', '__int16'}}, 29: {'GetIntFromMessage': {'a1', 'return', 'unsigned', '__int16'}}, 30: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateCommonPacketFormatStructure': {'1u', 'v13', 'GetUintFromMessage', 'a3', 'UintFromMessage', 'if', '_WORD', 'v11', 'v9', '3u', '2', '2u'}, 'EncodeItemCount': {'a1', 'return', 'a2', 'AddIntToMessage'}, 'AddIntToMessage': {'a2', '_WORD', 'a1', '512'}}, 31: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateCommonPacketFormatStructure': {'1u', 'v13', 'GetUintFromMessage', 'a3', 'UintFromMessage', 'if', '_WORD', 'v11', 'v9', '3u', '2', '2u'}, 'EncodeItemCount': {'a1', 'return', 'a2', 'AddIntToMessage'}, 'AddIntToMessage': {'2LL', '_QWORD', '512', 'a2', 'a1', '_WORD'}}, 32: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateCommonPacketFormatStructure': {'4', 'a3', '_WORD', 'v11', 'GetUintFromMessage'}, 'NotifyCommonPacketFormat': {'word_23490', 'if', '178', 'word_23484'}, 'AssembleLinearMessage': {'v3', 'unsigned', '32770', '0x8002u', 'a2', 'if', '2', '__int16'}}, 33: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateCommonPacketFormatStructure': {'4', 'a3', '_WORD', 'v11', 'GetUintFromMessage'}, 'NotifyCommonPacketFormat': {'word_23490', 'if', '178', 'word_23484'}, 'AssembleLinearMessage': {'v3', 'unsigned', '32770', '0x8002u', 'a2', 'if', '2', '__int16'}}, 34: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateCommonPacketFormatStructure': {'6', 'a3', 'if', '_WORD', 'v11', '3u', 'GetUintFromMessage', '8'}}, 35: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateCommonPacketFormatStructure': {'6', 'a3', 'if', '_WORD', 'v11', '3u', 'GetUintFromMessage', '8'}}, 36: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateCommonPacketFormatStructure': {'a3', '16', '_WORD', 'v11', 'GetUintFromMessage'}, 'NotifyCommonPacketFormat': {'word_23490', 'if', '178', 'word_23484'}, 'AssembleLinearMessage': {'177', 'a2', 'if', '178', '8'}, 'EncodeDataItemType': {'16', 'return', 'AddIntToMessage', 'a1', 'a2', '_WORD'}, 'AddIntToMessage': {'a2', '_WORD', 'a1', '512'}}, 37: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateCommonPacketFormatStructure': {'a3', '16', '_WORD', 'v11', 'GetUintFromMessage'}, 'NotifyCommonPacketFormat': {'word_23490', 'if', '178', 'word_23484'}, 'AssembleLinearMessage': {'177', 'a2', 'if', '178', '8'}, 'EncodeDataItemType': {'16', 'return', 'AddIntToMessage', 'a1', 'a2', '_WORD'}, 'AddIntToMessage': {'2LL', '_QWORD', '512', 'a2', 'a1', '_WORD'}}, 38: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateCommonPacketFormatStructure': {'4', 'char', 'unsigned', 'a3', '__int64', 'v14', 'a2', 'if', 'v11', '_WORD', '18', 'GetUintFromMessage', '__int16'}, 'NotifyCommonPacketFormat': {'4', 'word_23492', '_DWORD', 'qword_23498', 'v7', 'CommonPacketFormatStructure', 'a2', 'a1', 'NotifyMessageRouter'}, 'NotifyMessageRouter': {'CreateMessageRouterRequestStructure', '__int64', 'g_message_router_request', 'a1', 'v9', 'a2', 'MessageRouterRequestStructure', '1'}, 'CreateMessageRouterRequestStructure': {'v6', 'char', 'v5', 'a3', '16', 'unsigned', '__int64', '_QWORD', '0x28u', 'a2', 'a1', '_WORD', 'v8', '0', '__readfsqword', 'if', '1'}}, 39: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateCommonPacketFormatStructure': {'4', 'char', 'unsigned', 'a3', '__int64', 'v14', 'a2', 'if', 'v11', '_WORD', '18', 'GetUintFromMessage', '__int16'}, 'NotifyCommonPacketFormat': {'4', 'word_23492', '_DWORD', 'qword_23498', 'v7', 'CommonPacketFormatStructure', 'a2', 'a1', 'NotifyMessageRouter'}, 'NotifyMessageRouter': {'CreateMessageRouterRequestStructure', '__int64', 'g_message_router_request', 'a1', 'v9', 'a2', 'MessageRouterRequestStructure', '1'}, 'CreateMessageRouterRequestStructure': {'v6', 'char', 'v5', 'a3', '16', 'unsigned', '__int64', '_QWORD', '0x28u', 'a2', 'a1', '_WORD', 'v8', '0', '__readfsqword', 'if', '1'}}, 40: {'CreateMessageRouterRequestStructure': {'a1', 'a3', '_BYTE'}, 'NotifyClass': {'a3', '0x80', 'a2', 'if', 'v9', '_BYTE'}, 'EncodeReplyService': {'AddSintToMessage', 'a2', 'return', 'a1'}, 'AddSintToMessage': {'_QWORD', '512', 'a2', 'a1', '_BYTE'}}, 41: {'DecodePaddedEPath': {'v6', 'v5', 'a1', 'if', '0', '_BYTE'}}, 42: {'DecodePaddedEPath': {'v6', 'v5', '7', '0', 'if', '_BYTE'}}, 43: {'DecodePaddedEPath': {'v6', 'unsigned', 'a1', '0', '_WORD', '__int8', '1'}, 'NotifyMessageRouter': {'GetRegisteredObject', 'a3', 'unsigned', 'g_message_router_request', 'RegisteredObject', '0x80', 'word_21CC4', '__int16'}, 'GetRegisteredObject': {'g_first_object', '40LL', '_DWORD', 'i', '_QWORD', 'a1', 'if', 'for', '1'}}, 44: {'DecodePaddedEPath': {'v6', 'v5', '7', '0', 'if', '_BYTE'}}, 45: {'DecodePaddedEPath': {'v6', 'unsigned', 'a1', '0', '_WORD', '__int8', '2', '1'}, 'NotifyClass': {'6', 'CipInstance', 'GetCipInstance', 'a1', 'a2', '_WORD'}, 'GetCipInstance': {'i', 'a2', 'if', '_WORD'}}}}
2025-03-08 21:06:44,812 - my_text.py:460  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 var_flow: {'0': {2: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'HandleDataOnTcpSocket:v2', 'HandleDataOnTcpSocket:n', 'HandleDataOnTcpSocket:v23', 'HandleDataOnTcpSocket:a1', 'HandleDataOnTcpSocket:buf', 'CreateEncapsulationStructure:a1', 'HandleDataOnTcpSocket:var_478', 'GetUintFromMessage:var_A', 'HandleReceivedSendRequestResponseDataCommand:a1', 'CreateEncapsulationStructure:a2', 'GetUintFromMessage:a1', 'HandleDataOnTcpSocket:v13', 'HandleDataOnTcpSocket:v14', 'HandleReceivedExplictTcpData:a3', 'HandleDataOnTcpSocket:v5', 'HandleDataOnTcpSocket:v11', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a2', 'HandleReceivedExplictTcpData:var_58', 'CreateEncapsulationStructure:var_10', 'HandleDataOnTcpSocket:s', 'HandleReceivedExplictTcpData:v17'}, 3: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'HandleDataOnTcpSocket:v2', 'HandleDataOnTcpSocket:n', 'HandleDataOnTcpSocket:v23', 'HandleDataOnTcpSocket:a1', 'HandleDataOnTcpSocket:buf', 'CreateEncapsulationStructure:a1', 'HandleDataOnTcpSocket:var_478', 'GetUintFromMessage:var_A', 'HandleReceivedSendRequestResponseDataCommand:a1', 'CreateEncapsulationStructure:a2', 'GetUintFromMessage:a1', 'HandleDataOnTcpSocket:v13', 'HandleDataOnTcpSocket:v14', 'HandleReceivedExplictTcpData:a3', 'HandleDataOnTcpSocket:v5', 'HandleDataOnTcpSocket:v11', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a2', 'HandleReceivedExplictTcpData:var_58', 'CreateEncapsulationStructure:var_10', 'HandleDataOnTcpSocket:s', 'HandleReceivedExplictTcpData:v17'}, 0: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'CreateEncapsulationStructure:a3', 'GenerateEncapsulationHeader:a1', 'GetUintFromMessage:var_A', 'AddIntToMessage:a1', 'HandleReceivedExplictTcpData:var_30', 'AddIntToMessage:a2', 'HandleReceivedExplictTcpData:a6', 'AddIntToMessage:var_4', 'GenerateEncapsulationHeader:a5', 'GetUintFromMessage:a1'}, 1: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'CreateEncapsulationStructure:a3', 'GenerateEncapsulationHeader:a1', 'GetUintFromMessage:var_A', 'AddIntToMessage:a1', 'HandleReceivedExplictTcpData:var_30', 'AddIntToMessage:a2', 'HandleReceivedExplictTcpData:a6', 'AddIntToMessage:var_4', 'GenerateEncapsulationHeader:a5', 'GetUintFromMessage:a1'}, 4: {'CreateEncapsulationStructure:src', 'NotifyClass:a2', 'NotifyCommonPacketFormat:a3', 'NotifyCommonPacketFormat:v7', 'GetUdintFromMessage:v2', 'GenerateEncapsulationHeader:a3', 'CheckRegisteredSessions:a1', 'GenerateEncapsulationHeader:var_14', 'NotifyMessageRouter:a5', 'global:g_registered_sessions', 'global:word_23492', 'NotifyMessageRouter:var_20', 'NotifyMessageRouter:v9', 'NotifyClass:a1', 'NotifyClass:var_44', 'GenerateEncapsulationHeader:a1', 'global:g_message_router_request', 'GetUdintFromMessage:a1', 'NotifyMessageRouter:a3', 'AddDintToMessage:var_4', 'AddDintToMessage:a1', 'CreateEncapsulationStructure:a3', 'NotifyMessageRouter:a4', 'NotifyCommonPacketFormat:a2', 'global:qword_23498', 'GenerateEncapsulationHeader:a5', 'AddDintToMessage:a2', 'NotifyCommonPacketFormat:a1', 'GetUdintFromMessage:var_C'}, 5: {'CreateEncapsulationStructure:src', 'NotifyClass:a2', 'NotifyCommonPacketFormat:a3', 'NotifyCommonPacketFormat:v7', 'GetUdintFromMessage:v2', 'GenerateEncapsulationHeader:a3', 'CheckRegisteredSessions:a1', 'GenerateEncapsulationHeader:var_14', 'NotifyMessageRouter:a5', 'global:g_registered_sessions', 'global:word_23492', 'NotifyMessageRouter:var_20', 'NotifyMessageRouter:v9', 'NotifyClass:a1', 'NotifyClass:var_44', 'GenerateEncapsulationHeader:a1', 'global:g_message_router_request', 'GetUdintFromMessage:a1', 'NotifyMessageRouter:a3', 'AddDintToMessage:var_4', 'AddDintToMessage:a1', 'CreateEncapsulationStructure:a3', 'NotifyMessageRouter:a4', 'NotifyCommonPacketFormat:a2', 'global:qword_23498', 'GenerateEncapsulationHeader:a5', 'AddDintToMessage:a2', 'NotifyCommonPacketFormat:a1', 'GetUdintFromMessage:var_C'}, 6: {'CreateEncapsulationStructure:src', 'NotifyClass:a2', 'NotifyCommonPacketFormat:a3', 'NotifyCommonPacketFormat:v7', 'GetUdintFromMessage:v2', 'GenerateEncapsulationHeader:a3', 'CheckRegisteredSessions:a1', 'GenerateEncapsulationHeader:var_14', 'NotifyMessageRouter:a5', 'global:g_registered_sessions', 'global:word_23492', 'NotifyMessageRouter:var_20', 'NotifyMessageRouter:v9', 'NotifyClass:a1', 'NotifyClass:var_44', 'GenerateEncapsulationHeader:a1', 'global:g_message_router_request', 'GetUdintFromMessage:a1', 'NotifyMessageRouter:a3', 'AddDintToMessage:var_4', 'AddDintToMessage:a1', 'CreateEncapsulationStructure:a3', 'NotifyMessageRouter:a4', 'NotifyCommonPacketFormat:a2', 'global:qword_23498', 'GenerateEncapsulationHeader:a5', 'AddDintToMessage:a2', 'NotifyCommonPacketFormat:a1', 'GetUdintFromMessage:var_C'}, 7: {'CreateEncapsulationStructure:src', 'NotifyClass:a2', 'NotifyCommonPacketFormat:a3', 'NotifyCommonPacketFormat:v7', 'GetUdintFromMessage:v2', 'GenerateEncapsulationHeader:a3', 'CheckRegisteredSessions:a1', 'GenerateEncapsulationHeader:var_14', 'NotifyMessageRouter:a5', 'global:g_registered_sessions', 'global:word_23492', 'NotifyMessageRouter:var_20', 'NotifyMessageRouter:v9', 'NotifyClass:a1', 'NotifyClass:var_44', 'GenerateEncapsulationHeader:a1', 'global:g_message_router_request', 'GetUdintFromMessage:a1', 'NotifyMessageRouter:a3', 'AddDintToMessage:var_4', 'AddDintToMessage:a1', 'CreateEncapsulationStructure:a3', 'NotifyMessageRouter:a4', 'NotifyCommonPacketFormat:a2', 'global:qword_23498', 'GenerateEncapsulationHeader:a5', 'AddDintToMessage:a2', 'NotifyCommonPacketFormat:a1', 'GetUdintFromMessage:var_C'}, 8: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 9: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 10: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 11: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 20: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 21: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 22: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 23: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 24: {'GetDintFromMessage:a1', 'GetDintFromMessage:var_C', 'GetDintFromMessage:v2'}, 25: {'GetDintFromMessage:a1', 'GetDintFromMessage:var_C', 'GetDintFromMessage:v2'}, 26: {'GetDintFromMessage:a1', 'GetDintFromMessage:var_C', 'GetDintFromMessage:v2'}, 27: {'GetDintFromMessage:a1', 'GetDintFromMessage:var_C', 'GetDintFromMessage:v2'}, 28: {'GetIntFromMessage:a1', 'GetIntFromMessage:var_A'}, 29: {'GetIntFromMessage:a1', 'GetIntFromMessage:var_A'}, 30: {'CreateCommonPacketFormatStructure:v11', 'GetUintFromMessage:var_A', 'EncodeItemCount:a1', 'EncodeItemCount:a2', 'AddIntToMessage:a1', 'CreateCommonPacketFormatStructure:v9', 'CreateCommonPacketFormatStructure:a3', 'AddIntToMessage:a2', 'CreateCommonPacketFormatStructure:var_1C', 'CreateCommonPacketFormatStructure:var_1A', 'AddIntToMessage:var_4', 'CreateCommonPacketFormatStructure:v13', 'GetUintFromMessage:a1'}, 31: {'CreateCommonPacketFormatStructure:v11', 'GetUintFromMessage:var_A', 'EncodeItemCount:a1', 'EncodeItemCount:a2', 'AddIntToMessage:a1', 'CreateCommonPacketFormatStructure:v9', 'CreateCommonPacketFormatStructure:a3', 'AddIntToMessage:a2', 'CreateCommonPacketFormatStructure:var_1C', 'CreateCommonPacketFormatStructure:var_1A', 'AddIntToMessage:var_4', 'CreateCommonPacketFormatStructure:v13', 'GetUintFromMessage:a1'}, 32: {'CreateCommonPacketFormatStructure:v11', 'GetUintFromMessage:var_A', 'CreateCommonPacketFormatStructure:a3', 'AssembleLinearMessage:v3', 'global:word_23484', 'global:word_23490', 'AssembleLinearMessage:a2', 'GetUintFromMessage:a1'}, 33: {'CreateCommonPacketFormatStructure:v11', 'GetUintFromMessage:var_A', 'CreateCommonPacketFormatStructure:a3', 'AssembleLinearMessage:v3', 'global:word_23484', 'global:word_23490', 'AssembleLinearMessage:a2', 'GetUintFromMessage:a1'}, 34: {'GetUintFromMessage:var_A', 'CreateCommonPacketFormatStructure:a3', 'CreateCommonPacketFormatStructure:v11', 'GetUintFromMessage:a1'}, 35: {'GetUintFromMessage:var_A', 'CreateCommonPacketFormatStructure:a3', 'CreateCommonPacketFormatStructure:v11', 'GetUintFromMessage:a1'}, 36: {'CreateCommonPacketFormatStructure:v11', 'GetUintFromMessage:var_A', 'AddIntToMessage:a1', 'CreateCommonPacketFormatStructure:a3', 'AddIntToMessage:a2', 'global:word_23484', 'global:word_23490', 'EncodeDataItemType:a2', 'AddIntToMessage:var_4', 'AssembleLinearMessage:a2', 'EncodeDataItemType:a1', 'GetUintFromMessage:a1'}, 37: {'CreateCommonPacketFormatStructure:v11', 'GetUintFromMessage:var_A', 'AddIntToMessage:a1', 'CreateCommonPacketFormatStructure:a3', 'AddIntToMessage:a2', 'global:word_23484', 'global:word_23490', 'EncodeDataItemType:a2', 'AddIntToMessage:var_4', 'AssembleLinearMessage:a2', 'EncodeDataItemType:a1', 'GetUintFromMessage:a1'}, 38: {'CreateCommonPacketFormatStructure:a2', 'CreateCommonPacketFormatStructure:v11', 'CreateMessageRouterRequestStructure:a1', 'NotifyCommonPacketFormat:v7', 'CreateMessageRouterRequestStructure:v6', 'GetUintFromMessage:var_A', 'NotifyMessageRouter:var_1C', 'global:word_23492', 'CreateCommonPacketFormatStructure:var_18', 'CreateCommonPacketFormatStructure:a3', 'NotifyMessageRouter:v9', 'GetUintFromMessage:a1', 'CreateMessageRouterRequestStructure:v8', 'global:g_message_router_request', 'CreateMessageRouterRequestStructure:v5', 'NotifyMessageRouter:a1', 'NotifyMessageRouter:a2', 'CreateMessageRouterRequestStructure:a3', 'NotifyCommonPacketFormat:a2', 'global:qword_23498', 'CreateCommonPacketFormatStructure:v14', 'CreateCommonPacketFormatStructure:var_28', 'CreateMessageRouterRequestStructure:a2', 'CreateMessageRouterRequestStructure:var_2C', 'NotifyCommonPacketFormat:a1'}, 39: {'CreateCommonPacketFormatStructure:a2', 'CreateCommonPacketFormatStructure:v11', 'CreateMessageRouterRequestStructure:a1', 'NotifyCommonPacketFormat:v7', 'CreateMessageRouterRequestStructure:v6', 'GetUintFromMessage:var_A', 'NotifyMessageRouter:var_1C', 'global:word_23492', 'CreateCommonPacketFormatStructure:var_18', 'CreateCommonPacketFormatStructure:a3', 'NotifyMessageRouter:v9', 'GetUintFromMessage:a1', 'CreateMessageRouterRequestStructure:v8', 'global:g_message_router_request', 'CreateMessageRouterRequestStructure:v5', 'NotifyMessageRouter:a1', 'NotifyMessageRouter:a2', 'CreateMessageRouterRequestStructure:a3', 'NotifyCommonPacketFormat:a2', 'global:qword_23498', 'CreateCommonPacketFormatStructure:v14', 'CreateCommonPacketFormatStructure:var_28', 'CreateMessageRouterRequestStructure:a2', 'CreateMessageRouterRequestStructure:var_2C', 'NotifyCommonPacketFormat:a1'}, 40: {'NotifyClass:a2', 'EncodeReplyService:a1', 'NotifyClass:v9', 'CreateMessageRouterRequestStructure:a3', 'EncodeReplyService:a2', 'NotifyClass:a3', 'CreateMessageRouterRequestStructure:a1', 'AddSintToMessage:a2', 'AddSintToMessage:a1', 'AddSintToMessage:var_4'}, 41: {'DecodePaddedEPath:v6', 'DecodePaddedEPath:var_14', 'DecodePaddedEPath:v5', 'DecodePaddedEPath:a1'}, 42: {'DecodePaddedEPath:v6', 'DecodePaddedEPath:v5'}, 43: {'DecodePaddedEPath:a1', 'GetRegisteredObject:var_14', 'global:g_first_object', 'DecodePaddedEPath:v6', 'GetRegisteredObject:a1', 'global:g_message_router_request', 'NotifyMessageRouter:a3', 'global:word_21CC4'}, 44: {'DecodePaddedEPath:v6', 'DecodePaddedEPath:v5'}, 45: {'DecodePaddedEPath:a1', 'NotifyClass:a2', 'GetCipInstance:var_1C', 'GetCipInstance:a2', 'DecodePaddedEPath:v6', 'NotifyClass:var_1A', 'NotifyClass:a1'}}}
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (2, 3): Similarity = 1.0
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (0, 1): Similarity = 1.0
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (4, 5): Similarity = 1.0
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (5, 6): Similarity = 1.0
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (6, 7): Similarity = 1.0
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (8, 9): Similarity = 1.0
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (9, 10): Similarity = 1.0
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (10, 11): Similarity = 1.0
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (20, 21): Similarity = 1.0
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (21, 22): Similarity = 1.0
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (22, 23): Similarity = 1.0
2025-03-08 21:06:44,812 - my_text.py:478  - Key pair (24, 25): Similarity = 1.0
2025-03-08 21:06:44,813 - my_text.py:478  - Key pair (25, 26): Similarity = 1.0
2025-03-08 21:06:44,813 - my_text.py:478  - Key pair (26, 27): Similarity = 1.0
2025-03-08 21:06:44,813 - my_text.py:478  - Key pair (28, 29): Similarity = 1.0
2025-03-08 21:06:44,813 - my_text.py:478  - Key pair (30, 31): Similarity = 1.0
2025-03-08 21:06:44,813 - my_text.py:478  - Key pair (32, 33): Similarity = 1.0
2025-03-08 21:06:44,813 - my_text.py:478  - Key pair (34, 35): Similarity = 1.0
2025-03-08 21:06:44,813 - my_text.py:478  - Key pair (36, 37): Similarity = 1.0
2025-03-08 21:06:44,813 - my_text.py:478  - Key pair (38, 39): Similarity = 1.0
2025-03-08 21:06:44,813 - my_text.py:482  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Similarity matrix: {(2, 3): 1.0, (3, 0): 0.16129032258064516, (0, 1): 1.0, (1, 4): 0.10810810810810811, (4, 5): 1.0, (5, 6): 1.0, (6, 7): 1.0, (7, 8): 0.1724137931034483, (8, 9): 1.0, (9, 10): 1.0, (10, 11): 1.0, (11, 20): 0.625, (20, 21): 1.0, (21, 22): 1.0, (22, 23): 1.0, (23, 24): 0.0, (24, 25): 1.0, (25, 26): 1.0, (26, 27): 1.0, (27, 28): 0.0, (28, 29): 1.0, (29, 30): 0.0, (30, 31): 1.0, (31, 32): 0.23529411764705882, (32, 33): 1.0, (33, 34): 0.5, (34, 35): 1.0, (35, 36): 0.3333333333333333, (36, 37): 1.0, (37, 38): 0.12121212121212122, (38, 39): 1.0, (39, 40): 0.06060606060606061, (40, 41): 0.0, (41, 42): 0.5, (42, 43): 0.1111111111111111, (43, 44): 0.1111111111111111, (44, 45): 0.125}
2025-03-08 21:06:44,813 - my_text.py:519  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Merged queue: [(0, 1), (2, 3), (4, 5, 6, 7), (8, 9, 10, 11), (20, 21, 22, 23), (24, 25, 26, 27), (28, 29), (30, 31), (32, 33), (34, 35), (36, 37), (38, 39), (40,), (41,), (42,), (43,), (44,), (45,)]
2025-03-08 21:06:44,813 - my_text.py:525  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 used_fields: ['0,1', '2,3', '4,5,6,7', '8,9,10,11', '20,21,22,23', '24,25,26,27', '28,29', '30,31', '32,33', '34,35', '36,37', '38,39', '40', '41', '42', '43', '44', '45']
2025-03-08 21:06:44,814 - my_text.py:541  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 data_new: {(0, 1): {'CreateEncapsulationStructure': ['src', 'a3'], 'HandleReceivedExplictTcpData': ['v12', 'var_30', 'a6'], 'GenerateEncapsulationHeader': ['a1', 'a5'], 'AddIntToMessage': ['a1', 'a2', 'var_4'], 'GetUintFromMessage': ['var_A', 'a1']}, (2, 3): {'CreateEncapsulationStructure': ['src', 'a1', 'a2', 'a3', 'var_10'], 'HandleReceivedExplictTcpData': ['v12', 'a3', 'a2', 'var_58', 'v17'], 'HandleDataOnTcpSocket': ['v2', 'n', 'v23', 'a1', 'buf', 'var_478', 'v13', 'v14', 'v5', 'v11', 's'], 'GetUintFromMessage': ['var_A', 'a1'], 'HandleReceivedSendRequestResponseDataCommand': ['a1']}, (4, 5, 6, 7): {'CreateEncapsulationStructure': ['src', 'a3'], 'NotifyClass': ['a2', 'a1', 'var_44'], 'NotifyCommonPacketFormat': ['a3', 'v7', 'a2', 'a1'], 'GetUdintFromMessage': ['v2', 'a1', 'var_C'], 'GenerateEncapsulationHeader': ['a3', 'var_14', 'a1', 'a5'], 'CheckRegisteredSessions': ['a1'], 'NotifyMessageRouter': ['a5', 'var_20', 'v9', 'a3', 'a4'], 'global': ['g_registered_sessions', 'word_23492', 'g_message_router_request', 'qword_23498'], 'AddDintToMessage': ['var_4', 'a1', 'a2']}, (8, 9, 10, 11): {'CreateEncapsulationStructure': ['src', 'a3'], 'GetUdintFromMessage': ['v2', 'a1', 'var_C']}, (20, 21, 22, 23): {'CreateEncapsulationStructure': ['src', 'a3'], 'HandleReceivedExplictTcpData': ['var_20', 'v14', 'a4'], 'GetUdintFromMessage': ['v2', 'a1', 'var_C']}, (24, 25, 26, 27): {'GetDintFromMessage': ['a1', 'var_C', 'v2']}, (28, 29): {'GetIntFromMessage': ['a1', 'var_A']}, (30, 31): {'CreateCommonPacketFormatStructure': ['v11', 'v9', 'var_1C', 'v13', 'var_1A', 'a3'], 'EncodeItemCount': ['a2', 'a1'], 'AddIntToMessage': ['a1', 'a2', 'var_4'], 'GetUintFromMessage': ['var_A', 'a1']}, (32, 33): {'CreateCommonPacketFormatStructure': ['v11', 'a3'], 'GetUintFromMessage': ['var_A', 'a1'], 'AssembleLinearMessage': ['v3', 'a2'], 'global': ['word_23484', 'word_23490']}, (34, 35): {'CreateCommonPacketFormatStructure': ['v11', 'a3'], 'GetUintFromMessage': ['var_A', 'a1']}, (36, 37): {'CreateCommonPacketFormatStructure': ['v11', 'a3'], 'AddIntToMessage': ['a1', 'a2', 'var_4'], 'global': ['word_23490', 'word_23484'], 'EncodeDataItemType': ['a1', 'a2'], 'GetUintFromMessage': ['var_A', 'a1'], 'AssembleLinearMessage': ['a2']}, (38, 39): {'CreateCommonPacketFormatStructure': ['a2', 'v11', 'var_18', 'a3', 'v14', 'var_28'], 'CreateMessageRouterRequestStructure': ['a1', 'v6', 'v8', 'v5', 'a3', 'a2', 'var_2C'], 'NotifyCommonPacketFormat': ['v7', 'a2', 'a1'], 'GetUintFromMessage': ['var_A', 'a1'], 'NotifyMessageRouter': ['var_1C', 'v9', 'a1', 'a2'], 'global': ['word_23492', 'g_message_router_request', 'qword_23498']}, (40,): {'NotifyClass': ['a2', 'v9', 'a3'], 'EncodeReplyService': ['a1', 'a2'], 'CreateMessageRouterRequestStructure': ['a3', 'a1'], 'AddSintToMessage': ['a2', 'a1', 'var_4']}, (41,): {'DecodePaddedEPath': ['v6', 'var_14', 'v5', 'a1']}, (42,): {'DecodePaddedEPath': ['v6', 'v5']}, (43,): {'DecodePaddedEPath': ['a1', 'v6'], 'GetRegisteredObject': ['var_14', 'a1'], 'global': ['g_first_object', 'g_message_router_request', 'word_21CC4'], 'NotifyMessageRouter': ['a3']}, (44,): {'DecodePaddedEPath': ['v6', 'v5']}, (45,): {'DecodePaddedEPath': ['a1', 'v6'], 'NotifyClass': ['a2', 'var_1A', 'a1'], 'GetCipInstance': ['var_1C', 'a2']}}
2025-03-08 21:06:44,814 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (0, 1)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: GenerateEncapsulationHeader\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GenerateEncapsulationHeader(\n        unsigned __int16 *a1,\n        __int16 a2,\n        unsigned int a3,\n        unsigned int a4,\n        __int64 a5)\n{\n  AddIntToMessage(*a1, a5);\n  AddIntToMessage(a2, a5);\n  AddDintToMessage(a3, a5);\n  AddDintToMessage(a4, a5);\n  memcpy(*(void **)(a5 + 512), a1 + 6, 8uLL);\n  *(_QWORD *)(a5 + 512) += 8LL;\n  *(_QWORD *)(a5 + 520) += 8LL;\n  return AddDintToMessage(0, a5);\n}\n\n                        \n                        Function Name: AddIntToMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall AddIntToMessage(__int16 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  **(_WORD **)(a2 + 512) = a1;\n  *(_QWORD *)(a2 + 512) += 2LL;\n  result = a2;\n  *(_QWORD *)(a2 + 520) += 2LL;\n  return result;\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (0, 1) appear to "contaminate" the global variables  and local variables src, a3, v12, var_30, a6, a1, a5, a1, a2, var_4, var_A, a1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (0, 1) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:45,888 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:06:47,890 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (2, 3)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: HandleDataOnTcpSocket\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleDataOnTcpSocket(unsigned int a1)\n{\n  int v2; // [rsp+14h] [rbp-4ACh] BYREF\n  socklen_t len; // [rsp+18h] [rbp-4A8h] BYREF\n  unsigned int SocketErrorNumber; // [rsp+1Ch] [rbp-4A4h]\n  int v5; // [rsp+20h] [rbp-4A0h]\n  unsigned int v6; // [rsp+24h] [rbp-49Ch]\n  unsigned int v7; // [rsp+28h] [rbp-498h]\n  unsigned int v8; // [rsp+2Ch] [rbp-494h]\n  unsigned int v9; // [rsp+30h] [rbp-490h]\n  unsigned int v10; // [rsp+34h] [rbp-48Ch]\n  _WORD *v11; // [rsp+38h] [rbp-488h] BYREF\n  size_t n; // [rsp+40h] [rbp-480h]\n  size_t v13; // [rsp+48h] [rbp-478h]\n  ssize_t v14; // [rsp+50h] [rbp-470h]\n  __int64 SocketTimer; // [rsp+58h] [rbp-468h]\n  __int64 ErrorMessage; // [rsp+60h] [rbp-460h]\n  __int64 v17; // [rsp+68h] [rbp-458h]\n  __int64 v18; // [rsp+70h] [rbp-450h]\n  __int64 v19; // [rsp+78h] [rbp-448h]\n  __int64 v20; // [rsp+80h] [rbp-440h]\n  __int64 v21; // [rsp+88h] [rbp-438h]\n  struct sockaddr s; // [rsp+90h] [rbp-430h] BYREF\n  char v23[520]; // [rsp+A0h] [rbp-420h] BYREF\n  size_t v24; // [rsp+2A8h] [rbp-218h]\n  __int64 buf[66]; // [rsp+2B0h] [rbp-210h] BYREF\n\n  buf[65] = __readfsqword(0x28u);\n  v2 = 0;\n  n = 512LL;\n  memset(buf, 0, 512);\n  v14 = recv(a1, buf, 4uLL, 0);\n  SocketTimer = SocketTimerArrayGetSocketTimer(&g_timestamps, 20LL, a1);\n  if ( v14 )\n  {\n    if ( v14 >= 0 )\n    {\n      v11 = (_WORD *)buf + 1;\n      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;\n      if ( v13 <= 0x1FC )\n      {\n        v14 = recv(a1, (char *)buf + 4, v13, 0);\n        if ( v14 )\n        {\n          if ( v14 >= 0 )\n          {\n            if ( v13 == (unsigned int)v14 )\n            {\n              v13 += 4LL;\n              g_current_active_tcp_socket = a1;\n              memset(&s, 0, sizeof(s));\n              len = 16;\n              if ( getpeername(a1, &s, &len) < 0 )\n              {\n                SocketErrorNumber = GetSocketErrorNumber();\n                ErrorMessage = GetErrorMessage(SocketErrorNumber);\n                FreeErrorMessage(ErrorMessage);\n              }\n              InitializeENIPMessage(v23);\n              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);\n              if ( SocketTimer )\n                SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n              g_current_active_tcp_socket = -1;\n              if ( v5 > 0 )\n              {\n                n = send(a1, v23, v24, 0x4000);\n                SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n              }\n              return 0LL;\n            }\n            else\n            {\n              return 0xFFFFFFFFLL;\n            }\n          }\n          else\n          {\n            v6 = GetSocketErrorNumber();\n            v17 = GetErrorMessage(v6);\n            if ( v6 == 11 )\n            {\n              return 0LL;\n            }\n            else\n            {\n              FreeErrorMessage(v17);\n              return 0xFFFFFFFFLL;\n            }\n          }\n        }\n        else\n        {\n          v7 = GetSocketErrorNumber();\n          v18 = GetErrorMessage(v7);\n          FreeErrorMessage(v18);\n          RemoveSocketTimerFromList(a1);\n          RemoveSession(a1);\n          return 0xFFFFFFFFLL;\n        }\n      }\n      else\n      {\n        while ( 1 )\n        {\n          v14 = recv(a1, buf, n, 0);\n          if ( !v14 )\n          {\n            v9 = GetSocketErrorNumber();\n            v20 = GetErrorMessage(v9);\n            FreeErrorMessage(v20);\n            RemoveSocketTimerFromList(a1);\n            return 0xFFFFFFFFLL;\n          }\n          if ( v14 < 0 )\n            break;\n          v13 -= v14;\n          if ( v13 <= 0x1FF && v13 )\n            n = v13;\n          if ( !v13 )\n          {\n            SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n            return 0LL;\n          }\n        }\n        v8 = GetSocketErrorNumber();\n        v19 = GetErrorMessage(v8);\n        if ( v8 == 11 )\n        {\n          return 0LL;\n        }\n        else\n        {\n          FreeErrorMessage(v19);\n          return 0xFFFFFFFFLL;\n        }\n      }\n    }\n    else\n    {\n      v10 = GetSocketErrorNumber();\n      if ( v10 == 11 )\n      {\n        return 0LL;\n      }\n      else\n      {\n        v21 = GetErrorMessage(v10);\n        FreeErrorMessage(v21);\n        return 0xFFFFFFFFLL;\n      }\n    }\n  }\n  else\n  {\n    RemoveSocketTimerFromList(a1);\n    RemoveSession(a1);\n    return 0xFFFFFFFFLL;\n  }\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                        \n                        Function Name: HandleReceivedSendRequestResponseDataCommand\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedSendRequestResponseDataCommand(__int64 a1, __int64 a2, __int64 a3)\n{\n  unsigned int v5; // [rsp+2Ch] [rbp-4h]\n\n  v5 = 0;\n  if ( *(_WORD *)(a1 + 2) > 5u )\n  {\n    GetDintFromMessage((unsigned __int16 **)(a1 + 32));\n    GetIntFromMessage((_WORD **)(a1 + 32));\n    *(_WORD *)(a1 + 2) -= 6;\n    if ( (unsigned int)CheckRegisteredSessions(a1) )\n    {\n      InitializeENIPMessage(a3);\n      GenerateEncapsulationHeader((unsigned __int16 *)a1, 0, *(_DWORD *)(a1 + 4), 0x64u, a3);\n      return 1;\n    }\n    else\n    {\n      return (unsigned int)NotifyCommonPacketFormat(a1, a2, a3);\n    }\n  }\n  return v5;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (2, 3) appear to "contaminate" the global variables  and local variables src, a1, a2, a3, var_10, v12, a3, a2, var_58, v17, v2, n, v23, a1, buf, var_478, v13, v14, v5, v11, s, var_A, a1, a1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (2, 3) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:48,947 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:06:50,948 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (4, 5, 6, 7)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: NotifyClass\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall NotifyClass(__int64 a1, __int64 a2, _BYTE *a3, __int64 a4, unsigned int a5)\n{\n  __int64 v9; // [rsp+38h] [rbp-18h]\n  unsigned __int64 i; // [rsp+40h] [rbp-10h]\n  __int64 CipInstance; // [rsp+48h] [rbp-8h]\n\n  CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));\n  if ( CipInstance )\n  {\n    v9 = *(_QWORD *)(*(_QWORD *)(CipInstance + 16) + 96LL);\n    if ( v9 )\n    {\n      for ( i = 0LL; i < *(unsigned __int16 *)(*(_QWORD *)(CipInstance + 16) + 80LL); ++i )\n      {\n        if ( *(_BYTE *)a2 == *(_BYTE *)v9 )\n        {\n          if ( !*(_QWORD *)(v9 + 8) )\n            __assert_fail(\n              "((void *)0) != service->service_function",\n              "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipcommon.c",\n              0x7Eu,\n              "NotifyClass");\n          return (*(__int64 (__fastcall **)(__int64, __int64, _BYTE *, __int64, _QWORD))(v9 + 8))(\n                   CipInstance,\n                   a2,\n                   a3,\n                   a4,\n                   a5);\n        }\n        v9 += 24LL;\n      }\n    }\n    a3[2] = 8;\n  }\n  else\n  {\n    a3[2] = 5;\n  }\n  a3[3] = 0;\n  InitializeENIPMessage(a3 + 8);\n  *a3 = *(_BYTE *)a2 | 0x80;\n  return 1LL;\n}\n\n                        \n                        Function Name: NotifyCommonPacketFormat\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall NotifyCommonPacketFormat(__int64 a1, __int64 a2, __int64 a3)\n{\n  unsigned int CommonPacketFormatStructure; // [rsp+20h] [rbp-230h]\n  __int64 v6; // [rsp+28h] [rbp-228h]\n  char v7[536]; // [rsp+30h] [rbp-220h] BYREF\n  unsigned __int64 v8; // [rsp+248h] [rbp-8h]\n\n  v8 = __readfsqword(0x28u);\n  InitializeMessageRouterResponse(v7);\n  CommonPacketFormatStructure = CreateCommonPacketFormatStructure(\n                                  *(_WORD **)(a1 + 32),\n                                  *(unsigned __int16 *)(a1 + 2),\n                                  (__int64)g_common_packet_format_data_item);\n  if ( CommonPacketFormatStructure != -1 )\n  {\n    if ( word_23484 || word_23490 != 178 )\n    {\n      GenerateEncapsulationHeader((unsigned __int16 *)a1, 0, *(_DWORD *)(a1 + 4), 3u, a3);\n      return 1;\n    }\n    else\n    {\n      CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));\n      if ( CommonPacketFormatStructure != -1 )\n      {\n        SkipEncapsulationHeader(a3);\n        AssembleLinearMessage((__int64)v7, g_common_packet_format_data_item, a3);\n        v6 = *(_QWORD *)(a3 + 512);\n        *(_QWORD *)(a3 + 512) = a3;\n        GenerateEncapsulationHeader((unsigned __int16 *)a1, *(_QWORD *)(a3 + 520), *(_DWORD *)(a1 + 4), 0, a3);\n        *(_QWORD *)(a3 + 512) = v6;\n        return 1;\n      }\n    }\n  }\n  return CommonPacketFormatStructure;\n}\n\n                        \n                        Function Name: GetUdintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUdintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n\n                        \n                        Function Name: GenerateEncapsulationHeader\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GenerateEncapsulationHeader(\n        unsigned __int16 *a1,\n        __int16 a2,\n        unsigned int a3,\n        unsigned int a4,\n        __int64 a5)\n{\n  AddIntToMessage(*a1, a5);\n  AddIntToMessage(a2, a5);\n  AddDintToMessage(a3, a5);\n  AddDintToMessage(a4, a5);\n  memcpy(*(void **)(a5 + 512), a1 + 6, 8uLL);\n  *(_QWORD *)(a5 + 512) += 8LL;\n  *(_QWORD *)(a5 + 520) += 8LL;\n  return AddDintToMessage(0, a5);\n}\n\n                        \n                        Function Name: CheckRegisteredSessions\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CheckRegisteredSessions(__int64 a1)\n{\n  if ( !*(_DWORD *)(a1 + 4) || *(_DWORD *)(a1 + 4) > 0x14u || g_registered_sessions[*(_DWORD *)(a1 + 4) - 1] == -1 )\n    return 0xFFFFFFFFLL;\n  else\n    return 0LL;\n}\n\n                        \n                        Function Name: NotifyMessageRouter\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall NotifyMessageRouter(_BYTE *a1, __int16 a2, _BYTE *a3, __int64 a4, unsigned int a5)\n{\n  unsigned int v9; // [rsp+20h] [rbp-10h]\n  int MessageRouterRequestStructure; // [rsp+24h] [rbp-Ch]\n  _QWORD *RegisteredObject; // [rsp+28h] [rbp-8h]\n\n  v9 = 1;\n  MessageRouterRequestStructure = CreateMessageRouterRequestStructure(a1, a2, (__int64)&g_message_router_request);\n  if ( MessageRouterRequestStructure )\n  {\n    a3[2] = MessageRouterRequestStructure;\n    a3[3] = 0;\n    a3[1] = 0;\n    *a3 = g_message_router_request | 0x80;\n  }\n  else\n  {\n    RegisteredObject = GetRegisteredObject((unsigned __int16)word_21CC4);\n    if ( RegisteredObject )\n    {\n      a3[1] = 0;\n      if ( !RegisteredObject[1] )\n        __assert_fail(\n          "((void *)0) != registered_object->cip_class",\n          "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipmessagerouter.c",\n          0xD6u,\n          "NotifyMessageRouter");\n      return (unsigned int)NotifyClass(RegisteredObject[1], (__int64)&g_message_router_request, a3, a4, a5);\n    }\n    else\n    {\n      a3[2] = 5;\n      a3[3] = 0;\n      a3[1] = 0;\n      *a3 = g_message_router_request | 0x80;\n    }\n  }\n  return v9;\n}\n\n                        \n                        Function Name: AddDintToMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall AddDintToMessage(unsigned int a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  **(_BYTE **)(a2 + 512) = a1;\n  *(_WORD *)(*(_QWORD *)(a2 + 512) + 1LL) = a1 >> 8;\n  *(_BYTE *)(*(_QWORD *)(a2 + 512) + 3LL) = HIBYTE(a1);\n  *(_QWORD *)(a2 + 512) += 4LL;\n  result = a2;\n  *(_QWORD *)(a2 + 520) += 4LL;\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (4, 5, 6, 7) appear to "contaminate" the global variables g_registered_sessions, word_23492, g_message_router_request, qword_23498 and local variables src, a3, a2, a1, var_44, a3, v7, a2, a1, v2, a1, var_C, a3, var_14, a1, a5, a1, a5, var_20, v9, a3, a4, var_4, a1, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (4, 5, 6, 7) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:51,980 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:06:53,981 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (8, 9, 10, 11)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: GetUdintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUdintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (8, 9, 10, 11) appear to "contaminate" the global variables  and local variables src, a3, v2, a1, var_C. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (8, 9, 10, 11) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:54,801 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
unsigned int, length
```
2025-03-08 21:06:56,802 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (20, 21, 22, 23)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: GetUdintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUdintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (20, 21, 22, 23) appear to "contaminate" the global variables  and local variables src, a3, var_20, v14, a4, v2, a1, var_C. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (20, 21, 22, 23) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:06:57,761 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:06:59,762 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (24, 25, 26, 27)  has some situations that affect the operation of the relevant code\n\n                        Function Name: GetDintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetDintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (24, 25, 26, 27) appear to "contaminate" the global variables  and local variables a1, var_C, v2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (24, 25, 26, 27) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:00,605 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:07:02,606 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (28, 29)  has some situations that affect the operation of the relevant code\n\n                        Function Name: GetIntFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetIntFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (28, 29) appear to "contaminate" the global variables  and local variables a1, var_A. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (28, 29) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:07,419 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: Based on the provided information and the function `GetIntFromMessage` which increments the pointer `a1` and returns the value at the current position, it seems that the fields at offsets (28, 29) are likely to be a 16-bit unsigned integer. Given their position and the function's behavior, these fields could represent a length.

```python
unsigned int, length
```

This indicates that the values at these offsets are likely to be used to represent lengths of data segments within the protocol packet.
2025-03-08 21:07:09,420 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (30, 31)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateCommonPacketFormatStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateCommonPacketFormatStructure(_WORD *a1, unsigned __int64 a2, __int64 a3)\n{\n  __int16 IntFromMessage; // ax\n  __int16 v5; // ax\n  __int16 v6; // ax\n  __int16 v7; // ax\n  int UdintFromMessage; // eax\n  unsigned __int16 v9; // ax\n  _WORD *v11; // [rsp+18h] [rbp-28h] BYREF\n  __int16 UintFromMessage; // [rsp+24h] [rbp-1Ch]\n  unsigned __int16 v13; // [rsp+26h] [rbp-1Ah]\n  __int64 v14; // [rsp+28h] [rbp-18h]\n  unsigned __int64 i; // [rsp+30h] [rbp-10h]\n  unsigned __int64 j; // [rsp+38h] [rbp-8h]\n\n  v11 = a1;\n  *(_WORD *)(a3 + 32) = 0;\n  *(_WORD *)(a3 + 52) = 0;\n  v14 = 0LL;\n  UintFromMessage = GetUintFromMessage(&v11);\n  *(_WORD *)a3 = UintFromMessage;\n  v14 += 2LL;\n  if ( *(_WORD *)a3 )\n  {\n    *(_WORD *)(a3 + 4) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 6) = GetUintFromMessage(&v11);\n    v14 += 4LL;\n    if ( *(_WORD *)(a3 + 6) > 3u )\n    {\n      *(_DWORD *)(a3 + 8) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n    if ( *(_WORD *)(a3 + 6) == 8 )\n    {\n      *(_DWORD *)(a3 + 12) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n  }\n  if ( *(_WORD *)a3 > 1u )\n  {\n    *(_WORD *)(a3 + 16) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 18) = GetUintFromMessage(&v11);\n    *(_QWORD *)(a3 + 24) = v11;\n    if ( a2 < (unsigned __int64)*(unsigned __int16 *)(a3 + 18) + v14 + 4 )\n      return 0xFFFFFFFFLL;\n    v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));\n    v14 += *(unsigned __int16 *)(a3 + 18) + 4;\n    v13 = *(_WORD *)a3 - 2;\n    for ( i = 0LL; ; ++i )\n    {\n      v9 = 2;\n      if ( v13 <= 2u )\n        v9 = v13;\n      if ( i >= v9 )\n        break;\n      IntFromMessage = GetIntFromMessage(&v11);\n      *(_WORD *)(a3 + 20 * i + 32) = IntFromMessage;\n      v14 += 2LL;\n      if ( *(_WORD *)(a3 + 20 * i + 32) == 0x8000 || *(_WORD *)(a3 + 20 * i + 32) == 0x8001 )\n      {\n        v5 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 34) = v5;\n        v6 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 36) = v6;\n        v7 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 38) = v7;\n        UdintFromMessage = GetUdintFromMessage(&v11);\n        *(_DWORD *)(a3 + 20 * i + 40) = UdintFromMessage;\n        for ( j = 0LL; j <= 7; ++j )\n        {\n          *(_BYTE *)(a3 + 20 * i + j + 44) = *(_BYTE *)v11;\n          v11 = (_WORD *)((char *)v11 + 1);\n        }\n        v14 += 18LL;\n      }\n      else\n      {\n        *(_WORD *)(a3 + 20 * i + 32) = 0;\n        --v11;\n      }\n    }\n  }\n  if ( *(_WORD *)a3 <= 3u )\n  {\n    *(_WORD *)(a3 + 52) = 0;\n    if ( *(_WORD *)a3 <= 2u )\n      *(_WORD *)(a3 + 32) = 0;\n  }\n  if ( v14 == a2 )\n    return 0LL;\n  if ( *(_WORD *)a3 <= 2u )\n    return 0xFFFFFFFFLL;\n  return 0LL;\n}\n\n                        \n                        Function Name: EncodeItemCount\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall EncodeItemCount(__int16 *a1, __int64 a2)\n{\n  return AddIntToMessage(*a1, a2);\n}\n\n                        \n                        Function Name: AddIntToMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall AddIntToMessage(__int16 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  **(_WORD **)(a2 + 512) = a1;\n  *(_QWORD *)(a2 + 512) += 2LL;\n  result = a2;\n  *(_QWORD *)(a2 + 520) += 2LL;\n  return result;\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (30, 31) appear to "contaminate" the global variables  and local variables v11, v9, var_1C, v13, var_1A, a3, a2, a1, a1, a2, var_4, var_A, a1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (30, 31) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:10,215 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
unsigned int, length
```
2025-03-08 21:07:12,216 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (32, 33)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateCommonPacketFormatStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateCommonPacketFormatStructure(_WORD *a1, unsigned __int64 a2, __int64 a3)\n{\n  __int16 IntFromMessage; // ax\n  __int16 v5; // ax\n  __int16 v6; // ax\n  __int16 v7; // ax\n  int UdintFromMessage; // eax\n  unsigned __int16 v9; // ax\n  _WORD *v11; // [rsp+18h] [rbp-28h] BYREF\n  __int16 UintFromMessage; // [rsp+24h] [rbp-1Ch]\n  unsigned __int16 v13; // [rsp+26h] [rbp-1Ah]\n  __int64 v14; // [rsp+28h] [rbp-18h]\n  unsigned __int64 i; // [rsp+30h] [rbp-10h]\n  unsigned __int64 j; // [rsp+38h] [rbp-8h]\n\n  v11 = a1;\n  *(_WORD *)(a3 + 32) = 0;\n  *(_WORD *)(a3 + 52) = 0;\n  v14 = 0LL;\n  UintFromMessage = GetUintFromMessage(&v11);\n  *(_WORD *)a3 = UintFromMessage;\n  v14 += 2LL;\n  if ( *(_WORD *)a3 )\n  {\n    *(_WORD *)(a3 + 4) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 6) = GetUintFromMessage(&v11);\n    v14 += 4LL;\n    if ( *(_WORD *)(a3 + 6) > 3u )\n    {\n      *(_DWORD *)(a3 + 8) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n    if ( *(_WORD *)(a3 + 6) == 8 )\n    {\n      *(_DWORD *)(a3 + 12) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n  }\n  if ( *(_WORD *)a3 > 1u )\n  {\n    *(_WORD *)(a3 + 16) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 18) = GetUintFromMessage(&v11);\n    *(_QWORD *)(a3 + 24) = v11;\n    if ( a2 < (unsigned __int64)*(unsigned __int16 *)(a3 + 18) + v14 + 4 )\n      return 0xFFFFFFFFLL;\n    v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));\n    v14 += *(unsigned __int16 *)(a3 + 18) + 4;\n    v13 = *(_WORD *)a3 - 2;\n    for ( i = 0LL; ; ++i )\n    {\n      v9 = 2;\n      if ( v13 <= 2u )\n        v9 = v13;\n      if ( i >= v9 )\n        break;\n      IntFromMessage = GetIntFromMessage(&v11);\n      *(_WORD *)(a3 + 20 * i + 32) = IntFromMessage;\n      v14 += 2LL;\n      if ( *(_WORD *)(a3 + 20 * i + 32) == 0x8000 || *(_WORD *)(a3 + 20 * i + 32) == 0x8001 )\n      {\n        v5 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 34) = v5;\n        v6 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 36) = v6;\n        v7 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 38) = v7;\n        UdintFromMessage = GetUdintFromMessage(&v11);\n        *(_DWORD *)(a3 + 20 * i + 40) = UdintFromMessage;\n        for ( j = 0LL; j <= 7; ++j )\n        {\n          *(_BYTE *)(a3 + 20 * i + j + 44) = *(_BYTE *)v11;\n          v11 = (_WORD *)((char *)v11 + 1);\n        }\n        v14 += 18LL;\n      }\n      else\n      {\n        *(_WORD *)(a3 + 20 * i + 32) = 0;\n        --v11;\n      }\n    }\n  }\n  if ( *(_WORD *)a3 <= 3u )\n  {\n    *(_WORD *)(a3 + 52) = 0;\n    if ( *(_WORD *)a3 <= 2u )\n      *(_WORD *)(a3 + 32) = 0;\n  }\n  if ( v14 == a2 )\n    return 0LL;\n  if ( *(_WORD *)a3 <= 2u )\n    return 0xFFFFFFFFLL;\n  return 0LL;\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                        \n                        Function Name: AssembleLinearMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall AssembleLinearMessage(unsigned __int8 *a1, __int16 *a2, __int64 a3)\n{\n  int v3; // eax\n  int i; // [rsp+28h] [rbp-8h]\n  int j; // [rsp+2Ch] [rbp-4h]\n\n  if ( a1 )\n  {\n    AddDintToMessage(0, a3);\n    AddIntToMessage(0, a3);\n  }\n  EncodeItemCount(a2, a3);\n  v3 = (unsigned __int16)a2[2];\n  if ( v3 == 32770 )\n  {\n    EncodeSequencedAddressItem(a2, a3);\n  }\n  else\n  {\n    if ( (unsigned __int16)a2[2] > 0x8002u )\n      return 0xFFFFFFFFLL;\n    if ( a2[2] )\n    {\n      if ( v3 != 161 )\n        return 0xFFFFFFFFLL;\n      EncodeConnectedAddressItem(a2, a3);\n    }\n    else\n    {\n      EncodeNullAddressItem(a3);\n    }\n  }\n  if ( a2[8] == 178 || a2[8] == 177 )\n  {\n    if ( a1 )\n    {\n      EncodeDataItemType((__int64)a2, a3);\n      if ( a2[8] == 177 )\n      {\n        EncodeConnectedDataItemLength(a1, a3);\n        EncodeSequenceNumber(g_common_packet_format_data_item, a3);\n      }\n      else\n      {\n        EncodeUnconnectedDataItemLength(a1, a3);\n      }\n      EncodeReplyService(a1, a3);\n      EncodeReservedFieldOfLengthByte(a1, a3);\n      EncodeGeneralStatus(a1, a3);\n      EncodeExtendedStatus(a1, a3);\n      EncodeMessageRouterResponseData(a1, a3);\n    }\n    else\n    {\n      EncodeDataItemType((__int64)a2, a3);\n      EncodeDataItemLength(a2, a3);\n      EncodeDataItemData(a2, a3);\n    }\n  }\n  for ( i = 0x8000; i <= 32769; ++i )\n  {\n    for ( j = 0; j <= 1; ++j )\n    {\n      if ( i == (unsigned __int16)a2[10 * j + 16] )\n      {\n        EncodeSockaddrInfoItemTypeId((unsigned int)j, a2, a3);\n        EncodeSockaddrInfoLength((unsigned int)j, a2, a3);\n        EncapsulateIpAddress((unsigned __int16)a2[10 * j + 19], *(unsigned int *)&a2[10 * j + 20], a3);\n        FillNextNMessageOctetsWithValueAndMoveToNextPosition(0LL, 8LL, a3);\n        break;\n      }\n    }\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (32, 33) appear to "contaminate" the global variables word_23484, word_23490 and local variables v11, a3, var_A, a1, v3, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (32, 33) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:13,242 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:07:15,243 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (34, 35)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateCommonPacketFormatStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateCommonPacketFormatStructure(_WORD *a1, unsigned __int64 a2, __int64 a3)\n{\n  __int16 IntFromMessage; // ax\n  __int16 v5; // ax\n  __int16 v6; // ax\n  __int16 v7; // ax\n  int UdintFromMessage; // eax\n  unsigned __int16 v9; // ax\n  _WORD *v11; // [rsp+18h] [rbp-28h] BYREF\n  __int16 UintFromMessage; // [rsp+24h] [rbp-1Ch]\n  unsigned __int16 v13; // [rsp+26h] [rbp-1Ah]\n  __int64 v14; // [rsp+28h] [rbp-18h]\n  unsigned __int64 i; // [rsp+30h] [rbp-10h]\n  unsigned __int64 j; // [rsp+38h] [rbp-8h]\n\n  v11 = a1;\n  *(_WORD *)(a3 + 32) = 0;\n  *(_WORD *)(a3 + 52) = 0;\n  v14 = 0LL;\n  UintFromMessage = GetUintFromMessage(&v11);\n  *(_WORD *)a3 = UintFromMessage;\n  v14 += 2LL;\n  if ( *(_WORD *)a3 )\n  {\n    *(_WORD *)(a3 + 4) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 6) = GetUintFromMessage(&v11);\n    v14 += 4LL;\n    if ( *(_WORD *)(a3 + 6) > 3u )\n    {\n      *(_DWORD *)(a3 + 8) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n    if ( *(_WORD *)(a3 + 6) == 8 )\n    {\n      *(_DWORD *)(a3 + 12) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n  }\n  if ( *(_WORD *)a3 > 1u )\n  {\n    *(_WORD *)(a3 + 16) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 18) = GetUintFromMessage(&v11);\n    *(_QWORD *)(a3 + 24) = v11;\n    if ( a2 < (unsigned __int64)*(unsigned __int16 *)(a3 + 18) + v14 + 4 )\n      return 0xFFFFFFFFLL;\n    v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));\n    v14 += *(unsigned __int16 *)(a3 + 18) + 4;\n    v13 = *(_WORD *)a3 - 2;\n    for ( i = 0LL; ; ++i )\n    {\n      v9 = 2;\n      if ( v13 <= 2u )\n        v9 = v13;\n      if ( i >= v9 )\n        break;\n      IntFromMessage = GetIntFromMessage(&v11);\n      *(_WORD *)(a3 + 20 * i + 32) = IntFromMessage;\n      v14 += 2LL;\n      if ( *(_WORD *)(a3 + 20 * i + 32) == 0x8000 || *(_WORD *)(a3 + 20 * i + 32) == 0x8001 )\n      {\n        v5 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 34) = v5;\n        v6 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 36) = v6;\n        v7 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 38) = v7;\n        UdintFromMessage = GetUdintFromMessage(&v11);\n        *(_DWORD *)(a3 + 20 * i + 40) = UdintFromMessage;\n        for ( j = 0LL; j <= 7; ++j )\n        {\n          *(_BYTE *)(a3 + 20 * i + j + 44) = *(_BYTE *)v11;\n          v11 = (_WORD *)((char *)v11 + 1);\n        }\n        v14 += 18LL;\n      }\n      else\n      {\n        *(_WORD *)(a3 + 20 * i + 32) = 0;\n        --v11;\n      }\n    }\n  }\n  if ( *(_WORD *)a3 <= 3u )\n  {\n    *(_WORD *)(a3 + 52) = 0;\n    if ( *(_WORD *)a3 <= 2u )\n      *(_WORD *)(a3 + 32) = 0;\n  }\n  if ( v14 == a2 )\n    return 0LL;\n  if ( *(_WORD *)a3 <= 2u )\n    return 0xFFFFFFFFLL;\n  return 0LL;\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (34, 35) appear to "contaminate" the global variables  and local variables v11, a3, var_A, a1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (34, 35) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:16,019 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
unsigned short, length
```
2025-03-08 21:07:18,021 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (36, 37)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateCommonPacketFormatStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateCommonPacketFormatStructure(_WORD *a1, unsigned __int64 a2, __int64 a3)\n{\n  __int16 IntFromMessage; // ax\n  __int16 v5; // ax\n  __int16 v6; // ax\n  __int16 v7; // ax\n  int UdintFromMessage; // eax\n  unsigned __int16 v9; // ax\n  _WORD *v11; // [rsp+18h] [rbp-28h] BYREF\n  __int16 UintFromMessage; // [rsp+24h] [rbp-1Ch]\n  unsigned __int16 v13; // [rsp+26h] [rbp-1Ah]\n  __int64 v14; // [rsp+28h] [rbp-18h]\n  unsigned __int64 i; // [rsp+30h] [rbp-10h]\n  unsigned __int64 j; // [rsp+38h] [rbp-8h]\n\n  v11 = a1;\n  *(_WORD *)(a3 + 32) = 0;\n  *(_WORD *)(a3 + 52) = 0;\n  v14 = 0LL;\n  UintFromMessage = GetUintFromMessage(&v11);\n  *(_WORD *)a3 = UintFromMessage;\n  v14 += 2LL;\n  if ( *(_WORD *)a3 )\n  {\n    *(_WORD *)(a3 + 4) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 6) = GetUintFromMessage(&v11);\n    v14 += 4LL;\n    if ( *(_WORD *)(a3 + 6) > 3u )\n    {\n      *(_DWORD *)(a3 + 8) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n    if ( *(_WORD *)(a3 + 6) == 8 )\n    {\n      *(_DWORD *)(a3 + 12) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n  }\n  if ( *(_WORD *)a3 > 1u )\n  {\n    *(_WORD *)(a3 + 16) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 18) = GetUintFromMessage(&v11);\n    *(_QWORD *)(a3 + 24) = v11;\n    if ( a2 < (unsigned __int64)*(unsigned __int16 *)(a3 + 18) + v14 + 4 )\n      return 0xFFFFFFFFLL;\n    v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));\n    v14 += *(unsigned __int16 *)(a3 + 18) + 4;\n    v13 = *(_WORD *)a3 - 2;\n    for ( i = 0LL; ; ++i )\n    {\n      v9 = 2;\n      if ( v13 <= 2u )\n        v9 = v13;\n      if ( i >= v9 )\n        break;\n      IntFromMessage = GetIntFromMessage(&v11);\n      *(_WORD *)(a3 + 20 * i + 32) = IntFromMessage;\n      v14 += 2LL;\n      if ( *(_WORD *)(a3 + 20 * i + 32) == 0x8000 || *(_WORD *)(a3 + 20 * i + 32) == 0x8001 )\n      {\n        v5 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 34) = v5;\n        v6 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 36) = v6;\n        v7 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 38) = v7;\n        UdintFromMessage = GetUdintFromMessage(&v11);\n        *(_DWORD *)(a3 + 20 * i + 40) = UdintFromMessage;\n        for ( j = 0LL; j <= 7; ++j )\n        {\n          *(_BYTE *)(a3 + 20 * i + j + 44) = *(_BYTE *)v11;\n          v11 = (_WORD *)((char *)v11 + 1);\n        }\n        v14 += 18LL;\n      }\n      else\n      {\n        *(_WORD *)(a3 + 20 * i + 32) = 0;\n        --v11;\n      }\n    }\n  }\n  if ( *(_WORD *)a3 <= 3u )\n  {\n    *(_WORD *)(a3 + 52) = 0;\n    if ( *(_WORD *)a3 <= 2u )\n      *(_WORD *)(a3 + 32) = 0;\n  }\n  if ( v14 == a2 )\n    return 0LL;\n  if ( *(_WORD *)a3 <= 2u )\n    return 0xFFFFFFFFLL;\n  return 0LL;\n}\n\n                        \n                        Function Name: AddIntToMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall AddIntToMessage(__int16 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  **(_WORD **)(a2 + 512) = a1;\n  *(_QWORD *)(a2 + 512) += 2LL;\n  result = a2;\n  *(_QWORD *)(a2 + 520) += 2LL;\n  return result;\n}\n\n                        \n                        Function Name: EncodeDataItemType\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall EncodeDataItemType(__int64 a1, __int64 a2)\n{\n  return AddIntToMessage(*(_WORD *)(a1 + 16), a2);\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                        \n                        Function Name: AssembleLinearMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall AssembleLinearMessage(unsigned __int8 *a1, __int16 *a2, __int64 a3)\n{\n  int v3; // eax\n  int i; // [rsp+28h] [rbp-8h]\n  int j; // [rsp+2Ch] [rbp-4h]\n\n  if ( a1 )\n  {\n    AddDintToMessage(0, a3);\n    AddIntToMessage(0, a3);\n  }\n  EncodeItemCount(a2, a3);\n  v3 = (unsigned __int16)a2[2];\n  if ( v3 == 32770 )\n  {\n    EncodeSequencedAddressItem(a2, a3);\n  }\n  else\n  {\n    if ( (unsigned __int16)a2[2] > 0x8002u )\n      return 0xFFFFFFFFLL;\n    if ( a2[2] )\n    {\n      if ( v3 != 161 )\n        return 0xFFFFFFFFLL;\n      EncodeConnectedAddressItem(a2, a3);\n    }\n    else\n    {\n      EncodeNullAddressItem(a3);\n    }\n  }\n  if ( a2[8] == 178 || a2[8] == 177 )\n  {\n    if ( a1 )\n    {\n      EncodeDataItemType((__int64)a2, a3);\n      if ( a2[8] == 177 )\n      {\n        EncodeConnectedDataItemLength(a1, a3);\n        EncodeSequenceNumber(g_common_packet_format_data_item, a3);\n      }\n      else\n      {\n        EncodeUnconnectedDataItemLength(a1, a3);\n      }\n      EncodeReplyService(a1, a3);\n      EncodeReservedFieldOfLengthByte(a1, a3);\n      EncodeGeneralStatus(a1, a3);\n      EncodeExtendedStatus(a1, a3);\n      EncodeMessageRouterResponseData(a1, a3);\n    }\n    else\n    {\n      EncodeDataItemType((__int64)a2, a3);\n      EncodeDataItemLength(a2, a3);\n      EncodeDataItemData(a2, a3);\n    }\n  }\n  for ( i = 0x8000; i <= 32769; ++i )\n  {\n    for ( j = 0; j <= 1; ++j )\n    {\n      if ( i == (unsigned __int16)a2[10 * j + 16] )\n      {\n        EncodeSockaddrInfoItemTypeId((unsigned int)j, a2, a3);\n        EncodeSockaddrInfoLength((unsigned int)j, a2, a3);\n        EncapsulateIpAddress((unsigned __int16)a2[10 * j + 19], *(unsigned int *)&a2[10 * j + 20], a3);\n        FillNextNMessageOctetsWithValueAndMoveToNextPosition(0LL, 8LL, a3);\n        break;\n      }\n    }\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (36, 37) appear to "contaminate" the global variables word_23490, word_23484 and local variables v11, a3, a1, a2, var_4, a1, a2, var_A, a1, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (36, 37) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:18,984 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
unsigned int, length
```
2025-03-08 21:07:20,986 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (38, 39)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateCommonPacketFormatStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateCommonPacketFormatStructure(_WORD *a1, unsigned __int64 a2, __int64 a3)\n{\n  __int16 IntFromMessage; // ax\n  __int16 v5; // ax\n  __int16 v6; // ax\n  __int16 v7; // ax\n  int UdintFromMessage; // eax\n  unsigned __int16 v9; // ax\n  _WORD *v11; // [rsp+18h] [rbp-28h] BYREF\n  __int16 UintFromMessage; // [rsp+24h] [rbp-1Ch]\n  unsigned __int16 v13; // [rsp+26h] [rbp-1Ah]\n  __int64 v14; // [rsp+28h] [rbp-18h]\n  unsigned __int64 i; // [rsp+30h] [rbp-10h]\n  unsigned __int64 j; // [rsp+38h] [rbp-8h]\n\n  v11 = a1;\n  *(_WORD *)(a3 + 32) = 0;\n  *(_WORD *)(a3 + 52) = 0;\n  v14 = 0LL;\n  UintFromMessage = GetUintFromMessage(&v11);\n  *(_WORD *)a3 = UintFromMessage;\n  v14 += 2LL;\n  if ( *(_WORD *)a3 )\n  {\n    *(_WORD *)(a3 + 4) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 6) = GetUintFromMessage(&v11);\n    v14 += 4LL;\n    if ( *(_WORD *)(a3 + 6) > 3u )\n    {\n      *(_DWORD *)(a3 + 8) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n    if ( *(_WORD *)(a3 + 6) == 8 )\n    {\n      *(_DWORD *)(a3 + 12) = GetUdintFromMessage(&v11);\n      v14 += 4LL;\n    }\n  }\n  if ( *(_WORD *)a3 > 1u )\n  {\n    *(_WORD *)(a3 + 16) = GetUintFromMessage(&v11);\n    *(_WORD *)(a3 + 18) = GetUintFromMessage(&v11);\n    *(_QWORD *)(a3 + 24) = v11;\n    if ( a2 < (unsigned __int64)*(unsigned __int16 *)(a3 + 18) + v14 + 4 )\n      return 0xFFFFFFFFLL;\n    v11 = (_WORD *)((char *)v11 + *(unsigned __int16 *)(a3 + 18));\n    v14 += *(unsigned __int16 *)(a3 + 18) + 4;\n    v13 = *(_WORD *)a3 - 2;\n    for ( i = 0LL; ; ++i )\n    {\n      v9 = 2;\n      if ( v13 <= 2u )\n        v9 = v13;\n      if ( i >= v9 )\n        break;\n      IntFromMessage = GetIntFromMessage(&v11);\n      *(_WORD *)(a3 + 20 * i + 32) = IntFromMessage;\n      v14 += 2LL;\n      if ( *(_WORD *)(a3 + 20 * i + 32) == 0x8000 || *(_WORD *)(a3 + 20 * i + 32) == 0x8001 )\n      {\n        v5 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 34) = v5;\n        v6 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 36) = v6;\n        v7 = GetIntFromMessage(&v11);\n        *(_WORD *)(a3 + 20 * i + 38) = v7;\n        UdintFromMessage = GetUdintFromMessage(&v11);\n        *(_DWORD *)(a3 + 20 * i + 40) = UdintFromMessage;\n        for ( j = 0LL; j <= 7; ++j )\n        {\n          *(_BYTE *)(a3 + 20 * i + j + 44) = *(_BYTE *)v11;\n          v11 = (_WORD *)((char *)v11 + 1);\n        }\n        v14 += 18LL;\n      }\n      else\n      {\n        *(_WORD *)(a3 + 20 * i + 32) = 0;\n        --v11;\n      }\n    }\n  }\n  if ( *(_WORD *)a3 <= 3u )\n  {\n    *(_WORD *)(a3 + 52) = 0;\n    if ( *(_WORD *)a3 <= 2u )\n      *(_WORD *)(a3 + 32) = 0;\n  }\n  if ( v14 == a2 )\n    return 0LL;\n  if ( *(_WORD *)a3 <= 2u )\n    return 0xFFFFFFFFLL;\n  return 0LL;\n}\n\n                        \n                        Function Name: CreateMessageRouterRequestStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateMessageRouterRequestStructure(_BYTE *a1, __int16 a2, __int64 a3)\n{\n  __int16 v5; // [rsp+14h] [rbp-2Ch]\n  _WORD *v6; // [rsp+18h] [rbp-28h] BYREF\n  __int64 v8[2]; // [rsp+30h] [rbp-10h] BYREF\n\n  v6 = a1;\n  v8[1] = __readfsqword(0x28u);\n  *(_BYTE *)a3 = *a1;\n  v6 = (_WORD *)((char *)v6 + 1);\n  v5 = a2 - 1;\n  if ( (unsigned int)DecodePaddedEPath((unsigned __int8 *)(a3 + 2), &v6, v8) )\n    return 4LL;\n  if ( (unsigned __int64)v5 < v8[0] )\n    return 38LL;\n  *(_QWORD *)(a3 + 24) = v6;\n  *(_QWORD *)(a3 + 16) = v5 - v8[0];\n  return 0LL;\n}\n\n                        \n                        Function Name: NotifyCommonPacketFormat\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall NotifyCommonPacketFormat(__int64 a1, __int64 a2, __int64 a3)\n{\n  unsigned int CommonPacketFormatStructure; // [rsp+20h] [rbp-230h]\n  __int64 v6; // [rsp+28h] [rbp-228h]\n  char v7[536]; // [rsp+30h] [rbp-220h] BYREF\n  unsigned __int64 v8; // [rsp+248h] [rbp-8h]\n\n  v8 = __readfsqword(0x28u);\n  InitializeMessageRouterResponse(v7);\n  CommonPacketFormatStructure = CreateCommonPacketFormatStructure(\n                                  *(_WORD **)(a1 + 32),\n                                  *(unsigned __int16 *)(a1 + 2),\n                                  (__int64)g_common_packet_format_data_item);\n  if ( CommonPacketFormatStructure != -1 )\n  {\n    if ( word_23484 || word_23490 != 178 )\n    {\n      GenerateEncapsulationHeader((unsigned __int16 *)a1, 0, *(_DWORD *)(a1 + 4), 3u, a3);\n      return 1;\n    }\n    else\n    {\n      CommonPacketFormatStructure = NotifyMessageRouter(qword_23498, word_23492, v7, a2, *(_DWORD *)(a1 + 4));\n      if ( CommonPacketFormatStructure != -1 )\n      {\n        SkipEncapsulationHeader(a3);\n        AssembleLinearMessage((__int64)v7, g_common_packet_format_data_item, a3);\n        v6 = *(_QWORD *)(a3 + 512);\n        *(_QWORD *)(a3 + 512) = a3;\n        GenerateEncapsulationHeader((unsigned __int16 *)a1, *(_QWORD *)(a3 + 520), *(_DWORD *)(a1 + 4), 0, a3);\n        *(_QWORD *)(a3 + 512) = v6;\n        return 1;\n      }\n    }\n  }\n  return CommonPacketFormatStructure;\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                        \n                        Function Name: NotifyMessageRouter\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall NotifyMessageRouter(_BYTE *a1, __int16 a2, _BYTE *a3, __int64 a4, unsigned int a5)\n{\n  unsigned int v9; // [rsp+20h] [rbp-10h]\n  int MessageRouterRequestStructure; // [rsp+24h] [rbp-Ch]\n  _QWORD *RegisteredObject; // [rsp+28h] [rbp-8h]\n\n  v9 = 1;\n  MessageRouterRequestStructure = CreateMessageRouterRequestStructure(a1, a2, (__int64)&g_message_router_request);\n  if ( MessageRouterRequestStructure )\n  {\n    a3[2] = MessageRouterRequestStructure;\n    a3[3] = 0;\n    a3[1] = 0;\n    *a3 = g_message_router_request | 0x80;\n  }\n  else\n  {\n    RegisteredObject = GetRegisteredObject((unsigned __int16)word_21CC4);\n    if ( RegisteredObject )\n    {\n      a3[1] = 0;\n      if ( !RegisteredObject[1] )\n        __assert_fail(\n          "((void *)0) != registered_object->cip_class",\n          "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipmessagerouter.c",\n          0xD6u,\n          "NotifyMessageRouter");\n      return (unsigned int)NotifyClass(RegisteredObject[1], (__int64)&g_message_router_request, a3, a4, a5);\n    }\n    else\n    {\n      a3[2] = 5;\n      a3[3] = 0;\n      a3[1] = 0;\n      *a3 = g_message_router_request | 0x80;\n    }\n  }\n  return v9;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (38, 39) appear to "contaminate" the global variables word_23492, g_message_router_request, qword_23498 and local variables a2, v11, var_18, a3, v14, var_28, a1, v6, v8, v5, a3, a2, var_2C, v7, a2, a1, var_A, a1, var_1C, v9, a1, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (38, 39) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:22,248 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:07:24,249 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (40,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: NotifyClass\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall NotifyClass(__int64 a1, __int64 a2, _BYTE *a3, __int64 a4, unsigned int a5)\n{\n  __int64 v9; // [rsp+38h] [rbp-18h]\n  unsigned __int64 i; // [rsp+40h] [rbp-10h]\n  __int64 CipInstance; // [rsp+48h] [rbp-8h]\n\n  CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));\n  if ( CipInstance )\n  {\n    v9 = *(_QWORD *)(*(_QWORD *)(CipInstance + 16) + 96LL);\n    if ( v9 )\n    {\n      for ( i = 0LL; i < *(unsigned __int16 *)(*(_QWORD *)(CipInstance + 16) + 80LL); ++i )\n      {\n        if ( *(_BYTE *)a2 == *(_BYTE *)v9 )\n        {\n          if ( !*(_QWORD *)(v9 + 8) )\n            __assert_fail(\n              "((void *)0) != service->service_function",\n              "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipcommon.c",\n              0x7Eu,\n              "NotifyClass");\n          return (*(__int64 (__fastcall **)(__int64, __int64, _BYTE *, __int64, _QWORD))(v9 + 8))(\n                   CipInstance,\n                   a2,\n                   a3,\n                   a4,\n                   a5);\n        }\n        v9 += 24LL;\n      }\n    }\n    a3[2] = 8;\n  }\n  else\n  {\n    a3[2] = 5;\n  }\n  a3[3] = 0;\n  InitializeENIPMessage(a3 + 8);\n  *a3 = *(_BYTE *)a2 | 0x80;\n  return 1LL;\n}\n\n                        \n                        Function Name: EncodeReplyService\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall EncodeReplyService(char *a1, __int64 a2)\n{\n  return AddSintToMessage(*a1, a2);\n}\n\n                        \n                        Function Name: CreateMessageRouterRequestStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateMessageRouterRequestStructure(_BYTE *a1, __int16 a2, __int64 a3)\n{\n  __int16 v5; // [rsp+14h] [rbp-2Ch]\n  _WORD *v6; // [rsp+18h] [rbp-28h] BYREF\n  __int64 v8[2]; // [rsp+30h] [rbp-10h] BYREF\n\n  v6 = a1;\n  v8[1] = __readfsqword(0x28u);\n  *(_BYTE *)a3 = *a1;\n  v6 = (_WORD *)((char *)v6 + 1);\n  v5 = a2 - 1;\n  if ( (unsigned int)DecodePaddedEPath((unsigned __int8 *)(a3 + 2), &v6, v8) )\n    return 4LL;\n  if ( (unsigned __int64)v5 < v8[0] )\n    return 38LL;\n  *(_QWORD *)(a3 + 24) = v6;\n  *(_QWORD *)(a3 + 16) = v5 - v8[0];\n  return 0LL;\n}\n\n                        \n                        Function Name: AddSintToMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall AddSintToMessage(char a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  *(_BYTE *)(*(_QWORD *)(a2 + 512))++ = a1;\n  result = a2;\n  ++*(_QWORD *)(a2 + 520);\n  return result;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (40,) appear to "contaminate" the global variables  and local variables a2, v9, a3, a1, a2, a3, a1, a2, a1, var_4. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (40,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:25,327 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:07:27,328 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (41,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: DecodePaddedEPath\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall DecodePaddedEPath(unsigned __int8 *a1, _WORD **a2, _QWORD *a3)\n{\n  __int64 result; // rax\n  unsigned int v5; // [rsp+2Ch] [rbp-14h]\n  _WORD *v6[2]; // [rsp+30h] [rbp-10h] BYREF\n\n  v6[1] = (_WORD *)__readfsqword(0x28u);\n  if ( !a3 )\n    __assert_fail(\n      "bytes_consumed != ((void *)0)",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipcommon.c",\n      0x56Fu,\n      "DecodePaddedEPath");\n  v5 = 0;\n  v6[0] = *a2;\n  *a1 = *(_BYTE *)v6[0]++;\n  *((_WORD *)a1 + 1) = 0;\n  *((_WORD *)a1 + 2) = 0;\n  *((_WORD *)a1 + 3) = 0;\n  while ( 2 )\n  {\n    if ( v5 < *a1 )\n    {\n      if ( (*(_BYTE *)v6[0] & 7) == 7 )\n      {\n        return 0xFFFFFFFFLL;\n      }\n      else\n      {\n        ++v5;\n        switch ( *(_BYTE *)v6[0] )\n        {\n          case \' \':\n            *((_WORD *)a1 + 1) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'!\':\n            ++v6[0];\n            *((_WORD *)a1 + 1) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'$\':\n            *((_WORD *)a1 + 2) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'%\':\n            ++v6[0];\n            *((_WORD *)a1 + 2) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'(\':\n            ++v6[0];\n            continue;\n          case \')\':\n            ++v6[0];\n            ++v5;\n            continue;\n          case \'0\':\n            *((_WORD *)a1 + 3) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'1\':\n            ++v6[0];\n            *((_WORD *)a1 + 3) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          default:\n            result = 0xFFFFFFFFLL;\n            break;\n        }\n      }\n    }\n    else\n    {\n      *a2 = v6[0];\n      *a3 = 2LL * v5 + 1;\n      return 0LL;\n    }\n    return result;\n  }\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (41,) appear to "contaminate" the global variables  and local variables v6, var_14, v5, a1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (41,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:28,270 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:07:30,272 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (42,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: DecodePaddedEPath\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall DecodePaddedEPath(unsigned __int8 *a1, _WORD **a2, _QWORD *a3)\n{\n  __int64 result; // rax\n  unsigned int v5; // [rsp+2Ch] [rbp-14h]\n  _WORD *v6[2]; // [rsp+30h] [rbp-10h] BYREF\n\n  v6[1] = (_WORD *)__readfsqword(0x28u);\n  if ( !a3 )\n    __assert_fail(\n      "bytes_consumed != ((void *)0)",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipcommon.c",\n      0x56Fu,\n      "DecodePaddedEPath");\n  v5 = 0;\n  v6[0] = *a2;\n  *a1 = *(_BYTE *)v6[0]++;\n  *((_WORD *)a1 + 1) = 0;\n  *((_WORD *)a1 + 2) = 0;\n  *((_WORD *)a1 + 3) = 0;\n  while ( 2 )\n  {\n    if ( v5 < *a1 )\n    {\n      if ( (*(_BYTE *)v6[0] & 7) == 7 )\n      {\n        return 0xFFFFFFFFLL;\n      }\n      else\n      {\n        ++v5;\n        switch ( *(_BYTE *)v6[0] )\n        {\n          case \' \':\n            *((_WORD *)a1 + 1) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'!\':\n            ++v6[0];\n            *((_WORD *)a1 + 1) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'$\':\n            *((_WORD *)a1 + 2) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'%\':\n            ++v6[0];\n            *((_WORD *)a1 + 2) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'(\':\n            ++v6[0];\n            continue;\n          case \')\':\n            ++v6[0];\n            ++v5;\n            continue;\n          case \'0\':\n            *((_WORD *)a1 + 3) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'1\':\n            ++v6[0];\n            *((_WORD *)a1 + 3) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          default:\n            result = 0xFFFFFFFFLL;\n            break;\n        }\n      }\n    }\n    else\n    {\n      *a2 = v6[0];\n      *a3 = 2LL * v5 + 1;\n      return 0LL;\n    }\n    return result;\n  }\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (42,) appear to "contaminate" the global variables  and local variables v6, v5. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (42,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:39,767 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:07:41,768 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (43,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: DecodePaddedEPath\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall DecodePaddedEPath(unsigned __int8 *a1, _WORD **a2, _QWORD *a3)\n{\n  __int64 result; // rax\n  unsigned int v5; // [rsp+2Ch] [rbp-14h]\n  _WORD *v6[2]; // [rsp+30h] [rbp-10h] BYREF\n\n  v6[1] = (_WORD *)__readfsqword(0x28u);\n  if ( !a3 )\n    __assert_fail(\n      "bytes_consumed != ((void *)0)",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipcommon.c",\n      0x56Fu,\n      "DecodePaddedEPath");\n  v5 = 0;\n  v6[0] = *a2;\n  *a1 = *(_BYTE *)v6[0]++;\n  *((_WORD *)a1 + 1) = 0;\n  *((_WORD *)a1 + 2) = 0;\n  *((_WORD *)a1 + 3) = 0;\n  while ( 2 )\n  {\n    if ( v5 < *a1 )\n    {\n      if ( (*(_BYTE *)v6[0] & 7) == 7 )\n      {\n        return 0xFFFFFFFFLL;\n      }\n      else\n      {\n        ++v5;\n        switch ( *(_BYTE *)v6[0] )\n        {\n          case \' \':\n            *((_WORD *)a1 + 1) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'!\':\n            ++v6[0];\n            *((_WORD *)a1 + 1) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'$\':\n            *((_WORD *)a1 + 2) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'%\':\n            ++v6[0];\n            *((_WORD *)a1 + 2) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'(\':\n            ++v6[0];\n            continue;\n          case \')\':\n            ++v6[0];\n            ++v5;\n            continue;\n          case \'0\':\n            *((_WORD *)a1 + 3) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'1\':\n            ++v6[0];\n            *((_WORD *)a1 + 3) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          default:\n            result = 0xFFFFFFFFLL;\n            break;\n        }\n      }\n    }\n    else\n    {\n      *a2 = v6[0];\n      *a3 = 2LL * v5 + 1;\n      return 0LL;\n    }\n    return result;\n  }\n}\n\n                        \n                        Function Name: GetRegisteredObject\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        _QWORD *__fastcall GetRegisteredObject(int a1)\n{\n  _QWORD *i; // [rsp+18h] [rbp-8h]\n\n  for ( i = (_QWORD *)g_first_object; i; i = (_QWORD *)*i )\n  {\n    if ( !i[1] )\n      __assert_fail(\n        "((void *)0) != object->cip_class",\n        "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipmessagerouter.c",\n        0x77u,\n        "GetRegisteredObject");\n    if ( a1 == *(_DWORD *)(i[1] + 40LL) )\n      return i;\n  }\n  return 0LL;\n}\n\n                        \n                        Function Name: NotifyMessageRouter\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall NotifyMessageRouter(_BYTE *a1, __int16 a2, _BYTE *a3, __int64 a4, unsigned int a5)\n{\n  unsigned int v9; // [rsp+20h] [rbp-10h]\n  int MessageRouterRequestStructure; // [rsp+24h] [rbp-Ch]\n  _QWORD *RegisteredObject; // [rsp+28h] [rbp-8h]\n\n  v9 = 1;\n  MessageRouterRequestStructure = CreateMessageRouterRequestStructure(a1, a2, (__int64)&g_message_router_request);\n  if ( MessageRouterRequestStructure )\n  {\n    a3[2] = MessageRouterRequestStructure;\n    a3[3] = 0;\n    a3[1] = 0;\n    *a3 = g_message_router_request | 0x80;\n  }\n  else\n  {\n    RegisteredObject = GetRegisteredObject((unsigned __int16)word_21CC4);\n    if ( RegisteredObject )\n    {\n      a3[1] = 0;\n      if ( !RegisteredObject[1] )\n        __assert_fail(\n          "((void *)0) != registered_object->cip_class",\n          "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipmessagerouter.c",\n          0xD6u,\n          "NotifyMessageRouter");\n      return (unsigned int)NotifyClass(RegisteredObject[1], (__int64)&g_message_router_request, a3, a4, a5);\n    }\n    else\n    {\n      a3[2] = 5;\n      a3[3] = 0;\n      a3[1] = 0;\n      *a3 = g_message_router_request | 0x80;\n    }\n  }\n  return v9;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (43,) appear to "contaminate" the global variables g_first_object, g_message_router_request, word_21CC4 and local variables a1, v6, var_14, a1, a3. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (43,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:50,213 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:07:52,214 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (44,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: DecodePaddedEPath\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall DecodePaddedEPath(unsigned __int8 *a1, _WORD **a2, _QWORD *a3)\n{\n  __int64 result; // rax\n  unsigned int v5; // [rsp+2Ch] [rbp-14h]\n  _WORD *v6[2]; // [rsp+30h] [rbp-10h] BYREF\n\n  v6[1] = (_WORD *)__readfsqword(0x28u);\n  if ( !a3 )\n    __assert_fail(\n      "bytes_consumed != ((void *)0)",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipcommon.c",\n      0x56Fu,\n      "DecodePaddedEPath");\n  v5 = 0;\n  v6[0] = *a2;\n  *a1 = *(_BYTE *)v6[0]++;\n  *((_WORD *)a1 + 1) = 0;\n  *((_WORD *)a1 + 2) = 0;\n  *((_WORD *)a1 + 3) = 0;\n  while ( 2 )\n  {\n    if ( v5 < *a1 )\n    {\n      if ( (*(_BYTE *)v6[0] & 7) == 7 )\n      {\n        return 0xFFFFFFFFLL;\n      }\n      else\n      {\n        ++v5;\n        switch ( *(_BYTE *)v6[0] )\n        {\n          case \' \':\n            *((_WORD *)a1 + 1) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'!\':\n            ++v6[0];\n            *((_WORD *)a1 + 1) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'$\':\n            *((_WORD *)a1 + 2) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'%\':\n            ++v6[0];\n            *((_WORD *)a1 + 2) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'(\':\n            ++v6[0];\n            continue;\n          case \')\':\n            ++v6[0];\n            ++v5;\n            continue;\n          case \'0\':\n            *((_WORD *)a1 + 3) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'1\':\n            ++v6[0];\n            *((_WORD *)a1 + 3) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          default:\n            result = 0xFFFFFFFFLL;\n            break;\n        }\n      }\n    }\n    else\n    {\n      *a2 = v6[0];\n      *a3 = 2LL * v5 + 1;\n      return 0LL;\n    }\n    return result;\n  }\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (44,) appear to "contaminate" the global variables  and local variables v6, v5. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (44,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:53,049 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:07:55,050 - my_text.py:618  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (45,)  has some situations that affect the operation of the relevant code\n\n                        Function Name: DecodePaddedEPath\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall DecodePaddedEPath(unsigned __int8 *a1, _WORD **a2, _QWORD *a3)\n{\n  __int64 result; // rax\n  unsigned int v5; // [rsp+2Ch] [rbp-14h]\n  _WORD *v6[2]; // [rsp+30h] [rbp-10h] BYREF\n\n  v6[1] = (_WORD *)__readfsqword(0x28u);\n  if ( !a3 )\n    __assert_fail(\n      "bytes_consumed != ((void *)0)",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipcommon.c",\n      0x56Fu,\n      "DecodePaddedEPath");\n  v5 = 0;\n  v6[0] = *a2;\n  *a1 = *(_BYTE *)v6[0]++;\n  *((_WORD *)a1 + 1) = 0;\n  *((_WORD *)a1 + 2) = 0;\n  *((_WORD *)a1 + 3) = 0;\n  while ( 2 )\n  {\n    if ( v5 < *a1 )\n    {\n      if ( (*(_BYTE *)v6[0] & 7) == 7 )\n      {\n        return 0xFFFFFFFFLL;\n      }\n      else\n      {\n        ++v5;\n        switch ( *(_BYTE *)v6[0] )\n        {\n          case \' \':\n            *((_WORD *)a1 + 1) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'!\':\n            ++v6[0];\n            *((_WORD *)a1 + 1) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'$\':\n            *((_WORD *)a1 + 2) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'%\':\n            ++v6[0];\n            *((_WORD *)a1 + 2) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          case \'(\':\n            ++v6[0];\n            continue;\n          case \')\':\n            ++v6[0];\n            ++v5;\n            continue;\n          case \'0\':\n            *((_WORD *)a1 + 3) = *((unsigned __int8 *)v6[0]++ + 1);\n            continue;\n          case \'1\':\n            ++v6[0];\n            *((_WORD *)a1 + 3) = GetUintFromMessage(v6);\n            ++v5;\n            continue;\n          default:\n            result = 0xFFFFFFFFLL;\n            break;\n        }\n      }\n    }\n    else\n    {\n      *a2 = v6[0];\n      *a3 = 2LL * v5 + 1;\n      return 0LL;\n    }\n    return result;\n  }\n}\n\n                        \n                        Function Name: NotifyClass\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall NotifyClass(__int64 a1, __int64 a2, _BYTE *a3, __int64 a4, unsigned int a5)\n{\n  __int64 v9; // [rsp+38h] [rbp-18h]\n  unsigned __int64 i; // [rsp+40h] [rbp-10h]\n  __int64 CipInstance; // [rsp+48h] [rbp-8h]\n\n  CipInstance = GetCipInstance(a1, *(_WORD *)(a2 + 6));\n  if ( CipInstance )\n  {\n    v9 = *(_QWORD *)(*(_QWORD *)(CipInstance + 16) + 96LL);\n    if ( v9 )\n    {\n      for ( i = 0LL; i < *(unsigned __int16 *)(*(_QWORD *)(CipInstance + 16) + 80LL); ++i )\n      {\n        if ( *(_BYTE *)a2 == *(_BYTE *)v9 )\n        {\n          if ( !*(_QWORD *)(v9 + 8) )\n            __assert_fail(\n              "((void *)0) != service->service_function",\n              "/home/linuxbrew/BinPRE/src/OpENer/source/src/cip/cipcommon.c",\n              0x7Eu,\n              "NotifyClass");\n          return (*(__int64 (__fastcall **)(__int64, __int64, _BYTE *, __int64, _QWORD))(v9 + 8))(\n                   CipInstance,\n                   a2,\n                   a3,\n                   a4,\n                   a5);\n        }\n        v9 += 24LL;\n      }\n    }\n    a3[2] = 8;\n  }\n  else\n  {\n    a3[2] = 5;\n  }\n  a3[3] = 0;\n  InitializeENIPMessage(a3 + 8);\n  *a3 = *(_BYTE *)a2 | 0x80;\n  return 1LL;\n}\n\n                        \n                        Function Name: GetCipInstance\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetCipInstance(__int64 a1, __int16 a2)\n{\n  __int64 i; // [rsp+14h] [rbp-8h]\n\n  if ( !a2 )\n    return a1;\n  for ( i = *(_QWORD *)(a1 + 88); i; i = *(_QWORD *)(i + 24) )\n  {\n    if ( a2 == *(_WORD *)i )\n      return i;\n  }\n  return 0LL;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (45,) appear to "contaminate" the global variables  and local variables a1, v6, a2, var_1A, a1, var_1C, a2. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (45,) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:56,013 - my_text.py:621  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
int, length
```
2025-03-08 21:07:58,014 - my_text.py:637  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 field_type: {'0,1': ['int'], '2,3': ['int'], '4,5,6,7': ['int'], '8,9,10,11': ['unsigned int'], '20,21,22,23': ['int'], '24,25,26,27': ['int'], '28,29': ['unsigned int'], '30,31': ['unsigned int'], '32,33': ['int'], '34,35': ['unsigned short'], '36,37': ['unsigned int'], '38,39': ['int'], '40': ['int'], '41': ['int'], '42': ['int'], '43': ['int'], '44': ['int'], '45': ['int']}
2025-03-08 21:07:58,014 - my_text.py:638  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 field_func: {'0,1': ['length'], '2,3': ['length'], '4,5,6,7': ['length'], '8,9,10,11': ['length'], '20,21,22,23': ['length'], '24,25,26,27': ['length'], '28,29': ['length'], '30,31': ['length'], '32,33': ['length'], '34,35': ['length'], '36,37': ['length'], '38,39': ['length'], '40': ['length'], '41': ['length'], '42': ['length'], '43': ['length'], '44': ['length'], '45': ['length']}
2025-03-08 21:07:58,014 - my_text.py:688  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': '\n            You are provided with a list named [\'_pycomm_\', \'$)0\'] that contains visible strings. Your task is to analyze these strings. If the strings have specific meanings and can be further divided, please present the division results in a Python code block. Each part of the result should be separated by a comma.\n            The types of granularity for division include static text, command groups, strings, integers, decimals, and binary. The semantic granularity includes commands, lengths, delimiters, checksums, file names, etc.\n            Here is an example: If the input is ["POST /path HTTP/1.1"], the correct output should be\n            ```python\n            POST, command group, command\n            , string, delimiter\n            /path, string, file\n            HTTP/1.1, static text, static text\n            ```\n            If you don\'t think these strings have a specific meaning, just answer ```python ```\n            '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:07:59,869 - my_text.py:691  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 Response result: ```python
```python
_pycomm_, string, static text
$, string, delimiter
0, string, static text
)0, string, static text
```
2025-03-08 21:08:01,871 - my_text.py:712  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 field_llm_type: {'_pycomm_': {'string'}, '$': {'string'}, '0': {'string'}, ')0': {'string'}}
2025-03-08 21:08:01,872 - my_text.py:713  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 field_llm_Sem: {'_pycomm_': {'static text'}, '$': {'delimiter'}, '0': {'static text'}, ')0': {'static text'}}
2025-03-08 21:08:01,873 - my_text.py:726  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 LLM_field_string: [-1, 1, 2, 11, 19, 43, 44, 53, 54, 56]
2025-03-08 21:08:01,873 - my_text.py:727  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 string_dict: {'2': '24', '12,13,14,15,16,17,18,19': '5f7079636f6d6d5f', '44': '24', '54': '24', '55,56': '2930'}
2025-03-08 21:08:01,874 - my_text.py:746  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 LLM_field_deli: []
2025-03-08 21:08:01,874 - my_text.py:753  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 LLM_field_LLM: [-1, 1, 2, 3, 7, 11, 19, 23, 27, 29, 31, 33, 35, 37, 39, 40, 41, 42, 43, 44, 45, 53, 54, 56]
2025-03-08 21:08:01,875 - my_text.py:754  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 used_fields_llm: ['0,1', '2', '3', '4,5,6,7', '8,9,10,11', '12,13,14,15,16,17,18,19', '20,21,22,23', '24,25,26,27', '28,29', '30,31', '32,33', '34,35', '36,37', '38,39', '40', '41', '42', '43', '44', '45', '46,47,48,49,50,51,52,53', '54', '55,56']
2025-03-08 21:08:01,875 - my_text.py:776  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 field_llm_type_llm: {'0,1': ['unsigned int'], '2': ['string'], '3': ['int'], '4,5,6,7': ['int'], '8,9,10,11': ['unsigned int'], '12,13,14,15,16,17,18,19': ['string'], '20,21,22,23': ['int'], '24,25,26,27': ['int'], '28,29': ['unsigned int'], '30,31': ['unsigned int'], '32,33': ['int'], '34,35': ['unsigned short'], '36,37': ['unsigned int'], '38,39': ['int'], '40': ['int'], '41': ['int'], '42': ['int'], '43': ['int'], '44': ['string'], '45': ['int'], '54': ['string'], '55,56': ['string']}
2025-03-08 21:08:01,875 - my_text.py:777  - 1:6f00240001000000000000005f7079636f6d6d5f00000000000000000a00020000000000b20014005202200624010a0508000e032093242930090000 field_llm_Sem_llm: {'0,1': ['length'], '2': ['delimiter'], '3': ['length'], '4,5,6,7': ['length'], '8,9,10,11': ['length'], '12,13,14,15,16,17,18,19': ['static text'], '20,21,22,23': ['length'], '24,25,26,27': ['length'], '28,29': ['length'], '30,31': ['length'], '32,33': ['length'], '34,35': ['length'], '36,37': ['length'], '38,39': ['length'], '40': ['length'], '41': ['length'], '42': ['length'], '43': ['length'], '44': ['delimiter'], '45': ['length'], '54': ['delimiter'], '55,56': ['static text']}
2025-03-08 21:08:01,876 - my_text.py:432  - {'0': {2: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleDataOnTcpSocket': {'      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;', '            if ( v13 == (unsigned int)v14 )', '              v13 += 4LL;', '        v14 = recv(a1, (char *)buf + 4, v13, 0);', '      if ( v13 <= 0x1FC )', '              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);'}, 'HandleReceivedExplictTcpData': {'  v17 = __readfsqword(0x28u);', '  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);'}, 'CreateEncapsulationStructure': {'  if ( a2 >= 0x80000000 )', '  src = a1;', '  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);', '  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));'}}, 3: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleDataOnTcpSocket': {'      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;', '            if ( v13 == (unsigned int)v14 )', '              v13 += 4LL;', '        v14 = recv(a1, (char *)buf + 4, v13, 0);', '      if ( v13 <= 0x1FC )', '              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);'}, 'HandleReceivedExplictTcpData': {'  v17 = __readfsqword(0x28u);', '  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);'}, 'CreateEncapsulationStructure': {'  if ( a2 >= 0x80000000 )', '  src = a1;', '  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);', '  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));'}}, 0: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateEncapsulationStructure': {'  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);'}, 'HandleReceivedExplictTcpData': {'    if ( (unsigned __int16)v12 > 0x70u )', '    if ( (unsigned __int16)v12 >= 0x63u )', '        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);'}}, 1: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateEncapsulationStructure': {'  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);'}, 'HandleReceivedExplictTcpData': {'    if ( (unsigned __int16)v12 > 0x70u )', '    if ( (unsigned __int16)v12 >= 0x63u )', '        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);'}}, 4: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedUnregisterSessionCommand': {'    || (v3 = *(_DWORD *)(a1 + 4) - 1, g_registered_sessions[v3] == -1) )', '    || *(_DWORD *)(a1 + 4) > 0x14u', '  if ( !*(_DWORD *)(a1 + 4)', '    g_registered_sessions[v3] = -1;', '    CloseClass3ConnectionBasedOnSession(v3 + 1);', '    CloseTcpSocket((unsigned int)g_registered_sessions[v3]);'}, 'CloseClass3ConnectionBasedOnSession': {'  result = connection_list;'}}, 5: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedUnregisterSessionCommand': {'    || (v3 = *(_DWORD *)(a1 + 4) - 1, g_registered_sessions[v3] == -1) )', '    || *(_DWORD *)(a1 + 4) > 0x14u', '  if ( !*(_DWORD *)(a1 + 4)', '    g_registered_sessions[v3] = -1;', '    CloseClass3ConnectionBasedOnSession(v3 + 1);', '    CloseTcpSocket((unsigned int)g_registered_sessions[v3]);'}, 'CloseClass3ConnectionBasedOnSession': {'  result = connection_list;'}}, 6: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedUnregisterSessionCommand': {'    || (v3 = *(_DWORD *)(a1 + 4) - 1, g_registered_sessions[v3] == -1) )', '    || *(_DWORD *)(a1 + 4) > 0x14u', '  if ( !*(_DWORD *)(a1 + 4)', '    g_registered_sessions[v3] = -1;', '    CloseClass3ConnectionBasedOnSession(v3 + 1);', '    CloseTcpSocket((unsigned int)g_registered_sessions[v3]);'}, 'CloseClass3ConnectionBasedOnSession': {'  result = connection_list;'}}, 7: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedUnregisterSessionCommand': {'    || (v3 = *(_DWORD *)(a1 + 4) - 1, g_registered_sessions[v3] == -1) )', '    || *(_DWORD *)(a1 + 4) > 0x14u', '  if ( !*(_DWORD *)(a1 + 4)', '    g_registered_sessions[v3] = -1;', '    CloseClass3ConnectionBasedOnSession(v3 + 1);', '    CloseTcpSocket((unsigned int)g_registered_sessions[v3]);'}, 'CloseClass3ConnectionBasedOnSession': {'  result = connection_list;'}}, 8: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 9: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 10: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 11: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 20: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 21: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 22: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 23: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}}}
2025-03-08 21:08:01,878 - my_text.py:443  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Updated c_taint_c_dict: {'0': {2: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleDataOnTcpSocket': {'v14', 'v2', 'if', '4', 'HandleReceivedExplictTcpData', 'v5', 'unsigned', 'recv', '20', '0', 'GetUintFromMessage', 'v13', 's', 'buf', '__int64', 'a1', 'v11', 'v23', 'char', '0x1FC', '4LL', 'int', '__int16'}, 'HandleReceivedExplictTcpData': {'a3', '__int64', 'v17', '0x28u', 'CreateEncapsulationStructure', 'a2', 'EncapsulationStructure', '__readfsqword', 'v12'}, 'CreateEncapsulationStructure': {'a3', 'unsigned', 'src', '24', 'return', 'a2', 'if', '0x80000000', 'a1', '_WORD', 'int', '2', 'GetUintFromMessage', '__int16'}}, 3: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleDataOnTcpSocket': {'v14', 'v2', 'if', '4', 'HandleReceivedExplictTcpData', 'v5', 'unsigned', 'recv', '20', '0', 'GetUintFromMessage', 'v13', 's', 'buf', '__int64', 'a1', 'v11', 'v23', 'char', '0x1FC', '4LL', 'int', '__int16'}, 'HandleReceivedExplictTcpData': {'a3', '__int64', 'v17', '0x28u', 'CreateEncapsulationStructure', 'a2', 'EncapsulationStructure', '__readfsqword', 'v12'}, 'CreateEncapsulationStructure': {'a3', 'unsigned', 'src', '24', 'return', 'a2', 'if', '0x80000000', 'a1', '_WORD', 'int', '2', 'GetUintFromMessage', '__int16'}}, 0: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateEncapsulationStructure': {'src', '_WORD', 'a3', 'GetUintFromMessage'}, 'HandleReceivedExplictTcpData': {'unsigned', '0x63u', 'HandleReceivedInvalidCommand', 'return', 'a6', 'if', 'int', 'v12', '0x70u', '__int16'}}, 1: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateEncapsulationStructure': {'src', '_WORD', 'a3', 'GetUintFromMessage'}, 'HandleReceivedExplictTcpData': {'unsigned', '0x63u', 'HandleReceivedInvalidCommand', 'return', 'a6', 'if', 'int', 'v12', '0x70u', '__int16'}}, 4: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedUnregisterSessionCommand': {'v3', '4', 'CloseTcpSocket', 'unsigned', '_DWORD', 'CloseClass3ConnectionBasedOnSession', 'g_registered_sessions', 'a1', 'if', 'int', '0x14u', '1'}, 'CloseClass3ConnectionBasedOnSession': {'connection_list', 'result'}}, 5: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedUnregisterSessionCommand': {'v3', '4', 'CloseTcpSocket', 'unsigned', '_DWORD', 'CloseClass3ConnectionBasedOnSession', 'g_registered_sessions', 'a1', 'if', 'int', '0x14u', '1'}, 'CloseClass3ConnectionBasedOnSession': {'connection_list', 'result'}}, 6: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedUnregisterSessionCommand': {'v3', '4', 'CloseTcpSocket', 'unsigned', '_DWORD', 'CloseClass3ConnectionBasedOnSession', 'g_registered_sessions', 'a1', 'if', 'int', '0x14u', '1'}, 'CloseClass3ConnectionBasedOnSession': {'connection_list', 'result'}}, 7: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedUnregisterSessionCommand': {'v3', '4', 'CloseTcpSocket', 'unsigned', '_DWORD', 'CloseClass3ConnectionBasedOnSession', 'g_registered_sessions', 'a1', 'if', 'int', '0x14u', '1'}, 'CloseClass3ConnectionBasedOnSession': {'connection_list', 'result'}}, 8: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 9: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 10: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 11: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 20: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 21: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 22: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 23: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}}}
2025-03-08 21:08:01,880 - my_text.py:460  - 2:6600000001000000000000005f7079636f6d6d5f00000000 var_flow: {'0': {2: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'HandleDataOnTcpSocket:v2', 'HandleDataOnTcpSocket:n', 'HandleDataOnTcpSocket:v23', 'HandleDataOnTcpSocket:a1', 'HandleDataOnTcpSocket:buf', 'CreateEncapsulationStructure:a1', 'HandleDataOnTcpSocket:var_478', 'GetUintFromMessage:var_A', 'CreateEncapsulationStructure:a2', 'GetUintFromMessage:a1', 'HandleDataOnTcpSocket:v13', 'HandleDataOnTcpSocket:v14', 'HandleReceivedExplictTcpData:a3', 'HandleDataOnTcpSocket:v5', 'HandleDataOnTcpSocket:v11', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a2', 'HandleReceivedExplictTcpData:var_58', 'CreateEncapsulationStructure:var_10', 'HandleDataOnTcpSocket:s', 'HandleReceivedExplictTcpData:v17'}, 3: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'HandleDataOnTcpSocket:v2', 'HandleDataOnTcpSocket:n', 'HandleDataOnTcpSocket:v23', 'HandleDataOnTcpSocket:a1', 'HandleDataOnTcpSocket:buf', 'CreateEncapsulationStructure:a1', 'HandleDataOnTcpSocket:var_478', 'GetUintFromMessage:var_A', 'CreateEncapsulationStructure:a2', 'GetUintFromMessage:a1', 'HandleDataOnTcpSocket:v13', 'HandleDataOnTcpSocket:v14', 'HandleReceivedExplictTcpData:a3', 'HandleDataOnTcpSocket:v5', 'HandleDataOnTcpSocket:v11', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a2', 'HandleReceivedExplictTcpData:var_58', 'CreateEncapsulationStructure:var_10', 'HandleDataOnTcpSocket:s', 'HandleReceivedExplictTcpData:v17'}, 0: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'CreateEncapsulationStructure:a3', 'GetUintFromMessage:var_A', 'HandleReceivedExplictTcpData:var_30', 'HandleReceivedExplictTcpData:a6', 'GetUintFromMessage:a1'}, 1: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'CreateEncapsulationStructure:a3', 'GetUintFromMessage:var_A', 'HandleReceivedExplictTcpData:var_30', 'HandleReceivedExplictTcpData:a6', 'GetUintFromMessage:a1'}, 4: {'CreateEncapsulationStructure:src', 'global:g_registered_sessions', 'CreateEncapsulationStructure:a3', 'HandleReceivedUnregisterSessionCommand:v3', 'HandleReceivedUnregisterSessionCommand:var_4', 'global:connection_list', 'CloseClass3ConnectionBasedOnSession:var_14', 'GetUdintFromMessage:v2', 'HandleReceivedUnregisterSessionCommand:a1', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 5: {'CreateEncapsulationStructure:src', 'global:g_registered_sessions', 'CreateEncapsulationStructure:a3', 'HandleReceivedUnregisterSessionCommand:v3', 'HandleReceivedUnregisterSessionCommand:var_4', 'global:connection_list', 'CloseClass3ConnectionBasedOnSession:var_14', 'GetUdintFromMessage:v2', 'HandleReceivedUnregisterSessionCommand:a1', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 6: {'CreateEncapsulationStructure:src', 'global:g_registered_sessions', 'CreateEncapsulationStructure:a3', 'HandleReceivedUnregisterSessionCommand:v3', 'HandleReceivedUnregisterSessionCommand:var_4', 'global:connection_list', 'CloseClass3ConnectionBasedOnSession:var_14', 'GetUdintFromMessage:v2', 'HandleReceivedUnregisterSessionCommand:a1', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 7: {'CreateEncapsulationStructure:src', 'global:g_registered_sessions', 'CreateEncapsulationStructure:a3', 'HandleReceivedUnregisterSessionCommand:v3', 'HandleReceivedUnregisterSessionCommand:var_4', 'global:connection_list', 'CloseClass3ConnectionBasedOnSession:var_14', 'GetUdintFromMessage:v2', 'HandleReceivedUnregisterSessionCommand:a1', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 8: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 9: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 10: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 11: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 20: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 21: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 22: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 23: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}}}
2025-03-08 21:08:01,880 - my_text.py:478  - Key pair (2, 3): Similarity = 1.0
2025-03-08 21:08:01,880 - my_text.py:478  - Key pair (0, 1): Similarity = 1.0
2025-03-08 21:08:01,881 - my_text.py:478  - Key pair (4, 5): Similarity = 1.0
2025-03-08 21:08:01,881 - my_text.py:478  - Key pair (5, 6): Similarity = 1.0
2025-03-08 21:08:01,881 - my_text.py:478  - Key pair (6, 7): Similarity = 1.0
2025-03-08 21:08:01,881 - my_text.py:478  - Key pair (8, 9): Similarity = 1.0
2025-03-08 21:08:01,881 - my_text.py:478  - Key pair (9, 10): Similarity = 1.0
2025-03-08 21:08:01,881 - my_text.py:478  - Key pair (10, 11): Similarity = 1.0
2025-03-08 21:08:01,881 - my_text.py:478  - Key pair (20, 21): Similarity = 1.0
2025-03-08 21:08:01,882 - my_text.py:478  - Key pair (21, 22): Similarity = 1.0
2025-03-08 21:08:01,882 - my_text.py:478  - Key pair (22, 23): Similarity = 1.0
2025-03-08 21:08:01,882 - my_text.py:482  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Similarity matrix: {(2, 3): 1.0, (3, 0): 0.2, (0, 1): 1.0, (1, 4): 0.125, (4, 5): 1.0, (5, 6): 1.0, (6, 7): 1.0, (7, 8): 0.45454545454545453, (8, 9): 1.0, (9, 10): 1.0, (10, 11): 1.0, (11, 20): 0.625, (20, 21): 1.0, (21, 22): 1.0, (22, 23): 1.0}
2025-03-08 21:08:01,882 - my_text.py:519  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Merged queue: [(0, 1), (2, 3), (4, 5, 6, 7), (8, 9, 10, 11), (20, 21, 22, 23)]
2025-03-08 21:08:01,882 - my_text.py:525  - 2:6600000001000000000000005f7079636f6d6d5f00000000 used_fields: ['0,1', '2,3', '4,5,6,7', '8,9,10,11', '20,21,22,23']
2025-03-08 21:08:01,883 - my_text.py:541  - 2:6600000001000000000000005f7079636f6d6d5f00000000 data_new: {(0, 1): {'CreateEncapsulationStructure': ['src', 'a3'], 'HandleReceivedExplictTcpData': ['v12', 'var_30', 'a6'], 'GetUintFromMessage': ['var_A', 'a1']}, (2, 3): {'CreateEncapsulationStructure': ['src', 'a1', 'a2', 'a3', 'var_10'], 'HandleReceivedExplictTcpData': ['v12', 'a3', 'a2', 'var_58', 'v17'], 'HandleDataOnTcpSocket': ['v2', 'n', 'v23', 'a1', 'buf', 'var_478', 'v13', 'v14', 'v5', 'v11', 's'], 'GetUintFromMessage': ['var_A', 'a1']}, (4, 5, 6, 7): {'CreateEncapsulationStructure': ['src', 'a3'], 'HandleReceivedUnregisterSessionCommand': ['var_4', 'a1', 'v3'], 'global': ['connection_list', 'g_registered_sessions'], 'CloseClass3ConnectionBasedOnSession': ['var_14'], 'GetUdintFromMessage': ['v2', 'a1', 'var_C']}, (8, 9, 10, 11): {'CreateEncapsulationStructure': ['src', 'a3'], 'GetUdintFromMessage': ['v2', 'a1', 'var_C']}, (20, 21, 22, 23): {'CreateEncapsulationStructure': ['src', 'a3'], 'HandleReceivedExplictTcpData': ['var_20', 'v14', 'a4'], 'GetUdintFromMessage': ['v2', 'a1', 'var_C']}}
2025-03-08 21:08:01,883 - my_text.py:618  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (0, 1)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (0, 1) appear to "contaminate" the global variables  and local variables src, a3, v12, var_30, a6, var_A, a1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (0, 1) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:08:03,287 - my_text.py:621  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Response result: ```python
unsigned __int16, length
```
2025-03-08 21:08:05,288 - my_text.py:618  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (2, 3)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: HandleDataOnTcpSocket\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleDataOnTcpSocket(unsigned int a1)\n{\n  int v2; // [rsp+14h] [rbp-4ACh] BYREF\n  socklen_t len; // [rsp+18h] [rbp-4A8h] BYREF\n  unsigned int SocketErrorNumber; // [rsp+1Ch] [rbp-4A4h]\n  int v5; // [rsp+20h] [rbp-4A0h]\n  unsigned int v6; // [rsp+24h] [rbp-49Ch]\n  unsigned int v7; // [rsp+28h] [rbp-498h]\n  unsigned int v8; // [rsp+2Ch] [rbp-494h]\n  unsigned int v9; // [rsp+30h] [rbp-490h]\n  unsigned int v10; // [rsp+34h] [rbp-48Ch]\n  _WORD *v11; // [rsp+38h] [rbp-488h] BYREF\n  size_t n; // [rsp+40h] [rbp-480h]\n  size_t v13; // [rsp+48h] [rbp-478h]\n  ssize_t v14; // [rsp+50h] [rbp-470h]\n  __int64 SocketTimer; // [rsp+58h] [rbp-468h]\n  __int64 ErrorMessage; // [rsp+60h] [rbp-460h]\n  __int64 v17; // [rsp+68h] [rbp-458h]\n  __int64 v18; // [rsp+70h] [rbp-450h]\n  __int64 v19; // [rsp+78h] [rbp-448h]\n  __int64 v20; // [rsp+80h] [rbp-440h]\n  __int64 v21; // [rsp+88h] [rbp-438h]\n  struct sockaddr s; // [rsp+90h] [rbp-430h] BYREF\n  char v23[520]; // [rsp+A0h] [rbp-420h] BYREF\n  size_t v24; // [rsp+2A8h] [rbp-218h]\n  __int64 buf[66]; // [rsp+2B0h] [rbp-210h] BYREF\n\n  buf[65] = __readfsqword(0x28u);\n  v2 = 0;\n  n = 512LL;\n  memset(buf, 0, 512);\n  v14 = recv(a1, buf, 4uLL, 0);\n  SocketTimer = SocketTimerArrayGetSocketTimer(&g_timestamps, 20LL, a1);\n  if ( v14 )\n  {\n    if ( v14 >= 0 )\n    {\n      v11 = (_WORD *)buf + 1;\n      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;\n      if ( v13 <= 0x1FC )\n      {\n        v14 = recv(a1, (char *)buf + 4, v13, 0);\n        if ( v14 )\n        {\n          if ( v14 >= 0 )\n          {\n            if ( v13 == (unsigned int)v14 )\n            {\n              v13 += 4LL;\n              g_current_active_tcp_socket = a1;\n              memset(&s, 0, sizeof(s));\n              len = 16;\n              if ( getpeername(a1, &s, &len) < 0 )\n              {\n                SocketErrorNumber = GetSocketErrorNumber();\n                ErrorMessage = GetErrorMessage(SocketErrorNumber);\n                FreeErrorMessage(ErrorMessage);\n              }\n              InitializeENIPMessage(v23);\n              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);\n              if ( SocketTimer )\n                SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n              g_current_active_tcp_socket = -1;\n              if ( v5 > 0 )\n              {\n                n = send(a1, v23, v24, 0x4000);\n                SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n              }\n              return 0LL;\n            }\n            else\n            {\n              return 0xFFFFFFFFLL;\n            }\n          }\n          else\n          {\n            v6 = GetSocketErrorNumber();\n            v17 = GetErrorMessage(v6);\n            if ( v6 == 11 )\n            {\n              return 0LL;\n            }\n            else\n            {\n              FreeErrorMessage(v17);\n              return 0xFFFFFFFFLL;\n            }\n          }\n        }\n        else\n        {\n          v7 = GetSocketErrorNumber();\n          v18 = GetErrorMessage(v7);\n          FreeErrorMessage(v18);\n          RemoveSocketTimerFromList(a1);\n          RemoveSession(a1);\n          return 0xFFFFFFFFLL;\n        }\n      }\n      else\n      {\n        while ( 1 )\n        {\n          v14 = recv(a1, buf, n, 0);\n          if ( !v14 )\n          {\n            v9 = GetSocketErrorNumber();\n            v20 = GetErrorMessage(v9);\n            FreeErrorMessage(v20);\n            RemoveSocketTimerFromList(a1);\n            return 0xFFFFFFFFLL;\n          }\n          if ( v14 < 0 )\n            break;\n          v13 -= v14;\n          if ( v13 <= 0x1FF && v13 )\n            n = v13;\n          if ( !v13 )\n          {\n            SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n            return 0LL;\n          }\n        }\n        v8 = GetSocketErrorNumber();\n        v19 = GetErrorMessage(v8);\n        if ( v8 == 11 )\n        {\n          return 0LL;\n        }\n        else\n        {\n          FreeErrorMessage(v19);\n          return 0xFFFFFFFFLL;\n        }\n      }\n    }\n    else\n    {\n      v10 = GetSocketErrorNumber();\n      if ( v10 == 11 )\n      {\n        return 0LL;\n      }\n      else\n      {\n        v21 = GetErrorMessage(v10);\n        FreeErrorMessage(v21);\n        return 0xFFFFFFFFLL;\n      }\n    }\n  }\n  else\n  {\n    RemoveSocketTimerFromList(a1);\n    RemoveSession(a1);\n    return 0xFFFFFFFFLL;\n  }\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (2, 3) appear to "contaminate" the global variables  and local variables src, a1, a2, a3, var_10, v12, a3, a2, var_58, v17, v2, n, v23, a1, buf, var_478, v13, v14, v5, v11, s, var_A, a1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (2, 3) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:08:06,376 - my_text.py:621  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Response result: ```python
int, length
```
2025-03-08 21:08:08,378 - my_text.py:618  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (4, 5, 6, 7)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedUnregisterSessionCommand\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedUnregisterSessionCommand(__int64 a1, __int64 a2)\n{\n  int v3; // [rsp+1Ch] [rbp-4h]\n\n  if ( !*(_DWORD *)(a1 + 4)\n    || *(_DWORD *)(a1 + 4) > 0x14u\n    || (v3 = *(_DWORD *)(a1 + 4) - 1, g_registered_sessions[v3] == -1) )\n  {\n    GenerateEncapsulationHeader((unsigned __int16 *)a1, 0, *(_DWORD *)(a1 + 4), 0x64u, a2);\n    return 1LL;\n  }\n  else\n  {\n    CloseTcpSocket((unsigned int)g_registered_sessions[v3]);\n    g_registered_sessions[v3] = -1;\n    CloseClass3ConnectionBasedOnSession(v3 + 1);\n    return 0LL;\n  }\n}\n\n                        \n                        Function Name: CloseClass3ConnectionBasedOnSession\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CloseClass3ConnectionBasedOnSession(int a1)\n{\n  __int64 result; // rax\n  __int64 i; // [rsp+10h] [rbp-10h]\n  __int64 v3; // [rsp+18h] [rbp-8h]\n\n  result = connection_list;\n  for ( i = connection_list; i; i = result )\n  {\n    v3 = *(_QWORD *)(i + 16);\n    if ( (unsigned int)ConnectionObjectGetTransportClassTriggerTransportClass(v3) == 3 && a1 == *(_DWORD *)(v3 + 248) )\n      (*(void (__fastcall **)(__int64))(v3 + 264))(v3);\n    result = *(_QWORD *)(i + 8);\n  }\n  return result;\n}\n\n                        \n                        Function Name: GetUdintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUdintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (4, 5, 6, 7) appear to "contaminate" the global variables connection_list, g_registered_sessions and local variables src, a3, var_4, a1, v3, var_14, v2, a1, var_C. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (4, 5, 6, 7) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:08:09,216 - my_text.py:621  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Response result: ```python
int, length
```
2025-03-08 21:08:11,217 - my_text.py:618  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (8, 9, 10, 11)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: GetUdintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUdintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (8, 9, 10, 11) appear to "contaminate" the global variables  and local variables src, a3, v2, a1, var_C. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (8, 9, 10, 11) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:08:19,061 - my_text.py:621  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Response result: ```python
unsigned int, length
```
2025-03-08 21:08:21,063 - my_text.py:618  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (20, 21, 22, 23)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: GetUdintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUdintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (20, 21, 22, 23) appear to "contaminate" the global variables  and local variables src, a3, var_20, v14, a4, v2, a1, var_C. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (20, 21, 22, 23) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:08:22,089 - my_text.py:621  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Response result: ```python
int, length
```
2025-03-08 21:08:24,090 - my_text.py:637  - 2:6600000001000000000000005f7079636f6d6d5f00000000 field_type: {'0,1': ['unsigned __int16'], '2,3': ['int'], '4,5,6,7': ['int'], '8,9,10,11': ['unsigned int'], '20,21,22,23': ['int']}
2025-03-08 21:08:24,090 - my_text.py:638  - 2:6600000001000000000000005f7079636f6d6d5f00000000 field_func: {'0,1': ['length'], '2,3': ['length'], '4,5,6,7': ['length'], '8,9,10,11': ['length'], '20,21,22,23': ['length']}
2025-03-08 21:08:24,090 - my_text.py:688  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': '\n            You are provided with a list named [\'_pycomm_\'] that contains visible strings. Your task is to analyze these strings. If the strings have specific meanings and can be further divided, please present the division results in a Python code block. Each part of the result should be separated by a comma.\n            The types of granularity for division include static text, command groups, strings, integers, decimals, and binary. The semantic granularity includes commands, lengths, delimiters, checksums, file names, etc.\n            Here is an example: If the input is ["POST /path HTTP/1.1"], the correct output should be\n            ```python\n            POST, command group, command\n            , string, delimiter\n            /path, string, file\n            HTTP/1.1, static text, static text\n            ```\n            If you don\'t think these strings have a specific meaning, just answer ```python ```\n            '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:08:27,023 - my_text.py:691  - 2:6600000001000000000000005f7079636f6d6d5f00000000 Response result: ```python
```python

POST, command group, command
 , string, delimiter
 /path, string, file path
 HTTP/1.1, static text, protocol version
```
```
2025-03-08 21:08:29,023 - my_text.py:712  - 2:6600000001000000000000005f7079636f6d6d5f00000000 field_llm_type: {'POST': {'command group'}, ' ': {'string'}, ' /path': {'string'}, ' HTTP/1.1': {'static text'}}
2025-03-08 21:08:29,023 - my_text.py:713  - 2:6600000001000000000000005f7079636f6d6d5f00000000 field_llm_Sem: {'POST': {'command'}, ' ': {'delimiter'}, ' /path': {'file path'}, ' HTTP/1.1': {'protocol version'}}
2025-03-08 21:08:29,023 - my_text.py:726  - 2:6600000001000000000000005f7079636f6d6d5f00000000 LLM_field_string: [-1]
2025-03-08 21:08:29,023 - my_text.py:727  - 2:6600000001000000000000005f7079636f6d6d5f00000000 string_dict: {}
2025-03-08 21:08:29,023 - my_text.py:729  - 2:6600000001000000000000005f7079636f6d6d5f00000000 used_fields_llm: ['0,1', '2,3', '4,5,6,7', '8,9,10,11', '20,21,22,23']
2025-03-08 21:08:29,023 - my_text.py:730  - 2:6600000001000000000000005f7079636f6d6d5f00000000 field_llm_type_llm: {'0,1': ['unsigned __int16'], '2,3': ['int'], '4,5,6,7': ['int'], '8,9,10,11': ['unsigned int'], '20,21,22,23': ['int']}
2025-03-08 21:08:29,023 - my_text.py:731  - 2:6600000001000000000000005f7079636f6d6d5f00000000 field_llm_Sem_llm: {'0,1': ['length'], '2,3': ['length'], '4,5,6,7': ['length'], '8,9,10,11': ['length'], '20,21,22,23': ['length']}
2025-03-08 21:08:29,023 - my_text.py:432  - {'0': {2: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleDataOnTcpSocket': {'      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;', '            if ( v13 == (unsigned int)v14 )', '              v13 += 4LL;', '        v14 = recv(a1, (char *)buf + 4, v13, 0);', '      if ( v13 <= 0x1FC )', '              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);'}, 'HandleReceivedExplictTcpData': {'  v17 = __readfsqword(0x28u);', '  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);'}, 'CreateEncapsulationStructure': {'  if ( a2 >= 0x80000000 )', '  src = a1;', '  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);', '  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));'}}, 3: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'HandleDataOnTcpSocket': {'      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;', '            if ( v13 == (unsigned int)v14 )', '              v13 += 4LL;', '        v14 = recv(a1, (char *)buf + 4, v13, 0);', '      if ( v13 <= 0x1FC )', '              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);'}, 'HandleReceivedExplictTcpData': {'  v17 = __readfsqword(0x28u);', '  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);'}, 'CreateEncapsulationStructure': {'  if ( a2 >= 0x80000000 )', '  src = a1;', '  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);', '  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));'}}, 0: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateEncapsulationStructure': {'  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);'}, 'HandleReceivedExplictTcpData': {'    if ( (unsigned __int16)v12 > 0x70u )', '    if ( (unsigned __int16)v12 >= 0x63u )', '        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);'}, 'GenerateEncapsulationHeader': {'  AddIntToMessage(*a1, a5);'}, 'AddIntToMessage': {'  **(_WORD **)(a2 + 512) = a1;'}}, 1: {'GetUintFromMessage': {'  return (unsigned __int16)*(*a1)++;'}, 'CreateEncapsulationStructure': {'  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);'}, 'HandleReceivedExplictTcpData': {'    if ( (unsigned __int16)v12 > 0x70u )', '    if ( (unsigned __int16)v12 >= 0x63u )', '        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);'}, 'GenerateEncapsulationHeader': {'  AddIntToMessage(*a1, a5);'}, 'AddIntToMessage': {'  **(_WORD **)(a2 + 512) = a1;', '  *(_QWORD *)(a2 + 512) += 2LL;'}}, 4: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 5: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 6: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 7: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 8: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 9: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 10: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 11: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);'}}, 20: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 21: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 22: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}, 23: {'GetUdintFromMessage': {'  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);', '  return v2;'}, 'CreateEncapsulationStructure': {'  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);'}, 'HandleReceivedExplictTcpData': {'  *a4 = EncapsulationStructure;', '  if ( !HIDWORD(v14) && *a4 >= 0 )'}}}}
2025-03-08 21:08:29,024 - my_text.py:443  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Updated c_taint_c_dict: {'0': {2: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleDataOnTcpSocket': {'v14', 'v2', 'if', '4', 'HandleReceivedExplictTcpData', 'v5', 'unsigned', 'recv', '20', '0', 'GetUintFromMessage', 'v13', 's', 'buf', '__int64', 'a1', 'v11', 'v23', 'char', '0x1FC', '4LL', 'int', '__int16'}, 'HandleReceivedExplictTcpData': {'a3', '__int64', 'v17', '0x28u', 'CreateEncapsulationStructure', 'a2', 'EncapsulationStructure', '__readfsqword', 'v12'}, 'CreateEncapsulationStructure': {'a3', 'unsigned', 'src', '24', 'return', 'a2', 'if', '0x80000000', 'a1', '_WORD', 'int', '2', 'GetUintFromMessage', '__int16'}}, 3: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'HandleDataOnTcpSocket': {'v14', 'v2', 'if', '4', 'HandleReceivedExplictTcpData', 'v5', 'unsigned', 'recv', '20', '0', 'GetUintFromMessage', 'v13', 's', 'buf', '__int64', 'a1', 'v11', 'v23', 'char', '0x1FC', '4LL', 'int', '__int16'}, 'HandleReceivedExplictTcpData': {'a3', '__int64', 'v17', '0x28u', 'CreateEncapsulationStructure', 'a2', 'EncapsulationStructure', '__readfsqword', 'v12'}, 'CreateEncapsulationStructure': {'a3', 'unsigned', 'src', '24', 'return', 'a2', 'if', '0x80000000', 'a1', '_WORD', 'int', '2', 'GetUintFromMessage', '__int16'}}, 0: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateEncapsulationStructure': {'src', '_WORD', 'a3', 'GetUintFromMessage'}, 'HandleReceivedExplictTcpData': {'unsigned', '0x63u', 'HandleReceivedInvalidCommand', 'return', 'a6', 'if', 'int', 'v12', '0x70u', '__int16'}, 'GenerateEncapsulationHeader': {'a5', 'a1', 'AddIntToMessage'}, 'AddIntToMessage': {'a2', '_WORD', 'a1', '512'}}, 1: {'GetUintFromMessage': {'a1', 'return', 'unsigned', '__int16'}, 'CreateEncapsulationStructure': {'src', '_WORD', 'a3', 'GetUintFromMessage'}, 'HandleReceivedExplictTcpData': {'unsigned', '0x63u', 'HandleReceivedInvalidCommand', 'return', 'a6', 'if', 'int', 'v12', '0x70u', '__int16'}, 'GenerateEncapsulationHeader': {'a5', 'a1', 'AddIntToMessage'}, 'AddIntToMessage': {'2LL', '_QWORD', '512', 'a2', 'a1', '_WORD'}}, 4: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}}, 5: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}}, 6: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}}, 7: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'4', 'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '__int16'}}, 8: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 9: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 10: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 11: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', 'GetUdintFromMessage', '8', '__int16'}}, 20: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 21: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 22: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}, 23: {'GetUdintFromMessage': {'unsigned', '16', '3', '24', 'return', 'v2', 'a1', '__int8', '2'}, 'CreateEncapsulationStructure': {'unsigned', 'a3', '_DWORD', 'src', '20', 'GetUdintFromMessage', '__int16'}, 'HandleReceivedExplictTcpData': {'v14', 'HIDWORD', 'if', 'EncapsulationStructure', '0', 'a4'}}}}
2025-03-08 21:08:29,025 - my_text.py:460  - 3:6300000001000000000000005f7079636f6d6d5f00000000 var_flow: {'0': {2: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'HandleDataOnTcpSocket:v2', 'HandleDataOnTcpSocket:n', 'HandleDataOnTcpSocket:v23', 'HandleDataOnTcpSocket:a1', 'HandleDataOnTcpSocket:buf', 'CreateEncapsulationStructure:a1', 'HandleDataOnTcpSocket:var_478', 'GetUintFromMessage:var_A', 'CreateEncapsulationStructure:a2', 'GetUintFromMessage:a1', 'HandleDataOnTcpSocket:v13', 'HandleDataOnTcpSocket:v14', 'HandleReceivedExplictTcpData:a3', 'HandleDataOnTcpSocket:v5', 'HandleDataOnTcpSocket:v11', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a2', 'HandleReceivedExplictTcpData:var_58', 'CreateEncapsulationStructure:var_10', 'HandleDataOnTcpSocket:s', 'HandleReceivedExplictTcpData:v17'}, 3: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'HandleDataOnTcpSocket:v2', 'HandleDataOnTcpSocket:n', 'HandleDataOnTcpSocket:v23', 'HandleDataOnTcpSocket:a1', 'HandleDataOnTcpSocket:buf', 'CreateEncapsulationStructure:a1', 'HandleDataOnTcpSocket:var_478', 'GetUintFromMessage:var_A', 'CreateEncapsulationStructure:a2', 'GetUintFromMessage:a1', 'HandleDataOnTcpSocket:v13', 'HandleDataOnTcpSocket:v14', 'HandleReceivedExplictTcpData:a3', 'HandleDataOnTcpSocket:v5', 'HandleDataOnTcpSocket:v11', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a2', 'HandleReceivedExplictTcpData:var_58', 'CreateEncapsulationStructure:var_10', 'HandleDataOnTcpSocket:s', 'HandleReceivedExplictTcpData:v17'}, 0: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'CreateEncapsulationStructure:a3', 'GenerateEncapsulationHeader:a1', 'GetUintFromMessage:var_A', 'AddIntToMessage:a1', 'HandleReceivedExplictTcpData:var_30', 'AddIntToMessage:a2', 'HandleReceivedExplictTcpData:a6', 'AddIntToMessage:var_4', 'GenerateEncapsulationHeader:a5', 'GetUintFromMessage:a1'}, 1: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:v12', 'CreateEncapsulationStructure:a3', 'GenerateEncapsulationHeader:a1', 'GetUintFromMessage:var_A', 'AddIntToMessage:a1', 'HandleReceivedExplictTcpData:var_30', 'AddIntToMessage:a2', 'HandleReceivedExplictTcpData:a6', 'AddIntToMessage:var_4', 'GenerateEncapsulationHeader:a5', 'GetUintFromMessage:a1'}, 4: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 5: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 6: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 7: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 8: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 9: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 10: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 11: {'CreateEncapsulationStructure:src', 'CreateEncapsulationStructure:a3', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 20: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 21: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 22: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}, 23: {'CreateEncapsulationStructure:src', 'HandleReceivedExplictTcpData:var_20', 'HandleReceivedExplictTcpData:v14', 'CreateEncapsulationStructure:a3', 'HandleReceivedExplictTcpData:a4', 'GetUdintFromMessage:v2', 'GetUdintFromMessage:a1', 'GetUdintFromMessage:var_C'}}}
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (2, 3): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (0, 1): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (4, 5): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (5, 6): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (6, 7): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (7, 8): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (8, 9): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (9, 10): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (10, 11): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (20, 21): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (21, 22): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:478  - Key pair (22, 23): Similarity = 1.0
2025-03-08 21:08:29,025 - my_text.py:482  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Similarity matrix: {(2, 3): 1.0, (3, 0): 0.16666666666666666, (0, 1): 1.0, (1, 4): 0.13333333333333333, (4, 5): 1.0, (5, 6): 1.0, (6, 7): 1.0, (7, 8): 1.0, (8, 9): 1.0, (9, 10): 1.0, (10, 11): 1.0, (11, 20): 0.625, (20, 21): 1.0, (21, 22): 1.0, (22, 23): 1.0}
2025-03-08 21:08:29,025 - my_text.py:519  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Merged queue: [(0, 1), (2, 3), (4, 5, 6, 7, 8, 9, 10, 11), (20, 21, 22, 23)]
2025-03-08 21:08:29,025 - my_text.py:525  - 3:6300000001000000000000005f7079636f6d6d5f00000000 used_fields: ['0,1', '2,3', '4,5,6,7,8,9,10,11', '20,21,22,23']
2025-03-08 21:08:29,026 - my_text.py:541  - 3:6300000001000000000000005f7079636f6d6d5f00000000 data_new: {(0, 1): {'CreateEncapsulationStructure': ['src', 'a3'], 'HandleReceivedExplictTcpData': ['v12', 'var_30', 'a6'], 'GenerateEncapsulationHeader': ['a1', 'a5'], 'AddIntToMessage': ['a1', 'a2', 'var_4'], 'GetUintFromMessage': ['var_A', 'a1']}, (2, 3): {'CreateEncapsulationStructure': ['src', 'a1', 'a2', 'a3', 'var_10'], 'HandleReceivedExplictTcpData': ['v12', 'a3', 'a2', 'var_58', 'v17'], 'HandleDataOnTcpSocket': ['v2', 'n', 'v23', 'a1', 'buf', 'var_478', 'v13', 'v14', 'v5', 'v11', 's'], 'GetUintFromMessage': ['var_A', 'a1']}, (4, 5, 6, 7, 8, 9, 10, 11): {'CreateEncapsulationStructure': ['src', 'a3'], 'GetUdintFromMessage': ['v2', 'a1', 'var_C']}, (20, 21, 22, 23): {'CreateEncapsulationStructure': ['src', 'a3'], 'HandleReceivedExplictTcpData': ['var_20', 'v14', 'a4'], 'GetUdintFromMessage': ['v2', 'a1', 'var_C']}}
2025-03-08 21:08:29,026 - my_text.py:618  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (0, 1)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: GenerateEncapsulationHeader\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GenerateEncapsulationHeader(\n        unsigned __int16 *a1,\n        __int16 a2,\n        unsigned int a3,\n        unsigned int a4,\n        __int64 a5)\n{\n  AddIntToMessage(*a1, a5);\n  AddIntToMessage(a2, a5);\n  AddDintToMessage(a3, a5);\n  AddDintToMessage(a4, a5);\n  memcpy(*(void **)(a5 + 512), a1 + 6, 8uLL);\n  *(_QWORD *)(a5 + 512) += 8LL;\n  *(_QWORD *)(a5 + 520) += 8LL;\n  return AddDintToMessage(0, a5);\n}\n\n                        \n                        Function Name: AddIntToMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall AddIntToMessage(__int16 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  **(_WORD **)(a2 + 512) = a1;\n  *(_QWORD *)(a2 + 512) += 2LL;\n  result = a2;\n  *(_QWORD *)(a2 + 520) += 2LL;\n  return result;\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (0, 1) appear to "contaminate" the global variables  and local variables src, a3, v12, var_30, a6, a1, a5, a1, a2, var_4, var_A, a1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (0, 1) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:08:30,031 - my_text.py:621  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Response result: ```python
int, length
```
2025-03-08 21:08:32,033 - my_text.py:618  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (2, 3)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: HandleDataOnTcpSocket\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleDataOnTcpSocket(unsigned int a1)\n{\n  int v2; // [rsp+14h] [rbp-4ACh] BYREF\n  socklen_t len; // [rsp+18h] [rbp-4A8h] BYREF\n  unsigned int SocketErrorNumber; // [rsp+1Ch] [rbp-4A4h]\n  int v5; // [rsp+20h] [rbp-4A0h]\n  unsigned int v6; // [rsp+24h] [rbp-49Ch]\n  unsigned int v7; // [rsp+28h] [rbp-498h]\n  unsigned int v8; // [rsp+2Ch] [rbp-494h]\n  unsigned int v9; // [rsp+30h] [rbp-490h]\n  unsigned int v10; // [rsp+34h] [rbp-48Ch]\n  _WORD *v11; // [rsp+38h] [rbp-488h] BYREF\n  size_t n; // [rsp+40h] [rbp-480h]\n  size_t v13; // [rsp+48h] [rbp-478h]\n  ssize_t v14; // [rsp+50h] [rbp-470h]\n  __int64 SocketTimer; // [rsp+58h] [rbp-468h]\n  __int64 ErrorMessage; // [rsp+60h] [rbp-460h]\n  __int64 v17; // [rsp+68h] [rbp-458h]\n  __int64 v18; // [rsp+70h] [rbp-450h]\n  __int64 v19; // [rsp+78h] [rbp-448h]\n  __int64 v20; // [rsp+80h] [rbp-440h]\n  __int64 v21; // [rsp+88h] [rbp-438h]\n  struct sockaddr s; // [rsp+90h] [rbp-430h] BYREF\n  char v23[520]; // [rsp+A0h] [rbp-420h] BYREF\n  size_t v24; // [rsp+2A8h] [rbp-218h]\n  __int64 buf[66]; // [rsp+2B0h] [rbp-210h] BYREF\n\n  buf[65] = __readfsqword(0x28u);\n  v2 = 0;\n  n = 512LL;\n  memset(buf, 0, 512);\n  v14 = recv(a1, buf, 4uLL, 0);\n  SocketTimer = SocketTimerArrayGetSocketTimer(&g_timestamps, 20LL, a1);\n  if ( v14 )\n  {\n    if ( v14 >= 0 )\n    {\n      v11 = (_WORD *)buf + 1;\n      v13 = (unsigned __int16)GetUintFromMessage(&v11) + 20;\n      if ( v13 <= 0x1FC )\n      {\n        v14 = recv(a1, (char *)buf + 4, v13, 0);\n        if ( v14 )\n        {\n          if ( v14 >= 0 )\n          {\n            if ( v13 == (unsigned int)v14 )\n            {\n              v13 += 4LL;\n              g_current_active_tcp_socket = a1;\n              memset(&s, 0, sizeof(s));\n              len = 16;\n              if ( getpeername(a1, &s, &len) < 0 )\n              {\n                SocketErrorNumber = GetSocketErrorNumber();\n                ErrorMessage = GetErrorMessage(SocketErrorNumber);\n                FreeErrorMessage(ErrorMessage);\n              }\n              InitializeENIPMessage(v23);\n              v5 = HandleReceivedExplictTcpData(a1, (__int64)buf, v13, &v2, (__int64)&s, (__int64)v23);\n              if ( SocketTimer )\n                SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n              g_current_active_tcp_socket = -1;\n              if ( v5 > 0 )\n              {\n                n = send(a1, v23, v24, 0x4000);\n                SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n              }\n              return 0LL;\n            }\n            else\n            {\n              return 0xFFFFFFFFLL;\n            }\n          }\n          else\n          {\n            v6 = GetSocketErrorNumber();\n            v17 = GetErrorMessage(v6);\n            if ( v6 == 11 )\n            {\n              return 0LL;\n            }\n            else\n            {\n              FreeErrorMessage(v17);\n              return 0xFFFFFFFFLL;\n            }\n          }\n        }\n        else\n        {\n          v7 = GetSocketErrorNumber();\n          v18 = GetErrorMessage(v7);\n          FreeErrorMessage(v18);\n          RemoveSocketTimerFromList(a1);\n          RemoveSession(a1);\n          return 0xFFFFFFFFLL;\n        }\n      }\n      else\n      {\n        while ( 1 )\n        {\n          v14 = recv(a1, buf, n, 0);\n          if ( !v14 )\n          {\n            v9 = GetSocketErrorNumber();\n            v20 = GetErrorMessage(v9);\n            FreeErrorMessage(v20);\n            RemoveSocketTimerFromList(a1);\n            return 0xFFFFFFFFLL;\n          }\n          if ( v14 < 0 )\n            break;\n          v13 -= v14;\n          if ( v13 <= 0x1FF && v13 )\n            n = v13;\n          if ( !v13 )\n          {\n            SocketTimerSetLastUpdate(SocketTimer, g_actual_time);\n            return 0LL;\n          }\n        }\n        v8 = GetSocketErrorNumber();\n        v19 = GetErrorMessage(v8);\n        if ( v8 == 11 )\n        {\n          return 0LL;\n        }\n        else\n        {\n          FreeErrorMessage(v19);\n          return 0xFFFFFFFFLL;\n        }\n      }\n    }\n    else\n    {\n      v10 = GetSocketErrorNumber();\n      if ( v10 == 11 )\n      {\n        return 0LL;\n      }\n      else\n      {\n        v21 = GetErrorMessage(v10);\n        FreeErrorMessage(v21);\n        return 0xFFFFFFFFLL;\n      }\n    }\n  }\n  else\n  {\n    RemoveSocketTimerFromList(a1);\n    RemoveSession(a1);\n    return 0xFFFFFFFFLL;\n  }\n}\n\n                        \n                        Function Name: GetUintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUintFromMessage(_WORD **a1)\n{\n  return (unsigned __int16)*(*a1)++;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (2, 3) appear to "contaminate" the global variables  and local variables src, a1, a2, a3, var_10, v12, a3, a2, var_58, v17, v2, n, v23, a1, buf, var_478, v13, v14, v5, v11, s, var_A, a1. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (2, 3) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:08:32,967 - my_text.py:621  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Response result: ```python
int, length
```
2025-03-08 21:08:34,968 - my_text.py:618  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (4, 5, 6, 7, 8, 9, 10, 11)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: GetUdintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUdintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (4, 5, 6, 7, 8, 9, 10, 11) appear to "contaminate" the global variables  and local variables src, a3, v2, a1, var_C. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (4, 5, 6, 7, 8, 9, 10, 11) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:08:36,261 - my_text.py:621  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Response result: ```python
unsigned __int16, length
```
2025-03-08 21:08:38,262 - my_text.py:618  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': 'I\'m currently handling a protocol packet received through the socket.recv function. When analyzing the received protocol packet, I found that the field at the offset of (20, 21, 22, 23)  has some situations that affect the operation of the relevant code\n\n                        Function Name: CreateEncapsulationStructure\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall CreateEncapsulationStructure(void *a1, unsigned __int64 a2, __int64 a3)\n{\n  void *src; // [rsp+18h] [rbp-8h] BYREF\n\n  src = a1;\n  *(_QWORD *)(a3 + 24) = a1;\n  *(_WORD *)a3 = GetUintFromMessage((_WORD **)&src);\n  *(_WORD *)(a3 + 2) = GetUintFromMessage((_WORD **)&src);\n  *(_DWORD *)(a3 + 4) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_DWORD *)(a3 + 8) = GetUdintFromMessage((unsigned __int16 **)&src);\n  memcpy((void *)(a3 + 12), src, 8uLL);\n  src = (char *)src + 8;\n  *(_DWORD *)(a3 + 20) = GetUdintFromMessage((unsigned __int16 **)&src);\n  *(_QWORD *)(a3 + 32) = src;\n  if ( a2 >= 0x80000000 )\n    __assert_fail(\n      "(2147483647) >= receive_buffer_length",\n      "/home/linuxbrew/BinPRE/src/OpENer/source/src/enet_encap/encap.c",\n      0x266u,\n      "CreateEncapsulationStructure");\n  return (int)(a2 - 24 - *(unsigned __int16 *)(a3 + 2));\n}\n\n                        \n                        Function Name: HandleReceivedExplictTcpData\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall HandleReceivedExplictTcpData(\n        unsigned int a1,\n        void *a2,\n        unsigned __int64 a3,\n        int *a4,\n        __int64 a5,\n        __int64 a6)\n{\n  unsigned int v10; // [rsp+38h] [rbp-38h]\n  int EncapsulationStructure; // [rsp+3Ch] [rbp-34h]\n  __int64 v12; // [rsp+40h] [rbp-30h] BYREF\n  __int64 v13; // [rsp+48h] [rbp-28h]\n  __int64 v14; // [rsp+50h] [rbp-20h]\n  __int64 v15; // [rsp+58h] [rbp-18h]\n  __int64 v16; // [rsp+60h] [rbp-10h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v10 = 0;\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  EncapsulationStructure = CreateEncapsulationStructure(a2, a3, (__int64)&v12);\n  if ( EncapsulationStructure < 0 )\n  {\n    *a4 = 0;\n    return 0xFFFFFFFFLL;\n  }\n  *a4 = EncapsulationStructure;\n  if ( !HIDWORD(v14) && *a4 >= 0 )\n  {\n    LODWORD(v13) = 0;\n    v10 = 1;\n    if ( (unsigned __int16)v12 > 0x70u )\n      return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n    if ( (unsigned __int16)v12 >= 0x63u )\n    {\n      switch ( (__int16)v12 )\n      {\n        case \'c\':\n          HandleReceivedListIdentityCommandTcp(&v12, a6);\n          break;\n        case \'d\':\n          HandleReceivedListInterfacesCommand(&v12, a6);\n          break;\n        case \'e\':\n          HandleReceivedRegisterSessionCommand(a1, (__int64)&v12, a6);\n          break;\n        case \'f\':\n          v10 = HandleReceivedUnregisterSessionCommand((__int64)&v12, a6);\n          break;\n        case \'o\':\n          v10 = HandleReceivedSendRequestResponseDataCommand((__int64)&v12, a5, a6);\n          break;\n        case \'p\':\n          v10 = HandleReceivedSendUnitDataCommand(&v12, a5, a6);\n          break;\n        default:\n          return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      }\n      return v10;\n    }\n    if ( (_WORD)v12 )\n    {\n      if ( (unsigned __int16)v12 != 4 )\n        return (unsigned int)HandleReceivedInvalidCommand(&v12, a6);\n      HandleReceivedListServicesCommand(&v12, a6);\n    }\n    else\n    {\n      return 0;\n    }\n  }\n  return v10;\n}\n\n                        \n                        Function Name: GetUdintFromMessage\n                        Function Function Overview: [Briefly describe the main function of the function, such as receiving and processing a protocol packet from a socket, etc.]\n                        __int64 __fastcall GetUdintFromMessage(unsigned __int16 **a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n\n  v2 = (*((unsigned __int8 *)*a1 + 2) << 16) | **a1 | (*((unsigned __int8 *)*a1 + 3) << 24);\n  *a1 += 2;\n  return v2;\n}\n\n                                \n                During the execution of the function, I noticed that the fields at the offsets (20, 21, 22, 23) appear to "contaminate" the global variables  and local variables src, a3, var_20, v14, a4, v2, a1, var_C. The "contamination" is characterized by [Describe in detail the abnormal situation of the variable value, such as the variable value not meeting expectations, or unexplained changes, etc.].\n\n                I suspect that the fields at the offsets (20, 21, 22, 23) have specific types and meanings. Based on the code\'s processing logic, what are the most likely types and meanings of these fields? For instance, the fields at (offset_n, offset_m) could be 16 - byte unsigned numbers, and since they are related to length combination in the code, I speculate that they might represent lengths.\n\n                The types for classification include static text, command groups, strings, integers, decimals, and binary. The semantic categories include commands, lengths, delimiters, checksums, file names, etc.\n\n                Please provide your answer in the following Python - style format, separating the type and meaning with a comma.Remember that these offsets are a field and you only need to answer one line:\n                ```python\n                int, length\n                ```\n                '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:08:39,136 - my_text.py:621  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Response result: ```python
int, length
```
2025-03-08 21:08:41,136 - my_text.py:637  - 3:6300000001000000000000005f7079636f6d6d5f00000000 field_type: {'0,1': ['int'], '2,3': ['int'], '4,5,6,7,8,9,10,11': ['unsigned __int16'], '20,21,22,23': ['int']}
2025-03-08 21:08:41,136 - my_text.py:638  - 3:6300000001000000000000005f7079636f6d6d5f00000000 field_func: {'0,1': ['length'], '2,3': ['length'], '4,5,6,7,8,9,10,11': ['length'], '20,21,22,23': ['length']}
2025-03-08 21:08:41,136 - my_text.py:688  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Sending request to https://api.siliconflow.cn/v1/chat/completions with payload: {'model': 'Qwen/Qwen2.5-7B-Instruct', 'messages': [{'role': 'user', 'content': '\n            You are provided with a list named [\'_pycomm_\'] that contains visible strings. Your task is to analyze these strings. If the strings have specific meanings and can be further divided, please present the division results in a Python code block. Each part of the result should be separated by a comma.\n            The types of granularity for division include static text, command groups, strings, integers, decimals, and binary. The semantic granularity includes commands, lengths, delimiters, checksums, file names, etc.\n            Here is an example: If the input is ["POST /path HTTP/1.1"], the correct output should be\n            ```python\n            POST, command group, command\n            , string, delimiter\n            /path, string, file\n            HTTP/1.1, static text, static text\n            ```\n            If you don\'t think these strings have a specific meaning, just answer ```python ```\n            '}], 'stream': False, 'max_tokens': 4096, 'stop': ['null'], 'temperature': 0.7, 'top_p': 0.7, 'top_k': 50, 'frequency_penalty': 0.5, 'n': 1, 'response_format': {'type': 'text'}, 'tools': [{'type': 'function', 'function': {'description': '<string>', 'name': '<string>', 'parameters': {}, 'strict': False}}]}
2025-03-08 21:08:42,737 - my_text.py:691  - 3:6300000001000000000000005f7079636f6d6d5f00000000 Response result: ```python
```python
_post, command group, command
/, string, delimiter
_path, string, file
_HTTP/1.1, static text, static text
```
```
2025-03-08 21:08:44,737 - my_text.py:712  - 3:6300000001000000000000005f7079636f6d6d5f00000000 field_llm_type: {'_post': {'command group'}, '/': {'string'}, '_path': {'string'}, '_HTTP/1.1': {'static text'}}
2025-03-08 21:08:44,737 - my_text.py:713  - 3:6300000001000000000000005f7079636f6d6d5f00000000 field_llm_Sem: {'_post': {'command'}, '/': {'delimiter'}, '_path': {'file'}, '_HTTP/1.1': {'static text'}}
2025-03-08 21:08:44,737 - my_text.py:726  - 3:6300000001000000000000005f7079636f6d6d5f00000000 LLM_field_string: [-1]
2025-03-08 21:08:44,737 - my_text.py:727  - 3:6300000001000000000000005f7079636f6d6d5f00000000 string_dict: {}
2025-03-08 21:08:44,737 - my_text.py:729  - 3:6300000001000000000000005f7079636f6d6d5f00000000 used_fields_llm: ['0,1', '2,3', '4,5,6,7,8,9,10,11', '20,21,22,23']
2025-03-08 21:08:44,737 - my_text.py:730  - 3:6300000001000000000000005f7079636f6d6d5f00000000 field_llm_type_llm: {'0,1': ['int'], '2,3': ['int'], '4,5,6,7,8,9,10,11': ['unsigned __int16'], '20,21,22,23': ['int']}
2025-03-08 21:08:44,737 - my_text.py:731  - 3:6300000001000000000000005f7079636f6d6d5f00000000 field_llm_Sem_llm: {'0,1': ['length'], '2,3': ['length'], '4,5,6,7,8,9,10,11': ['length'], '20,21,22,23': ['length']}
2025-03-08 21:08:44,737 - my_text.py:778  - Analysis completed successfully.
2025-03-08 21:08:44,737 - my_text.py:788  - Closing IDA Pro...
